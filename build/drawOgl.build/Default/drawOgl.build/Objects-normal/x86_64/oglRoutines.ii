# 1 "/Users/ristopuukko/Documents/maya_developement/drawOgl/drawOgl/oglRoutines.cpp"
# 1 "/Users/ristopuukko/Documents/maya_developement/drawOgl/drawOgl//"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/Applications/Autodesk/maya2011/devkit/include/maya/OpenMayaMac.h" 1
# 89 "/Applications/Autodesk/maya2011/devkit/include/maya/OpenMayaMac.h"
# 1 "/usr/include/AvailabilityMacros.h" 1 3 4
# 90 "/Applications/Autodesk/maya2011/devkit/include/maya/OpenMayaMac.h" 2
# 107 "/Applications/Autodesk/maya2011/devkit/include/maya/OpenMayaMac.h"
# 1 "/usr/include/sys/param.h" 1 3 4
# 79 "/usr/include/sys/param.h" 3 4
# 1 "/usr/include/sys/_types.h" 1 3 4
# 32 "/usr/include/sys/_types.h" 3 4
# 1 "/usr/include/sys/cdefs.h" 1 3 4
# 33 "/usr/include/sys/_types.h" 2 3 4
# 1 "/usr/include/machine/_types.h" 1 3 4
# 34 "/usr/include/machine/_types.h" 3 4
# 1 "/usr/include/i386/_types.h" 1 3 4
# 37 "/usr/include/i386/_types.h" 3 4
typedef signed char __int8_t;



typedef unsigned char __uint8_t;
typedef short __int16_t;
typedef unsigned short __uint16_t;
typedef int __int32_t;
typedef unsigned int __uint32_t;
typedef long long __int64_t;
typedef unsigned long long __uint64_t;

typedef long __darwin_intptr_t;
typedef unsigned int __darwin_natural_t;
# 70 "/usr/include/i386/_types.h" 3 4
typedef int __darwin_ct_rune_t;





typedef union {
 char __mbstate8[128];
 long long _mbstateL;
} __mbstate_t;

typedef __mbstate_t __darwin_mbstate_t;


typedef long int __darwin_ptrdiff_t;





typedef long unsigned int __darwin_size_t;





typedef __builtin_va_list __darwin_va_list;





typedef int __darwin_wchar_t;




typedef __darwin_wchar_t __darwin_rune_t;


typedef int __darwin_wint_t;




typedef unsigned long __darwin_clock_t;
typedef __uint32_t __darwin_socklen_t;
typedef long __darwin_ssize_t;
typedef long __darwin_time_t;
# 35 "/usr/include/machine/_types.h" 2 3 4
# 34 "/usr/include/sys/_types.h" 2 3 4
# 58 "/usr/include/sys/_types.h" 3 4
struct __darwin_pthread_handler_rec
{
 void (*__routine)(void *);
 void *__arg;
 struct __darwin_pthread_handler_rec *__next;
};
struct _opaque_pthread_attr_t { long __sig; char __opaque[56]; };
struct _opaque_pthread_cond_t { long __sig; char __opaque[40]; };
struct _opaque_pthread_condattr_t { long __sig; char __opaque[8]; };
struct _opaque_pthread_mutex_t { long __sig; char __opaque[56]; };
struct _opaque_pthread_mutexattr_t { long __sig; char __opaque[8]; };
struct _opaque_pthread_once_t { long __sig; char __opaque[8]; };
struct _opaque_pthread_rwlock_t { long __sig; char __opaque[192]; };
struct _opaque_pthread_rwlockattr_t { long __sig; char __opaque[16]; };
struct _opaque_pthread_t { long __sig; struct __darwin_pthread_handler_rec *__cleanup_stack; char __opaque[1168]; };
# 94 "/usr/include/sys/_types.h" 3 4
typedef __int64_t __darwin_blkcnt_t;
typedef __int32_t __darwin_blksize_t;
typedef __int32_t __darwin_dev_t;
typedef unsigned int __darwin_fsblkcnt_t;
typedef unsigned int __darwin_fsfilcnt_t;
typedef __uint32_t __darwin_gid_t;
typedef __uint32_t __darwin_id_t;
typedef __uint64_t __darwin_ino64_t;

typedef __darwin_ino64_t __darwin_ino_t;



typedef __darwin_natural_t __darwin_mach_port_name_t;
typedef __darwin_mach_port_name_t __darwin_mach_port_t;
typedef __uint16_t __darwin_mode_t;
typedef __int64_t __darwin_off_t;
typedef __int32_t __darwin_pid_t;
typedef struct _opaque_pthread_attr_t
   __darwin_pthread_attr_t;
typedef struct _opaque_pthread_cond_t
   __darwin_pthread_cond_t;
typedef struct _opaque_pthread_condattr_t
   __darwin_pthread_condattr_t;
typedef unsigned long __darwin_pthread_key_t;
typedef struct _opaque_pthread_mutex_t
   __darwin_pthread_mutex_t;
typedef struct _opaque_pthread_mutexattr_t
   __darwin_pthread_mutexattr_t;
typedef struct _opaque_pthread_once_t
   __darwin_pthread_once_t;
typedef struct _opaque_pthread_rwlock_t
   __darwin_pthread_rwlock_t;
typedef struct _opaque_pthread_rwlockattr_t
   __darwin_pthread_rwlockattr_t;
typedef struct _opaque_pthread_t
   *__darwin_pthread_t;
typedef __uint32_t __darwin_sigset_t;
typedef __int32_t __darwin_suseconds_t;
typedef __uint32_t __darwin_uid_t;
typedef __uint32_t __darwin_useconds_t;
typedef unsigned char __darwin_uuid_t[16];
typedef char __darwin_uuid_string_t[37];
# 80 "/usr/include/sys/param.h" 2 3 4






# 1 "/usr/include/sys/types.h" 1 3 4
# 72 "/usr/include/sys/types.h" 3 4
# 1 "/usr/include/sys/appleapiopts.h" 1 3 4
# 73 "/usr/include/sys/types.h" 2 3 4





# 1 "/usr/include/machine/types.h" 1 3 4
# 37 "/usr/include/machine/types.h" 3 4
# 1 "/usr/include/i386/types.h" 1 3 4
# 70 "/usr/include/i386/types.h" 3 4
# 1 "/usr/include/i386/_types.h" 1 3 4
# 71 "/usr/include/i386/types.h" 2 3 4







typedef signed char int8_t;

typedef unsigned char u_int8_t;


typedef short int16_t;

typedef unsigned short u_int16_t;


typedef int int32_t;

typedef unsigned int u_int32_t;


typedef long long int64_t;

typedef unsigned long long u_int64_t;


typedef int64_t register_t;






typedef __darwin_intptr_t intptr_t;



typedef unsigned long uintptr_t;




typedef u_int64_t user_addr_t;
typedef u_int64_t user_size_t;
typedef int64_t user_ssize_t;
typedef int64_t user_long_t;
typedef u_int64_t user_ulong_t;
typedef int64_t user_time_t;
typedef int64_t user_off_t;







typedef u_int64_t syscall_arg_t;
# 38 "/usr/include/machine/types.h" 2 3 4
# 79 "/usr/include/sys/types.h" 2 3 4


# 1 "/usr/include/machine/endian.h" 1 3 4
# 37 "/usr/include/machine/endian.h" 3 4
# 1 "/usr/include/i386/endian.h" 1 3 4
# 99 "/usr/include/i386/endian.h" 3 4
# 1 "/usr/include/sys/_endian.h" 1 3 4
# 124 "/usr/include/sys/_endian.h" 3 4
# 1 "/usr/include/libkern/_OSByteOrder.h" 1 3 4
# 66 "/usr/include/libkern/_OSByteOrder.h" 3 4
# 1 "/usr/include/libkern/i386/_OSByteOrder.h" 1 3 4
# 44 "/usr/include/libkern/i386/_OSByteOrder.h" 3 4
static inline
__uint16_t
_OSSwapInt16(
    __uint16_t _data
)
{
    return ((_data << 8) | (_data >> 8));
}

static inline
__uint32_t
_OSSwapInt32(
    __uint32_t _data
)
{



    __asm__ ("bswap   %0" : "+r" (_data));
    return _data;

}
# 91 "/usr/include/libkern/i386/_OSByteOrder.h" 3 4
static inline
__uint64_t
_OSSwapInt64(
    __uint64_t _data
)
{
    __asm__ ("bswap   %0" : "+r" (_data));
    return _data;
}
# 67 "/usr/include/libkern/_OSByteOrder.h" 2 3 4
# 125 "/usr/include/sys/_endian.h" 2 3 4
# 100 "/usr/include/i386/endian.h" 2 3 4
# 38 "/usr/include/machine/endian.h" 2 3 4
# 82 "/usr/include/sys/types.h" 2 3 4


typedef unsigned char u_char;
typedef unsigned short u_short;
typedef unsigned int u_int;

typedef unsigned long u_long;


typedef unsigned short ushort;
typedef unsigned int uint;


typedef u_int64_t u_quad_t;
typedef int64_t quad_t;
typedef quad_t * qaddr_t;

typedef char * caddr_t;
typedef int32_t daddr_t;


typedef __darwin_dev_t dev_t;



typedef u_int32_t fixpt_t;


typedef __darwin_blkcnt_t blkcnt_t;




typedef __darwin_blksize_t blksize_t;




typedef __darwin_gid_t gid_t;





typedef __uint32_t in_addr_t;




typedef __uint16_t in_port_t;



typedef __darwin_ino_t ino_t;





typedef __darwin_ino64_t ino64_t;






typedef __int32_t key_t;



typedef __darwin_mode_t mode_t;




typedef __uint16_t nlink_t;





typedef __darwin_id_t id_t;



typedef __darwin_pid_t pid_t;




typedef __darwin_off_t off_t;



typedef int32_t segsz_t;
typedef int32_t swblk_t;


typedef __darwin_uid_t uid_t;
# 197 "/usr/include/sys/types.h" 3 4
static inline __int32_t major(__uint32_t _x)
{
 return (__int32_t)(((__uint32_t)_x >> 24) & 0xff);
}

static inline __int32_t minor(__uint32_t _x)
{
 return (__int32_t)((_x) & 0xffffff);
}

static inline dev_t makedev(__uint32_t _major, __uint32_t _minor)
{
 return (dev_t)(((_major) << 24) | (_minor));
}
# 223 "/usr/include/sys/types.h" 3 4
typedef __darwin_clock_t clock_t;






typedef __darwin_size_t size_t;




typedef __darwin_ssize_t ssize_t;




typedef __darwin_time_t time_t;




typedef __darwin_useconds_t useconds_t;




typedef __darwin_suseconds_t suseconds_t;
# 260 "/usr/include/sys/types.h" 3 4
# 1 "/usr/include/sys/_structs.h" 1 3 4
# 183 "/usr/include/sys/_structs.h" 3 4
extern "C" {
typedef struct fd_set {
 __int32_t fds_bits[((((1024) % ((sizeof(__int32_t) * 8))) == 0) ? ((1024) / ((sizeof(__int32_t) * 8))) : (((1024) / ((sizeof(__int32_t) * 8))) + 1))];
} fd_set;
}


static inline int
__darwin_fd_isset(int _n, const struct fd_set *_p)
{
 return (_p->fds_bits[_n/(sizeof(__int32_t) * 8)] & (1<<(_n % (sizeof(__int32_t) * 8))));
}
# 261 "/usr/include/sys/types.h" 2 3 4




typedef __int32_t fd_mask;
# 318 "/usr/include/sys/types.h" 3 4
typedef __darwin_pthread_attr_t pthread_attr_t;



typedef __darwin_pthread_cond_t pthread_cond_t;



typedef __darwin_pthread_condattr_t pthread_condattr_t;



typedef __darwin_pthread_mutex_t pthread_mutex_t;



typedef __darwin_pthread_mutexattr_t pthread_mutexattr_t;



typedef __darwin_pthread_once_t pthread_once_t;



typedef __darwin_pthread_rwlock_t pthread_rwlock_t;



typedef __darwin_pthread_rwlockattr_t pthread_rwlockattr_t;



typedef __darwin_pthread_t pthread_t;






typedef __darwin_pthread_key_t pthread_key_t;





typedef __darwin_fsblkcnt_t fsblkcnt_t;




typedef __darwin_fsfilcnt_t fsfilcnt_t;
# 87 "/usr/include/sys/param.h" 2 3 4
# 96 "/usr/include/sys/param.h" 3 4
# 1 "/usr/include/sys/syslimits.h" 1 3 4
# 97 "/usr/include/sys/param.h" 2 3 4
# 110 "/usr/include/sys/param.h" 3 4
# 1 "/usr/include/machine/param.h" 1 3 4
# 37 "/usr/include/machine/param.h" 3 4
# 1 "/usr/include/i386/param.h" 1 3 4
# 75 "/usr/include/i386/param.h" 3 4
# 1 "/usr/include/i386/_param.h" 1 3 4
# 76 "/usr/include/i386/param.h" 2 3 4
# 38 "/usr/include/machine/param.h" 2 3 4
# 111 "/usr/include/sys/param.h" 2 3 4


# 1 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/limits.h" 1 3 4






# 1 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/syslimits.h" 1 3 4
# 8 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/limits.h" 2 3 4


# 1 "/usr/lib/gcc/i686-apple-darwin10/4.2.1/include/limits.h" 1 3 4






# 1 "/usr/lib/gcc/i686-apple-darwin10/4.2.1/include/syslimits.h" 1 3 4
# 8 "/usr/lib/gcc/i686-apple-darwin10/4.2.1/include/limits.h" 2 3 4


# 1 "/usr/include/limits.h" 1 3 4
# 64 "/usr/include/limits.h" 3 4
# 1 "/usr/include/machine/limits.h" 1 3 4







# 1 "/usr/include/i386/limits.h" 1 3 4
# 40 "/usr/include/i386/limits.h" 3 4
# 1 "/usr/include/i386/_limits.h" 1 3 4
# 41 "/usr/include/i386/limits.h" 2 3 4
# 9 "/usr/include/machine/limits.h" 2 3 4
# 65 "/usr/include/limits.h" 2 3 4
# 11 "/usr/lib/gcc/i686-apple-darwin10/4.2.1/include/limits.h" 2 3 4
# 11 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/limits.h" 2 3 4
# 114 "/usr/include/sys/param.h" 2 3 4


# 1 "/usr/include/sys/signal.h" 1 3 4
# 81 "/usr/include/sys/signal.h" 3 4
# 1 "/usr/include/machine/signal.h" 1 3 4
# 34 "/usr/include/machine/signal.h" 3 4
# 1 "/usr/include/i386/signal.h" 1 3 4
# 39 "/usr/include/i386/signal.h" 3 4
typedef int sig_atomic_t;
# 55 "/usr/include/i386/signal.h" 3 4
# 1 "/usr/include/i386/_structs.h" 1 3 4
# 56 "/usr/include/i386/signal.h" 2 3 4
# 35 "/usr/include/machine/signal.h" 2 3 4
# 82 "/usr/include/sys/signal.h" 2 3 4
# 154 "/usr/include/sys/signal.h" 3 4
# 1 "/usr/include/sys/_structs.h" 1 3 4
# 57 "/usr/include/sys/_structs.h" 3 4
# 1 "/usr/include/machine/_structs.h" 1 3 4
# 31 "/usr/include/machine/_structs.h" 3 4
# 1 "/usr/include/i386/_structs.h" 1 3 4
# 38 "/usr/include/i386/_structs.h" 3 4
# 1 "/usr/include/mach/i386/_structs.h" 1 3 4
# 43 "/usr/include/mach/i386/_structs.h" 3 4
struct __darwin_i386_thread_state
{
    unsigned int __eax;
    unsigned int __ebx;
    unsigned int __ecx;
    unsigned int __edx;
    unsigned int __edi;
    unsigned int __esi;
    unsigned int __ebp;
    unsigned int __esp;
    unsigned int __ss;
    unsigned int __eflags;
    unsigned int __eip;
    unsigned int __cs;
    unsigned int __ds;
    unsigned int __es;
    unsigned int __fs;
    unsigned int __gs;
};
# 89 "/usr/include/mach/i386/_structs.h" 3 4
struct __darwin_fp_control
{
    unsigned short __invalid :1,
        __denorm :1,
    __zdiv :1,
    __ovrfl :1,
    __undfl :1,
    __precis :1,
      :2,
    __pc :2,





    __rc :2,






             :1,
      :3;
};
typedef struct __darwin_fp_control __darwin_fp_control_t;
# 147 "/usr/include/mach/i386/_structs.h" 3 4
struct __darwin_fp_status
{
    unsigned short __invalid :1,
        __denorm :1,
    __zdiv :1,
    __ovrfl :1,
    __undfl :1,
    __precis :1,
    __stkflt :1,
    __errsumm :1,
    __c0 :1,
    __c1 :1,
    __c2 :1,
    __tos :3,
    __c3 :1,
    __busy :1;
};
typedef struct __darwin_fp_status __darwin_fp_status_t;
# 191 "/usr/include/mach/i386/_structs.h" 3 4
struct __darwin_mmst_reg
{
 char __mmst_reg[10];
 char __mmst_rsrv[6];
};
# 210 "/usr/include/mach/i386/_structs.h" 3 4
struct __darwin_xmm_reg
{
 char __xmm_reg[16];
};
# 232 "/usr/include/mach/i386/_structs.h" 3 4
struct __darwin_i386_float_state
{
 int __fpu_reserved[2];
 struct __darwin_fp_control __fpu_fcw;
 struct __darwin_fp_status __fpu_fsw;
 __uint8_t __fpu_ftw;
 __uint8_t __fpu_rsrv1;
 __uint16_t __fpu_fop;
 __uint32_t __fpu_ip;
 __uint16_t __fpu_cs;
 __uint16_t __fpu_rsrv2;
 __uint32_t __fpu_dp;
 __uint16_t __fpu_ds;
 __uint16_t __fpu_rsrv3;
 __uint32_t __fpu_mxcsr;
 __uint32_t __fpu_mxcsrmask;
 struct __darwin_mmst_reg __fpu_stmm0;
 struct __darwin_mmst_reg __fpu_stmm1;
 struct __darwin_mmst_reg __fpu_stmm2;
 struct __darwin_mmst_reg __fpu_stmm3;
 struct __darwin_mmst_reg __fpu_stmm4;
 struct __darwin_mmst_reg __fpu_stmm5;
 struct __darwin_mmst_reg __fpu_stmm6;
 struct __darwin_mmst_reg __fpu_stmm7;
 struct __darwin_xmm_reg __fpu_xmm0;
 struct __darwin_xmm_reg __fpu_xmm1;
 struct __darwin_xmm_reg __fpu_xmm2;
 struct __darwin_xmm_reg __fpu_xmm3;
 struct __darwin_xmm_reg __fpu_xmm4;
 struct __darwin_xmm_reg __fpu_xmm5;
 struct __darwin_xmm_reg __fpu_xmm6;
 struct __darwin_xmm_reg __fpu_xmm7;
 char __fpu_rsrv4[14*16];
 int __fpu_reserved1;
};
# 308 "/usr/include/mach/i386/_structs.h" 3 4
struct __darwin_i386_exception_state
{
    unsigned int __trapno;
    unsigned int __err;
    unsigned int __faultvaddr;
};
# 326 "/usr/include/mach/i386/_structs.h" 3 4
struct __darwin_x86_debug_state32
{
 unsigned int __dr0;
 unsigned int __dr1;
 unsigned int __dr2;
 unsigned int __dr3;
 unsigned int __dr4;
 unsigned int __dr5;
 unsigned int __dr6;
 unsigned int __dr7;
};
# 358 "/usr/include/mach/i386/_structs.h" 3 4
struct __darwin_x86_thread_state64
{
 __uint64_t __rax;
 __uint64_t __rbx;
 __uint64_t __rcx;
 __uint64_t __rdx;
 __uint64_t __rdi;
 __uint64_t __rsi;
 __uint64_t __rbp;
 __uint64_t __rsp;
 __uint64_t __r8;
 __uint64_t __r9;
 __uint64_t __r10;
 __uint64_t __r11;
 __uint64_t __r12;
 __uint64_t __r13;
 __uint64_t __r14;
 __uint64_t __r15;
 __uint64_t __rip;
 __uint64_t __rflags;
 __uint64_t __cs;
 __uint64_t __fs;
 __uint64_t __gs;
};
# 413 "/usr/include/mach/i386/_structs.h" 3 4
struct __darwin_x86_float_state64
{
 int __fpu_reserved[2];
 struct __darwin_fp_control __fpu_fcw;
 struct __darwin_fp_status __fpu_fsw;
 __uint8_t __fpu_ftw;
 __uint8_t __fpu_rsrv1;
 __uint16_t __fpu_fop;


 __uint32_t __fpu_ip;
 __uint16_t __fpu_cs;

 __uint16_t __fpu_rsrv2;


 __uint32_t __fpu_dp;
 __uint16_t __fpu_ds;

 __uint16_t __fpu_rsrv3;
 __uint32_t __fpu_mxcsr;
 __uint32_t __fpu_mxcsrmask;
 struct __darwin_mmst_reg __fpu_stmm0;
 struct __darwin_mmst_reg __fpu_stmm1;
 struct __darwin_mmst_reg __fpu_stmm2;
 struct __darwin_mmst_reg __fpu_stmm3;
 struct __darwin_mmst_reg __fpu_stmm4;
 struct __darwin_mmst_reg __fpu_stmm5;
 struct __darwin_mmst_reg __fpu_stmm6;
 struct __darwin_mmst_reg __fpu_stmm7;
 struct __darwin_xmm_reg __fpu_xmm0;
 struct __darwin_xmm_reg __fpu_xmm1;
 struct __darwin_xmm_reg __fpu_xmm2;
 struct __darwin_xmm_reg __fpu_xmm3;
 struct __darwin_xmm_reg __fpu_xmm4;
 struct __darwin_xmm_reg __fpu_xmm5;
 struct __darwin_xmm_reg __fpu_xmm6;
 struct __darwin_xmm_reg __fpu_xmm7;
 struct __darwin_xmm_reg __fpu_xmm8;
 struct __darwin_xmm_reg __fpu_xmm9;
 struct __darwin_xmm_reg __fpu_xmm10;
 struct __darwin_xmm_reg __fpu_xmm11;
 struct __darwin_xmm_reg __fpu_xmm12;
 struct __darwin_xmm_reg __fpu_xmm13;
 struct __darwin_xmm_reg __fpu_xmm14;
 struct __darwin_xmm_reg __fpu_xmm15;
 char __fpu_rsrv4[6*16];
 int __fpu_reserved1;
};
# 517 "/usr/include/mach/i386/_structs.h" 3 4
struct __darwin_x86_exception_state64
{
    unsigned int __trapno;
    unsigned int __err;
    __uint64_t __faultvaddr;
};
# 535 "/usr/include/mach/i386/_structs.h" 3 4
struct __darwin_x86_debug_state64
{
 __uint64_t __dr0;
 __uint64_t __dr1;
 __uint64_t __dr2;
 __uint64_t __dr3;
 __uint64_t __dr4;
 __uint64_t __dr5;
 __uint64_t __dr6;
 __uint64_t __dr7;
};
# 39 "/usr/include/i386/_structs.h" 2 3 4
# 48 "/usr/include/i386/_structs.h" 3 4
struct __darwin_mcontext32
{
 struct __darwin_i386_exception_state __es;
 struct __darwin_i386_thread_state __ss;
 struct __darwin_i386_float_state __fs;
};
# 68 "/usr/include/i386/_structs.h" 3 4
struct __darwin_mcontext64
{
 struct __darwin_x86_exception_state64 __es;
 struct __darwin_x86_thread_state64 __ss;
 struct __darwin_x86_float_state64 __fs;
};
# 91 "/usr/include/i386/_structs.h" 3 4
typedef struct __darwin_mcontext64 *mcontext_t;
# 32 "/usr/include/machine/_structs.h" 2 3 4
# 58 "/usr/include/sys/_structs.h" 2 3 4
# 75 "/usr/include/sys/_structs.h" 3 4
struct __darwin_sigaltstack
{
 void *ss_sp;
 __darwin_size_t ss_size;
 int ss_flags;
};
# 128 "/usr/include/sys/_structs.h" 3 4
struct __darwin_ucontext
{
 int uc_onstack;
 __darwin_sigset_t uc_sigmask;
 struct __darwin_sigaltstack uc_stack;
 struct __darwin_ucontext *uc_link;
 __darwin_size_t uc_mcsize;
 struct __darwin_mcontext64 *uc_mcontext;



};
# 218 "/usr/include/sys/_structs.h" 3 4
typedef struct __darwin_sigaltstack stack_t;
# 227 "/usr/include/sys/_structs.h" 3 4
typedef struct __darwin_ucontext ucontext_t;
# 155 "/usr/include/sys/signal.h" 2 3 4
# 168 "/usr/include/sys/signal.h" 3 4
typedef __darwin_sigset_t sigset_t;
# 181 "/usr/include/sys/signal.h" 3 4
union sigval {

 int sival_int;
 void *sival_ptr;
};





struct sigevent {
 int sigev_notify;
 int sigev_signo;
 union sigval sigev_value;
 void (*sigev_notify_function)(union sigval);
 pthread_attr_t *sigev_notify_attributes;
};


typedef struct __siginfo {
 int si_signo;
 int si_errno;
 int si_code;
 pid_t si_pid;
 uid_t si_uid;
 int si_status;
 void *si_addr;
 union sigval si_value;
 long si_band;
 unsigned long __pad[7];
} siginfo_t;
# 292 "/usr/include/sys/signal.h" 3 4
union __sigaction_u {
 void (*__sa_handler)(int);
 void (*__sa_sigaction)(int, struct __siginfo *,
         void *);
};


struct __sigaction {
 union __sigaction_u __sigaction_u;
 void (*sa_tramp)(void *, int, int, siginfo_t *, void *);
 sigset_t sa_mask;
 int sa_flags;
};




struct sigaction {
 union __sigaction_u __sigaction_u;
 sigset_t sa_mask;
 int sa_flags;
};
# 354 "/usr/include/sys/signal.h" 3 4
typedef void (*sig_t)(int);
# 371 "/usr/include/sys/signal.h" 3 4
struct sigvec {
 void (*sv_handler)(int);
 int sv_mask;
 int sv_flags;
};
# 390 "/usr/include/sys/signal.h" 3 4
struct sigstack {
 char *ss_sp;
 int ss_onstack;
};
# 412 "/usr/include/sys/signal.h" 3 4
extern "C" {
void (*signal(int, void (*)(int)))(int);
}
# 117 "/usr/include/sys/param.h" 2 3 4
# 108 "/Applications/Autodesk/maya2011/devkit/include/maya/OpenMayaMac.h" 2






# 1 "/System/Library/Frameworks/CoreServices.framework/Headers/CoreServices.h" 1 3
# 21 "/System/Library/Frameworks/CoreServices.framework/Headers/CoreServices.h" 3
# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AE.h" 1 3
# 20 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AE.h" 3
# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CarbonCore.h" 1 3
# 20 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CarbonCore.h" 3
# 1 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 1 3
# 12 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 3
# 1 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/stdarg.h" 1 3 4
# 43 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/stdarg.h" 3 4
typedef __builtin_va_list __gnuc_va_list;
# 105 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/stdarg.h" 3 4
typedef __gnuc_va_list va_list;
# 13 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "/usr/include/assert.h" 1 3 4
# 44 "/usr/include/assert.h" 3 4
# 1 "/usr/include/stdlib.h" 1 3 4
# 61 "/usr/include/stdlib.h" 3 4
# 1 "/usr/include/Availability.h" 1 3 4
# 126 "/usr/include/Availability.h" 3 4
# 1 "/usr/include/AvailabilityInternal.h" 1 3 4
# 127 "/usr/include/Availability.h" 2 3 4
# 62 "/usr/include/stdlib.h" 2 3 4

# 1 "/usr/include/_types.h" 1 3 4
# 39 "/usr/include/_types.h" 3 4
typedef int __darwin_nl_item;
typedef int __darwin_wctrans_t;

typedef __uint32_t __darwin_wctype_t;
# 64 "/usr/include/stdlib.h" 2 3 4

# 1 "/usr/include/sys/wait.h" 1 3 4
# 79 "/usr/include/sys/wait.h" 3 4
typedef enum {
 P_ALL,
 P_PID,
 P_PGID
} idtype_t;
# 117 "/usr/include/sys/wait.h" 3 4
# 1 "/usr/include/sys/resource.h" 1 3 4
# 76 "/usr/include/sys/resource.h" 3 4
# 1 "/usr/include/sys/_structs.h" 1 3 4
# 100 "/usr/include/sys/_structs.h" 3 4
struct timeval
{
 __darwin_time_t tv_sec;
 __darwin_suseconds_t tv_usec;
};
# 77 "/usr/include/sys/resource.h" 2 3 4
# 88 "/usr/include/sys/resource.h" 3 4
typedef __uint64_t rlim_t;
# 144 "/usr/include/sys/resource.h" 3 4
struct rusage {
 struct timeval ru_utime;
 struct timeval ru_stime;
# 155 "/usr/include/sys/resource.h" 3 4
 long ru_maxrss;

 long ru_ixrss;
 long ru_idrss;
 long ru_isrss;
 long ru_minflt;
 long ru_majflt;
 long ru_nswap;
 long ru_inblock;
 long ru_oublock;
 long ru_msgsnd;
 long ru_msgrcv;
 long ru_nsignals;
 long ru_nvcsw;
 long ru_nivcsw;


};
# 215 "/usr/include/sys/resource.h" 3 4
struct rlimit {
 rlim_t rlim_cur;
 rlim_t rlim_max;
};
# 237 "/usr/include/sys/resource.h" 3 4
extern "C" {
int getpriority(int, id_t);

int getiopolicy_np(int, int);

int getrlimit(int, struct rlimit *) __asm("_" "getrlimit" );
int getrusage(int, struct rusage *);
int setpriority(int, id_t, int);

int setiopolicy_np(int, int, int);

int setrlimit(int, const struct rlimit *) __asm("_" "setrlimit" );
}
# 118 "/usr/include/sys/wait.h" 2 3 4
# 201 "/usr/include/sys/wait.h" 3 4
union wait {
 int w_status;



 struct {

  unsigned int w_Termsig:7,
    w_Coredump:1,
    w_Retcode:8,
    w_Filler:16;







 } w_T;





 struct {

  unsigned int w_Stopval:8,
    w_Stopsig:8,
    w_Filler:16;






 } w_S;
};
# 254 "/usr/include/sys/wait.h" 3 4
extern "C" {
pid_t wait(int *) __asm("_" "wait" );
pid_t waitpid(pid_t, int *, int) __asm("_" "waitpid" );

int waitid(idtype_t, id_t, siginfo_t *, int) __asm("_" "waitid" );


pid_t wait3(int *, int, struct rusage *);
pid_t wait4(pid_t, int *, int, struct rusage *);

}
# 66 "/usr/include/stdlib.h" 2 3 4

# 1 "/usr/include/alloca.h" 1 3 4
# 35 "/usr/include/alloca.h" 3 4
extern "C" {
void *alloca(size_t);
}
# 68 "/usr/include/stdlib.h" 2 3 4
# 81 "/usr/include/stdlib.h" 3 4
typedef __darwin_ct_rune_t ct_rune_t;




typedef __darwin_rune_t rune_t;
# 97 "/usr/include/stdlib.h" 3 4
typedef struct {
 int quot;
 int rem;
} div_t;

typedef struct {
 long quot;
 long rem;
} ldiv_t;


typedef struct {
 long long quot;
 long long rem;
} lldiv_t;
# 134 "/usr/include/stdlib.h" 3 4
extern int __mb_cur_max;
# 144 "/usr/include/stdlib.h" 3 4
extern "C" {
void abort(void) __attribute__((__noreturn__));
int abs(int) __attribute__((__const__));
int atexit(void (*)(void));
double atof(const char *);
int atoi(const char *);
long atol(const char *);

long long
  atoll(const char *);

void *bsearch(const void *, const void *, size_t,
     size_t, int (*)(const void *, const void *));
void *calloc(size_t, size_t);
div_t div(int, int) __attribute__((__const__));
void exit(int) __attribute__((__noreturn__));
void free(void *);
char *getenv(const char *);
long labs(long) __attribute__((__const__));
ldiv_t ldiv(long, long) __attribute__((__const__));

long long
  llabs(long long);
lldiv_t lldiv(long long, long long);

void *malloc(size_t);
int mblen(const char *, size_t);
size_t mbstowcs(wchar_t * , const char * , size_t);
int mbtowc(wchar_t * , const char * , size_t);
int posix_memalign(void **, size_t, size_t);
void qsort(void *, size_t, size_t,
     int (*)(const void *, const void *));
int rand(void);
void *realloc(void *, size_t);
void srand(unsigned);
double strtod(const char *, char **) __asm("_" "strtod" );
float strtof(const char *, char **) __asm("_" "strtof" );
long strtol(const char *, char **, int);
long double
  strtold(const char *, char **) ;

long long
  strtoll(const char *, char **, int);

unsigned long
  strtoul(const char *, char **, int);

unsigned long long
  strtoull(const char *, char **, int);

int system(const char *) __asm("_" "system" );
size_t wcstombs(char * , const wchar_t * , size_t);
int wctomb(char *, wchar_t);


void _Exit(int) __attribute__((__noreturn__));
long a64l(const char *);
double drand48(void);
char *ecvt(double, int, int *, int *);
double erand48(unsigned short[3]);
char *fcvt(double, int, int *, int *);
char *gcvt(double, int, char *);
int getsubopt(char **, char * const *, char **);
int grantpt(int);

char *initstate(unsigned, char *, size_t);



long jrand48(unsigned short[3]);
char *l64a(long);
void lcong48(unsigned short[7]);
long lrand48(void);
char *mktemp(char *);
int mkstemp(char *);
long mrand48(void);
long nrand48(unsigned short[3]);
int posix_openpt(int);
char *ptsname(int);
int putenv(char *) __asm("_" "putenv" );
long random(void);
int rand_r(unsigned *);

char *realpath(const char * , char * ) __asm("_" "realpath" "$DARWIN_EXTSN");



unsigned short
 *seed48(unsigned short[3]);
int setenv(const char *, const char *, int) __asm("_" "setenv" );

void setkey(const char *) __asm("_" "setkey" );



char *setstate(const char *);
void srand48(long);

void srandom(unsigned);



int unlockpt(int);

int unsetenv(const char *) __asm("_" "unsetenv" );
# 267 "/usr/include/stdlib.h" 3 4
u_int32_t
  arc4random(void);
void arc4random_addrandom(unsigned char *dat, int datlen);
void arc4random_stir(void);

int atexit_b(void (^)(void));
void *bsearch_b(const void *, const void *, size_t,
     size_t, int (^)(const void *, const void *));



char *cgetcap(char *, const char *, int);
int cgetclose(void);
int cgetent(char **, char **, const char *);
int cgetfirst(char **, char **);
int cgetmatch(const char *, const char *);
int cgetnext(char **, char **);
int cgetnum(char *, const char *, long *);
int cgetset(const char *);
int cgetstr(char *, const char *, char **);
int cgetustr(char *, const char *, char **);

int daemon(int, int) __asm("_" "daemon" "$1050") __attribute__((deprecated,visibility("default")));
char *devname(dev_t, mode_t);
char *devname_r(dev_t, mode_t, char *buf, int len);
char *getbsize(int *, long *);
int getloadavg(double [], int);
const char
 *getprogname(void);

int heapsort(void *, size_t, size_t,
     int (*)(const void *, const void *));

int heapsort_b(void *, size_t, size_t,
     int (^)(const void *, const void *));

int mergesort(void *, size_t, size_t,
     int (*)(const void *, const void *));

int mergesort_b(void *, size_t, size_t,
     int (^)(const void *, const void *));

void psort(void *, size_t, size_t,
     int (*)(const void *, const void *));

void psort_b(void *, size_t, size_t,
     int (^)(const void *, const void *));

void psort_r(void *, size_t, size_t, void *,
     int (*)(void *, const void *, const void *));

void qsort_b(void *, size_t, size_t,
     int (^)(const void *, const void *));

void qsort_r(void *, size_t, size_t, void *,
     int (*)(void *, const void *, const void *));
int radixsort(const unsigned char **, int, const unsigned char *,
     unsigned);
void setprogname(const char *);
int sradixsort(const unsigned char **, int, const unsigned char *,
     unsigned);
void sranddev(void);
void srandomdev(void);
void *reallocf(void *, size_t);

long long
  strtoq(const char *, char **, int);
unsigned long long
  strtouq(const char *, char **, int);

extern char *suboptarg;
void *valloc(size_t);






}
# 45 "/usr/include/assert.h" 2 3 4
# 75 "/usr/include/assert.h" 3 4
extern "C" {
void __assert_rtn(const char *, const char *, int, const char *) __attribute__((__noreturn__));
void __eprintf(const char *, const char *, unsigned, const char *) __attribute__((__noreturn__));
}
# 14 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "/usr/include/ctype.h" 1 3 4
# 69 "/usr/include/ctype.h" 3 4
# 1 "/usr/include/runetype.h" 1 3 4
# 70 "/usr/include/runetype.h" 3 4
typedef __darwin_wint_t wint_t;
# 81 "/usr/include/runetype.h" 3 4
typedef struct {
 __darwin_rune_t __min;
 __darwin_rune_t __max;
 __darwin_rune_t __map;
 __uint32_t *__types;
} _RuneEntry;

typedef struct {
 int __nranges;
 _RuneEntry *__ranges;
} _RuneRange;

typedef struct {
 char __name[14];
 __uint32_t __mask;
} _RuneCharClass;

typedef struct {
 char __magic[8];
 char __encoding[32];

 __darwin_rune_t (*__sgetrune)(const char *, __darwin_size_t, char const **);
 int (*__sputrune)(__darwin_rune_t, char *, __darwin_size_t, char **);
 __darwin_rune_t __invalid_rune;

 __uint32_t __runetype[(1 <<8 )];
 __darwin_rune_t __maplower[(1 <<8 )];
 __darwin_rune_t __mapupper[(1 <<8 )];






 _RuneRange __runetype_ext;
 _RuneRange __maplower_ext;
 _RuneRange __mapupper_ext;

 void *__variable;
 int __variable_len;




 int __ncharclasses;
 _RuneCharClass *__charclasses;
} _RuneLocale;



extern "C" {
extern _RuneLocale _DefaultRuneLocale;
extern _RuneLocale *_CurrentRuneLocale;
}
# 70 "/usr/include/ctype.h" 2 3 4
# 145 "/usr/include/ctype.h" 3 4
extern "C" {
unsigned long ___runetype(__darwin_ct_rune_t);
__darwin_ct_rune_t ___tolower(__darwin_ct_rune_t);
__darwin_ct_rune_t ___toupper(__darwin_ct_rune_t);
}

static inline int
isascii(int _c)
{
 return ((_c & ~0x7F) == 0);
}
# 164 "/usr/include/ctype.h" 3 4
extern "C" {
int __maskrune(__darwin_ct_rune_t, unsigned long);
}


static inline int
__istype(__darwin_ct_rune_t _c, unsigned long _f)
{



 return (isascii(_c) ? !!(_DefaultRuneLocale.__runetype[_c] & _f)
  : !!__maskrune(_c, _f));

}

static inline __darwin_ct_rune_t
__isctype(__darwin_ct_rune_t _c, unsigned long _f)
{



 return (_c < 0 || _c >= (1 <<8 )) ? 0 :
  !!(_DefaultRuneLocale.__runetype[_c] & _f);

}
# 204 "/usr/include/ctype.h" 3 4
extern "C" {
__darwin_ct_rune_t __toupper(__darwin_ct_rune_t);
__darwin_ct_rune_t __tolower(__darwin_ct_rune_t);
}


static inline int
__wcwidth(__darwin_ct_rune_t _c)
{
 unsigned int _x;

 if (_c == 0)
  return (0);
 _x = (unsigned int)__maskrune(_c, 0xe0000000L|0x00040000L);
 if ((_x & 0xe0000000L) != 0)
  return ((_x & 0xe0000000L) >> 30);
 return ((_x & 0x00040000L) != 0 ? 1 : -1);
}






static inline int
isalnum(int _c)
{
 return (__istype(_c, 0x00000100L|0x00000400L));
}

static inline int
isalpha(int _c)
{
 return (__istype(_c, 0x00000100L));
}

static inline int
isblank(int _c)
{
 return (__istype(_c, 0x00020000L));
}

static inline int
iscntrl(int _c)
{
 return (__istype(_c, 0x00000200L));
}


static inline int
isdigit(int _c)
{
 return (__isctype(_c, 0x00000400L));
}

static inline int
isgraph(int _c)
{
 return (__istype(_c, 0x00000800L));
}

static inline int
islower(int _c)
{
 return (__istype(_c, 0x00001000L));
}

static inline int
isprint(int _c)
{
 return (__istype(_c, 0x00040000L));
}

static inline int
ispunct(int _c)
{
 return (__istype(_c, 0x00002000L));
}

static inline int
isspace(int _c)
{
 return (__istype(_c, 0x00004000L));
}

static inline int
isupper(int _c)
{
 return (__istype(_c, 0x00008000L));
}


static inline int
isxdigit(int _c)
{
 return (__isctype(_c, 0x00010000L));
}

static inline int
toascii(int _c)
{
 return (_c & 0x7F);
}

static inline int
tolower(int _c)
{
        return (__tolower(_c));
}

static inline int
toupper(int _c)
{
        return (__toupper(_c));
}


static inline int
digittoint(int _c)
{
 return (__maskrune(_c, 0x0F));
}

static inline int
ishexnumber(int _c)
{
 return (__istype(_c, 0x00010000L));
}

static inline int
isideogram(int _c)
{
 return (__istype(_c, 0x00080000L));
}

static inline int
isnumber(int _c)
{
 return (__istype(_c, 0x00000400L));
}

static inline int
isphonogram(int _c)
{
 return (__istype(_c, 0x00200000L));
}

static inline int
isrune(int _c)
{
 return (__istype(_c, 0xFFFFFFF0L));
}

static inline int
isspecial(int _c)
{
 return (__istype(_c, 0x00100000L));
}
# 15 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "/usr/include/errno.h" 1 3 4
# 23 "/usr/include/errno.h" 3 4
# 1 "/usr/include/sys/errno.h" 1 3 4
# 73 "/usr/include/sys/errno.h" 3 4
extern "C" {
extern int * __error(void);

}
# 24 "/usr/include/errno.h" 2 3 4
# 16 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/float.h" 1 3 4
# 17 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/limits.h" 1 3 4






# 1 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/syslimits.h" 1 3 4
# 8 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/limits.h" 2 3 4


# 1 "/usr/lib/gcc/i686-apple-darwin10/4.2.1/include/limits.h" 1 3 4






# 1 "/usr/lib/gcc/i686-apple-darwin10/4.2.1/include/syslimits.h" 1 3 4
# 8 "/usr/lib/gcc/i686-apple-darwin10/4.2.1/include/limits.h" 2 3 4
# 11 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/limits.h" 2 3 4
# 18 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "/usr/include/locale.h" 1 3 4
# 40 "/usr/include/locale.h" 3 4
# 1 "/usr/include/_locale.h" 1 3 4
# 43 "/usr/include/_locale.h" 3 4
struct lconv {
 char *decimal_point;
 char *thousands_sep;
 char *grouping;
 char *int_curr_symbol;
 char *currency_symbol;
 char *mon_decimal_point;
 char *mon_thousands_sep;
 char *mon_grouping;
 char *positive_sign;
 char *negative_sign;
 char int_frac_digits;
 char frac_digits;
 char p_cs_precedes;
 char p_sep_by_space;
 char n_cs_precedes;
 char n_sep_by_space;
 char p_sign_posn;
 char n_sign_posn;
 char int_p_cs_precedes;
 char int_n_cs_precedes;
 char int_p_sep_by_space;
 char int_n_sep_by_space;
 char int_p_sign_posn;
 char int_n_sign_posn;
};





extern "C" {
struct lconv *localeconv(void);
}
# 41 "/usr/include/locale.h" 2 3 4
# 52 "/usr/include/locale.h" 3 4
extern "C" {
char *setlocale(int, const char *);
}
# 19 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "/usr/include/math.h" 1 3 4
# 28 "/usr/include/math.h" 3 4
# 1 "/usr/include/architecture/i386/math.h" 1 3 4
# 36 "/usr/include/architecture/i386/math.h" 3 4
extern "C" {
# 49 "/usr/include/architecture/i386/math.h" 3 4
 typedef float float_t;
 typedef double double_t;
# 108 "/usr/include/architecture/i386/math.h" 3 4
extern unsigned int __math_errhandling ( void );
# 128 "/usr/include/architecture/i386/math.h" 3 4
extern int __fpclassifyf(float );
extern int __fpclassifyd(double );
extern int __fpclassify (long double);
# 163 "/usr/include/architecture/i386/math.h" 3 4
 static __inline__ int __inline_isfinitef (float ) __attribute__ ((always_inline));
 static __inline__ int __inline_isfinited (double ) __attribute__ ((always_inline));
 static __inline__ int __inline_isfinite (long double) __attribute__ ((always_inline));
 static __inline__ int __inline_isinff (float ) __attribute__ ((always_inline));
 static __inline__ int __inline_isinfd (double ) __attribute__ ((always_inline));
 static __inline__ int __inline_isinf (long double) __attribute__ ((always_inline));
 static __inline__ int __inline_isnanf (float ) __attribute__ ((always_inline));
 static __inline__ int __inline_isnand (double ) __attribute__ ((always_inline));
 static __inline__ int __inline_isnan (long double) __attribute__ ((always_inline));
 static __inline__ int __inline_isnormalf (float ) __attribute__ ((always_inline));
 static __inline__ int __inline_isnormald (double ) __attribute__ ((always_inline));
 static __inline__ int __inline_isnormal (long double) __attribute__ ((always_inline));
 static __inline__ int __inline_signbitf (float ) __attribute__ ((always_inline));
 static __inline__ int __inline_signbitd (double ) __attribute__ ((always_inline));
 static __inline__ int __inline_signbit (long double) __attribute__ ((always_inline));

 static __inline__ int __inline_isinff( float __x ) { return __builtin_fabsf(__x) == __builtin_inff(); }
 static __inline__ int __inline_isinfd( double __x ) { return __builtin_fabs(__x) == __builtin_inf(); }
 static __inline__ int __inline_isinf( long double __x ) { return __builtin_fabsl(__x) == __builtin_infl(); }
 static __inline__ int __inline_isfinitef( float __x ) { return __x == __x && __builtin_fabsf(__x) != __builtin_inff(); }
 static __inline__ int __inline_isfinited( double __x ) { return __x == __x && __builtin_fabs(__x) != __builtin_inf(); }
 static __inline__ int __inline_isfinite( long double __x ) { return __x == __x && __builtin_fabsl(__x) != __builtin_infl(); }
 static __inline__ int __inline_isnanf( float __x ) { return __x != __x; }
 static __inline__ int __inline_isnand( double __x ) { return __x != __x; }
 static __inline__ int __inline_isnan( long double __x ) { return __x != __x; }
 static __inline__ int __inline_signbitf( float __x ) { union{ float __f; unsigned int __u; }__u; __u.__f = __x; return (int)(__u.__u >> 31); }
 static __inline__ int __inline_signbitd( double __x ) { union{ double __f; unsigned int __u[2]; }__u; __u.__f = __x; return (int)(__u.__u[1] >> 31); }
 static __inline__ int __inline_signbit( long double __x ){ union{ long double __ld; struct{ unsigned int __m[2]; short __sexp; }__p; }__u; __u.__ld = __x; return (int) (((unsigned short) __u.__p.__sexp) >> 15); }
 static __inline__ int __inline_isnormalf( float __x ) { float fabsf = __builtin_fabsf(__x); if( __x != __x ) return 0; return fabsf < __builtin_inff() && fabsf >= 1.17549435e-38F; }
 static __inline__ int __inline_isnormald( double __x ) { double fabsf = __builtin_fabs(__x); if( __x != __x ) return 0; return fabsf < __builtin_inf() && fabsf >= 2.2250738585072014e-308; }
 static __inline__ int __inline_isnormal( long double __x ) { long double fabsf = __builtin_fabsl(__x); if( __x != __x ) return 0; return fabsf < __builtin_infl() && fabsf >= 3.36210314311209350626e-4932L; }
# 253 "/usr/include/architecture/i386/math.h" 3 4
extern double acos( double );
extern float acosf( float );

extern double asin( double );
extern float asinf( float );

extern double atan( double );
extern float atanf( float );

extern double atan2( double, double );
extern float atan2f( float, float );

extern double cos( double );
extern float cosf( float );

extern double sin( double );
extern float sinf( float );

extern double tan( double );
extern float tanf( float );

extern double acosh( double );
extern float acoshf( float );

extern double asinh( double );
extern float asinhf( float );

extern double atanh( double );
extern float atanhf( float );

extern double cosh( double );
extern float coshf( float );

extern double sinh( double );
extern float sinhf( float );

extern double tanh( double );
extern float tanhf( float );

extern double exp ( double );
extern float expf ( float );

extern double exp2 ( double );
extern float exp2f ( float );

extern double expm1 ( double );
extern float expm1f ( float );

extern double log ( double );
extern float logf ( float );

extern double log10 ( double );
extern float log10f ( float );

extern double log2 ( double );
extern float log2f ( float );

extern double log1p ( double );
extern float log1pf ( float );

extern double logb ( double );
extern float logbf ( float );

extern double modf ( double, double * );
extern float modff ( float, float * );

extern double ldexp ( double, int );
extern float ldexpf ( float, int );

extern double frexp ( double, int * );
extern float frexpf ( float, int * );

extern int ilogb ( double );
extern int ilogbf ( float );

extern double scalbn ( double, int );
extern float scalbnf ( float, int );

extern double scalbln ( double, long int );
extern float scalblnf ( float, long int );

extern double fabs( double );
extern float fabsf( float );

extern double cbrt( double );
extern float cbrtf( float );

extern double hypot ( double, double );
extern float hypotf ( float, float );

extern double pow ( double, double );
extern float powf ( float, float );

extern double sqrt( double );
extern float sqrtf( float );

extern double erf( double );
extern float erff( float );

extern double erfc( double );
extern float erfcf( float );






extern double lgamma( double );
extern float lgammaf( float );

extern double tgamma( double );
extern float tgammaf( float );

extern double ceil ( double );
extern float ceilf ( float );

extern double floor ( double );
extern float floorf ( float );

extern double nearbyint ( double );
extern float nearbyintf ( float );

extern double rint ( double );
extern float rintf ( float );

extern long int lrint ( double );
extern long int lrintf ( float );

extern double round ( double );
extern float roundf ( float );

extern long int lround ( double );
extern long int lroundf ( float );




    extern long long int llrint ( double );
    extern long long int llrintf ( float );

    extern long long int llround ( double );
    extern long long int llroundf ( float );



extern double trunc ( double );
extern float truncf ( float );

extern double fmod ( double, double );
extern float fmodf ( float, float );

extern double remainder ( double, double );
extern float remainderf ( float, float );

extern double remquo ( double, double, int * );
extern float remquof ( float, float, int * );

extern double copysign ( double, double );
extern float copysignf ( float, float );

extern double nan( const char * );
extern float nanf( const char * );

extern double nextafter ( double, double );
extern float nextafterf ( float, float );

extern double fdim ( double, double );
extern float fdimf ( float, float );

extern double fmax ( double, double );
extern float fmaxf ( float, float );

extern double fmin ( double, double );
extern float fminf ( float, float );

extern double fma ( double, double, double );
extern float fmaf ( float, float, float );

extern long double acosl(long double);
extern long double asinl(long double);
extern long double atanl(long double);
extern long double atan2l(long double, long double);
extern long double cosl(long double);
extern long double sinl(long double);
extern long double tanl(long double);
extern long double acoshl(long double);
extern long double asinhl(long double);
extern long double atanhl(long double);
extern long double coshl(long double);
extern long double sinhl(long double);
extern long double tanhl(long double);
extern long double expl(long double);
extern long double exp2l(long double);
extern long double expm1l(long double);
extern long double logl(long double);
extern long double log10l(long double);
extern long double log2l(long double);
extern long double log1pl(long double);
extern long double logbl(long double);
extern long double modfl(long double, long double *);
extern long double ldexpl(long double, int);
extern long double frexpl(long double, int *);
extern int ilogbl(long double);
extern long double scalbnl(long double, int);
extern long double scalblnl(long double, long int);
extern long double fabsl(long double);
extern long double cbrtl(long double);
extern long double hypotl(long double, long double);
extern long double powl(long double, long double);
extern long double sqrtl(long double);
extern long double erfl(long double);
extern long double erfcl(long double);






extern long double lgammal(long double);

extern long double tgammal(long double);
extern long double ceill(long double);
extern long double floorl(long double);
extern long double nearbyintl(long double);
extern long double rintl(long double);
extern long int lrintl(long double);
extern long double roundl(long double);
extern long int lroundl(long double);



    extern long long int llrintl(long double);
    extern long long int llroundl(long double);


extern long double truncl(long double);
extern long double fmodl(long double, long double);
extern long double remainderl(long double, long double);
extern long double remquol(long double, long double, int *);
extern long double copysignl(long double, long double);
extern long double nanl(const char *);
extern long double nextafterl(long double, long double);
extern double nexttoward(double, long double);
extern float nexttowardf(float, long double);
extern long double nexttowardl(long double, long double);
extern long double fdiml(long double, long double);
extern long double fmaxl(long double, long double);
extern long double fminl(long double, long double);
extern long double fmal(long double, long double, long double);
# 510 "/usr/include/architecture/i386/math.h" 3 4
extern double __inf( void );
extern float __inff( void );
extern long double __infl( void );
extern float __nan( void );


extern double j0 ( double );

extern double j1 ( double );

extern double jn ( int, double );

extern double y0 ( double );

extern double y1 ( double );

extern double yn ( int, double );

extern double scalb ( double, double );
# 546 "/usr/include/architecture/i386/math.h" 3 4
extern int signgam;
# 560 "/usr/include/architecture/i386/math.h" 3 4
extern long int rinttol ( double );

extern long int roundtol ( double );
# 600 "/usr/include/architecture/i386/math.h" 3 4
extern int finite ( double );

extern double gamma ( double );
# 613 "/usr/include/architecture/i386/math.h" 3 4
extern double significand ( double );




extern double drem ( double, double );
# 639 "/usr/include/architecture/i386/math.h" 3 4
}
# 29 "/usr/include/math.h" 2 3 4
# 20 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "/usr/include/setjmp.h" 1 3 4
# 26 "/usr/include/setjmp.h" 3 4
# 1 "/usr/include/machine/setjmp.h" 1 3 4
# 37 "/usr/include/machine/setjmp.h" 3 4
# 1 "/usr/include/i386/setjmp.h" 1 3 4
# 47 "/usr/include/i386/setjmp.h" 3 4
typedef int jmp_buf[((9 * 2) + 3 + 16)];
typedef int sigjmp_buf[((9 * 2) + 3 + 16) + 1];
# 65 "/usr/include/i386/setjmp.h" 3 4
extern "C" {
int setjmp(jmp_buf);
void longjmp(jmp_buf, int);


int _setjmp(jmp_buf);
void _longjmp(jmp_buf, int);
int sigsetjmp(sigjmp_buf, int);
void siglongjmp(sigjmp_buf, int);



void longjmperror(void);

}
# 38 "/usr/include/machine/setjmp.h" 2 3 4
# 27 "/usr/include/setjmp.h" 2 3 4
# 21 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "/usr/include/signal.h" 1 3 4
# 71 "/usr/include/signal.h" 3 4
extern const char *const sys_signame[32];
extern const char *const sys_siglist[32];


extern "C" {
int raise(int);
}


extern "C" {
void (*bsd_signal(int, void (*)(int)))(int);
int kill(pid_t, int) __asm("_" "kill" );
int killpg(pid_t, int) __asm("_" "killpg" );
int pthread_kill(pthread_t, int);
int pthread_sigmask(int, const sigset_t *, sigset_t *) __asm("_" "pthread_sigmask" );
int sigaction(int, const struct sigaction * ,
     struct sigaction * );
int sigaddset(sigset_t *, int);
int sigaltstack(const stack_t * , stack_t * ) __asm("_" "sigaltstack" );
int sigdelset(sigset_t *, int);
int sigemptyset(sigset_t *);
int sigfillset(sigset_t *);
int sighold(int);
int sigignore(int);
int siginterrupt(int, int);
int sigismember(const sigset_t *, int);
int sigpause(int) __asm("_" "sigpause" );
int sigpending(sigset_t *);
int sigprocmask(int, const sigset_t * , sigset_t * );
int sigrelse(int);
void (*sigset(int, void (*)(int)))(int);
int sigsuspend(const sigset_t *) __asm("_" "sigsuspend" );
int sigwait(const sigset_t * , int * ) __asm("_" "sigwait" );

void psignal(unsigned int, const char *);
int sigblock(int);
int sigsetmask(int);
int sigvec(int, struct sigvec *, struct sigvec *);

}




static inline int
__sigbits(int __signo)
{
    return __signo > 32 ? 0 : (1 << (__signo - 1));
}
# 22 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/stddef.h" 1 3 4
# 152 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/stddef.h" 3 4
typedef long int ptrdiff_t;
# 23 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "/usr/include/stdio.h" 1 3 4
# 87 "/usr/include/stdio.h" 3 4
typedef __darwin_off_t fpos_t;
# 98 "/usr/include/stdio.h" 3 4
struct __sbuf {
 unsigned char *_base;
 int _size;
};


struct __sFILEX;
# 132 "/usr/include/stdio.h" 3 4
typedef struct __sFILE {
 unsigned char *_p;
 int _r;
 int _w;
 short _flags;
 short _file;
 struct __sbuf _bf;
 int _lbfsize;


 void *_cookie;
 int (*_close)(void *);
 int (*_read) (void *, char *, int);
 fpos_t (*_seek) (void *, fpos_t, int);
 int (*_write)(void *, const char *, int);


 struct __sbuf _ub;
 struct __sFILEX *_extra;
 int _ur;


 unsigned char _ubuf[3];
 unsigned char _nbuf[1];


 struct __sbuf _lb;


 int _blksize;
 fpos_t _offset;
} FILE;

extern "C" {

extern FILE *__stdinp;
extern FILE *__stdoutp;
extern FILE *__stderrp;



}
# 248 "/usr/include/stdio.h" 3 4
extern "C" {
void clearerr(FILE *);
int fclose(FILE *);
int feof(FILE *);
int ferror(FILE *);
int fflush(FILE *);
int fgetc(FILE *);
int fgetpos(FILE * , fpos_t *);
char *fgets(char * , int, FILE *);



FILE *fopen(const char * , const char * ) __asm("_" "fopen" );

int fprintf(FILE * , const char * , ...) ;
int fputc(int, FILE *);
int fputs(const char * , FILE * ) __asm("_" "fputs" );
size_t fread(void * , size_t, size_t, FILE * );
FILE *freopen(const char * , const char * ,
     FILE * ) __asm("_" "freopen" );
int fscanf(FILE * , const char * , ...) ;
int fseek(FILE *, long, int);
int fsetpos(FILE *, const fpos_t *);
long ftell(FILE *);
size_t fwrite(const void * , size_t, size_t, FILE * ) __asm("_" "fwrite" );
int getc(FILE *);
int getchar(void);
char *gets(char *);

extern const int sys_nerr;
extern const char *const sys_errlist[];

void perror(const char *);
int printf(const char * , ...) ;
int putc(int, FILE *);
int putchar(int);
int puts(const char *);
int remove(const char *);
int rename (const char *, const char *);
void rewind(FILE *);
int scanf(const char * , ...) ;
void setbuf(FILE * , char * );
int setvbuf(FILE * , char * , int, size_t);
int sprintf(char * , const char * , ...) ;
int sscanf(const char * , const char * , ...) ;
FILE *tmpfile(void);
char *tmpnam(char *);
int ungetc(int, FILE *);
int vfprintf(FILE * , const char * , va_list) ;
int vprintf(const char * , va_list) ;
int vsprintf(char * , const char * , va_list) ;

int asprintf(char **, const char *, ...) ;
int vasprintf(char **, const char *, va_list) ;

}







extern "C" {
char *ctermid(char *);

char *ctermid_r(char *);




FILE *fdopen(int, const char *) __asm("_" "fdopen" );


char *fgetln(FILE *, size_t *);

int fileno(FILE *);
void flockfile(FILE *);

const char
 *fmtcheck(const char *, const char *);
int fpurge(FILE *);

int fseeko(FILE *, off_t, int);
off_t ftello(FILE *);
int ftrylockfile(FILE *);
void funlockfile(FILE *);
int getc_unlocked(FILE *);
int getchar_unlocked(void);

int getw(FILE *);

int pclose(FILE *);



FILE *popen(const char *, const char *) __asm("_" "popen" );

int putc_unlocked(int, FILE *);
int putchar_unlocked(int);

int putw(int, FILE *);
void setbuffer(FILE *, char *, int);
int setlinebuf(FILE *);

int snprintf(char * , size_t, const char * , ...) ;
char *tempnam(const char *, const char *) __asm("_" "tempnam" );
int vfscanf(FILE * , const char * , va_list) ;
int vscanf(const char * , va_list) ;
int vsnprintf(char * , size_t, const char * , va_list) ;
int vsscanf(const char * , const char * , va_list) ;

FILE *zopen(const char *, const char *, int);

}





extern "C" {
FILE *funopen(const void *,
  int (*)(void *, char *, int),
  int (*)(void *, const char *, int),
  fpos_t (*)(void *, fpos_t, int),
  int (*)(void *));
}
# 383 "/usr/include/stdio.h" 3 4
extern "C" {
int __srget(FILE *);
int __svfscanf(FILE *, const char *, va_list) ;
int __swbuf(int, FILE *);
}







static inline int __sputc(int _c, FILE *_p) {
 if (--_p->_w >= 0 || (_p->_w >= _p->_lbfsize && (char)_c != '\n'))
  return (*_p->_p++ = _c);
 else
  return (__swbuf(_c, _p));
}
# 24 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3

# 1 "/usr/include/string.h" 1 3 4
# 80 "/usr/include/string.h" 3 4
extern "C" {
void *memchr(const void *, int, size_t);
int memcmp(const void *, const void *, size_t);
void *memcpy(void *, const void *, size_t);
void *memmove(void *, const void *, size_t);
void *memset(void *, int, size_t);

char *stpcpy(char *, const char *);
char *strcasestr(const char *, const char *);

char *strcat(char *, const char *);
char *strchr(const char *, int);
int strcmp(const char *, const char *);
int strcoll(const char *, const char *);
char *strcpy(char *, const char *);
size_t strcspn(const char *, const char *);
char *strerror(int) __asm("_" "strerror" );
int strerror_r(int, char *, size_t);
size_t strlen(const char *);
char *strncat(char *, const char *, size_t);
int strncmp(const char *, const char *, size_t);
char *strncpy(char *, const char *, size_t);

char *strnstr(const char *, const char *, size_t);

char *strpbrk(const char *, const char *);
char *strrchr(const char *, int);
size_t strspn(const char *, const char *);
char *strstr(const char *, const char *);
char *strtok(char *, const char *);
size_t strxfrm(char *, const char *, size_t);



void *memccpy(void *, const void *, int, size_t);
char *strtok_r(char *, const char *, char **);
char *strdup(const char *);

int bcmp(const void *, const void *, size_t);
void bcopy(const void *, void *, size_t);
void bzero(void *, size_t);
int ffs(int);
int ffsl(long);
int fls(int);
int flsl(long);
char *index(const char *, int);
void memset_pattern4(void *, const void *, size_t);
void memset_pattern8(void *, const void *, size_t);
void memset_pattern16(void *, const void *, size_t);
char *rindex(const char *, int);
int strcasecmp(const char *, const char *);
size_t strlcat(char *, const char *, size_t);
size_t strlcpy(char *, const char *, size_t);
void strmode(int, char *);
int strncasecmp(const char *, const char *, size_t);
char *strsep(char **, const char *);
char *strsignal(int sig);
void swab(const void * , void * , ssize_t);


}
# 26 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "/usr/include/time.h" 1 3 4
# 69 "/usr/include/time.h" 3 4
# 1 "/usr/include/_structs.h" 1 3 4
# 24 "/usr/include/_structs.h" 3 4
# 1 "/usr/include/sys/_structs.h" 1 3 4
# 88 "/usr/include/sys/_structs.h" 3 4
struct timespec
{
 __darwin_time_t tv_sec;
 long tv_nsec;
};
# 25 "/usr/include/_structs.h" 2 3 4
# 70 "/usr/include/time.h" 2 3 4
# 90 "/usr/include/time.h" 3 4
struct tm {
 int tm_sec;
 int tm_min;
 int tm_hour;
 int tm_mday;
 int tm_mon;
 int tm_year;
 int tm_wday;
 int tm_yday;
 int tm_isdst;
 long tm_gmtoff;
 char *tm_zone;
};
# 113 "/usr/include/time.h" 3 4
extern char *tzname[];


extern int getdate_err;

extern long timezone __asm("_" "timezone" );

extern int daylight;

extern "C" {
char *asctime(const struct tm *);
clock_t clock(void) __asm("_" "clock" );
char *ctime(const time_t *);
double difftime(time_t, time_t);
struct tm *getdate(const char *);
struct tm *gmtime(const time_t *);
struct tm *localtime(const time_t *);
time_t mktime(struct tm *) __asm("_" "mktime" );
size_t strftime(char * , size_t, const char * , const struct tm * ) __asm("_" "strftime" );
char *strptime(const char * , const char * , struct tm * ) __asm("_" "strptime" );
time_t time(time_t *);


void tzset(void);



char *asctime_r(const struct tm * , char * );
char *ctime_r(const time_t *, char *);
struct tm *gmtime_r(const time_t * , struct tm * );
struct tm *localtime_r(const time_t * , struct tm * );


time_t posix2time(time_t);



void tzsetwall(void);
time_t time2posix(time_t);
time_t timelocal(struct tm * const);
time_t timegm(struct tm * const);



int nanosleep(const struct timespec *, struct timespec *) __asm("_" "nanosleep" );

}
# 27 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 38 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 3
# 1 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBase.h" 1 3







# 1 "/usr/include/TargetConditionals.h" 1 3 4
# 9 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBase.h" 2 3
# 38 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBase.h" 3
# 1 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/stdint.h" 1 3 4
# 40 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/stdint.h" 3 4
typedef unsigned char uint8_t;




typedef unsigned short uint16_t;




typedef unsigned int uint32_t;




typedef unsigned long long uint64_t;



typedef int8_t int_least8_t;
typedef int16_t int_least16_t;
typedef int32_t int_least32_t;
typedef int64_t int_least64_t;
typedef uint8_t uint_least8_t;
typedef uint16_t uint_least16_t;
typedef uint32_t uint_least32_t;
typedef uint64_t uint_least64_t;



typedef int8_t int_fast8_t;
typedef int16_t int_fast16_t;
typedef int32_t int_fast32_t;
typedef int64_t int_fast64_t;
typedef uint8_t uint_fast8_t;
typedef uint16_t uint_fast16_t;
typedef uint32_t uint_fast32_t;
typedef uint64_t uint_fast64_t;
# 97 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/stdint.h" 3 4
typedef long int intmax_t;
# 106 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/stdint.h" 3 4
typedef long unsigned int uintmax_t;
# 39 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBase.h" 2 3
# 1 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/stdbool.h" 1 3 4
# 40 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBase.h" 2 3
# 48 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBase.h" 3
# 1 "/System/Library/Frameworks/CoreServices.framework/Headers/../Frameworks/CarbonCore.framework/Headers/MacTypes.h" 1 3
# 20 "/System/Library/Frameworks/CoreServices.framework/Headers/../Frameworks/CarbonCore.framework/Headers/MacTypes.h" 3
# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/ConditionalMacros.h" 1 3
# 21 "/System/Library/Frameworks/CoreServices.framework/Headers/../Frameworks/CarbonCore.framework/Headers/MacTypes.h" 2 3
# 34 "/System/Library/Frameworks/CoreServices.framework/Headers/../Frameworks/CarbonCore.framework/Headers/MacTypes.h" 3
extern "C" {


#pragma pack(push, 2)
# 85 "/System/Library/Frameworks/CoreServices.framework/Headers/../Frameworks/CarbonCore.framework/Headers/MacTypes.h" 3
typedef unsigned char UInt8;
typedef signed char SInt8;
typedef unsigned short UInt16;
typedef signed short SInt16;


typedef unsigned int UInt32;
typedef signed int SInt32;
# 112 "/System/Library/Frameworks/CoreServices.framework/Headers/../Frameworks/CarbonCore.framework/Headers/MacTypes.h" 3
struct wide {
  UInt32 lo;
  SInt32 hi;
};
typedef struct wide wide;
struct UnsignedWide {
  UInt32 lo;
  UInt32 hi;
};
typedef struct UnsignedWide UnsignedWide;
# 143 "/System/Library/Frameworks/CoreServices.framework/Headers/../Frameworks/CarbonCore.framework/Headers/MacTypes.h" 3
      typedef signed long long SInt64;
        typedef unsigned long long UInt64;
# 163 "/System/Library/Frameworks/CoreServices.framework/Headers/../Frameworks/CarbonCore.framework/Headers/MacTypes.h" 3
typedef SInt32 Fixed;
typedef Fixed * FixedPtr;
typedef SInt32 Fract;
typedef Fract * FractPtr;
typedef UInt32 UnsignedFixed;
typedef UnsignedFixed * UnsignedFixedPtr;
typedef short ShortFixed;
typedef ShortFixed * ShortFixedPtr;
# 190 "/System/Library/Frameworks/CoreServices.framework/Headers/../Frameworks/CarbonCore.framework/Headers/MacTypes.h" 3
typedef float Float32;
typedef double Float64;
struct Float80 {
    SInt16 exp;
    UInt16 man[4];
};
typedef struct Float80 Float80;

struct Float96 {
    SInt16 exp[2];
    UInt16 man[4];
};
typedef struct Float96 Float96;
struct Float32Point {
    Float32 x;
    Float32 y;
};
typedef struct Float32Point Float32Point;
# 218 "/System/Library/Frameworks/CoreServices.framework/Headers/../Frameworks/CarbonCore.framework/Headers/MacTypes.h" 3
typedef char * Ptr;
typedef Ptr * Handle;
typedef long Size;
# 248 "/System/Library/Frameworks/CoreServices.framework/Headers/../Frameworks/CarbonCore.framework/Headers/MacTypes.h" 3
typedef SInt16 OSErr;
typedef SInt32 OSStatus;
typedef void * LogicalAddress;
typedef const void * ConstLogicalAddress;
typedef void * PhysicalAddress;
typedef UInt8 * BytePtr;
typedef unsigned long ByteCount;
typedef unsigned long ByteOffset;
typedef SInt32 Duration;
typedef UnsignedWide AbsoluteTime;
typedef UInt32 OptionBits;
typedef unsigned long ItemCount;
typedef UInt32 PBVersion;
typedef SInt16 ScriptCode;
typedef SInt16 LangCode;
typedef SInt16 RegionCode;
typedef UInt32 FourCharCode;
typedef FourCharCode OSType;
typedef FourCharCode ResType;
typedef OSType * OSTypePtr;
typedef ResType * ResTypePtr;
# 279 "/System/Library/Frameworks/CoreServices.framework/Headers/../Frameworks/CarbonCore.framework/Headers/MacTypes.h" 3
typedef unsigned char Boolean;
# 292 "/System/Library/Frameworks/CoreServices.framework/Headers/../Frameworks/CarbonCore.framework/Headers/MacTypes.h" 3
typedef long ( * ProcPtr)();
typedef void ( * Register68kProcPtr)();




typedef ProcPtr UniversalProcPtr;


typedef ProcPtr * ProcHandle;
typedef UniversalProcPtr * UniversalProcHandle;
# 317 "/System/Library/Frameworks/CoreServices.framework/Headers/../Frameworks/CarbonCore.framework/Headers/MacTypes.h" 3
typedef void * PRefCon;

typedef void * URefCon;
typedef void * SRefCon;
# 347 "/System/Library/Frameworks/CoreServices.framework/Headers/../Frameworks/CarbonCore.framework/Headers/MacTypes.h" 3
enum {
  noErr = 0
};

enum {
  kNilOptions = 0
};


enum {
  kVariableLengthArray = 1
};

enum {
  kUnknownType = 0x3F3F3F3F
};
# 416 "/System/Library/Frameworks/CoreServices.framework/Headers/../Frameworks/CarbonCore.framework/Headers/MacTypes.h" 3
typedef UInt32 UnicodeScalarValue;
typedef UInt32 UTF32Char;
typedef UInt16 UniChar;
typedef UInt16 UTF16Char;
typedef UInt8 UTF8Char;
typedef UniChar * UniCharPtr;
typedef unsigned long UniCharCount;
typedef UniCharCount * UniCharCountPtr;
typedef unsigned char Str255[256];
typedef unsigned char Str63[64];
typedef unsigned char Str32[33];
typedef unsigned char Str31[32];
typedef unsigned char Str27[28];
typedef unsigned char Str15[16];
# 438 "/System/Library/Frameworks/CoreServices.framework/Headers/../Frameworks/CarbonCore.framework/Headers/MacTypes.h" 3
typedef unsigned char Str32Field[34];
# 448 "/System/Library/Frameworks/CoreServices.framework/Headers/../Frameworks/CarbonCore.framework/Headers/MacTypes.h" 3
typedef Str63 StrFileName;
typedef unsigned char * StringPtr;
typedef StringPtr * StringHandle;
typedef const unsigned char * ConstStringPtr;
typedef const unsigned char * ConstStr255Param;
typedef const unsigned char * ConstStr63Param;
typedef const unsigned char * ConstStr32Param;
typedef const unsigned char * ConstStr31Param;
typedef const unsigned char * ConstStr27Param;
typedef const unsigned char * ConstStr15Param;
typedef ConstStr63Param ConstStrFileNameParam;

inline unsigned char StrLength(ConstStr255Param string) { return (*string); }
# 475 "/System/Library/Frameworks/CoreServices.framework/Headers/../Frameworks/CarbonCore.framework/Headers/MacTypes.h" 3
struct ProcessSerialNumber {
  UInt32 highLongOfPSN;
  UInt32 lowLongOfPSN;
};
typedef struct ProcessSerialNumber ProcessSerialNumber;
typedef ProcessSerialNumber * ProcessSerialNumberPtr;
# 497 "/System/Library/Frameworks/CoreServices.framework/Headers/../Frameworks/CarbonCore.framework/Headers/MacTypes.h" 3
struct Point {
  short v;
  short h;
};
typedef struct Point Point;
typedef Point * PointPtr;
struct Rect {
  short top;
  short left;
  short bottom;
  short right;
};
typedef struct Rect Rect;
typedef Rect * RectPtr;
struct FixedPoint {
  Fixed x;
  Fixed y;
};
typedef struct FixedPoint FixedPoint;
struct FixedRect {
  Fixed left;
  Fixed top;
  Fixed right;
  Fixed bottom;
};
typedef struct FixedRect FixedRect;

typedef short CharParameter;
enum {
  normal = 0,
  bold = 1,
  italic = 2,
  underline = 4,
  outline = 8,
  shadow = 0x10,
  condense = 0x20,
  extend = 0x40
};

typedef unsigned char Style;
typedef short StyleParameter;
typedef Style StyleField;
# 553 "/System/Library/Frameworks/CoreServices.framework/Headers/../Frameworks/CarbonCore.framework/Headers/MacTypes.h" 3
typedef SInt32 TimeValue;
typedef SInt32 TimeScale;
typedef wide CompTimeValue;
typedef SInt64 TimeValue64;
typedef struct TimeBaseRecord* TimeBase;
struct TimeRecord {
  CompTimeValue value;
  TimeScale scale;
  TimeBase base;
};
typedef struct TimeRecord TimeRecord;
# 605 "/System/Library/Frameworks/CoreServices.framework/Headers/../Frameworks/CarbonCore.framework/Headers/MacTypes.h" 3
struct NumVersion {

  UInt8 nonRelRev;
  UInt8 stage;
  UInt8 minorAndBugRev;
  UInt8 majorRev;
};
typedef struct NumVersion NumVersion;


enum {

  developStage = 0x20,
  alphaStage = 0x40,
  betaStage = 0x60,
  finalStage = 0x80
};

union NumVersionVariant {

  NumVersion parts;
  UInt32 whole;
};
typedef union NumVersionVariant NumVersionVariant;
typedef NumVersionVariant * NumVersionVariantPtr;
typedef NumVersionVariantPtr * NumVersionVariantHandle;
struct VersRec {

  NumVersion numericVersion;
  short countryCode;
  Str255 shortVersion;
  Str255 reserved;
};
typedef struct VersRec VersRec;
typedef VersRec * VersRecPtr;
typedef VersRecPtr * VersRecHndl;





typedef UInt8 Byte;
typedef SInt8 SignedByte;
typedef wide * WidePtr;
typedef UnsignedWide * UnsignedWidePtr;
typedef Float80 extended80;
typedef Float96 extended96;
typedef SInt8 VHSelect;
# 666 "/System/Library/Frameworks/CoreServices.framework/Headers/../Frameworks/CarbonCore.framework/Headers/MacTypes.h" 3
extern void
Debugger(void) ;
# 678 "/System/Library/Frameworks/CoreServices.framework/Headers/../Frameworks/CarbonCore.framework/Headers/MacTypes.h" 3
extern void
DebugStr(ConstStr255Param debuggerMsg) ;
# 725 "/System/Library/Frameworks/CoreServices.framework/Headers/../Frameworks/CarbonCore.framework/Headers/MacTypes.h" 3
extern void
SysBreak(void) ;
# 737 "/System/Library/Frameworks/CoreServices.framework/Headers/../Frameworks/CarbonCore.framework/Headers/MacTypes.h" 3
extern void
SysBreakStr(ConstStr255Param debuggerMsg) ;
# 749 "/System/Library/Frameworks/CoreServices.framework/Headers/../Frameworks/CarbonCore.framework/Headers/MacTypes.h" 3
extern void
SysBreakFunc(ConstStr255Param debuggerMsg) ;
# 760 "/System/Library/Frameworks/CoreServices.framework/Headers/../Frameworks/CarbonCore.framework/Headers/MacTypes.h" 3
#pragma pack(pop)


}
# 49 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBase.h" 2 3
# 117 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBase.h" 3
extern "C" {
# 159 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBase.h" 3
extern double kCFCoreFoundationVersionNumber;
# 228 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBase.h" 3
typedef unsigned long CFTypeID;
typedef unsigned long CFOptionFlags;
typedef unsigned long CFHashCode;
typedef signed long CFIndex;


typedef const void * CFTypeRef;

typedef const struct __CFString * CFStringRef;
typedef struct __CFString * CFMutableStringRef;






typedef CFTypeRef CFPropertyListRef;


enum {
    kCFCompareLessThan = -1,
    kCFCompareEqualTo = 0,
    kCFCompareGreaterThan = 1
};
typedef CFIndex CFComparisonResult;


typedef CFComparisonResult (*CFComparatorFunction)(const void *val1, const void *val2, void *context);



enum {
    kCFNotFound = -1
};



typedef struct {
    CFIndex location;
    CFIndex length;
} CFRange;


static __inline__ __attribute__((always_inline)) CFRange CFRangeMake(CFIndex loc, CFIndex len) {
    CFRange range;
    range.location = loc;
    range.length = len;
    return range;
}





extern
CFRange __CFRangeMake(CFIndex loc, CFIndex len);





typedef const struct __CFNull * CFNullRef;

extern
CFTypeID CFNullGetTypeID(void);

extern
const CFNullRef kCFNull;
# 309 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBase.h" 3
typedef const struct __CFAllocator * CFAllocatorRef;


extern
const CFAllocatorRef kCFAllocatorDefault;


extern
const CFAllocatorRef kCFAllocatorSystemDefault;







extern
const CFAllocatorRef kCFAllocatorMalloc;





extern
const CFAllocatorRef kCFAllocatorMallocZone ;





extern
const CFAllocatorRef kCFAllocatorNull;





extern
const CFAllocatorRef kCFAllocatorUseContext;

typedef const void * (*CFAllocatorRetainCallBack)(const void *info);
typedef void (*CFAllocatorReleaseCallBack)(const void *info);
typedef CFStringRef (*CFAllocatorCopyDescriptionCallBack)(const void *info);
typedef void * (*CFAllocatorAllocateCallBack)(CFIndex allocSize, CFOptionFlags hint, void *info);
typedef void * (*CFAllocatorReallocateCallBack)(void *ptr, CFIndex newsize, CFOptionFlags hint, void *info);
typedef void (*CFAllocatorDeallocateCallBack)(void *ptr, void *info);
typedef CFIndex (*CFAllocatorPreferredSizeCallBack)(CFIndex size, CFOptionFlags hint, void *info);
typedef struct {
    CFIndex version;
    void * info;
    CFAllocatorRetainCallBack retain;
    CFAllocatorReleaseCallBack release;
    CFAllocatorCopyDescriptionCallBack copyDescription;
    CFAllocatorAllocateCallBack allocate;
    CFAllocatorReallocateCallBack reallocate;
    CFAllocatorDeallocateCallBack deallocate;
    CFAllocatorPreferredSizeCallBack preferredSize;
} CFAllocatorContext;

extern
CFTypeID CFAllocatorGetTypeID(void);
# 394 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBase.h" 3
extern
void CFAllocatorSetDefault(CFAllocatorRef allocator);

extern
CFAllocatorRef CFAllocatorGetDefault(void);

extern
CFAllocatorRef CFAllocatorCreate(CFAllocatorRef allocator, CFAllocatorContext *context);

extern
void *CFAllocatorAllocate(CFAllocatorRef allocator, CFIndex size, CFOptionFlags hint);

extern
void *CFAllocatorReallocate(CFAllocatorRef allocator, void *ptr, CFIndex newsize, CFOptionFlags hint);

extern
void CFAllocatorDeallocate(CFAllocatorRef allocator, void *ptr);

extern
CFIndex CFAllocatorGetPreferredSizeForSize(CFAllocatorRef allocator, CFIndex size, CFOptionFlags hint);

extern
void CFAllocatorGetContext(CFAllocatorRef allocator, CFAllocatorContext *context);




extern
CFTypeID CFGetTypeID(CFTypeRef cf);

extern
CFStringRef CFCopyTypeIDDescription(CFTypeID type_id);

extern
CFTypeRef CFRetain(CFTypeRef cf);

extern
void CFRelease(CFTypeRef cf);

extern
CFIndex CFGetRetainCount(CFTypeRef cf);

extern
CFTypeRef CFMakeCollectable(CFTypeRef cf) ;

extern
Boolean CFEqual(CFTypeRef cf1, CFTypeRef cf2);

extern
CFHashCode CFHash(CFTypeRef cf);

extern
CFStringRef CFCopyDescription(CFTypeRef cf);

extern
CFAllocatorRef CFGetAllocator(CFTypeRef cf);

}
# 39 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 1 3
# 49 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
extern "C" {
# 73 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
typedef const void * (*CFArrayRetainCallBack)(CFAllocatorRef allocator, const void *value);
typedef void (*CFArrayReleaseCallBack)(CFAllocatorRef allocator, const void *value);
typedef CFStringRef (*CFArrayCopyDescriptionCallBack)(const void *value);
typedef Boolean (*CFArrayEqualCallBack)(const void *value1, const void *value2);
typedef struct {
    CFIndex version;
    CFArrayRetainCallBack retain;
    CFArrayReleaseCallBack release;
    CFArrayCopyDescriptionCallBack copyDescription;
    CFArrayEqualCallBack equal;
} CFArrayCallBacks;






extern
const CFArrayCallBacks kCFTypeArrayCallBacks;
# 101 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
typedef void (*CFArrayApplierFunction)(const void *value, void *context);





typedef const struct __CFArray * CFArrayRef;





typedef struct __CFArray * CFMutableArrayRef;





extern
CFTypeID CFArrayGetTypeID(void);
# 172 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
extern
CFArrayRef CFArrayCreate(CFAllocatorRef allocator, const void **values, CFIndex numValues, const CFArrayCallBacks *callBacks);
# 193 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
extern
CFArrayRef CFArrayCreateCopy(CFAllocatorRef allocator, CFArrayRef theArray);
# 237 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
extern
CFMutableArrayRef CFArrayCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFArrayCallBacks *callBacks);
# 267 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
extern
CFMutableArrayRef CFArrayCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFArrayRef theArray);
# 277 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
extern
CFIndex CFArrayGetCount(CFArrayRef theArray);
# 300 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
extern
CFIndex CFArrayGetCountOfValue(CFArrayRef theArray, CFRange range, const void *value);
# 323 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
extern
Boolean CFArrayContainsValue(CFArrayRef theArray, CFRange range, const void *value);
# 337 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
extern
const void *CFArrayGetValueAtIndex(CFArrayRef theArray, CFIndex idx);
# 358 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
extern
void CFArrayGetValues(CFArrayRef theArray, CFRange range, const void **values);
# 385 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
extern
void CFArrayApplyFunction(CFArrayRef theArray, CFRange range, CFArrayApplierFunction applier, void *context);
# 410 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
extern
CFIndex CFArrayGetFirstIndexOfValue(CFArrayRef theArray, CFRange range, const void *value);
# 435 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
extern
CFIndex CFArrayGetLastIndexOfValue(CFArrayRef theArray, CFRange range, const void *value);
# 474 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
extern
CFIndex CFArrayBSearchValues(CFArrayRef theArray, CFRange range, const void *value, CFComparatorFunction comparator, void *context);
# 490 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
extern
void CFArrayAppendValue(CFMutableArrayRef theArray, const void *value);
# 511 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
extern
void CFArrayInsertValueAtIndex(CFMutableArrayRef theArray, CFIndex idx, const void *value);
# 532 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
extern
void CFArraySetValueAtIndex(CFMutableArrayRef theArray, CFIndex idx, const void *value);
# 546 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
extern
void CFArrayRemoveValueAtIndex(CFMutableArrayRef theArray, CFIndex idx);
# 556 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
extern
void CFArrayRemoveAllValues(CFMutableArrayRef theArray);
# 590 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
extern
void CFArrayReplaceValues(CFMutableArrayRef theArray, CFRange range, const void **newValues, CFIndex newCount);
# 608 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
extern
void CFArrayExchangeValuesAtIndices(CFMutableArrayRef theArray, CFIndex idx1, CFIndex idx2);
# 638 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
extern
void CFArraySortValues(CFMutableArrayRef theArray, CFRange range, CFComparatorFunction comparator, void *context);
# 665 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h" 3
extern
void CFArrayAppendArray(CFMutableArrayRef theArray, CFArrayRef otherArray, CFRange otherRange);

}
# 40 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBag.h" 1 3
# 10 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBag.h" 3
extern "C" {

typedef const void * (*CFBagRetainCallBack)(CFAllocatorRef allocator, const void *value);
typedef void (*CFBagReleaseCallBack)(CFAllocatorRef allocator, const void *value);
typedef CFStringRef (*CFBagCopyDescriptionCallBack)(const void *value);
typedef Boolean (*CFBagEqualCallBack)(const void *value1, const void *value2);
typedef CFHashCode (*CFBagHashCallBack)(const void *value);
typedef struct {
    CFIndex version;
    CFBagRetainCallBack retain;
    CFBagReleaseCallBack release;
    CFBagCopyDescriptionCallBack copyDescription;
    CFBagEqualCallBack equal;
    CFBagHashCallBack hash;
} CFBagCallBacks;

extern
const CFBagCallBacks kCFTypeBagCallBacks;
extern
const CFBagCallBacks kCFCopyStringBagCallBacks;

typedef void (*CFBagApplierFunction)(const void *value, void *context);

typedef const struct __CFBag * CFBagRef;
typedef struct __CFBag * CFMutableBagRef;

extern
CFTypeID CFBagGetTypeID(void);

extern
CFBagRef CFBagCreate(CFAllocatorRef allocator, const void **values, CFIndex numValues, const CFBagCallBacks *callBacks);

extern
CFBagRef CFBagCreateCopy(CFAllocatorRef allocator, CFBagRef theBag);

extern
CFMutableBagRef CFBagCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFBagCallBacks *callBacks);

extern
CFMutableBagRef CFBagCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFBagRef theBag);

extern
CFIndex CFBagGetCount(CFBagRef theBag);

extern
CFIndex CFBagGetCountOfValue(CFBagRef theBag, const void *value);

extern
Boolean CFBagContainsValue(CFBagRef theBag, const void *value);

extern
const void *CFBagGetValue(CFBagRef theBag, const void *value);

extern
Boolean CFBagGetValueIfPresent(CFBagRef theBag, const void *candidate, const void **value);

extern
void CFBagGetValues(CFBagRef theBag, const void **values);

extern
void CFBagApplyFunction(CFBagRef theBag, CFBagApplierFunction applier, void *context);

extern
void CFBagAddValue(CFMutableBagRef theBag, const void *value);

extern
void CFBagReplaceValue(CFMutableBagRef theBag, const void *value);

extern
void CFBagSetValue(CFMutableBagRef theBag, const void *value);

extern
void CFBagRemoveValue(CFMutableBagRef theBag, const void *value);

extern
void CFBagRemoveAllValues(CFMutableBagRef theBag);

}
# 41 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBinaryHeap.h" 1 3
# 16 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBinaryHeap.h" 3
extern "C" {

typedef struct {
    CFIndex version;
    void * info;
    const void *(*retain)(const void *info);
    void (*release)(const void *info);
    CFStringRef (*copyDescription)(const void *info);
} CFBinaryHeapCompareContext;
# 49 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBinaryHeap.h" 3
typedef struct {
    CFIndex version;
    const void *(*retain)(CFAllocatorRef allocator, const void *ptr);
    void (*release)(CFAllocatorRef allocator, const void *ptr);
    CFStringRef (*copyDescription)(const void *ptr);
    CFComparisonResult (*compare)(const void *ptr1, const void *ptr2, void *context);
} CFBinaryHeapCallBacks;







extern const CFBinaryHeapCallBacks kCFStringBinaryHeapCallBacks;
# 73 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBinaryHeap.h" 3
typedef void (*CFBinaryHeapApplierFunction)(const void *val, void *context);





typedef struct __CFBinaryHeap * CFBinaryHeapRef;





extern CFTypeID CFBinaryHeapGetTypeID(void);
# 129 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBinaryHeap.h" 3
extern CFBinaryHeapRef CFBinaryHeapCreate(CFAllocatorRef allocator, CFIndex capacity, const CFBinaryHeapCallBacks *callBacks, const CFBinaryHeapCompareContext *compareContext);
# 158 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBinaryHeap.h" 3
extern CFBinaryHeapRef CFBinaryHeapCreateCopy(CFAllocatorRef allocator, CFIndex capacity, CFBinaryHeapRef heap);
# 167 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBinaryHeap.h" 3
extern CFIndex CFBinaryHeapGetCount(CFBinaryHeapRef heap);
# 182 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBinaryHeap.h" 3
extern CFIndex CFBinaryHeapGetCountOfValue(CFBinaryHeapRef heap, const void *value);
# 197 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBinaryHeap.h" 3
extern Boolean CFBinaryHeapContainsValue(CFBinaryHeapRef heap, const void *value);
# 208 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBinaryHeap.h" 3
extern const void * CFBinaryHeapGetMinimum(CFBinaryHeapRef heap);
# 222 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBinaryHeap.h" 3
extern Boolean CFBinaryHeapGetMinimumIfPresent(CFBinaryHeapRef heap, const void **value);
# 234 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBinaryHeap.h" 3
extern void CFBinaryHeapGetValues(CFBinaryHeapRef heap, const void **values);
# 253 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBinaryHeap.h" 3
extern void CFBinaryHeapApplyFunction(CFBinaryHeapRef heap, CFBinaryHeapApplierFunction applier, void *context);
# 265 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBinaryHeap.h" 3
extern void CFBinaryHeapAddValue(CFBinaryHeapRef heap, const void *value);







extern void CFBinaryHeapRemoveMinimumValue(CFBinaryHeapRef heap);
# 282 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBinaryHeap.h" 3
extern void CFBinaryHeapRemoveAllValues(CFBinaryHeapRef heap);

}
# 42 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBitVector.h" 1 3
# 10 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBitVector.h" 3
extern "C" {

typedef UInt32 CFBit;

typedef const struct __CFBitVector * CFBitVectorRef;
typedef struct __CFBitVector * CFMutableBitVectorRef;

extern CFTypeID CFBitVectorGetTypeID(void);

extern CFBitVectorRef CFBitVectorCreate(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex numBits);
extern CFBitVectorRef CFBitVectorCreateCopy(CFAllocatorRef allocator, CFBitVectorRef bv);
extern CFMutableBitVectorRef CFBitVectorCreateMutable(CFAllocatorRef allocator, CFIndex capacity);
extern CFMutableBitVectorRef CFBitVectorCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFBitVectorRef bv);

extern CFIndex CFBitVectorGetCount(CFBitVectorRef bv);
extern CFIndex CFBitVectorGetCountOfBit(CFBitVectorRef bv, CFRange range, CFBit value);
extern Boolean CFBitVectorContainsBit(CFBitVectorRef bv, CFRange range, CFBit value);
extern CFBit CFBitVectorGetBitAtIndex(CFBitVectorRef bv, CFIndex idx);
extern void CFBitVectorGetBits(CFBitVectorRef bv, CFRange range, UInt8 *bytes);
extern CFIndex CFBitVectorGetFirstIndexOfBit(CFBitVectorRef bv, CFRange range, CFBit value);
extern CFIndex CFBitVectorGetLastIndexOfBit(CFBitVectorRef bv, CFRange range, CFBit value);

extern void CFBitVectorSetCount(CFMutableBitVectorRef bv, CFIndex count);
extern void CFBitVectorFlipBitAtIndex(CFMutableBitVectorRef bv, CFIndex idx);
extern void CFBitVectorFlipBits(CFMutableBitVectorRef bv, CFRange range);
extern void CFBitVectorSetBitAtIndex(CFMutableBitVectorRef bv, CFIndex idx, CFBit value);
extern void CFBitVectorSetBits(CFMutableBitVectorRef bv, CFRange range, CFBit value);
extern void CFBitVectorSetAllBits(CFMutableBitVectorRef bv, CFBit value);

}
# 43 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBundle.h" 1 3
# 10 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBundle.h" 3
# 1 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDictionary.h" 1 3
# 64 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDictionary.h" 3
extern "C" {
# 91 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDictionary.h" 3
typedef const void * (*CFDictionaryRetainCallBack)(CFAllocatorRef allocator, const void *value);
typedef void (*CFDictionaryReleaseCallBack)(CFAllocatorRef allocator, const void *value);
typedef CFStringRef (*CFDictionaryCopyDescriptionCallBack)(const void *value);
typedef Boolean (*CFDictionaryEqualCallBack)(const void *value1, const void *value2);
typedef CFHashCode (*CFDictionaryHashCallBack)(const void *value);
typedef struct {
    CFIndex version;
    CFDictionaryRetainCallBack retain;
    CFDictionaryReleaseCallBack release;
    CFDictionaryCopyDescriptionCallBack copyDescription;
    CFDictionaryEqualCallBack equal;
    CFDictionaryHashCallBack hash;
} CFDictionaryKeyCallBacks;







extern
const CFDictionaryKeyCallBacks kCFTypeDictionaryKeyCallBacks;
# 122 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDictionary.h" 3
extern
const CFDictionaryKeyCallBacks kCFCopyStringDictionaryKeyCallBacks;
# 148 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDictionary.h" 3
typedef struct {
    CFIndex version;
    CFDictionaryRetainCallBack retain;
    CFDictionaryReleaseCallBack release;
    CFDictionaryCopyDescriptionCallBack copyDescription;
    CFDictionaryEqualCallBack equal;
} CFDictionaryValueCallBacks;







extern
const CFDictionaryValueCallBacks kCFTypeDictionaryValueCallBacks;
# 174 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDictionary.h" 3
typedef void (*CFDictionaryApplierFunction)(const void *key, const void *value, void *context);





typedef const struct __CFDictionary * CFDictionaryRef;





typedef struct __CFDictionary * CFMutableDictionaryRef;





extern
CFTypeID CFDictionaryGetTypeID(void);
# 277 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDictionary.h" 3
extern
CFDictionaryRef CFDictionaryCreate(CFAllocatorRef allocator, const void **keys, const void **values, CFIndex numValues, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks);
# 301 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDictionary.h" 3
extern
CFDictionaryRef CFDictionaryCreateCopy(CFAllocatorRef allocator, CFDictionaryRef theDict);
# 373 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDictionary.h" 3
extern
CFMutableDictionaryRef CFDictionaryCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks);
# 406 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDictionary.h" 3
extern
CFMutableDictionaryRef CFDictionaryCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFDictionaryRef theDict);
# 416 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDictionary.h" 3
extern
CFIndex CFDictionaryGetCount(CFDictionaryRef theDict);
# 435 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDictionary.h" 3
extern
CFIndex CFDictionaryGetCountOfKey(CFDictionaryRef theDict, const void *key);
# 451 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDictionary.h" 3
extern
CFIndex CFDictionaryGetCountOfValue(CFDictionaryRef theDict, const void *value);
# 469 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDictionary.h" 3
extern
Boolean CFDictionaryContainsKey(CFDictionaryRef theDict, const void *key);
# 485 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDictionary.h" 3
extern
Boolean CFDictionaryContainsValue(CFDictionaryRef theDict, const void *value);
# 507 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDictionary.h" 3
extern
const void *CFDictionaryGetValue(CFDictionaryRef theDict, const void *key);
# 532 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDictionary.h" 3
extern
Boolean CFDictionaryGetValueIfPresent(CFDictionaryRef theDict, const void *key, const void **value);
# 555 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDictionary.h" 3
extern
void CFDictionaryGetKeysAndValues(CFDictionaryRef theDict, const void **keys, const void **values);
# 575 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDictionary.h" 3
extern
void CFDictionaryApplyFunction(CFDictionaryRef theDict, CFDictionaryApplierFunction applier, void *context);
# 595 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDictionary.h" 3
extern
void CFDictionaryAddValue(CFMutableDictionaryRef theDict, const void *key, const void *value);
# 618 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDictionary.h" 3
extern
void CFDictionarySetValue(CFMutableDictionaryRef theDict, const void *key, const void *value);
# 637 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDictionary.h" 3
extern
void CFDictionaryReplaceValue(CFMutableDictionaryRef theDict, const void *key, const void *value);
# 651 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDictionary.h" 3
extern
void CFDictionaryRemoveValue(CFMutableDictionaryRef theDict, const void *key);
# 661 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDictionary.h" 3
extern
void CFDictionaryRemoveAllValues(CFMutableDictionaryRef theDict);

}
# 11 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBundle.h" 2 3
# 1 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFError.h" 1 3
# 33 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFError.h" 3
# 1 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFString.h" 1 3
# 10 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFString.h" 3
# 1 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFData.h" 1 3
# 10 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFData.h" 3
extern "C" {

typedef const struct __CFData * CFDataRef;
typedef struct __CFData * CFMutableDataRef;

extern
CFTypeID CFDataGetTypeID(void);

extern
CFDataRef CFDataCreate(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length);

extern
CFDataRef CFDataCreateWithBytesNoCopy(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length, CFAllocatorRef bytesDeallocator);


extern
CFDataRef CFDataCreateCopy(CFAllocatorRef allocator, CFDataRef theData);

extern
CFMutableDataRef CFDataCreateMutable(CFAllocatorRef allocator, CFIndex capacity);

extern
CFMutableDataRef CFDataCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFDataRef theData);

extern
CFIndex CFDataGetLength(CFDataRef theData);

extern
const UInt8 *CFDataGetBytePtr(CFDataRef theData);

extern
UInt8 *CFDataGetMutableBytePtr(CFMutableDataRef theData);

extern
void CFDataGetBytes(CFDataRef theData, CFRange range, UInt8 *buffer);

extern
void CFDataSetLength(CFMutableDataRef theData, CFIndex length);

extern
void CFDataIncreaseLength(CFMutableDataRef theData, CFIndex extraLength);

extern
void CFDataAppendBytes(CFMutableDataRef theData, const UInt8 *bytes, CFIndex length);

extern
void CFDataReplaceBytes(CFMutableDataRef theData, CFRange range, const UInt8 *newBytes, CFIndex newLength);

extern
void CFDataDeleteBytes(CFMutableDataRef theData, CFRange range);


enum {
    kCFDataSearchBackwards = 1UL << 0,
    kCFDataSearchAnchored = 1UL << 1
};

typedef CFOptionFlags CFDataSearchFlags;

extern
CFRange CFDataFind(CFDataRef theData, CFDataRef dataToFind, CFRange searchRange, CFDataSearchFlags compareOptions) ;

}
# 11 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFString.h" 2 3

# 1 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCharacterSet.h" 1 3
# 37 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCharacterSet.h" 3
extern "C" {





typedef const struct __CFCharacterSet * CFCharacterSetRef;





typedef struct __CFCharacterSet * CFMutableCharacterSetRef;






enum {
    kCFCharacterSetControl = 1,
    kCFCharacterSetWhitespace,
    kCFCharacterSetWhitespaceAndNewline,
    kCFCharacterSetDecimalDigit,
    kCFCharacterSetLetter,
    kCFCharacterSetLowercaseLetter,
    kCFCharacterSetUppercaseLetter,
    kCFCharacterSetNonBase,
    kCFCharacterSetDecomposable,
    kCFCharacterSetAlphaNumeric,
    kCFCharacterSetPunctuation,

    kCFCharacterSetCapitalizedLetter = 13,


    kCFCharacterSetSymbol = 14,


    kCFCharacterSetNewline = 15,

    kCFCharacterSetIllegal = 12
};
typedef CFIndex CFCharacterSetPredefinedSet;





extern
CFTypeID CFCharacterSetGetTypeID(void);
# 98 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCharacterSet.h" 3
extern
CFCharacterSetRef CFCharacterSetGetPredefined(CFCharacterSetPredefinedSet theSetIdentifier);
# 117 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCharacterSet.h" 3
extern
CFCharacterSetRef CFCharacterSetCreateWithCharactersInRange(CFAllocatorRef alloc, CFRange theRange);
# 134 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCharacterSet.h" 3
extern
CFCharacterSetRef CFCharacterSetCreateWithCharactersInString(CFAllocatorRef alloc, CFStringRef theString);
# 162 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCharacterSet.h" 3
extern
CFCharacterSetRef CFCharacterSetCreateWithBitmapRepresentation(CFAllocatorRef alloc, CFDataRef theData);
# 179 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCharacterSet.h" 3
extern CFCharacterSetRef CFCharacterSetCreateInvertedSet(CFAllocatorRef alloc, CFCharacterSetRef theSet);
# 189 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCharacterSet.h" 3
extern Boolean CFCharacterSetIsSupersetOfSet(CFCharacterSetRef theSet, CFCharacterSetRef theOtherset);
# 200 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCharacterSet.h" 3
extern Boolean CFCharacterSetHasMemberInPlane(CFCharacterSetRef theSet, CFIndex thePlane);
# 213 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCharacterSet.h" 3
extern
CFMutableCharacterSetRef CFCharacterSetCreateMutable(CFAllocatorRef alloc);
# 230 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCharacterSet.h" 3
extern
CFCharacterSetRef CFCharacterSetCreateCopy(CFAllocatorRef alloc, CFCharacterSetRef theSet) ;
# 247 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCharacterSet.h" 3
extern
CFMutableCharacterSetRef CFCharacterSetCreateMutableCopy(CFAllocatorRef alloc, CFCharacterSetRef theSet);
# 261 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCharacterSet.h" 3
extern
Boolean CFCharacterSetIsCharacterMember(CFCharacterSetRef theSet, UniChar theChar);
# 274 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCharacterSet.h" 3
extern Boolean CFCharacterSetIsLongCharacterMember(CFCharacterSetRef theSet, UTF32Char theChar);
# 293 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCharacterSet.h" 3
extern
CFDataRef CFCharacterSetCreateBitmapRepresentation(CFAllocatorRef alloc, CFCharacterSetRef theSet);
# 308 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCharacterSet.h" 3
extern
void CFCharacterSetAddCharactersInRange(CFMutableCharacterSetRef theSet, CFRange theRange);
# 323 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCharacterSet.h" 3
extern
void CFCharacterSetRemoveCharactersInRange(CFMutableCharacterSetRef theSet, CFRange theRange);
# 336 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCharacterSet.h" 3
extern
void CFCharacterSetAddCharactersInString(CFMutableCharacterSetRef theSet, CFStringRef theString);
# 349 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCharacterSet.h" 3
extern
void CFCharacterSetRemoveCharactersInString(CFMutableCharacterSetRef theSet, CFStringRef theString);
# 363 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCharacterSet.h" 3
extern
void CFCharacterSetUnion(CFMutableCharacterSetRef theSet, CFCharacterSetRef theOtherSet);
# 377 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCharacterSet.h" 3
extern
void CFCharacterSetIntersect(CFMutableCharacterSetRef theSet, CFCharacterSetRef theOtherSet);
# 387 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCharacterSet.h" 3
extern
void CFCharacterSetInvert(CFMutableCharacterSetRef theSet);

}
# 13 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFString.h" 2 3
# 1 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFLocale.h" 1 3
# 14 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFLocale.h" 3
extern "C" {

typedef const struct __CFLocale *CFLocaleRef;

extern
CFTypeID CFLocaleGetTypeID(void) ;

extern
CFLocaleRef CFLocaleGetSystem(void) ;


extern
CFLocaleRef CFLocaleCopyCurrent(void) ;
# 36 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFLocale.h" 3
extern
CFArrayRef CFLocaleCopyAvailableLocaleIdentifiers(void) ;



extern
CFArrayRef CFLocaleCopyISOLanguageCodes(void) ;




extern
CFArrayRef CFLocaleCopyISOCountryCodes(void) ;




extern
CFArrayRef CFLocaleCopyISOCurrencyCodes(void) ;




extern
CFArrayRef CFLocaleCopyCommonISOCurrencyCodes(void) ;



extern
CFArrayRef CFLocaleCopyPreferredLanguages(void) ;


extern
CFStringRef CFLocaleCreateCanonicalLanguageIdentifierFromString(CFAllocatorRef allocator, CFStringRef localeIdentifier) ;



extern
CFStringRef CFLocaleCreateCanonicalLocaleIdentifierFromString(CFAllocatorRef allocator, CFStringRef localeIdentifier) ;



extern
CFStringRef CFLocaleCreateCanonicalLocaleIdentifierFromScriptManagerCodes(CFAllocatorRef allocator, LangCode lcode, RegionCode rcode) ;


extern
CFStringRef CFLocaleCreateLocaleIdentifierFromWindowsLocaleCode(CFAllocatorRef allocator, uint32_t lcid) ;


extern
uint32_t CFLocaleGetWindowsLocaleCodeFromLocaleIdentifier(CFStringRef localeIdentifier) ;


enum {
    kCFLocaleLanguageDirectionUnknown = 0,
    kCFLocaleLanguageDirectionLeftToRight = 1,
    kCFLocaleLanguageDirectionRightToLeft = 2,
    kCFLocaleLanguageDirectionTopToBottom = 3,
    kCFLocaleLanguageDirectionBottomToTop = 4
};
typedef CFIndex CFLocaleLanguageDirection;

extern
CFLocaleLanguageDirection CFLocaleGetLanguageCharacterDirection(CFStringRef isoLangCode) ;

extern
CFLocaleLanguageDirection CFLocaleGetLanguageLineDirection(CFStringRef isoLangCode) ;

extern
CFDictionaryRef CFLocaleCreateComponentsFromLocaleIdentifier(CFAllocatorRef allocator, CFStringRef localeID) ;
# 115 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFLocale.h" 3
extern
CFStringRef CFLocaleCreateLocaleIdentifierFromComponents(CFAllocatorRef allocator, CFDictionaryRef dictionary) ;






extern
CFLocaleRef CFLocaleCreate(CFAllocatorRef allocator, CFStringRef localeIdentifier) ;


extern
CFLocaleRef CFLocaleCreateCopy(CFAllocatorRef allocator, CFLocaleRef locale) ;




extern
CFStringRef CFLocaleGetIdentifier(CFLocaleRef locale) ;



extern
CFTypeRef CFLocaleGetValue(CFLocaleRef locale, CFStringRef key) ;



extern
CFStringRef CFLocaleCopyDisplayNameForPropertyValue(CFLocaleRef displayLocale, CFStringRef key, CFStringRef value) ;





extern const CFStringRef kCFLocaleCurrentLocaleDidChangeNotification ;



extern const CFStringRef kCFLocaleIdentifier ;
extern const CFStringRef kCFLocaleLanguageCode ;
extern const CFStringRef kCFLocaleCountryCode ;
extern const CFStringRef kCFLocaleScriptCode ;
extern const CFStringRef kCFLocaleVariantCode ;

extern const CFStringRef kCFLocaleExemplarCharacterSet ;
extern const CFStringRef kCFLocaleCalendarIdentifier ;
extern const CFStringRef kCFLocaleCalendar ;
extern const CFStringRef kCFLocaleCollationIdentifier ;
extern const CFStringRef kCFLocaleUsesMetricSystem ;
extern const CFStringRef kCFLocaleMeasurementSystem ;
extern const CFStringRef kCFLocaleDecimalSeparator ;
extern const CFStringRef kCFLocaleGroupingSeparator ;
extern const CFStringRef kCFLocaleCurrencySymbol ;
extern const CFStringRef kCFLocaleCurrencyCode ;
extern const CFStringRef kCFLocaleCollatorIdentifier ;
extern const CFStringRef kCFLocaleQuotationBeginDelimiterKey ;
extern const CFStringRef kCFLocaleQuotationEndDelimiterKey ;
extern const CFStringRef kCFLocaleAlternateQuotationBeginDelimiterKey ;
extern const CFStringRef kCFLocaleAlternateQuotationEndDelimiterKey ;


extern const CFStringRef kCFGregorianCalendar ;
extern const CFStringRef kCFBuddhistCalendar ;
extern const CFStringRef kCFChineseCalendar ;
extern const CFStringRef kCFHebrewCalendar ;
extern const CFStringRef kCFIslamicCalendar ;
extern const CFStringRef kCFIslamicCivilCalendar ;
extern const CFStringRef kCFJapaneseCalendar ;
extern const CFStringRef kCFRepublicOfChinaCalendar ;
extern const CFStringRef kCFPersianCalendar ;
extern const CFStringRef kCFIndianCalendar ;
extern const CFStringRef kCFISO8601Calendar ;

}
# 14 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFString.h" 2 3


extern "C" {
# 92 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFString.h" 3
typedef UInt32 CFStringEncoding;





enum {
    kCFStringEncodingMacRoman = 0,
    kCFStringEncodingWindowsLatin1 = 0x0500,
    kCFStringEncodingISOLatin1 = 0x0201,
    kCFStringEncodingNextStepLatin = 0x0B01,
    kCFStringEncodingASCII = 0x0600,
    kCFStringEncodingUnicode = 0x0100,
    kCFStringEncodingUTF8 = 0x08000100,
    kCFStringEncodingNonLossyASCII = 0x0BFF

    ,
    kCFStringEncodingUTF16 = 0x0100,
    kCFStringEncodingUTF16BE = 0x10000100,
    kCFStringEncodingUTF16LE = 0x14000100,

    kCFStringEncodingUTF32 = 0x0c000100,
    kCFStringEncodingUTF32BE = 0x18000100,
    kCFStringEncodingUTF32LE = 0x1c000100

};
typedef CFStringEncoding CFStringBuiltInEncodings;



extern
CFTypeID CFStringGetTypeID(void);
# 170 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFString.h" 3
extern
CFStringRef CFStringCreateWithPascalString(CFAllocatorRef alloc, ConstStr255Param pStr, CFStringEncoding encoding);

extern
CFStringRef CFStringCreateWithCString(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding);



extern
CFStringRef CFStringCreateWithBytes(CFAllocatorRef alloc, const UInt8 *bytes, CFIndex numBytes, CFStringEncoding encoding, Boolean isExternalRepresentation);

extern
CFStringRef CFStringCreateWithCharacters(CFAllocatorRef alloc, const UniChar *chars, CFIndex numChars);
# 201 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFString.h" 3
extern
CFStringRef CFStringCreateWithPascalStringNoCopy(CFAllocatorRef alloc, ConstStr255Param pStr, CFStringEncoding encoding, CFAllocatorRef contentsDeallocator);

extern
CFStringRef CFStringCreateWithCStringNoCopy(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding, CFAllocatorRef contentsDeallocator);




extern
CFStringRef CFStringCreateWithBytesNoCopy(CFAllocatorRef alloc, const UInt8 *bytes, CFIndex numBytes, CFStringEncoding encoding, Boolean isExternalRepresentation, CFAllocatorRef contentsDeallocator) ;


extern
CFStringRef CFStringCreateWithCharactersNoCopy(CFAllocatorRef alloc, const UniChar *chars, CFIndex numChars, CFAllocatorRef contentsDeallocator);



extern
CFStringRef CFStringCreateWithSubstring(CFAllocatorRef alloc, CFStringRef str, CFRange range);

extern
CFStringRef CFStringCreateCopy(CFAllocatorRef alloc, CFStringRef theString);



extern
CFStringRef CFStringCreateWithFormat(CFAllocatorRef alloc, CFDictionaryRef formatOptions, CFStringRef format, ...) __attribute__((format(CFString, 3, 4)));

extern
CFStringRef CFStringCreateWithFormatAndArguments(CFAllocatorRef alloc, CFDictionaryRef formatOptions, CFStringRef format, va_list arguments) __attribute__((format(CFString, 3, 0)));



extern
CFMutableStringRef CFStringCreateMutable(CFAllocatorRef alloc, CFIndex maxLength);

extern
CFMutableStringRef CFStringCreateMutableCopy(CFAllocatorRef alloc, CFIndex maxLength, CFStringRef theString);







extern
CFMutableStringRef CFStringCreateMutableWithExternalCharactersNoCopy(CFAllocatorRef alloc, UniChar *chars, CFIndex numChars, CFIndex capacity, CFAllocatorRef externalCharactersAllocator);





extern
CFIndex CFStringGetLength(CFStringRef theString);






extern
UniChar CFStringGetCharacterAtIndex(CFStringRef theString, CFIndex idx);

extern
void CFStringGetCharacters(CFStringRef theString, CFRange range, UniChar *buffer);
# 279 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFString.h" 3
extern
Boolean CFStringGetPascalString(CFStringRef theString, StringPtr buffer, CFIndex bufferSize, CFStringEncoding encoding);

extern
Boolean CFStringGetCString(CFStringRef theString, char *buffer, CFIndex bufferSize, CFStringEncoding encoding);






extern
ConstStringPtr CFStringGetPascalStringPtr(CFStringRef theString, CFStringEncoding encoding);

extern
const char *CFStringGetCStringPtr(CFStringRef theString, CFStringEncoding encoding);

extern
const UniChar *CFStringGetCharactersPtr(CFStringRef theString);
# 315 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFString.h" 3
extern
CFIndex CFStringGetBytes(CFStringRef theString, CFRange range, CFStringEncoding encoding, UInt8 lossByte, Boolean isExternalRepresentation, UInt8 *buffer, CFIndex maxBufLen, CFIndex *usedBufLen);







extern
CFStringRef CFStringCreateFromExternalRepresentation(CFAllocatorRef alloc, CFDataRef data, CFStringEncoding encoding);

extern
CFDataRef CFStringCreateExternalRepresentation(CFAllocatorRef alloc, CFStringRef theString, CFStringEncoding encoding, UInt8 lossByte);



extern
CFStringEncoding CFStringGetSmallestEncoding(CFStringRef theString);

extern
CFStringEncoding CFStringGetFastestEncoding(CFStringRef theString);



extern
CFStringEncoding CFStringGetSystemEncoding(void);

extern
CFIndex CFStringGetMaximumSizeForEncoding(CFIndex length, CFStringEncoding encoding);






extern
Boolean CFStringGetFileSystemRepresentation(CFStringRef string, char *buffer, CFIndex maxBufLen) ;



extern
CFIndex CFStringGetMaximumSizeOfFileSystemRepresentation(CFStringRef string) ;



extern
CFStringRef CFStringCreateWithFileSystemRepresentation(CFAllocatorRef alloc, const char *buffer) ;






enum {
    kCFCompareCaseInsensitive = 1,
    kCFCompareBackwards = 4,
    kCFCompareAnchored = 8,
    kCFCompareNonliteral = 16,
    kCFCompareLocalized = 32,
    kCFCompareNumerically = 64

    ,
    kCFCompareDiacriticInsensitive = 128,
    kCFCompareWidthInsensitive = 256,
    kCFCompareForcedOrdering = 512

};
typedef CFOptionFlags CFStringCompareFlags;







extern
CFComparisonResult CFStringCompareWithOptionsAndLocale(CFStringRef theString1, CFStringRef theString2, CFRange rangeToCompare, CFStringCompareFlags compareOptions, CFLocaleRef locale) ;




extern
CFComparisonResult CFStringCompareWithOptions(CFStringRef theString1, CFStringRef theString2, CFRange rangeToCompare, CFStringCompareFlags compareOptions);





extern
CFComparisonResult CFStringCompare(CFStringRef theString1, CFStringRef theString2, CFStringCompareFlags compareOptions);







extern
Boolean CFStringFindWithOptionsAndLocale(CFStringRef theString, CFStringRef stringToFind, CFRange rangeToSearch, CFStringCompareFlags searchOptions, CFLocaleRef locale, CFRange *result) ;




extern
Boolean CFStringFindWithOptions(CFStringRef theString, CFStringRef stringToFind, CFRange rangeToSearch, CFStringCompareFlags searchOptions, CFRange *result);
# 430 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFString.h" 3
extern
CFArrayRef CFStringCreateArrayWithFindResults(CFAllocatorRef alloc, CFStringRef theString, CFStringRef stringToFind, CFRange rangeToSearch, CFStringCompareFlags compareOptions);



extern
CFRange CFStringFind(CFStringRef theString, CFStringRef stringToFind, CFStringCompareFlags compareOptions);

extern
Boolean CFStringHasPrefix(CFStringRef theString, CFStringRef prefix);

extern
Boolean CFStringHasSuffix(CFStringRef theString, CFStringRef suffix);
# 458 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFString.h" 3
extern CFRange CFStringGetRangeOfComposedCharactersAtIndex(CFStringRef theString, CFIndex theIndex);
# 489 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFString.h" 3
extern Boolean CFStringFindCharacterFromSet(CFStringRef theString, CFCharacterSetRef theSet, CFRange rangeToSearch, CFStringCompareFlags searchOptions, CFRange *result);
# 501 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFString.h" 3
extern
void CFStringGetLineBounds(CFStringRef theString, CFRange range, CFIndex *lineBeginIndex, CFIndex *lineEndIndex, CFIndex *contentsEndIndex);



extern
void CFStringGetParagraphBounds(CFStringRef string, CFRange range, CFIndex *parBeginIndex, CFIndex *parEndIndex, CFIndex *contentsEndIndex) ;



extern
CFStringRef CFStringCreateByCombiningStrings(CFAllocatorRef alloc, CFArrayRef theArray, CFStringRef separatorString);

extern
CFArrayRef CFStringCreateArrayBySeparatingStrings(CFAllocatorRef alloc, CFStringRef theString, CFStringRef separatorString);




extern
SInt32 CFStringGetIntValue(CFStringRef str);

extern
double CFStringGetDoubleValue(CFStringRef str);
# 534 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFString.h" 3
extern
void CFStringAppend(CFMutableStringRef theString, CFStringRef appendedString);

extern
void CFStringAppendCharacters(CFMutableStringRef theString, const UniChar *chars, CFIndex numChars);

extern
void CFStringAppendPascalString(CFMutableStringRef theString, ConstStr255Param pStr, CFStringEncoding encoding);

extern
void CFStringAppendCString(CFMutableStringRef theString, const char *cStr, CFStringEncoding encoding);

extern
void CFStringAppendFormat(CFMutableStringRef theString, CFDictionaryRef formatOptions, CFStringRef format, ...) __attribute__((format(CFString, 3, 4)));

extern
void CFStringAppendFormatAndArguments(CFMutableStringRef theString, CFDictionaryRef formatOptions, CFStringRef format, va_list arguments) __attribute__((format(CFString, 3, 0)));

extern
void CFStringInsert(CFMutableStringRef str, CFIndex idx, CFStringRef insertedStr);

extern
void CFStringDelete(CFMutableStringRef theString, CFRange range);

extern
void CFStringReplace(CFMutableStringRef theString, CFRange range, CFStringRef replacement);

extern
void CFStringReplaceAll(CFMutableStringRef theString, CFStringRef replacement);
# 573 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFString.h" 3
extern
CFIndex CFStringFindAndReplace(CFMutableStringRef theString, CFStringRef stringToFind, CFStringRef replacementString, CFRange rangeToSearch, CFStringCompareFlags compareOptions);
# 585 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFString.h" 3
extern
void CFStringSetExternalCharactersNoCopy(CFMutableStringRef theString, UniChar *chars, CFIndex length, CFIndex capacity);
# 599 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFString.h" 3
extern
void CFStringPad(CFMutableStringRef theString, CFStringRef padString, CFIndex length, CFIndex indexIntoPad);

extern
void CFStringTrim(CFMutableStringRef theString, CFStringRef trimString);

extern
void CFStringTrimWhitespace(CFMutableStringRef theString);


extern
void CFStringLowercase(CFMutableStringRef theString, CFLocaleRef locale);

extern
void CFStringUppercase(CFMutableStringRef theString, CFLocaleRef locale);

extern
void CFStringCapitalize(CFMutableStringRef theString, CFLocaleRef locale);
# 635 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFString.h" 3
enum {
 kCFStringNormalizationFormD = 0,
 kCFStringNormalizationFormKD,
 kCFStringNormalizationFormC,
 kCFStringNormalizationFormKC
};
typedef CFIndex CFStringNormalizationForm;
# 654 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFString.h" 3
extern void CFStringNormalize(CFMutableStringRef theString, CFStringNormalizationForm theForm);
# 682 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFString.h" 3
extern
void CFStringFold(CFMutableStringRef theString, CFOptionFlags theFlags, CFLocaleRef theLocale) ;






extern
Boolean CFStringTransform(CFMutableStringRef string, CFRange *range, CFStringRef transform, Boolean reverse) ;



extern const CFStringRef kCFStringTransformStripCombiningMarks ;
extern const CFStringRef kCFStringTransformToLatin ;
extern const CFStringRef kCFStringTransformFullwidthHalfwidth ;
extern const CFStringRef kCFStringTransformLatinKatakana ;
extern const CFStringRef kCFStringTransformLatinHiragana ;
extern const CFStringRef kCFStringTransformHiraganaKatakana ;
extern const CFStringRef kCFStringTransformMandarinLatin ;
extern const CFStringRef kCFStringTransformLatinHangul ;
extern const CFStringRef kCFStringTransformLatinArabic ;
extern const CFStringRef kCFStringTransformLatinHebrew ;
extern const CFStringRef kCFStringTransformLatinThai ;
extern const CFStringRef kCFStringTransformLatinCyrillic ;
extern const CFStringRef kCFStringTransformLatinGreek ;
extern const CFStringRef kCFStringTransformToXMLHex ;
extern const CFStringRef kCFStringTransformToUnicodeName ;
extern const CFStringRef kCFStringTransformStripDiacritics ;






extern
Boolean CFStringIsEncodingAvailable(CFStringEncoding encoding);



extern
const CFStringEncoding *CFStringGetListOfAvailableEncodings(void);



extern
CFStringRef CFStringGetNameOfEncoding(CFStringEncoding encoding);



extern
unsigned long CFStringConvertEncodingToNSStringEncoding(CFStringEncoding encoding);

extern
CFStringEncoding CFStringConvertNSStringEncodingToEncoding(unsigned long encoding);



extern
UInt32 CFStringConvertEncodingToWindowsCodepage(CFStringEncoding encoding);

extern
CFStringEncoding CFStringConvertWindowsCodepageToEncoding(UInt32 codepage);



extern
CFStringEncoding CFStringConvertIANACharSetNameToEncoding(CFStringRef theString);

extern
CFStringRef CFStringConvertEncodingToIANACharSetName(CFStringEncoding encoding);





extern
CFStringEncoding CFStringGetMostCompatibleMacStringEncoding(CFStringEncoding encoding);
# 773 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFString.h" 3
typedef struct {
    UniChar buffer[64];
    CFStringRef theString;
    const UniChar *directBuffer;
    CFRange rangeToBuffer;
    CFIndex bufferedRangeStart;
    CFIndex bufferedRangeEnd;
} CFStringInlineBuffer;


static __inline__ __attribute__((always_inline)) void CFStringInitInlineBuffer(CFStringRef str, CFStringInlineBuffer *buf, CFRange range) {
    buf->theString = str;
    buf->rangeToBuffer = range;
    buf->directBuffer = CFStringGetCharactersPtr(str);
    buf->bufferedRangeStart = buf->bufferedRangeEnd = 0;
}

static __inline__ __attribute__((always_inline)) UniChar CFStringGetCharacterFromInlineBuffer(CFStringInlineBuffer *buf, CFIndex idx) {
    if (buf->directBuffer) {
 if (idx < 0 || idx >= buf->rangeToBuffer.length) return 0;
        return buf->directBuffer[idx + buf->rangeToBuffer.location];
    }
    if (idx >= buf->bufferedRangeEnd || idx < buf->bufferedRangeStart) {
 if (idx < 0 || idx >= buf->rangeToBuffer.length) return 0;
 if ((buf->bufferedRangeStart = idx - 4) < 0) buf->bufferedRangeStart = 0;
 buf->bufferedRangeEnd = buf->bufferedRangeStart + 64;
 if (buf->bufferedRangeEnd > buf->rangeToBuffer.length) buf->bufferedRangeEnd = buf->rangeToBuffer.length;
 CFStringGetCharacters(buf->theString, CFRangeMake(buf->rangeToBuffer.location + buf->bufferedRangeStart, buf->bufferedRangeEnd - buf->bufferedRangeStart), buf->buffer);
    }
    return buf->buffer[idx - buf->bufferedRangeStart];
}
# 820 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFString.h" 3
static __inline__ __attribute__((always_inline)) Boolean CFStringIsSurrogateHighCharacter(UniChar character) {
    return ((character >= 0xD800UL) && (character <= 0xDBFFUL) ? true : false);
}

static __inline__ __attribute__((always_inline)) Boolean CFStringIsSurrogateLowCharacter(UniChar character) {
    return ((character >= 0xDC00UL) && (character <= 0xDFFFUL) ? true : false);
}

static __inline__ __attribute__((always_inline)) UTF32Char CFStringGetLongCharacterForSurrogatePair(UniChar surrogateHigh, UniChar surrogateLow) {
    return ((surrogateHigh - 0xD800UL) << 10) + (surrogateLow - 0xDC00UL) + 0x0010000UL;
}


static __inline__ __attribute__((always_inline)) Boolean CFStringGetSurrogatePairForLongCharacter(UTF32Char character, UniChar *surrogates) {
    if ((character > 0xFFFFUL) && (character < 0x110000UL)) {
        character -= 0x10000;
        if (__null != surrogates) {
            surrogates[0] = (UniChar)((character >> 10) + 0xD800UL);
            surrogates[1] = (UniChar)((character & 0x3FF) + 0xDC00UL);
        }
        return true;
    } else {
        if (__null != surrogates) *surrogates = (UniChar)character;
        return false;
    }
}







extern
void CFShow(CFTypeRef obj);

extern
void CFShowStr(CFStringRef str);


extern
CFStringRef __CFStringMakeConstantString(const char *cStr);

}
# 34 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFError.h" 2 3


extern "C" {





typedef struct __CFError * CFErrorRef;





extern
CFTypeID CFErrorGetTypeID(void) ;



extern const CFStringRef kCFErrorDomainPOSIX ;
extern const CFStringRef kCFErrorDomainOSStatus ;
extern const CFStringRef kCFErrorDomainMach ;
extern const CFStringRef kCFErrorDomainCocoa ;


extern const CFStringRef kCFErrorLocalizedDescriptionKey ;
extern const CFStringRef kCFErrorLocalizedFailureReasonKey ;
extern const CFStringRef kCFErrorLocalizedRecoverySuggestionKey ;


extern const CFStringRef kCFErrorDescriptionKey ;


extern const CFStringRef kCFErrorUnderlyingErrorKey ;
# 81 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFError.h" 3
extern
CFErrorRef CFErrorCreate(CFAllocatorRef allocator, CFStringRef domain, CFIndex code, CFDictionaryRef userInfo) ;
# 96 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFError.h" 3
extern
CFErrorRef CFErrorCreateWithUserInfoKeysAndValues(CFAllocatorRef allocator, CFStringRef domain, CFIndex code, const void *const *userInfoKeys, const void *const *userInfoValues, CFIndex numUserInfoValues) ;







extern
CFStringRef CFErrorGetDomain(CFErrorRef err) ;







extern
CFIndex CFErrorGetCode(CFErrorRef err) ;
# 124 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFError.h" 3
extern
CFDictionaryRef CFErrorCopyUserInfo(CFErrorRef err) ;
# 138 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFError.h" 3
extern
CFStringRef CFErrorCopyDescription(CFErrorRef err) ;
# 150 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFError.h" 3
extern
CFStringRef CFErrorCopyFailureReason(CFErrorRef err) ;
# 162 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFError.h" 3
extern
CFStringRef CFErrorCopyRecoverySuggestion(CFErrorRef err) ;



}
# 12 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBundle.h" 2 3

# 1 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURL.h" 1 3
# 13 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURL.h" 3
extern "C" {

enum {
    kCFURLPOSIXPathStyle = 0,
    kCFURLHFSPathStyle,
    kCFURLWindowsPathStyle
};
typedef CFIndex CFURLPathStyle;

typedef const struct __CFURL * CFURLRef;
# 38 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURL.h" 3
extern
CFTypeID CFURLGetTypeID(void);



extern
CFURLRef CFURLCreateWithBytes(CFAllocatorRef allocator, const UInt8 *URLBytes, CFIndex length, CFStringEncoding encoding, CFURLRef baseURL);





extern
CFDataRef CFURLCreateData(CFAllocatorRef allocator, CFURLRef url, CFStringEncoding encoding, Boolean escapeWhitespace);


extern
CFURLRef CFURLCreateWithString(CFAllocatorRef allocator, CFStringRef URLString, CFURLRef baseURL);
# 70 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURL.h" 3
extern
CFURLRef CFURLCreateAbsoluteURLWithBytes(CFAllocatorRef alloc, const UInt8 *relativeURLBytes, CFIndex length, CFStringEncoding encoding, CFURLRef baseURL, Boolean useCompatibilityMode) ;
# 80 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURL.h" 3
extern
CFURLRef CFURLCreateWithFileSystemPath(CFAllocatorRef allocator, CFStringRef filePath, CFURLPathStyle pathStyle, Boolean isDirectory);

extern
CFURLRef CFURLCreateFromFileSystemRepresentation(CFAllocatorRef allocator, const UInt8 *buffer, CFIndex bufLen, Boolean isDirectory);







extern
CFURLRef CFURLCreateWithFileSystemPathRelativeToBase(CFAllocatorRef allocator, CFStringRef filePath, CFURLPathStyle pathStyle, Boolean isDirectory, CFURLRef baseURL);

extern
CFURLRef CFURLCreateFromFileSystemRepresentationRelativeToBase(CFAllocatorRef allocator, const UInt8 *buffer, CFIndex bufLen, Boolean isDirectory, CFURLRef baseURL);
# 105 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURL.h" 3
extern
Boolean CFURLGetFileSystemRepresentation(CFURLRef url, Boolean resolveAgainstBase, UInt8 *buffer, CFIndex maxBufLen);


extern
CFURLRef CFURLCopyAbsoluteURL(CFURLRef relativeURL);


extern
CFStringRef CFURLGetString(CFURLRef anURL);


extern
CFURLRef CFURLGetBaseURL(CFURLRef anURL);
# 180 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURL.h" 3
extern
Boolean CFURLCanBeDecomposed(CFURLRef anURL);



extern
CFStringRef CFURLCopyScheme(CFURLRef anURL);


extern
CFStringRef CFURLCopyNetLocation(CFURLRef anURL);
# 203 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURL.h" 3
extern
CFStringRef CFURLCopyPath(CFURLRef anURL);

extern
CFStringRef CFURLCopyStrictPath(CFURLRef anURL, Boolean *isAbsolute);

extern
CFStringRef CFURLCopyFileSystemPath(CFURLRef anURL, CFURLPathStyle pathStyle);



extern
Boolean CFURLHasDirectoryPath(CFURLRef anURL);



extern
CFStringRef CFURLCopyResourceSpecifier(CFURLRef anURL);

extern
CFStringRef CFURLCopyHostName(CFURLRef anURL);

extern
SInt32 CFURLGetPortNumber(CFURLRef anURL);

extern
CFStringRef CFURLCopyUserName(CFURLRef anURL);

extern
CFStringRef CFURLCopyPassword(CFURLRef anURL);






extern
CFStringRef CFURLCopyParameterString(CFURLRef anURL, CFStringRef charactersToLeaveEscaped);

extern
CFStringRef CFURLCopyQueryString(CFURLRef anURL, CFStringRef charactersToLeaveEscaped);

extern
CFStringRef CFURLCopyFragment(CFURLRef anURL, CFStringRef charactersToLeaveEscaped);

extern
CFStringRef CFURLCopyLastPathComponent(CFURLRef url);

extern
CFStringRef CFURLCopyPathExtension(CFURLRef url);





extern
CFURLRef CFURLCreateCopyAppendingPathComponent(CFAllocatorRef allocator, CFURLRef url, CFStringRef pathComponent, Boolean isDirectory);

extern
CFURLRef CFURLCreateCopyDeletingLastPathComponent(CFAllocatorRef allocator, CFURLRef url);

extern
CFURLRef CFURLCreateCopyAppendingPathExtension(CFAllocatorRef allocator, CFURLRef url, CFStringRef extension);

extern
CFURLRef CFURLCreateCopyDeletingPathExtension(CFAllocatorRef allocator, CFURLRef url);
# 277 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURL.h" 3
extern
CFIndex CFURLGetBytes(CFURLRef url, UInt8 *buffer, CFIndex bufferLength) ;

enum {
 kCFURLComponentScheme = 1,
 kCFURLComponentNetLocation = 2,
 kCFURLComponentPath = 3,
 kCFURLComponentResourceSpecifier = 4,

 kCFURLComponentUser = 5,
 kCFURLComponentPassword = 6,
 kCFURLComponentUserInfo = 7,
 kCFURLComponentHost = 8,
 kCFURLComponentPort = 9,
 kCFURLComponentParameterString = 10,
 kCFURLComponentQuery = 11,
 kCFURLComponentFragment = 12
};
typedef CFIndex CFURLComponentType;
# 360 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURL.h" 3
extern
CFRange CFURLGetByteRangeForComponent(CFURLRef url, CFURLComponentType component, CFRange *rangeIncludingSeparators) ;
# 371 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURL.h" 3
extern
CFStringRef CFURLCreateStringByReplacingPercentEscapes(CFAllocatorRef allocator, CFStringRef originalString, CFStringRef charactersToLeaveEscaped);



extern
CFStringRef CFURLCreateStringByReplacingPercentEscapesUsingEncoding(CFAllocatorRef allocator, CFStringRef origString, CFStringRef charsToLeaveEscaped, CFStringEncoding encoding) ;
# 393 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURL.h" 3
extern
CFStringRef CFURLCreateStringByAddingPercentEscapes(CFAllocatorRef allocator, CFStringRef originalString, CFStringRef charactersToLeaveUnescaped, CFStringRef legalURLCharactersToBeEscaped, CFStringEncoding encoding);







extern
CFURLRef CFURLCreateFileReferenceURL(CFAllocatorRef allocator, CFURLRef url, CFErrorRef *error) ;







extern
CFURLRef CFURLCreateFilePathURL(CFAllocatorRef allocator, CFURLRef url, CFErrorRef *error) ;





struct FSRef;

extern
CFURLRef CFURLCreateFromFSRef(CFAllocatorRef allocator, const struct FSRef *fsRef);

extern
Boolean CFURLGetFSRef(CFURLRef url, struct FSRef *fsRef);
# 452 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURL.h" 3
extern
Boolean CFURLCopyResourcePropertyForKey(CFURLRef url, CFStringRef key, void *propertyValueTypeRefPtr, CFErrorRef *error) ;
# 463 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURL.h" 3
extern
CFDictionaryRef CFURLCopyResourcePropertiesForKeys(CFURLRef url, CFArrayRef keys, CFErrorRef *error) ;
# 474 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURL.h" 3
extern
Boolean CFURLSetResourcePropertyForKey(CFURLRef url, CFStringRef key, CFTypeRef propertValue, CFErrorRef *error) ;
# 486 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURL.h" 3
extern
Boolean CFURLSetResourcePropertiesForKeys(CFURLRef url, CFDictionaryRef keyedPropertyValues, CFErrorRef *error) ;



extern
void CFURLClearResourcePropertyCacheForKey(CFURLRef url, CFStringRef key) ;



extern
void CFURLClearResourcePropertyCache(CFURLRef url) ;







extern
void CFURLSetTemporaryResourcePropertyForKey(CFURLRef url, CFStringRef key, CFTypeRef propertyValue) ;
# 518 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURL.h" 3
extern
Boolean CFURLResourceIsReachable(CFURLRef url, CFErrorRef *error) ;




extern
const CFStringRef kCFURLNameKey ;


extern
const CFStringRef kCFURLLocalizedNameKey ;


extern
const CFStringRef kCFURLIsRegularFileKey ;


extern
const CFStringRef kCFURLIsDirectoryKey ;


extern
const CFStringRef kCFURLIsSymbolicLinkKey ;


extern
const CFStringRef kCFURLIsVolumeKey ;


extern
const CFStringRef kCFURLIsPackageKey ;


extern
const CFStringRef kCFURLIsSystemImmutableKey ;


extern
const CFStringRef kCFURLIsUserImmutableKey ;


extern
const CFStringRef kCFURLIsHiddenKey ;


extern
const CFStringRef kCFURLHasHiddenExtensionKey ;


extern
const CFStringRef kCFURLCreationDateKey ;


extern
const CFStringRef kCFURLContentAccessDateKey ;


extern
const CFStringRef kCFURLContentModificationDateKey ;


extern
const CFStringRef kCFURLAttributeModificationDateKey ;


extern
const CFStringRef kCFURLLinkCountKey ;


extern
const CFStringRef kCFURLParentDirectoryURLKey ;


extern
const CFStringRef kCFURLVolumeURLKey ;


extern
const CFStringRef kCFURLTypeIdentifierKey ;


extern
const CFStringRef kCFURLLocalizedTypeDescriptionKey ;


extern
const CFStringRef kCFURLLabelNumberKey ;


extern
const CFStringRef kCFURLLabelColorKey ;


extern
const CFStringRef kCFURLLocalizedLabelKey ;


extern
const CFStringRef kCFURLEffectiveIconKey ;


extern
const CFStringRef kCFURLCustomIconKey ;





extern
const CFStringRef kCFURLFileSizeKey ;


extern
const CFStringRef kCFURLFileAllocatedSizeKey ;


extern
const CFStringRef kCFURLIsAliasFileKey ;







extern
const CFStringRef kCFURLVolumeLocalizedFormatDescriptionKey ;


extern
const CFStringRef kCFURLVolumeTotalCapacityKey ;


extern
const CFStringRef kCFURLVolumeAvailableCapacityKey ;


extern
const CFStringRef kCFURLVolumeResourceCountKey ;


extern
const CFStringRef kCFURLVolumeSupportsPersistentIDsKey ;


extern
const CFStringRef kCFURLVolumeSupportsSymbolicLinksKey ;


extern
const CFStringRef kCFURLVolumeSupportsHardLinksKey ;


extern
const CFStringRef kCFURLVolumeSupportsJournalingKey ;


extern
const CFStringRef kCFURLVolumeIsJournalingKey ;


extern
const CFStringRef kCFURLVolumeSupportsSparseFilesKey ;


extern
const CFStringRef kCFURLVolumeSupportsZeroRunsKey ;


extern
const CFStringRef kCFURLVolumeSupportsCaseSensitiveNamesKey ;


extern
const CFStringRef kCFURLVolumeSupportsCasePreservedNamesKey ;


enum {
    kCFURLBookmarkCreationPreferFileIDResolutionMask = ( 1UL << 8 ),
    kCFURLBookmarkCreationMinimalBookmarkMask = ( 1UL << 9 ),
    kCFURLBookmarkCreationSuitableForBookmarkFile = ( 1UL << 10 ),
};
typedef CFOptionFlags CFURLBookmarkCreationOptions;

enum {
    kCFBookmarkResolutionWithoutUIMask = ( 1UL << 8 ),
    kCFBookmarkResolutionWithoutMountingMask = ( 1UL << 9 ),
};
typedef CFOptionFlags CFURLBookmarkResolutionOptions;

typedef CFOptionFlags CFURLBookmarkFileCreationOptions;
# 721 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURL.h" 3
CFDataRef CFURLCreateBookmarkData ( CFAllocatorRef allocator, CFURLRef url, CFURLBookmarkCreationOptions options, CFArrayRef resourcePropertiesToInclude, CFURLRef relativeToURL, CFErrorRef* error ) ;
# 739 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURL.h" 3
CFURLRef CFURLCreateByResolvingBookmarkData ( CFAllocatorRef allocator, CFDataRef bookmark, CFURLBookmarkResolutionOptions options, CFURLRef relativeToURL, CFArrayRef resourcePropertiesToInclude, Boolean* isStale, CFErrorRef* error ) ;
# 748 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURL.h" 3
CFDictionaryRef CFURLCreateResourcePropertiesForKeysFromBookmarkData ( CFAllocatorRef allocator, CFArrayRef resourcePropertiesToReturn, CFDataRef bookmark ) ;
# 757 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURL.h" 3
CFTypeRef CFURLCreateResourcePropertyForKeyFromBookmarkData( CFAllocatorRef allocator, CFStringRef resourcePropertyKey, CFDataRef bookmark ) ;
# 769 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURL.h" 3
CFDataRef CFURLCreateBookmarkDataFromFile(CFAllocatorRef allocator, CFURLRef fileURL, CFErrorRef *errorRef );
# 782 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURL.h" 3
Boolean CFURLWriteBookmarkDataToFile( CFDataRef bookmarkRef, CFURLRef fileURL, CFURLBookmarkFileCreationOptions options, CFErrorRef *errorRef );
# 792 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURL.h" 3
CFDataRef CFURLCreateBookmarkDataFromAliasRecord ( CFAllocatorRef allocatorRef, CFDataRef aliasRecordDataRef );



}
# 14 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBundle.h" 2 3

extern "C" {

typedef struct __CFBundle *CFBundleRef;
typedef struct __CFBundle *CFPlugInRef;


extern
const CFStringRef kCFBundleInfoDictionaryVersionKey;

extern
const CFStringRef kCFBundleExecutableKey;

extern
const CFStringRef kCFBundleIdentifierKey;

extern
const CFStringRef kCFBundleVersionKey;



extern
const CFStringRef kCFBundleDevelopmentRegionKey;

extern
const CFStringRef kCFBundleNameKey;

extern
const CFStringRef kCFBundleLocalizationsKey ;




extern
CFBundleRef CFBundleGetMainBundle(void);

extern
CFBundleRef CFBundleGetBundleWithIdentifier(CFStringRef bundleID);







extern
CFArrayRef CFBundleGetAllBundles(void);





extern
CFTypeID CFBundleGetTypeID(void);

extern
CFBundleRef CFBundleCreate(CFAllocatorRef allocator, CFURLRef bundleURL);


extern
CFArrayRef CFBundleCreateBundlesFromDirectory(CFAllocatorRef allocator, CFURLRef directoryURL, CFStringRef bundleType);





extern
CFURLRef CFBundleCopyBundleURL(CFBundleRef bundle);

extern
CFTypeRef CFBundleGetValueForInfoDictionaryKey(CFBundleRef bundle, CFStringRef key);



extern
CFDictionaryRef CFBundleGetInfoDictionary(CFBundleRef bundle);



extern
CFDictionaryRef CFBundleGetLocalInfoDictionary(CFBundleRef bundle);


extern
void CFBundleGetPackageInfo(CFBundleRef bundle, UInt32 *packageType, UInt32 *packageCreator);

extern
CFStringRef CFBundleGetIdentifier(CFBundleRef bundle);

extern
UInt32 CFBundleGetVersionNumber(CFBundleRef bundle);

extern
CFStringRef CFBundleGetDevelopmentRegion(CFBundleRef bundle);

extern
CFURLRef CFBundleCopySupportFilesDirectoryURL(CFBundleRef bundle);

extern
CFURLRef CFBundleCopyResourcesDirectoryURL(CFBundleRef bundle);

extern
CFURLRef CFBundleCopyPrivateFrameworksURL(CFBundleRef bundle);

extern
CFURLRef CFBundleCopySharedFrameworksURL(CFBundleRef bundle);

extern
CFURLRef CFBundleCopySharedSupportURL(CFBundleRef bundle);

extern
CFURLRef CFBundleCopyBuiltInPlugInsURL(CFBundleRef bundle);






extern
CFDictionaryRef CFBundleCopyInfoDictionaryInDirectory(CFURLRef bundleURL);

extern
Boolean CFBundleGetPackageInfoInDirectory(CFURLRef url, UInt32 *packageType, UInt32 *packageCreator);



extern
CFURLRef CFBundleCopyResourceURL(CFBundleRef bundle, CFStringRef resourceName, CFStringRef resourceType, CFStringRef subDirName);

extern
CFArrayRef CFBundleCopyResourceURLsOfType(CFBundleRef bundle, CFStringRef resourceType, CFStringRef subDirName);

extern
CFStringRef CFBundleCopyLocalizedString(CFBundleRef bundle, CFStringRef key, CFStringRef value, CFStringRef tableName) __attribute__((format_arg(2)));
# 164 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBundle.h" 3
extern
CFURLRef CFBundleCopyResourceURLInDirectory(CFURLRef bundleURL, CFStringRef resourceName, CFStringRef resourceType, CFStringRef subDirName);

extern
CFArrayRef CFBundleCopyResourceURLsOfTypeInDirectory(CFURLRef bundleURL, CFStringRef resourceType, CFStringRef subDirName);






extern
CFArrayRef CFBundleCopyBundleLocalizations(CFBundleRef bundle);


extern
CFArrayRef CFBundleCopyPreferredLocalizationsFromArray(CFArrayRef locArray);






extern
CFArrayRef CFBundleCopyLocalizationsForPreferences(CFArrayRef locArray, CFArrayRef prefArray) ;
# 198 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBundle.h" 3
extern
CFURLRef CFBundleCopyResourceURLForLocalization(CFBundleRef bundle, CFStringRef resourceName, CFStringRef resourceType, CFStringRef subDirName, CFStringRef localizationName);

extern
CFArrayRef CFBundleCopyResourceURLsOfTypeForLocalization(CFBundleRef bundle, CFStringRef resourceType, CFStringRef subDirName, CFStringRef localizationName);
# 212 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBundle.h" 3
extern
CFDictionaryRef CFBundleCopyInfoDictionaryForURL(CFURLRef url) ;





extern
CFArrayRef CFBundleCopyLocalizationsForURL(CFURLRef url) ;






extern
CFArrayRef CFBundleCopyExecutableArchitecturesForURL(CFURLRef url) ;
# 238 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBundle.h" 3
extern
CFURLRef CFBundleCopyExecutableURL(CFBundleRef bundle);


enum {
    kCFBundleExecutableArchitectureI386 = 0x00000007,
    kCFBundleExecutableArchitecturePPC = 0x00000012,
    kCFBundleExecutableArchitectureX86_64 = 0x01000007,
    kCFBundleExecutableArchitecturePPC64 = 0x01000012
};


extern
CFArrayRef CFBundleCopyExecutableArchitectures(CFBundleRef bundle) ;





extern
Boolean CFBundlePreflightExecutable(CFBundleRef bundle, CFErrorRef *error) ;






extern
Boolean CFBundleLoadExecutableAndReturnError(CFBundleRef bundle, CFErrorRef *error) ;





extern
Boolean CFBundleLoadExecutable(CFBundleRef bundle);

extern
Boolean CFBundleIsExecutableLoaded(CFBundleRef bundle);

extern
void CFBundleUnloadExecutable(CFBundleRef bundle);

extern
void *CFBundleGetFunctionPointerForName(CFBundleRef bundle, CFStringRef functionName);

extern
void CFBundleGetFunctionPointersForNames(CFBundleRef bundle, CFArrayRef functionNames, void *ftbl[]);

extern
void *CFBundleGetDataPointerForName(CFBundleRef bundle, CFStringRef symbolName);

extern
void CFBundleGetDataPointersForNames(CFBundleRef bundle, CFArrayRef symbolNames, void *stbl[]);

extern
CFURLRef CFBundleCopyAuxiliaryExecutableURL(CFBundleRef bundle, CFStringRef executableName);
# 305 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBundle.h" 3
extern
CFPlugInRef CFBundleGetPlugIn(CFBundleRef bundle);




typedef int CFBundleRefNum;




extern
CFBundleRefNum CFBundleOpenBundleResourceMap(CFBundleRef bundle);






extern
SInt32 CFBundleOpenBundleResourceFiles(CFBundleRef bundle, CFBundleRefNum *refNum, CFBundleRefNum *localizedRefNum);



extern
void CFBundleCloseBundleResourceMap(CFBundleRef bundle, CFBundleRefNum refNum);

}
# 44 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFByteOrder.h" 1 3
# 10 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFByteOrder.h" 3
# 1 "/usr/include/libkern/OSByteOrder.h" 1 3 4
# 45 "/usr/include/libkern/OSByteOrder.h" 3 4
# 1 "/usr/include/libkern/i386/OSByteOrder.h" 1 3 4
# 41 "/usr/include/libkern/i386/OSByteOrder.h" 3 4
static inline
uint16_t
OSReadSwapInt16(
    const volatile void * base,
    uintptr_t byteOffset
)
{
    uint16_t result;

    result = *(volatile uint16_t *)((uintptr_t)base + byteOffset);
    return _OSSwapInt16(result);
}

static inline
uint32_t
OSReadSwapInt32(
    const volatile void * base,
    uintptr_t byteOffset
)
{
    uint32_t result;

    result = *(volatile uint32_t *)((uintptr_t)base + byteOffset);
    return _OSSwapInt32(result);
}

static inline
uint64_t
OSReadSwapInt64(
    const volatile void * base,
    uintptr_t byteOffset
)
{
    uint64_t result;

    result = *(volatile uint64_t *)((uintptr_t)base + byteOffset);
    return _OSSwapInt64(result);
}



static inline
void
OSWriteSwapInt16(
    volatile void * base,
    uintptr_t byteOffset,
    uint16_t data
)
{
    *(volatile uint16_t *)((uintptr_t)base + byteOffset) = _OSSwapInt16(data);
}

static inline
void
OSWriteSwapInt32(
    volatile void * base,
    uintptr_t byteOffset,
    uint32_t data
)
{
    *(volatile uint32_t *)((uintptr_t)base + byteOffset) = _OSSwapInt32(data);
}

static inline
void
OSWriteSwapInt64(
    volatile void * base,
    uintptr_t byteOffset,
    uint64_t data
)
{
    *(volatile uint64_t *)((uintptr_t)base + byteOffset) = _OSSwapInt64(data);
}
# 46 "/usr/include/libkern/OSByteOrder.h" 2 3 4
# 62 "/usr/include/libkern/OSByteOrder.h" 3 4
enum {
    OSUnknownByteOrder,
    OSLittleEndian,
    OSBigEndian
};

static inline
int32_t
OSHostByteOrder(void) {

    return OSLittleEndian;





}
# 91 "/usr/include/libkern/OSByteOrder.h" 3 4
static inline
uint16_t
_OSReadInt16(
    const volatile void * base,
    uintptr_t byteOffset
)
{
    return *(volatile uint16_t *)((uintptr_t)base + byteOffset);
}

static inline
uint32_t
_OSReadInt32(
    const volatile void * base,
    uintptr_t byteOffset
)
{
    return *(volatile uint32_t *)((uintptr_t)base + byteOffset);
}

static inline
uint64_t
_OSReadInt64(
    const volatile void * base,
    uintptr_t byteOffset
)
{
    return *(volatile uint64_t *)((uintptr_t)base + byteOffset);
}



static inline
void
_OSWriteInt16(
    volatile void * base,
    uintptr_t byteOffset,
    uint16_t data
)
{
    *(volatile uint16_t *)((uintptr_t)base + byteOffset) = data;
}

static inline
void
_OSWriteInt32(
    volatile void * base,
    uintptr_t byteOffset,
    uint32_t data
)
{
    *(volatile uint32_t *)((uintptr_t)base + byteOffset) = data;
}

static inline
void
_OSWriteInt64(
    volatile void * base,
    uintptr_t byteOffset,
    uint64_t data
)
{
    *(volatile uint64_t *)((uintptr_t)base + byteOffset) = data;
}
# 11 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFByteOrder.h" 2 3



extern "C" {

enum __CFByteOrder {
    CFByteOrderUnknown,
    CFByteOrderLittleEndian,
    CFByteOrderBigEndian
};
typedef CFIndex CFByteOrder;

static __inline__ __attribute__((always_inline)) CFByteOrder CFByteOrderGetCurrent(void) {

    int32_t byteOrder = OSHostByteOrder();
    switch (byteOrder) {
    case OSLittleEndian: return CFByteOrderLittleEndian;
    case OSBigEndian: return CFByteOrderBigEndian;
    default: break;
    }
    return CFByteOrderUnknown;
# 41 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFByteOrder.h" 3
}

static __inline__ __attribute__((always_inline)) uint16_t CFSwapInt16(uint16_t arg) {

    return (__builtin_constant_p(arg) ? ((__uint16_t)((((__uint16_t)(arg) & 0xff00) >> 8) | (((__uint16_t)(arg) & 0x00ff) << 8))) : _OSSwapInt16(arg));





}

static __inline__ __attribute__((always_inline)) uint32_t CFSwapInt32(uint32_t arg) {

    return (__builtin_constant_p(arg) ? ((__uint32_t)((((__uint32_t)(arg) & 0xff000000) >> 24) | (((__uint32_t)(arg) & 0x00ff0000) >> 8) | (((__uint32_t)(arg) & 0x0000ff00) << 8) | (((__uint32_t)(arg) & 0x000000ff) << 24))) : _OSSwapInt32(arg));





}

static __inline__ __attribute__((always_inline)) uint64_t CFSwapInt64(uint64_t arg) {

    return (__builtin_constant_p(arg) ? ((__uint64_t)((((__uint64_t)(arg) & 0xff00000000000000ULL) >> 56) | (((__uint64_t)(arg) & 0x00ff000000000000ULL) >> 40) | (((__uint64_t)(arg) & 0x0000ff0000000000ULL) >> 24) | (((__uint64_t)(arg) & 0x000000ff00000000ULL) >> 8) | (((__uint64_t)(arg) & 0x00000000ff000000ULL) << 8) | (((__uint64_t)(arg) & 0x0000000000ff0000ULL) << 24) | (((__uint64_t)(arg) & 0x000000000000ff00ULL) << 40) | (((__uint64_t)(arg) & 0x00000000000000ffULL) << 56))) : _OSSwapInt64(arg));
# 76 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFByteOrder.h" 3
}

static __inline__ __attribute__((always_inline)) uint16_t CFSwapInt16BigToHost(uint16_t arg) {

    return (__builtin_constant_p(arg) ? ((__uint16_t)((((__uint16_t)(arg) & 0xff00) >> 8) | (((__uint16_t)(arg) & 0x00ff) << 8))) : _OSSwapInt16(arg));





}

static __inline__ __attribute__((always_inline)) uint32_t CFSwapInt32BigToHost(uint32_t arg) {

    return (__builtin_constant_p(arg) ? ((__uint32_t)((((__uint32_t)(arg) & 0xff000000) >> 24) | (((__uint32_t)(arg) & 0x00ff0000) >> 8) | (((__uint32_t)(arg) & 0x0000ff00) << 8) | (((__uint32_t)(arg) & 0x000000ff) << 24))) : _OSSwapInt32(arg));





}

static __inline__ __attribute__((always_inline)) uint64_t CFSwapInt64BigToHost(uint64_t arg) {

    return (__builtin_constant_p(arg) ? ((__uint64_t)((((__uint64_t)(arg) & 0xff00000000000000ULL) >> 56) | (((__uint64_t)(arg) & 0x00ff000000000000ULL) >> 40) | (((__uint64_t)(arg) & 0x0000ff0000000000ULL) >> 24) | (((__uint64_t)(arg) & 0x000000ff00000000ULL) >> 8) | (((__uint64_t)(arg) & 0x00000000ff000000ULL) << 8) | (((__uint64_t)(arg) & 0x0000000000ff0000ULL) << 24) | (((__uint64_t)(arg) & 0x000000000000ff00ULL) << 40) | (((__uint64_t)(arg) & 0x00000000000000ffULL) << 56))) : _OSSwapInt64(arg));





}

static __inline__ __attribute__((always_inline)) uint16_t CFSwapInt16HostToBig(uint16_t arg) {

    return (__builtin_constant_p(arg) ? ((__uint16_t)((((__uint16_t)(arg) & 0xff00) >> 8) | (((__uint16_t)(arg) & 0x00ff) << 8))) : _OSSwapInt16(arg));





}

static __inline__ __attribute__((always_inline)) uint32_t CFSwapInt32HostToBig(uint32_t arg) {

    return (__builtin_constant_p(arg) ? ((__uint32_t)((((__uint32_t)(arg) & 0xff000000) >> 24) | (((__uint32_t)(arg) & 0x00ff0000) >> 8) | (((__uint32_t)(arg) & 0x0000ff00) << 8) | (((__uint32_t)(arg) & 0x000000ff) << 24))) : _OSSwapInt32(arg));





}

static __inline__ __attribute__((always_inline)) uint64_t CFSwapInt64HostToBig(uint64_t arg) {

    return (__builtin_constant_p(arg) ? ((__uint64_t)((((__uint64_t)(arg) & 0xff00000000000000ULL) >> 56) | (((__uint64_t)(arg) & 0x00ff000000000000ULL) >> 40) | (((__uint64_t)(arg) & 0x0000ff0000000000ULL) >> 24) | (((__uint64_t)(arg) & 0x000000ff00000000ULL) >> 8) | (((__uint64_t)(arg) & 0x00000000ff000000ULL) << 8) | (((__uint64_t)(arg) & 0x0000000000ff0000ULL) << 24) | (((__uint64_t)(arg) & 0x000000000000ff00ULL) << 40) | (((__uint64_t)(arg) & 0x00000000000000ffULL) << 56))) : _OSSwapInt64(arg));





}

static __inline__ __attribute__((always_inline)) uint16_t CFSwapInt16LittleToHost(uint16_t arg) {

    return ((uint16_t)(arg));





}

static __inline__ __attribute__((always_inline)) uint32_t CFSwapInt32LittleToHost(uint32_t arg) {

    return ((uint32_t)(arg));





}

static __inline__ __attribute__((always_inline)) uint64_t CFSwapInt64LittleToHost(uint64_t arg) {

    return ((uint64_t)(arg));





}

static __inline__ __attribute__((always_inline)) uint16_t CFSwapInt16HostToLittle(uint16_t arg) {

    return ((uint16_t)(arg));





}

static __inline__ __attribute__((always_inline)) uint32_t CFSwapInt32HostToLittle(uint32_t arg) {

    return ((uint32_t)(arg));





}

static __inline__ __attribute__((always_inline)) uint64_t CFSwapInt64HostToLittle(uint64_t arg) {

    return ((uint64_t)(arg));





}

typedef struct {uint32_t v;} CFSwappedFloat32;
typedef struct {uint64_t v;} CFSwappedFloat64;

static __inline__ __attribute__((always_inline)) CFSwappedFloat32 CFConvertFloat32HostToSwapped(Float32 arg) {
    union CFSwap {
 Float32 v;
 CFSwappedFloat32 sv;
    } result;
    result.v = arg;

    result.sv.v = CFSwapInt32(result.sv.v);

    return result.sv;
}

static __inline__ __attribute__((always_inline)) Float32 CFConvertFloat32SwappedToHost(CFSwappedFloat32 arg) {
    union CFSwap {
 Float32 v;
 CFSwappedFloat32 sv;
    } result;
    result.sv = arg;

    result.sv.v = CFSwapInt32(result.sv.v);

    return result.v;
}

static __inline__ __attribute__((always_inline)) CFSwappedFloat64 CFConvertFloat64HostToSwapped(Float64 arg) {
    union CFSwap {
 Float64 v;
 CFSwappedFloat64 sv;
    } result;
    result.v = arg;

    result.sv.v = CFSwapInt64(result.sv.v);

    return result.sv;
}

static __inline__ __attribute__((always_inline)) Float64 CFConvertFloat64SwappedToHost(CFSwappedFloat64 arg) {
    union CFSwap {
 Float64 v;
 CFSwappedFloat64 sv;
    } result;
    result.sv = arg;

    result.sv.v = CFSwapInt64(result.sv.v);

    return result.v;
}

static __inline__ __attribute__((always_inline)) CFSwappedFloat32 CFConvertFloatHostToSwapped(float arg) {
    union CFSwap {
 float v;
 CFSwappedFloat32 sv;
    } result;
    result.v = arg;

    result.sv.v = CFSwapInt32(result.sv.v);

    return result.sv;
}

static __inline__ __attribute__((always_inline)) float CFConvertFloatSwappedToHost(CFSwappedFloat32 arg) {
    union CFSwap {
 float v;
 CFSwappedFloat32 sv;
    } result;
    result.sv = arg;

    result.sv.v = CFSwapInt32(result.sv.v);

    return result.v;
}

static __inline__ __attribute__((always_inline)) CFSwappedFloat64 CFConvertDoubleHostToSwapped(double arg) {
    union CFSwap {
 double v;
 CFSwappedFloat64 sv;
    } result;
    result.v = arg;

    result.sv.v = CFSwapInt64(result.sv.v);

    return result.sv;
}

static __inline__ __attribute__((always_inline)) double CFConvertDoubleSwappedToHost(CFSwappedFloat64 arg) {
    union CFSwap {
 double v;
 CFSwappedFloat64 sv;
    } result;
    result.sv = arg;

    result.sv.v = CFSwapInt64(result.sv.v);

    return result.v;
}

}
# 45 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCalendar.h" 1 3
# 10 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCalendar.h" 3
# 1 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDate.h" 1 3
# 10 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDate.h" 3
extern "C" {

typedef double CFTimeInterval;
typedef CFTimeInterval CFAbsoluteTime;



extern
CFAbsoluteTime CFAbsoluteTimeGetCurrent(void);

extern
const CFTimeInterval kCFAbsoluteTimeIntervalSince1970;
extern
const CFTimeInterval kCFAbsoluteTimeIntervalSince1904;

typedef const struct __CFDate * CFDateRef;

extern
CFTypeID CFDateGetTypeID(void);

extern
CFDateRef CFDateCreate(CFAllocatorRef allocator, CFAbsoluteTime at);

extern
CFAbsoluteTime CFDateGetAbsoluteTime(CFDateRef theDate);

extern
CFTimeInterval CFDateGetTimeIntervalSinceDate(CFDateRef theDate, CFDateRef otherDate);

extern
CFComparisonResult CFDateCompare(CFDateRef theDate, CFDateRef otherDate, void *context);

typedef const struct __CFTimeZone * CFTimeZoneRef;

typedef struct {
    SInt32 year;
    SInt8 month;
    SInt8 day;
    SInt8 hour;
    SInt8 minute;
    double second;
} CFGregorianDate;

typedef struct {
    SInt32 years;
    SInt32 months;
    SInt32 days;
    SInt32 hours;
    SInt32 minutes;
    double seconds;
} CFGregorianUnits;

enum {
    kCFGregorianUnitsYears = (1UL << 0),
    kCFGregorianUnitsMonths = (1UL << 1),
    kCFGregorianUnitsDays = (1UL << 2),
    kCFGregorianUnitsHours = (1UL << 3),
    kCFGregorianUnitsMinutes = (1UL << 4),
    kCFGregorianUnitsSeconds = (1UL << 5),
    kCFGregorianAllUnits = 0x00FFFFFF
};
typedef CFOptionFlags CFGregorianUnitFlags;

extern
Boolean CFGregorianDateIsValid(CFGregorianDate gdate, CFOptionFlags unitFlags);

extern
CFAbsoluteTime CFGregorianDateGetAbsoluteTime(CFGregorianDate gdate, CFTimeZoneRef tz);

extern
CFGregorianDate CFAbsoluteTimeGetGregorianDate(CFAbsoluteTime at, CFTimeZoneRef tz);

extern
CFAbsoluteTime CFAbsoluteTimeAddGregorianUnits(CFAbsoluteTime at, CFTimeZoneRef tz, CFGregorianUnits units);

extern
CFGregorianUnits CFAbsoluteTimeGetDifferenceAsGregorianUnits(CFAbsoluteTime at1, CFAbsoluteTime at2, CFTimeZoneRef tz, CFOptionFlags unitFlags);

extern
SInt32 CFAbsoluteTimeGetDayOfWeek(CFAbsoluteTime at, CFTimeZoneRef tz);

extern
SInt32 CFAbsoluteTimeGetDayOfYear(CFAbsoluteTime at, CFTimeZoneRef tz);

extern
SInt32 CFAbsoluteTimeGetWeekOfYear(CFAbsoluteTime at, CFTimeZoneRef tz);

}
# 11 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCalendar.h" 2 3
# 1 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTimeZone.h" 1 3
# 15 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTimeZone.h" 3
extern "C" {

extern
CFTypeID CFTimeZoneGetTypeID(void);

extern
CFTimeZoneRef CFTimeZoneCopySystem(void);

extern
void CFTimeZoneResetSystem(void);

extern
CFTimeZoneRef CFTimeZoneCopyDefault(void);

extern
void CFTimeZoneSetDefault(CFTimeZoneRef tz);

extern
CFArrayRef CFTimeZoneCopyKnownNames(void);

extern
CFDictionaryRef CFTimeZoneCopyAbbreviationDictionary(void);

extern
void CFTimeZoneSetAbbreviationDictionary(CFDictionaryRef dict);

extern
CFTimeZoneRef CFTimeZoneCreate(CFAllocatorRef allocator, CFStringRef name, CFDataRef data);

extern
CFTimeZoneRef CFTimeZoneCreateWithTimeIntervalFromGMT(CFAllocatorRef allocator, CFTimeInterval ti);

extern
CFTimeZoneRef CFTimeZoneCreateWithName(CFAllocatorRef allocator, CFStringRef name, Boolean tryAbbrev);

extern
CFStringRef CFTimeZoneGetName(CFTimeZoneRef tz);

extern
CFDataRef CFTimeZoneGetData(CFTimeZoneRef tz);

extern
CFTimeInterval CFTimeZoneGetSecondsFromGMT(CFTimeZoneRef tz, CFAbsoluteTime at);

extern
CFStringRef CFTimeZoneCopyAbbreviation(CFTimeZoneRef tz, CFAbsoluteTime at);

extern
Boolean CFTimeZoneIsDaylightSavingTime(CFTimeZoneRef tz, CFAbsoluteTime at);

extern
CFTimeInterval CFTimeZoneGetDaylightSavingTimeOffset(CFTimeZoneRef tz, CFAbsoluteTime at) ;

extern
CFAbsoluteTime CFTimeZoneGetNextDaylightSavingTimeTransition(CFTimeZoneRef tz, CFAbsoluteTime at) ;


enum {
 kCFTimeZoneNameStyleStandard,
 kCFTimeZoneNameStyleShortStandard,
 kCFTimeZoneNameStyleDaylightSaving,
 kCFTimeZoneNameStyleShortDaylightSaving,
 kCFTimeZoneNameStyleGeneric,
 kCFTimeZoneNameStyleShortGeneric
};
typedef CFIndex CFTimeZoneNameStyle;

extern
CFStringRef CFTimeZoneCopyLocalizedName(CFTimeZoneRef tz, CFTimeZoneNameStyle style, CFLocaleRef locale) ;


extern
const CFStringRef kCFTimeZoneSystemTimeZoneDidChangeNotification ;

}
# 12 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCalendar.h" 2 3



extern "C" {

typedef struct __CFCalendar * CFCalendarRef;

extern
CFTypeID CFCalendarGetTypeID(void) ;

extern
CFCalendarRef CFCalendarCopyCurrent(void) ;

extern
CFCalendarRef CFCalendarCreateWithIdentifier(CFAllocatorRef allocator, CFStringRef identifier) ;



extern
CFStringRef CFCalendarGetIdentifier(CFCalendarRef calendar) ;


extern
CFLocaleRef CFCalendarCopyLocale(CFCalendarRef calendar) ;

extern
void CFCalendarSetLocale(CFCalendarRef calendar, CFLocaleRef locale) ;

extern
CFTimeZoneRef CFCalendarCopyTimeZone(CFCalendarRef calendar) ;

extern
void CFCalendarSetTimeZone(CFCalendarRef calendar, CFTimeZoneRef tz) ;

extern
CFIndex CFCalendarGetFirstWeekday(CFCalendarRef calendar) ;

extern
void CFCalendarSetFirstWeekday(CFCalendarRef calendar, CFIndex wkdy) ;

extern
CFIndex CFCalendarGetMinimumDaysInFirstWeek(CFCalendarRef calendar) ;

extern
void CFCalendarSetMinimumDaysInFirstWeek(CFCalendarRef calendar, CFIndex mwd) ;


enum {
 kCFCalendarUnitEra = (1UL << 1),
 kCFCalendarUnitYear = (1UL << 2),
 kCFCalendarUnitMonth = (1UL << 3),
 kCFCalendarUnitDay = (1UL << 4),
 kCFCalendarUnitHour = (1UL << 5),
 kCFCalendarUnitMinute = (1UL << 6),
 kCFCalendarUnitSecond = (1UL << 7),
 kCFCalendarUnitWeek = (1UL << 8),
 kCFCalendarUnitWeekday = (1UL << 9),
 kCFCalendarUnitWeekdayOrdinal = (1UL << 10),

 kCFCalendarUnitQuarter = (1UL << 11),

};
typedef CFOptionFlags CFCalendarUnit;

extern
CFRange CFCalendarGetMinimumRangeOfUnit(CFCalendarRef calendar, CFCalendarUnit unit) ;

extern
CFRange CFCalendarGetMaximumRangeOfUnit(CFCalendarRef calendar, CFCalendarUnit unit) ;

extern
CFRange CFCalendarGetRangeOfUnit(CFCalendarRef calendar, CFCalendarUnit smallerUnit, CFCalendarUnit biggerUnit, CFAbsoluteTime at) ;

extern
CFIndex CFCalendarGetOrdinalityOfUnit(CFCalendarRef calendar, CFCalendarUnit smallerUnit, CFCalendarUnit biggerUnit, CFAbsoluteTime at) ;

extern
Boolean CFCalendarGetTimeRangeOfUnit(CFCalendarRef calendar, CFCalendarUnit unit, CFAbsoluteTime at, CFAbsoluteTime *startp, CFTimeInterval *tip) ;

extern
Boolean CFCalendarComposeAbsoluteTime(CFCalendarRef calendar, CFAbsoluteTime *at, const char *componentDesc, ...) ;

extern
Boolean CFCalendarDecomposeAbsoluteTime(CFCalendarRef calendar, CFAbsoluteTime at, const char *componentDesc, ...) ;


enum {
    kCFCalendarComponentsWrap = (1UL << 0)
};

extern
Boolean CFCalendarAddComponents(CFCalendarRef calendar, CFAbsoluteTime *at, CFOptionFlags options, const char *componentDesc, ...) ;

extern
Boolean CFCalendarGetComponentDifference(CFCalendarRef calendar, CFAbsoluteTime startingAT, CFAbsoluteTime resultAT, CFOptionFlags options, const char *componentDesc, ...) ;


}
# 46 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3



# 1 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDateFormatter.h" 1 3
# 14 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDateFormatter.h" 3
extern "C" {

typedef struct __CFDateFormatter *CFDateFormatterRef;



extern
CFStringRef CFDateFormatterCreateDateFormatFromTemplate(CFAllocatorRef allocator, CFStringRef tmplate, CFOptionFlags options, CFLocaleRef locale) ;


extern
CFTypeID CFDateFormatterGetTypeID(void) ;

enum {
 kCFDateFormatterNoStyle = 0,
 kCFDateFormatterShortStyle = 1,
 kCFDateFormatterMediumStyle = 2,
 kCFDateFormatterLongStyle = 3,
 kCFDateFormatterFullStyle = 4
};
typedef CFIndex CFDateFormatterStyle;
# 48 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDateFormatter.h" 3
extern
CFDateFormatterRef CFDateFormatterCreate(CFAllocatorRef allocator, CFLocaleRef locale, CFDateFormatterStyle dateStyle, CFDateFormatterStyle timeStyle) ;



extern
CFLocaleRef CFDateFormatterGetLocale(CFDateFormatterRef formatter) ;

extern
CFDateFormatterStyle CFDateFormatterGetDateStyle(CFDateFormatterRef formatter) ;

extern
CFDateFormatterStyle CFDateFormatterGetTimeStyle(CFDateFormatterRef formatter) ;


extern
CFStringRef CFDateFormatterGetFormat(CFDateFormatterRef formatter) ;

extern
void CFDateFormatterSetFormat(CFDateFormatterRef formatter, CFStringRef formatString) ;







extern
CFStringRef CFDateFormatterCreateStringWithDate(CFAllocatorRef allocator, CFDateFormatterRef formatter, CFDateRef date) ;

extern
CFStringRef CFDateFormatterCreateStringWithAbsoluteTime(CFAllocatorRef allocator, CFDateFormatterRef formatter, CFAbsoluteTime at) ;




extern
CFDateRef CFDateFormatterCreateDateFromString(CFAllocatorRef allocator, CFDateFormatterRef formatter, CFStringRef string, CFRange *rangep) ;

extern
Boolean CFDateFormatterGetAbsoluteTimeFromString(CFDateFormatterRef formatter, CFStringRef string, CFRange *rangep, CFAbsoluteTime *atp) ;
# 98 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDateFormatter.h" 3
extern
void CFDateFormatterSetProperty(CFDateFormatterRef formatter, CFStringRef key, CFTypeRef value) ;

extern
CFTypeRef CFDateFormatterCopyProperty(CFDateFormatterRef formatter, CFStringRef key) ;



extern const CFStringRef kCFDateFormatterIsLenient ;
extern const CFStringRef kCFDateFormatterTimeZone ;
extern const CFStringRef kCFDateFormatterCalendarName ;
extern const CFStringRef kCFDateFormatterDefaultFormat ;
extern const CFStringRef kCFDateFormatterTwoDigitStartDate ;
extern const CFStringRef kCFDateFormatterDefaultDate ;
extern const CFStringRef kCFDateFormatterCalendar ;
extern const CFStringRef kCFDateFormatterEraSymbols ;
extern const CFStringRef kCFDateFormatterMonthSymbols ;
extern const CFStringRef kCFDateFormatterShortMonthSymbols ;
extern const CFStringRef kCFDateFormatterWeekdaySymbols ;
extern const CFStringRef kCFDateFormatterShortWeekdaySymbols ;
extern const CFStringRef kCFDateFormatterAMSymbol ;
extern const CFStringRef kCFDateFormatterPMSymbol ;
extern const CFStringRef kCFDateFormatterLongEraSymbols ;
extern const CFStringRef kCFDateFormatterVeryShortMonthSymbols ;
extern const CFStringRef kCFDateFormatterStandaloneMonthSymbols ;
extern const CFStringRef kCFDateFormatterShortStandaloneMonthSymbols ;
extern const CFStringRef kCFDateFormatterVeryShortStandaloneMonthSymbols ;
extern const CFStringRef kCFDateFormatterVeryShortWeekdaySymbols ;
extern const CFStringRef kCFDateFormatterStandaloneWeekdaySymbols ;
extern const CFStringRef kCFDateFormatterShortStandaloneWeekdaySymbols ;
extern const CFStringRef kCFDateFormatterVeryShortStandaloneWeekdaySymbols ;
extern const CFStringRef kCFDateFormatterQuarterSymbols ;
extern const CFStringRef kCFDateFormatterShortQuarterSymbols ;
extern const CFStringRef kCFDateFormatterStandaloneQuarterSymbols ;
extern const CFStringRef kCFDateFormatterShortStandaloneQuarterSymbols ;
extern const CFStringRef kCFDateFormatterGregorianStartDate ;
extern const CFStringRef kCFDateFormatterDoesRelativeDateFormattingKey ;
# 149 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDateFormatter.h" 3
}
# 50 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3



# 1 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFMessagePort.h" 1 3
# 9 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFMessagePort.h" 3
# 1 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFRunLoop.h" 1 3
# 13 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFRunLoop.h" 3
# 1 "/usr/include/mach/port.h" 1 3 4
# 91 "/usr/include/mach/port.h" 3 4
# 1 "/usr/include/mach/boolean.h" 1 3 4
# 73 "/usr/include/mach/boolean.h" 3 4
# 1 "/usr/include/mach/machine/boolean.h" 1 3 4
# 35 "/usr/include/mach/machine/boolean.h" 3 4
# 1 "/usr/include/mach/i386/boolean.h" 1 3 4
# 69 "/usr/include/mach/i386/boolean.h" 3 4
typedef unsigned int boolean_t;
# 36 "/usr/include/mach/machine/boolean.h" 2 3 4
# 74 "/usr/include/mach/boolean.h" 2 3 4
# 92 "/usr/include/mach/port.h" 2 3 4
# 1 "/usr/include/mach/machine/vm_types.h" 1 3 4
# 35 "/usr/include/mach/machine/vm_types.h" 3 4
# 1 "/usr/include/mach/i386/vm_types.h" 1 3 4
# 73 "/usr/include/mach/i386/vm_types.h" 3 4
# 1 "/usr/include/mach/i386/vm_param.h" 1 3 4
# 74 "/usr/include/mach/i386/vm_types.h" 2 3 4
# 93 "/usr/include/mach/i386/vm_types.h" 3 4
typedef __darwin_natural_t natural_t;
typedef int integer_t;






typedef uintptr_t vm_offset_t;
# 112 "/usr/include/mach/i386/vm_types.h" 3 4
typedef uintptr_t vm_size_t;
# 124 "/usr/include/mach/i386/vm_types.h" 3 4
typedef uint64_t mach_vm_address_t;
typedef uint64_t mach_vm_offset_t;
typedef uint64_t mach_vm_size_t;

typedef uint64_t vm_map_offset_t;
typedef uint64_t vm_map_address_t;
typedef uint64_t vm_map_size_t;
# 36 "/usr/include/mach/machine/vm_types.h" 2 3 4
# 93 "/usr/include/mach/port.h" 2 3 4
# 106 "/usr/include/mach/port.h" 3 4
typedef natural_t mach_port_name_t;
typedef mach_port_name_t *mach_port_name_array_t;
# 128 "/usr/include/mach/port.h" 3 4
typedef mach_port_name_t mach_port_t;



typedef mach_port_t *mach_port_array_t;
# 190 "/usr/include/mach/port.h" 3 4
typedef natural_t mach_port_right_t;
# 200 "/usr/include/mach/port.h" 3 4
typedef natural_t mach_port_type_t;
typedef mach_port_type_t *mach_port_type_array_t;
# 233 "/usr/include/mach/port.h" 3 4
typedef natural_t mach_port_urefs_t;
typedef integer_t mach_port_delta_t;



typedef natural_t mach_port_seqno_t;
typedef natural_t mach_port_mscount_t;
typedef natural_t mach_port_msgcount_t;
typedef natural_t mach_port_rights_t;






typedef unsigned int mach_port_srights_t;

typedef struct mach_port_status {
 mach_port_rights_t mps_pset;
 mach_port_seqno_t mps_seqno;
 mach_port_mscount_t mps_mscount;
 mach_port_msgcount_t mps_qlimit;
 mach_port_msgcount_t mps_msgcount;
 mach_port_rights_t mps_sorights;
 boolean_t mps_srights;
 boolean_t mps_pdrequest;
 boolean_t mps_nsrequest;
 natural_t mps_flags;
} mach_port_status_t;
# 273 "/usr/include/mach/port.h" 3 4
typedef struct mach_port_limits {
 mach_port_msgcount_t mpl_qlimit;
} mach_port_limits_t;

typedef integer_t *mach_port_info_t;


typedef int mach_port_flavor_t;
# 295 "/usr/include/mach/port.h" 3 4
typedef struct mach_port_qos {
 unsigned int name:1;
 unsigned int prealloc:1;
 boolean_t pad1:30;
 natural_t len;
} mach_port_qos_t;
# 14 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFRunLoop.h" 2 3


extern "C" {

typedef struct __CFRunLoop * CFRunLoopRef;

typedef struct __CFRunLoopSource * CFRunLoopSourceRef;

typedef struct __CFRunLoopObserver * CFRunLoopObserverRef;

typedef struct __CFRunLoopTimer * CFRunLoopTimerRef;


enum {
    kCFRunLoopRunFinished = 1,
    kCFRunLoopRunStopped = 2,
    kCFRunLoopRunTimedOut = 3,
    kCFRunLoopRunHandledSource = 4
};


enum {
    kCFRunLoopEntry = (1UL << 0),
    kCFRunLoopBeforeTimers = (1UL << 1),
    kCFRunLoopBeforeSources = (1UL << 2),
    kCFRunLoopBeforeWaiting = (1UL << 5),
    kCFRunLoopAfterWaiting = (1UL << 6),
    kCFRunLoopExit = (1UL << 7),
    kCFRunLoopAllActivities = 0x0FFFFFFFU
};
typedef CFOptionFlags CFRunLoopActivity;

extern const CFStringRef kCFRunLoopDefaultMode;
extern const CFStringRef kCFRunLoopCommonModes;

extern CFTypeID CFRunLoopGetTypeID(void);

extern CFRunLoopRef CFRunLoopGetCurrent(void);
extern CFRunLoopRef CFRunLoopGetMain(void) ;

extern CFStringRef CFRunLoopCopyCurrentMode(CFRunLoopRef rl);

extern CFArrayRef CFRunLoopCopyAllModes(CFRunLoopRef rl);

extern void CFRunLoopAddCommonMode(CFRunLoopRef rl, CFStringRef mode);

extern CFAbsoluteTime CFRunLoopGetNextTimerFireDate(CFRunLoopRef rl, CFStringRef mode);

extern void CFRunLoopRun(void);
extern SInt32 CFRunLoopRunInMode(CFStringRef mode, CFTimeInterval seconds, Boolean returnAfterSourceHandled);
extern Boolean CFRunLoopIsWaiting(CFRunLoopRef rl);
extern void CFRunLoopWakeUp(CFRunLoopRef rl);
extern void CFRunLoopStop(CFRunLoopRef rl);


extern void CFRunLoopPerformBlock(CFRunLoopRef rl, CFTypeRef mode, void (^block)(void)) ;


extern Boolean CFRunLoopContainsSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFStringRef mode);
extern void CFRunLoopAddSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFStringRef mode);
extern void CFRunLoopRemoveSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFStringRef mode);

extern Boolean CFRunLoopContainsObserver(CFRunLoopRef rl, CFRunLoopObserverRef observer, CFStringRef mode);
extern void CFRunLoopAddObserver(CFRunLoopRef rl, CFRunLoopObserverRef observer, CFStringRef mode);
extern void CFRunLoopRemoveObserver(CFRunLoopRef rl, CFRunLoopObserverRef observer, CFStringRef mode);

extern Boolean CFRunLoopContainsTimer(CFRunLoopRef rl, CFRunLoopTimerRef timer, CFStringRef mode);
extern void CFRunLoopAddTimer(CFRunLoopRef rl, CFRunLoopTimerRef timer, CFStringRef mode);
extern void CFRunLoopRemoveTimer(CFRunLoopRef rl, CFRunLoopTimerRef timer, CFStringRef mode);

typedef struct {
    CFIndex version;
    void * info;
    const void *(*retain)(const void *info);
    void (*release)(const void *info);
    CFStringRef (*copyDescription)(const void *info);
    Boolean (*equal)(const void *info1, const void *info2);
    CFHashCode (*hash)(const void *info);
    void (*schedule)(void *info, CFRunLoopRef rl, CFStringRef mode);
    void (*cancel)(void *info, CFRunLoopRef rl, CFStringRef mode);
    void (*perform)(void *info);
} CFRunLoopSourceContext;

typedef struct {
    CFIndex version;
    void * info;
    const void *(*retain)(const void *info);
    void (*release)(const void *info);
    CFStringRef (*copyDescription)(const void *info);
    Boolean (*equal)(const void *info1, const void *info2);
    CFHashCode (*hash)(const void *info);

    mach_port_t (*getPort)(void *info);
    void * (*perform)(void *msg, CFIndex size, CFAllocatorRef allocator, void *info);




} CFRunLoopSourceContext1;

extern CFTypeID CFRunLoopSourceGetTypeID(void);

extern CFRunLoopSourceRef CFRunLoopSourceCreate(CFAllocatorRef allocator, CFIndex order, CFRunLoopSourceContext *context);

extern CFIndex CFRunLoopSourceGetOrder(CFRunLoopSourceRef source);
extern void CFRunLoopSourceInvalidate(CFRunLoopSourceRef source);
extern Boolean CFRunLoopSourceIsValid(CFRunLoopSourceRef source);
extern void CFRunLoopSourceGetContext(CFRunLoopSourceRef source, CFRunLoopSourceContext *context);
extern void CFRunLoopSourceSignal(CFRunLoopSourceRef source);

typedef struct {
    CFIndex version;
    void * info;
    const void *(*retain)(const void *info);
    void (*release)(const void *info);
    CFStringRef (*copyDescription)(const void *info);
} CFRunLoopObserverContext;

typedef void (*CFRunLoopObserverCallBack)(CFRunLoopObserverRef observer, CFRunLoopActivity activity, void *info);

extern CFTypeID CFRunLoopObserverGetTypeID(void);

extern CFRunLoopObserverRef CFRunLoopObserverCreate(CFAllocatorRef allocator, CFOptionFlags activities, Boolean repeats, CFIndex order, CFRunLoopObserverCallBack callout, CFRunLoopObserverContext *context);

extern CFOptionFlags CFRunLoopObserverGetActivities(CFRunLoopObserverRef observer);
extern Boolean CFRunLoopObserverDoesRepeat(CFRunLoopObserverRef observer);
extern CFIndex CFRunLoopObserverGetOrder(CFRunLoopObserverRef observer);
extern void CFRunLoopObserverInvalidate(CFRunLoopObserverRef observer);
extern Boolean CFRunLoopObserverIsValid(CFRunLoopObserverRef observer);
extern void CFRunLoopObserverGetContext(CFRunLoopObserverRef observer, CFRunLoopObserverContext *context);

typedef struct {
    CFIndex version;
    void * info;
    const void *(*retain)(const void *info);
    void (*release)(const void *info);
    CFStringRef (*copyDescription)(const void *info);
} CFRunLoopTimerContext;

typedef void (*CFRunLoopTimerCallBack)(CFRunLoopTimerRef timer, void *info);

extern CFTypeID CFRunLoopTimerGetTypeID(void);

extern CFRunLoopTimerRef CFRunLoopTimerCreate(CFAllocatorRef allocator, CFAbsoluteTime fireDate, CFTimeInterval interval, CFOptionFlags flags, CFIndex order, CFRunLoopTimerCallBack callout, CFRunLoopTimerContext *context);
extern CFAbsoluteTime CFRunLoopTimerGetNextFireDate(CFRunLoopTimerRef timer);
extern void CFRunLoopTimerSetNextFireDate(CFRunLoopTimerRef timer, CFAbsoluteTime fireDate);
extern CFTimeInterval CFRunLoopTimerGetInterval(CFRunLoopTimerRef timer);
extern Boolean CFRunLoopTimerDoesRepeat(CFRunLoopTimerRef timer);
extern CFIndex CFRunLoopTimerGetOrder(CFRunLoopTimerRef timer);
extern void CFRunLoopTimerInvalidate(CFRunLoopTimerRef timer);
extern Boolean CFRunLoopTimerIsValid(CFRunLoopTimerRef timer);
extern void CFRunLoopTimerGetContext(CFRunLoopTimerRef timer, CFRunLoopTimerContext *context);

}
# 10 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFMessagePort.h" 2 3


# 1 "/usr/include/dispatch/dispatch.h" 1 3 4
# 26 "/usr/include/dispatch/dispatch.h" 3 4
# 1 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/stddef.h" 1 3 4
# 27 "/usr/include/dispatch/dispatch.h" 2 3 4
# 39 "/usr/include/dispatch/dispatch.h" 3 4
# 1 "/usr/include/dispatch/base.h" 1 3 4
# 33 "/usr/include/dispatch/base.h" 3 4
typedef struct dispatch_object_s {
private:
 dispatch_object_s();
 ~dispatch_object_s();
 dispatch_object_s(const dispatch_object_s &);
 void operator=(const dispatch_object_s &);
} *dispatch_object_t;
# 53 "/usr/include/dispatch/base.h" 3 4
typedef void (*dispatch_function_t)(void *);
# 40 "/usr/include/dispatch/dispatch.h" 2 3 4
# 1 "/usr/include/dispatch/object.h" 1 3 4
# 29 "/usr/include/dispatch/object.h" 3 4
extern "C" {
# 43 "/usr/include/dispatch/object.h" 3 4
__attribute__((visibility("default")))
__attribute__((__nonnull__(2))) __attribute__((__nothrow__)) __attribute__((__format__(printf,2,3)))
void
dispatch_debug(dispatch_object_t object, const char *message, ...);

__attribute__((visibility("default")))
__attribute__((__nonnull__(2))) __attribute__((__nothrow__)) __attribute__((__format__(printf,2,0)))
void
dispatch_debugv(dispatch_object_t object, const char *message, va_list ap);
# 67 "/usr/include/dispatch/object.h" 3 4
__attribute__((visibility("default")))
__attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_retain(dispatch_object_t object);
# 88 "/usr/include/dispatch/object.h" 3 4
__attribute__((visibility("default")))
__attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_release(dispatch_object_t object);
# 105 "/usr/include/dispatch/object.h" 3 4
__attribute__((visibility("default")))
__attribute__((__nonnull__)) __attribute__((__pure__)) __attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
void *
dispatch_get_context(dispatch_object_t object);
# 123 "/usr/include/dispatch/object.h" 3 4
__attribute__((visibility("default")))
__attribute__((__nothrow__))
void
dispatch_set_context(dispatch_object_t object, void *context);
# 149 "/usr/include/dispatch/object.h" 3 4
__attribute__((visibility("default")))
__attribute__((__nothrow__))
void
dispatch_set_finalizer_f(dispatch_object_t object,
 dispatch_function_t finalizer);
# 173 "/usr/include/dispatch/object.h" 3 4
__attribute__((visibility("default")))
__attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_suspend(dispatch_object_t object);
# 188 "/usr/include/dispatch/object.h" 3 4
__attribute__((visibility("default")))
__attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_resume(dispatch_object_t object);

}
# 41 "/usr/include/dispatch/dispatch.h" 2 3 4
# 1 "/usr/include/dispatch/time.h" 1 3 4
# 31 "/usr/include/dispatch/time.h" 3 4
extern "C" {

struct timespec;
# 57 "/usr/include/dispatch/time.h" 3 4
typedef uint64_t dispatch_time_t;
# 82 "/usr/include/dispatch/time.h" 3 4
__attribute__((visibility("default")))
__attribute__((__nothrow__))
dispatch_time_t
dispatch_time(dispatch_time_t when, int64_t delta);
# 106 "/usr/include/dispatch/time.h" 3 4
__attribute__((visibility("default")))
__attribute__((__nothrow__))
dispatch_time_t
dispatch_walltime(const struct timespec *when, int64_t delta);

}
# 42 "/usr/include/dispatch/dispatch.h" 2 3 4
# 1 "/usr/include/dispatch/queue.h" 1 3 4
# 67 "/usr/include/dispatch/queue.h" 3 4
typedef struct dispatch_queue_s : public dispatch_object_s {} *dispatch_queue_t;;







typedef struct dispatch_queue_attr_s : public dispatch_object_s {} *dispatch_queue_attr_t;;
# 111 "/usr/include/dispatch/queue.h" 3 4
typedef void (^dispatch_block_t)(void);


extern "C" {
# 145 "/usr/include/dispatch/queue.h" 3 4
__attribute__((visibility("default")))
__attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_async(dispatch_queue_t queue, dispatch_block_t block);
# 175 "/usr/include/dispatch/queue.h" 3 4
__attribute__((visibility("default")))
__attribute__((__nonnull__(1))) __attribute__((__nonnull__(3))) __attribute__((__nothrow__))
void
dispatch_async_f(dispatch_queue_t queue,
 void *context,
 dispatch_function_t work);
# 213 "/usr/include/dispatch/queue.h" 3 4
__attribute__((visibility("default")))
__attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_sync(dispatch_queue_t queue, dispatch_block_t block);
# 241 "/usr/include/dispatch/queue.h" 3 4
__attribute__((visibility("default")))
__attribute__((__nonnull__(1))) __attribute__((__nonnull__(3))) __attribute__((__nothrow__))
void
dispatch_sync_f(dispatch_queue_t queue,
 void *context,
 dispatch_function_t work);
# 274 "/usr/include/dispatch/queue.h" 3 4
__attribute__((visibility("default")))
__attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_apply(size_t iterations, dispatch_queue_t queue, void (^block)(size_t));
# 306 "/usr/include/dispatch/queue.h" 3 4
__attribute__((visibility("default")))
__attribute__((__nonnull__(2))) __attribute__((__nonnull__(4))) __attribute__((__nothrow__))
void
dispatch_apply_f(size_t iterations, dispatch_queue_t queue,
 void *context,
 void (*work)(void *, size_t));
# 328 "/usr/include/dispatch/queue.h" 3 4
__attribute__((visibility("default")))
__attribute__((__pure__)) __attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
dispatch_queue_t
dispatch_get_current_queue(void);
# 348 "/usr/include/dispatch/queue.h" 3 4
__attribute__((visibility("default")))
extern struct dispatch_queue_s _dispatch_main_q;
# 372 "/usr/include/dispatch/queue.h" 3 4
enum {
 DISPATCH_QUEUE_PRIORITY_HIGH = 2,
 DISPATCH_QUEUE_PRIORITY_DEFAULT = 0,
 DISPATCH_QUEUE_PRIORITY_LOW = -2,
};
# 399 "/usr/include/dispatch/queue.h" 3 4
__attribute__((visibility("default")))
__attribute__((__pure__)) __attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
dispatch_queue_t
dispatch_get_global_queue(long priority, unsigned long flags);
# 428 "/usr/include/dispatch/queue.h" 3 4
__attribute__((visibility("default")))
__attribute__((__malloc__)) __attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
dispatch_queue_t
dispatch_queue_create(const char *label, dispatch_queue_attr_t attr);
# 446 "/usr/include/dispatch/queue.h" 3 4
__attribute__((visibility("default")))
__attribute__((__nonnull__)) __attribute__((__pure__)) __attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
const char *
dispatch_queue_get_label(dispatch_queue_t queue);
# 479 "/usr/include/dispatch/queue.h" 3 4
__attribute__((visibility("default")))
__attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_set_target_queue(dispatch_object_t object, dispatch_queue_t queue);
# 497 "/usr/include/dispatch/queue.h" 3 4
__attribute__((visibility("default")))
__attribute__((__nothrow__)) __attribute__((__noreturn__))
void
dispatch_main(void);
# 525 "/usr/include/dispatch/queue.h" 3 4
__attribute__((visibility("default")))
__attribute__((__nonnull__(2))) __attribute__((__nonnull__(3))) __attribute__((__nothrow__))
void
dispatch_after(dispatch_time_t when,
 dispatch_queue_t queue,
 dispatch_block_t block);
# 558 "/usr/include/dispatch/queue.h" 3 4
__attribute__((visibility("default")))
__attribute__((__nonnull__(2))) __attribute__((__nonnull__(4))) __attribute__((__nothrow__))
void
dispatch_after_f(dispatch_time_t when,
 dispatch_queue_t queue,
 void *context,
 dispatch_function_t work);

}
# 43 "/usr/include/dispatch/dispatch.h" 2 3 4
# 1 "/usr/include/dispatch/source.h" 1 3 4
# 30 "/usr/include/dispatch/source.h" 3 4
# 1 "/usr/include/mach/message.h" 1 3 4
# 77 "/usr/include/mach/message.h" 3 4
# 1 "/usr/include/mach/kern_return.h" 1 3 4
# 70 "/usr/include/mach/kern_return.h" 3 4
# 1 "/usr/include/mach/machine/kern_return.h" 1 3 4
# 35 "/usr/include/mach/machine/kern_return.h" 3 4
# 1 "/usr/include/mach/i386/kern_return.h" 1 3 4
# 71 "/usr/include/mach/i386/kern_return.h" 3 4
typedef int kern_return_t;
# 36 "/usr/include/mach/machine/kern_return.h" 2 3 4
# 71 "/usr/include/mach/kern_return.h" 2 3 4
# 78 "/usr/include/mach/message.h" 2 3 4
# 89 "/usr/include/mach/message.h" 3 4
typedef natural_t mach_msg_timeout_t;
# 172 "/usr/include/mach/message.h" 3 4
typedef unsigned int mach_msg_bits_t;
typedef natural_t mach_msg_size_t;
typedef integer_t mach_msg_id_t;




typedef unsigned int mach_msg_type_name_t;
# 189 "/usr/include/mach/message.h" 3 4
typedef unsigned int mach_msg_copy_options_t;
# 211 "/usr/include/mach/message.h" 3 4
typedef unsigned int mach_msg_descriptor_type_t;






#pragma pack(4)

typedef struct
{
  natural_t pad1;
  mach_msg_size_t pad2;
  unsigned int pad3 : 24;
  mach_msg_descriptor_type_t type : 8;
} mach_msg_type_descriptor_t;

typedef struct
{
  mach_port_t name;


  mach_msg_size_t pad1;

  unsigned int pad2 : 16;
  mach_msg_type_name_t disposition : 8;
  mach_msg_descriptor_type_t type : 8;
} mach_msg_port_descriptor_t;

typedef struct
{
  uint32_t address;
  mach_msg_size_t size;
  boolean_t deallocate: 8;
  mach_msg_copy_options_t copy: 8;
  unsigned int pad1: 8;
  mach_msg_descriptor_type_t type: 8;
} mach_msg_ool_descriptor32_t;

typedef struct
{
  uint64_t address;
  boolean_t deallocate: 8;
  mach_msg_copy_options_t copy: 8;
  unsigned int pad1: 8;
  mach_msg_descriptor_type_t type: 8;
  mach_msg_size_t size;
} mach_msg_ool_descriptor64_t;

typedef struct
{
  void* address;



  boolean_t deallocate: 8;
  mach_msg_copy_options_t copy: 8;
  unsigned int pad1: 8;
  mach_msg_descriptor_type_t type: 8;

  mach_msg_size_t size;




} mach_msg_ool_descriptor_t;

typedef struct
{
  uint32_t address;
  mach_msg_size_t count;
  boolean_t deallocate: 8;
  mach_msg_copy_options_t copy: 8;
  mach_msg_type_name_t disposition : 8;
  mach_msg_descriptor_type_t type : 8;
} mach_msg_ool_ports_descriptor32_t;

typedef struct
{
  uint64_t address;
  boolean_t deallocate: 8;
  mach_msg_copy_options_t copy: 8;
  mach_msg_type_name_t disposition : 8;
  mach_msg_descriptor_type_t type : 8;
  mach_msg_size_t count;
} mach_msg_ool_ports_descriptor64_t;

typedef struct
{
  void* address;



  boolean_t deallocate: 8;
  mach_msg_copy_options_t copy: 8;
  mach_msg_type_name_t disposition : 8;
  mach_msg_descriptor_type_t type : 8;

  mach_msg_size_t count;




} mach_msg_ool_ports_descriptor_t;
# 330 "/usr/include/mach/message.h" 3 4
typedef union
{
  mach_msg_port_descriptor_t port;
  mach_msg_ool_descriptor_t out_of_line;
  mach_msg_ool_ports_descriptor_t ool_ports;
  mach_msg_type_descriptor_t type;
} mach_msg_descriptor_t;


typedef struct
{
        mach_msg_size_t msgh_descriptor_count;
} mach_msg_body_t;




typedef struct
{
  mach_msg_bits_t msgh_bits;
  mach_msg_size_t msgh_size;
  mach_port_t msgh_remote_port;
  mach_port_t msgh_local_port;
  mach_msg_size_t msgh_reserved;
  mach_msg_id_t msgh_id;
} mach_msg_header_t;



typedef struct
{
        mach_msg_header_t header;
        mach_msg_body_t body;
} mach_msg_base_t;

typedef unsigned int mach_msg_trailer_type_t;



typedef unsigned int mach_msg_trailer_size_t;

typedef struct
{
  mach_msg_trailer_type_t msgh_trailer_type;
  mach_msg_trailer_size_t msgh_trailer_size;
} mach_msg_trailer_t;

typedef struct
{
  mach_msg_trailer_type_t msgh_trailer_type;
  mach_msg_trailer_size_t msgh_trailer_size;
  mach_port_seqno_t msgh_seqno;
} mach_msg_seqno_trailer_t;

typedef struct
{
  unsigned int val[2];
} security_token_t;

typedef struct
{
  mach_msg_trailer_type_t msgh_trailer_type;
  mach_msg_trailer_size_t msgh_trailer_size;
  mach_port_seqno_t msgh_seqno;
  security_token_t msgh_sender;
} mach_msg_security_trailer_t;
# 406 "/usr/include/mach/message.h" 3 4
typedef struct
{
  unsigned int val[8];
} audit_token_t;

typedef struct
{
  mach_msg_trailer_type_t msgh_trailer_type;
  mach_msg_trailer_size_t msgh_trailer_size;
  mach_port_seqno_t msgh_seqno;
  security_token_t msgh_sender;
  audit_token_t msgh_audit;
} mach_msg_audit_trailer_t;

typedef struct
{
  mach_msg_trailer_type_t msgh_trailer_type;
  mach_msg_trailer_size_t msgh_trailer_size;
  mach_port_seqno_t msgh_seqno;
  security_token_t msgh_sender;
  audit_token_t msgh_audit;
  mach_vm_address_t msgh_context;
} mach_msg_context_trailer_t;


typedef struct
{
  mach_port_name_t sender;
} msg_labels_t;






typedef struct
{
  mach_msg_trailer_type_t msgh_trailer_type;
  mach_msg_trailer_size_t msgh_trailer_size;
  mach_port_seqno_t msgh_seqno;
  security_token_t msgh_sender;
  audit_token_t msgh_audit;
  mach_vm_address_t msgh_context;
  int msgh_ad;
  msg_labels_t msgh_labels;
} mach_msg_mac_trailer_t;
# 464 "/usr/include/mach/message.h" 3 4
typedef mach_msg_mac_trailer_t mach_msg_max_trailer_t;
# 474 "/usr/include/mach/message.h" 3 4
typedef mach_msg_security_trailer_t mach_msg_format_0_trailer_t;







extern security_token_t KERNEL_SECURITY_TOKEN;


extern audit_token_t KERNEL_AUDIT_TOKEN;

typedef integer_t mach_msg_options_t;

typedef struct
{
  mach_msg_header_t header;
} mach_msg_empty_send_t;

typedef struct
{
  mach_msg_header_t header;
  mach_msg_trailer_t trailer;
} mach_msg_empty_rcv_t;

typedef union
{
  mach_msg_empty_send_t send;
  mach_msg_empty_rcv_t rcv;
} mach_msg_empty_t;

#pragma pack()
# 527 "/usr/include/mach/message.h" 3 4
typedef natural_t mach_msg_type_size_t;
typedef natural_t mach_msg_type_number_t;
# 571 "/usr/include/mach/message.h" 3 4
typedef integer_t mach_msg_option_t;
# 648 "/usr/include/mach/message.h" 3 4
typedef kern_return_t mach_msg_return_t;
# 731 "/usr/include/mach/message.h" 3 4
extern "C" {
# 750 "/usr/include/mach/message.h" 3 4
extern mach_msg_return_t mach_msg_overwrite(
     mach_msg_header_t *msg,
     mach_msg_option_t option,
     mach_msg_size_t send_size,
     mach_msg_size_t rcv_size,
     mach_port_name_t rcv_name,
     mach_msg_timeout_t timeout,
     mach_port_name_t notify,
     mach_msg_header_t *rcv_msg,
     mach_msg_size_t rcv_limit);
# 770 "/usr/include/mach/message.h" 3 4
extern mach_msg_return_t mach_msg(
     mach_msg_header_t *msg,
     mach_msg_option_t option,
     mach_msg_size_t send_size,
     mach_msg_size_t rcv_size,
     mach_port_name_t rcv_name,
     mach_msg_timeout_t timeout,
     mach_port_name_t notify);


}
# 31 "/usr/include/dispatch/source.h" 2 3 4
# 50 "/usr/include/dispatch/source.h" 3 4
typedef struct dispatch_source_s : public dispatch_object_s {} *dispatch_source_t;;
# 63 "/usr/include/dispatch/source.h" 3 4
typedef const struct dispatch_source_type_s *dispatch_source_type_t;
# 73 "/usr/include/dispatch/source.h" 3 4
__attribute__((visibility("default")))
extern const struct dispatch_source_type_s _dispatch_source_type_data_add;
# 85 "/usr/include/dispatch/source.h" 3 4
__attribute__((visibility("default")))
extern const struct dispatch_source_type_s _dispatch_source_type_data_or;
# 96 "/usr/include/dispatch/source.h" 3 4
__attribute__((visibility("default")))
extern const struct dispatch_source_type_s _dispatch_source_type_mach_send;
# 106 "/usr/include/dispatch/source.h" 3 4
__attribute__((visibility("default")))
extern const struct dispatch_source_type_s _dispatch_source_type_mach_recv;
# 117 "/usr/include/dispatch/source.h" 3 4
__attribute__((visibility("default")))
extern const struct dispatch_source_type_s _dispatch_source_type_proc;
# 128 "/usr/include/dispatch/source.h" 3 4
__attribute__((visibility("default")))
extern const struct dispatch_source_type_s _dispatch_source_type_read;
# 138 "/usr/include/dispatch/source.h" 3 4
__attribute__((visibility("default")))
extern const struct dispatch_source_type_s _dispatch_source_type_signal;
# 149 "/usr/include/dispatch/source.h" 3 4
__attribute__((visibility("default")))
extern const struct dispatch_source_type_s _dispatch_source_type_timer;
# 160 "/usr/include/dispatch/source.h" 3 4
__attribute__((visibility("default")))
extern const struct dispatch_source_type_s _dispatch_source_type_vnode;
# 171 "/usr/include/dispatch/source.h" 3 4
__attribute__((visibility("default")))
extern const struct dispatch_source_type_s _dispatch_source_type_write;







enum {
 DISPATCH_MACH_SEND_DEAD = 0x1,
};
# 200 "/usr/include/dispatch/source.h" 3 4
enum {
 DISPATCH_PROC_EXIT = 0x80000000,
 DISPATCH_PROC_FORK = 0x40000000,
 DISPATCH_PROC_EXEC = 0x20000000,
 DISPATCH_PROC_SIGNAL = 0x08000000,
};
# 231 "/usr/include/dispatch/source.h" 3 4
enum {
 DISPATCH_VNODE_DELETE = 0x1,
 DISPATCH_VNODE_WRITE = 0x2,
 DISPATCH_VNODE_EXTEND = 0x4,
 DISPATCH_VNODE_ATTRIB = 0x8,
 DISPATCH_VNODE_LINK = 0x10,
 DISPATCH_VNODE_RENAME = 0x20,
 DISPATCH_VNODE_REVOKE = 0x40,
};

extern "C" {
# 272 "/usr/include/dispatch/source.h" 3 4
__attribute__((visibility("default")))
__attribute__((__malloc__)) __attribute__((__nothrow__))
dispatch_source_t
dispatch_source_create(dispatch_source_type_t type,
 uintptr_t handle,
 unsigned long mask,
 dispatch_queue_t queue);
# 294 "/usr/include/dispatch/source.h" 3 4
__attribute__((visibility("default")))
__attribute__((__nonnull__(1))) __attribute__((__nothrow__))
void
dispatch_source_set_event_handler(dispatch_source_t source,
 dispatch_block_t handler);
# 317 "/usr/include/dispatch/source.h" 3 4
__attribute__((visibility("default")))
__attribute__((__nonnull__(1))) __attribute__((__nothrow__))
void
dispatch_source_set_event_handler_f(dispatch_source_t source,
 dispatch_function_t handler);
# 351 "/usr/include/dispatch/source.h" 3 4
__attribute__((visibility("default")))
__attribute__((__nonnull__(1))) __attribute__((__nothrow__))
void
dispatch_source_set_cancel_handler(dispatch_source_t source,
 dispatch_block_t cancel_handler);
# 376 "/usr/include/dispatch/source.h" 3 4
__attribute__((visibility("default")))
__attribute__((__nonnull__(1))) __attribute__((__nothrow__))
void
dispatch_source_set_cancel_handler_f(dispatch_source_t source,
 dispatch_function_t cancel_handler);
# 404 "/usr/include/dispatch/source.h" 3 4
__attribute__((visibility("default")))
__attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_source_cancel(dispatch_source_t source);
# 422 "/usr/include/dispatch/source.h" 3 4
__attribute__((visibility("default")))
__attribute__((__nonnull__)) __attribute__((__nothrow__))
long
dispatch_source_testcancel(dispatch_source_t source);
# 451 "/usr/include/dispatch/source.h" 3 4
__attribute__((visibility("default")))
__attribute__((__nonnull__)) __attribute__((__warn_unused_result__)) __attribute__((__pure__)) __attribute__((__nothrow__))
uintptr_t
dispatch_source_get_handle(dispatch_source_t source);
# 480 "/usr/include/dispatch/source.h" 3 4
__attribute__((visibility("default")))
__attribute__((__nonnull__)) __attribute__((__warn_unused_result__)) __attribute__((__pure__)) __attribute__((__nothrow__))
unsigned long
dispatch_source_get_mask(dispatch_source_t source);
# 516 "/usr/include/dispatch/source.h" 3 4
__attribute__((visibility("default")))
__attribute__((__nonnull__)) __attribute__((__warn_unused_result__)) __attribute__((__pure__)) __attribute__((__nothrow__))
unsigned long
dispatch_source_get_data(dispatch_source_t source);
# 537 "/usr/include/dispatch/source.h" 3 4
__attribute__((visibility("default")))
__attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_source_merge_data(dispatch_source_t source, unsigned long value);
# 573 "/usr/include/dispatch/source.h" 3 4
__attribute__((visibility("default")))
__attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_source_set_timer(dispatch_source_t source,
 dispatch_time_t start,
 uint64_t interval,
 uint64_t leeway);

}
# 44 "/usr/include/dispatch/dispatch.h" 2 3 4
# 1 "/usr/include/dispatch/group.h" 1 3 4
# 34 "/usr/include/dispatch/group.h" 3 4
typedef struct dispatch_group_s : public dispatch_object_s {} *dispatch_group_t;;

extern "C" {
# 52 "/usr/include/dispatch/group.h" 3 4
__attribute__((visibility("default")))
__attribute__((__warn_unused_result__))
dispatch_group_t
dispatch_group_create(void);
# 81 "/usr/include/dispatch/group.h" 3 4
__attribute__((visibility("default")))
__attribute__((__nonnull__))
void
dispatch_group_async(dispatch_group_t group,
 dispatch_queue_t queue,
 dispatch_block_t block);
# 115 "/usr/include/dispatch/group.h" 3 4
__attribute__((visibility("default")))
__attribute__((__nonnull__(1))) __attribute__((__nonnull__(2))) __attribute__((__nonnull__(4)))
void
dispatch_group_async_f(dispatch_group_t group,
 dispatch_queue_t queue,
 void *context,
 dispatch_function_t work);
# 158 "/usr/include/dispatch/group.h" 3 4
__attribute__((visibility("default")))
__attribute__((__nonnull__))
long
dispatch_group_wait(dispatch_group_t group, dispatch_time_t timeout);
# 194 "/usr/include/dispatch/group.h" 3 4
__attribute__((visibility("default")))
__attribute__((__nonnull__))
void
dispatch_group_notify(dispatch_group_t group,
 dispatch_queue_t queue,
 dispatch_block_t block);
# 224 "/usr/include/dispatch/group.h" 3 4
__attribute__((visibility("default")))
__attribute__((__nonnull__(1))) __attribute__((__nonnull__(2))) __attribute__((__nonnull__(4)))
void
dispatch_group_notify_f(dispatch_group_t group,
 dispatch_queue_t queue,
 void *context,
 dispatch_function_t work);
# 247 "/usr/include/dispatch/group.h" 3 4
__attribute__((visibility("default")))
__attribute__((__nothrow__)) __attribute__((__nonnull__))
void
dispatch_group_enter(dispatch_group_t group);
# 266 "/usr/include/dispatch/group.h" 3 4
__attribute__((visibility("default")))
__attribute__((__nothrow__)) __attribute__((__nonnull__))
void
dispatch_group_leave(dispatch_group_t group);

}
# 45 "/usr/include/dispatch/dispatch.h" 2 3 4
# 1 "/usr/include/dispatch/semaphore.h" 1 3 4
# 35 "/usr/include/dispatch/semaphore.h" 3 4
typedef struct dispatch_semaphore_s : public dispatch_object_s {} *dispatch_semaphore_t;;

extern "C" {
# 58 "/usr/include/dispatch/semaphore.h" 3 4
__attribute__((visibility("default")))
__attribute__((__malloc__)) __attribute__((__nothrow__))
dispatch_semaphore_t
dispatch_semaphore_create(long value);
# 83 "/usr/include/dispatch/semaphore.h" 3 4
__attribute__((visibility("default")))
__attribute__((__nonnull__)) __attribute__((__nothrow__))
long
dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout);
# 105 "/usr/include/dispatch/semaphore.h" 3 4
__attribute__((visibility("default")))
__attribute__((__nonnull__)) __attribute__((__nothrow__))
long
dispatch_semaphore_signal(dispatch_semaphore_t dsema);

}
# 46 "/usr/include/dispatch/dispatch.h" 2 3 4
# 1 "/usr/include/dispatch/once.h" 1 3 4
# 29 "/usr/include/dispatch/once.h" 3 4
extern "C" {
# 38 "/usr/include/dispatch/once.h" 3 4
typedef long dispatch_once_t;
# 58 "/usr/include/dispatch/once.h" 3 4
__attribute__((visibility("default")))
__attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_once(dispatch_once_t *predicate, dispatch_block_t block);





__attribute__((visibility("default")))
__attribute__((__nonnull__(1))) __attribute__((__nonnull__(3))) __attribute__((__nothrow__))
void
dispatch_once_f(dispatch_once_t *predicate, void *context, void (*function)(void *));




}
# 47 "/usr/include/dispatch/dispatch.h" 2 3 4
# 13 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFMessagePort.h" 2 3


extern "C" {

typedef struct __CFMessagePort * CFMessagePortRef;

enum {
    kCFMessagePortSuccess = 0,
    kCFMessagePortSendTimeout = -1,
    kCFMessagePortReceiveTimeout = -2,
    kCFMessagePortIsInvalid = -3,
    kCFMessagePortTransportError = -4,
    kCFMessagePortBecameInvalidError = -5
};

typedef struct {
    CFIndex version;
    void * info;
    const void *(*retain)(const void *info);
    void (*release)(const void *info);
    CFStringRef (*copyDescription)(const void *info);
} CFMessagePortContext;

typedef CFDataRef (*CFMessagePortCallBack)(CFMessagePortRef local, SInt32 msgid, CFDataRef data, void *info);

typedef void (*CFMessagePortInvalidationCallBack)(CFMessagePortRef ms, void *info);

extern CFTypeID CFMessagePortGetTypeID(void);

extern CFMessagePortRef CFMessagePortCreateLocal(CFAllocatorRef allocator, CFStringRef name, CFMessagePortCallBack callout, CFMessagePortContext *context, Boolean *shouldFreeInfo);
extern CFMessagePortRef CFMessagePortCreateRemote(CFAllocatorRef allocator, CFStringRef name);

extern Boolean CFMessagePortIsRemote(CFMessagePortRef ms);
extern CFStringRef CFMessagePortGetName(CFMessagePortRef ms);
extern Boolean CFMessagePortSetName(CFMessagePortRef ms, CFStringRef newName);
extern void CFMessagePortGetContext(CFMessagePortRef ms, CFMessagePortContext *context);
extern void CFMessagePortInvalidate(CFMessagePortRef ms);
extern Boolean CFMessagePortIsValid(CFMessagePortRef ms);
extern CFMessagePortInvalidationCallBack CFMessagePortGetInvalidationCallBack(CFMessagePortRef ms);
extern void CFMessagePortSetInvalidationCallBack(CFMessagePortRef ms, CFMessagePortInvalidationCallBack callout);


extern SInt32 CFMessagePortSendRequest(CFMessagePortRef remote, SInt32 msgid, CFDataRef data, CFTimeInterval sendTimeout, CFTimeInterval rcvTimeout, CFStringRef replyMode, CFDataRef *returnData);

extern CFRunLoopSourceRef CFMessagePortCreateRunLoopSource(CFAllocatorRef allocator, CFMessagePortRef local, CFIndex order);


extern void CFMessagePortSetDispatchQueue(CFMessagePortRef ms, dispatch_queue_t queue) ;


}
# 54 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFNumber.h" 1 3
# 10 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFNumber.h" 3
extern "C" {

typedef const struct __CFBoolean * CFBooleanRef;

extern
const CFBooleanRef kCFBooleanTrue;
extern
const CFBooleanRef kCFBooleanFalse;

extern
CFTypeID CFBooleanGetTypeID(void);

extern
Boolean CFBooleanGetValue(CFBooleanRef boolean);

enum {

    kCFNumberSInt8Type = 1,
    kCFNumberSInt16Type = 2,
    kCFNumberSInt32Type = 3,
    kCFNumberSInt64Type = 4,
    kCFNumberFloat32Type = 5,
    kCFNumberFloat64Type = 6,

    kCFNumberCharType = 7,
    kCFNumberShortType = 8,
    kCFNumberIntType = 9,
    kCFNumberLongType = 10,
    kCFNumberLongLongType = 11,
    kCFNumberFloatType = 12,
    kCFNumberDoubleType = 13,

    kCFNumberCFIndexType = 14,

    kCFNumberNSIntegerType = 15,
    kCFNumberCGFloatType = 16,
    kCFNumberMaxType = 16



};
typedef CFIndex CFNumberType;

typedef const struct __CFNumber * CFNumberRef;

extern
const CFNumberRef kCFNumberPositiveInfinity;
extern
const CFNumberRef kCFNumberNegativeInfinity;
extern
const CFNumberRef kCFNumberNaN;

extern
CFTypeID CFNumberGetTypeID(void);
# 72 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFNumber.h" 3
extern
CFNumberRef CFNumberCreate(CFAllocatorRef allocator, CFNumberType theType, const void *valuePtr);





extern
CFNumberType CFNumberGetType(CFNumberRef number);




extern
CFIndex CFNumberGetByteSize(CFNumberRef number);





extern
Boolean CFNumberIsFloatType(CFNumberRef number);
# 103 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFNumber.h" 3
extern
Boolean CFNumberGetValue(CFNumberRef number, CFNumberType theType, void *valuePtr);
# 121 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFNumber.h" 3
extern
CFComparisonResult CFNumberCompare(CFNumberRef number, CFNumberRef otherNumber, void *context);

}
# 55 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFNumberFormatter.h" 1 3
# 14 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFNumberFormatter.h" 3
extern "C" {

typedef struct __CFNumberFormatter *CFNumberFormatterRef;



extern
CFTypeID CFNumberFormatterGetTypeID(void) ;

enum {
 kCFNumberFormatterNoStyle = 0,
 kCFNumberFormatterDecimalStyle = 1,
 kCFNumberFormatterCurrencyStyle = 2,
 kCFNumberFormatterPercentStyle = 3,
 kCFNumberFormatterScientificStyle = 4,
 kCFNumberFormatterSpellOutStyle = 5
};
typedef CFIndex CFNumberFormatterStyle;


extern
CFNumberFormatterRef CFNumberFormatterCreate(CFAllocatorRef allocator, CFLocaleRef locale, CFNumberFormatterStyle style) ;



extern
CFLocaleRef CFNumberFormatterGetLocale(CFNumberFormatterRef formatter) ;

extern
CFNumberFormatterStyle CFNumberFormatterGetStyle(CFNumberFormatterRef formatter) ;


extern
CFStringRef CFNumberFormatterGetFormat(CFNumberFormatterRef formatter) ;

extern
void CFNumberFormatterSetFormat(CFNumberFormatterRef formatter, CFStringRef formatString) ;
# 59 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFNumberFormatter.h" 3
extern
CFStringRef CFNumberFormatterCreateStringWithNumber(CFAllocatorRef allocator, CFNumberFormatterRef formatter, CFNumberRef number) ;

extern
CFStringRef CFNumberFormatterCreateStringWithValue(CFAllocatorRef allocator, CFNumberFormatterRef formatter, CFNumberType numberType, const void *valuePtr) ;




enum {
    kCFNumberFormatterParseIntegersOnly = 1
};
typedef CFOptionFlags CFNumberFormatterOptionFlags;

extern
CFNumberRef CFNumberFormatterCreateNumberFromString(CFAllocatorRef allocator, CFNumberFormatterRef formatter, CFStringRef string, CFRange *rangep, CFOptionFlags options) ;

extern
Boolean CFNumberFormatterGetValueFromString(CFNumberFormatterRef formatter, CFStringRef string, CFRange *rangep, CFNumberType numberType, void *valuePtr) ;
# 89 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFNumberFormatter.h" 3
extern
void CFNumberFormatterSetProperty(CFNumberFormatterRef formatter, CFStringRef key, CFTypeRef value) ;

extern
CFTypeRef CFNumberFormatterCopyProperty(CFNumberFormatterRef formatter, CFStringRef key) ;



extern const CFStringRef kCFNumberFormatterCurrencyCode ;
extern const CFStringRef kCFNumberFormatterDecimalSeparator ;
extern const CFStringRef kCFNumberFormatterCurrencyDecimalSeparator ;
extern const CFStringRef kCFNumberFormatterAlwaysShowDecimalSeparator ;
extern const CFStringRef kCFNumberFormatterGroupingSeparator ;
extern const CFStringRef kCFNumberFormatterUseGroupingSeparator ;
extern const CFStringRef kCFNumberFormatterPercentSymbol ;
extern const CFStringRef kCFNumberFormatterZeroSymbol ;
extern const CFStringRef kCFNumberFormatterNaNSymbol ;
extern const CFStringRef kCFNumberFormatterInfinitySymbol ;
extern const CFStringRef kCFNumberFormatterMinusSign ;
extern const CFStringRef kCFNumberFormatterPlusSign ;
extern const CFStringRef kCFNumberFormatterCurrencySymbol ;
extern const CFStringRef kCFNumberFormatterExponentSymbol ;
extern const CFStringRef kCFNumberFormatterMinIntegerDigits ;
extern const CFStringRef kCFNumberFormatterMaxIntegerDigits ;
extern const CFStringRef kCFNumberFormatterMinFractionDigits ;
extern const CFStringRef kCFNumberFormatterMaxFractionDigits ;
extern const CFStringRef kCFNumberFormatterGroupingSize ;
extern const CFStringRef kCFNumberFormatterSecondaryGroupingSize ;
extern const CFStringRef kCFNumberFormatterRoundingMode ;
extern const CFStringRef kCFNumberFormatterRoundingIncrement ;
extern const CFStringRef kCFNumberFormatterFormatWidth ;
extern const CFStringRef kCFNumberFormatterPaddingPosition ;
extern const CFStringRef kCFNumberFormatterPaddingCharacter ;
extern const CFStringRef kCFNumberFormatterDefaultFormat ;
extern const CFStringRef kCFNumberFormatterMultiplier ;
extern const CFStringRef kCFNumberFormatterPositivePrefix ;
extern const CFStringRef kCFNumberFormatterPositiveSuffix ;
extern const CFStringRef kCFNumberFormatterNegativePrefix ;
extern const CFStringRef kCFNumberFormatterNegativeSuffix ;
extern const CFStringRef kCFNumberFormatterPerMillSymbol ;
extern const CFStringRef kCFNumberFormatterInternationalCurrencySymbol ;
extern const CFStringRef kCFNumberFormatterCurrencyGroupingSeparator ;
extern const CFStringRef kCFNumberFormatterIsLenient ;
extern const CFStringRef kCFNumberFormatterUseSignificantDigits ;
extern const CFStringRef kCFNumberFormatterMinSignificantDigits ;
extern const CFStringRef kCFNumberFormatterMaxSignificantDigits ;

enum {
    kCFNumberFormatterRoundCeiling = 0,
    kCFNumberFormatterRoundFloor = 1,
    kCFNumberFormatterRoundDown = 2,
    kCFNumberFormatterRoundUp = 3,
    kCFNumberFormatterRoundHalfEven = 4,
    kCFNumberFormatterRoundHalfDown = 5,
    kCFNumberFormatterRoundHalfUp = 6
};
typedef CFIndex CFNumberFormatterRoundingMode;

enum {
    kCFNumberFormatterPadBeforePrefix = 0,
    kCFNumberFormatterPadAfterPrefix = 1,
    kCFNumberFormatterPadBeforeSuffix = 2,
    kCFNumberFormatterPadAfterSuffix = 3
};
typedef CFIndex CFNumberFormatterPadPosition;


extern
Boolean CFNumberFormatterGetDecimalInfoForCurrencyCode(CFStringRef currencyCode, int32_t *defaultFractionDigits, double *roundingIncrement) ;






}
# 56 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFPlugIn.h" 1 3
# 17 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFPlugIn.h" 3
# 1 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFUUID.h" 1 3
# 11 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFUUID.h" 3
extern "C" {

typedef const struct __CFUUID * CFUUIDRef;

typedef struct {
    UInt8 byte0;
    UInt8 byte1;
    UInt8 byte2;
    UInt8 byte3;
    UInt8 byte4;
    UInt8 byte5;
    UInt8 byte6;
    UInt8 byte7;
    UInt8 byte8;
    UInt8 byte9;
    UInt8 byte10;
    UInt8 byte11;
    UInt8 byte12;
    UInt8 byte13;
    UInt8 byte14;
    UInt8 byte15;
} CFUUIDBytes;






extern
CFTypeID CFUUIDGetTypeID(void);

extern
CFUUIDRef CFUUIDCreate(CFAllocatorRef alloc);


extern
CFUUIDRef CFUUIDCreateWithBytes(CFAllocatorRef alloc, UInt8 byte0, UInt8 byte1, UInt8 byte2, UInt8 byte3, UInt8 byte4, UInt8 byte5, UInt8 byte6, UInt8 byte7, UInt8 byte8, UInt8 byte9, UInt8 byte10, UInt8 byte11, UInt8 byte12, UInt8 byte13, UInt8 byte14, UInt8 byte15);


extern
CFUUIDRef CFUUIDCreateFromString(CFAllocatorRef alloc, CFStringRef uuidStr);


extern
CFStringRef CFUUIDCreateString(CFAllocatorRef alloc, CFUUIDRef uuid);


extern
CFUUIDRef CFUUIDGetConstantUUIDWithBytes(CFAllocatorRef alloc, UInt8 byte0, UInt8 byte1, UInt8 byte2, UInt8 byte3, UInt8 byte4, UInt8 byte5, UInt8 byte6, UInt8 byte7, UInt8 byte8, UInt8 byte9, UInt8 byte10, UInt8 byte11, UInt8 byte12, UInt8 byte13, UInt8 byte14, UInt8 byte15);


extern
CFUUIDBytes CFUUIDGetUUIDBytes(CFUUIDRef uuid);

extern
CFUUIDRef CFUUIDCreateFromUUIDBytes(CFAllocatorRef alloc, CFUUIDBytes bytes);

}
# 18 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFPlugIn.h" 2 3

extern "C" {



extern
const CFStringRef kCFPlugInDynamicRegistrationKey;
extern
const CFStringRef kCFPlugInDynamicRegisterFunctionKey;
extern
const CFStringRef kCFPlugInUnloadFunctionKey;
extern
const CFStringRef kCFPlugInFactoriesKey;
extern
const CFStringRef kCFPlugInTypesKey;




typedef void (*CFPlugInDynamicRegisterFunction)(CFPlugInRef plugIn);
typedef void (*CFPlugInUnloadFunction)(CFPlugInRef plugIn);
typedef void *(*CFPlugInFactoryFunction)(CFAllocatorRef allocator, CFUUIDRef typeUUID);



extern
CFTypeID CFPlugInGetTypeID(void);

extern
CFPlugInRef CFPlugInCreate(CFAllocatorRef allocator, CFURLRef plugInURL);


extern
CFBundleRef CFPlugInGetBundle(CFPlugInRef plugIn);







extern
void CFPlugInSetLoadOnDemand(CFPlugInRef plugIn, Boolean flag);

extern
Boolean CFPlugInIsLoadOnDemand(CFPlugInRef plugIn);





extern
CFArrayRef CFPlugInFindFactoriesForPlugInType(CFUUIDRef typeUUID);


extern
CFArrayRef CFPlugInFindFactoriesForPlugInTypeInPlugIn(CFUUIDRef typeUUID, CFPlugInRef plugIn);


extern
void *CFPlugInInstanceCreate(CFAllocatorRef allocator, CFUUIDRef factoryUUID, CFUUIDRef typeUUID);






extern
Boolean CFPlugInRegisterFactoryFunction(CFUUIDRef factoryUUID, CFPlugInFactoryFunction func);

extern
Boolean CFPlugInRegisterFactoryFunctionByName(CFUUIDRef factoryUUID, CFPlugInRef plugIn, CFStringRef functionName);

extern
Boolean CFPlugInUnregisterFactory(CFUUIDRef factoryUUID);

extern
Boolean CFPlugInRegisterPlugInType(CFUUIDRef factoryUUID, CFUUIDRef typeUUID);

extern
Boolean CFPlugInUnregisterPlugInType(CFUUIDRef factoryUUID, CFUUIDRef typeUUID);





extern
void CFPlugInAddInstanceForFactory(CFUUIDRef factoryID);

extern
void CFPlugInRemoveInstanceForFactory(CFUUIDRef factoryID);




typedef struct __CFPlugInInstance *CFPlugInInstanceRef;

typedef Boolean (*CFPlugInInstanceGetInterfaceFunction)(CFPlugInInstanceRef instance, CFStringRef interfaceName, void **ftbl);
typedef void (*CFPlugInInstanceDeallocateInstanceDataFunction)(void *instanceData);

extern
Boolean CFPlugInInstanceGetInterfaceFunctionTable(CFPlugInInstanceRef instance, CFStringRef interfaceName, void **ftbl);
extern
CFStringRef CFPlugInInstanceGetFactoryName(CFPlugInInstanceRef instance);
extern
void *CFPlugInInstanceGetInstanceData(CFPlugInInstanceRef instance);
extern
CFTypeID CFPlugInInstanceGetTypeID(void);
extern
CFPlugInInstanceRef CFPlugInInstanceCreateWithInstanceDataSize(CFAllocatorRef allocator, CFIndex instanceDataSize, CFPlugInInstanceDeallocateInstanceDataFunction deallocateInstanceFunction, CFStringRef factoryName, CFPlugInInstanceGetInterfaceFunction getInterfaceFunction);

}
# 57 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFPreferences.h" 1 3
# 12 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFPreferences.h" 3
extern "C" {

extern
const CFStringRef kCFPreferencesAnyApplication;
extern
const CFStringRef kCFPreferencesCurrentApplication;
extern
const CFStringRef kCFPreferencesAnyHost;
extern
const CFStringRef kCFPreferencesCurrentHost;
extern
const CFStringRef kCFPreferencesAnyUser;
extern
const CFStringRef kCFPreferencesCurrentUser;
# 41 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFPreferences.h" 3
extern
CFPropertyListRef CFPreferencesCopyAppValue(CFStringRef key, CFStringRef applicationID);




extern
Boolean CFPreferencesGetAppBooleanValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat);




extern
CFIndex CFPreferencesGetAppIntegerValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat);




extern
void CFPreferencesSetAppValue(CFStringRef key, CFPropertyListRef value, CFStringRef applicationID);





extern
void CFPreferencesAddSuitePreferencesToApp(CFStringRef applicationID, CFStringRef suiteID);

extern
void CFPreferencesRemoveSuitePreferencesFromApp(CFStringRef applicationID, CFStringRef suiteID);



extern
Boolean CFPreferencesAppSynchronize(CFStringRef applicationID);





extern
CFPropertyListRef CFPreferencesCopyValue(CFStringRef key, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName);





extern
CFDictionaryRef CFPreferencesCopyMultiple(CFArrayRef keysToFetch, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName);



extern
void CFPreferencesSetValue(CFStringRef key, CFPropertyListRef value, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName);



extern
void CFPreferencesSetMultiple(CFDictionaryRef keysToSet, CFArrayRef keysToRemove, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName);

extern
Boolean CFPreferencesSynchronize(CFStringRef applicationID, CFStringRef userName, CFStringRef hostName);





extern
CFArrayRef CFPreferencesCopyApplicationList(CFStringRef userName, CFStringRef hostName);




extern
CFArrayRef CFPreferencesCopyKeyList(CFStringRef applicationID, CFStringRef userName, CFStringRef hostName);
# 124 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFPreferences.h" 3
extern
Boolean CFPreferencesAppValueIsForced(CFStringRef key, CFStringRef applicationID);




}
# 58 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFPropertyList.h" 1 3
# 11 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFPropertyList.h" 3
# 1 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFStream.h" 1 3
# 13 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFStream.h" 3
# 1 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSocket.h" 1 3
# 13 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSocket.h" 3
typedef int CFSocketNativeHandle;





extern "C" {

typedef struct __CFSocket * CFSocketRef;
# 101 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSocket.h" 3
enum {
    kCFSocketSuccess = 0,
    kCFSocketError = -1,
    kCFSocketTimeout = -2
};
typedef CFIndex CFSocketError;

typedef struct {
    SInt32 protocolFamily;
    SInt32 socketType;
    SInt32 protocol;
    CFDataRef address;
} CFSocketSignature;


enum {
    kCFSocketNoCallBack = 0,
    kCFSocketReadCallBack = 1,
    kCFSocketAcceptCallBack = 2,
    kCFSocketDataCallBack = 3,
    kCFSocketConnectCallBack = 4

    ,
    kCFSocketWriteCallBack = 8

};
typedef CFOptionFlags CFSocketCallBackType;



enum {
    kCFSocketAutomaticallyReenableReadCallBack = 1,
    kCFSocketAutomaticallyReenableAcceptCallBack = 2,
    kCFSocketAutomaticallyReenableDataCallBack = 3,
    kCFSocketAutomaticallyReenableWriteCallBack = 8,

    kCFSocketLeaveErrors = 64,

    kCFSocketCloseOnInvalidate = 128
};


typedef void (*CFSocketCallBack)(CFSocketRef s, CFSocketCallBackType type, CFDataRef address, const void *data, void *info);


typedef struct {
    CFIndex version;
    void * info;
    const void *(*retain)(const void *info);
    void (*release)(const void *info);
    CFStringRef (*copyDescription)(const void *info);
} CFSocketContext;

extern CFTypeID CFSocketGetTypeID(void);

extern CFSocketRef CFSocketCreate(CFAllocatorRef allocator, SInt32 protocolFamily, SInt32 socketType, SInt32 protocol, CFOptionFlags callBackTypes, CFSocketCallBack callout, const CFSocketContext *context);
extern CFSocketRef CFSocketCreateWithNative(CFAllocatorRef allocator, CFSocketNativeHandle sock, CFOptionFlags callBackTypes, CFSocketCallBack callout, const CFSocketContext *context);
extern CFSocketRef CFSocketCreateWithSocketSignature(CFAllocatorRef allocator, const CFSocketSignature *signature, CFOptionFlags callBackTypes, CFSocketCallBack callout, const CFSocketContext *context);
extern CFSocketRef CFSocketCreateConnectedToSocketSignature(CFAllocatorRef allocator, const CFSocketSignature *signature, CFOptionFlags callBackTypes, CFSocketCallBack callout, const CFSocketContext *context, CFTimeInterval timeout);


extern CFSocketError CFSocketSetAddress(CFSocketRef s, CFDataRef address);
extern CFSocketError CFSocketConnectToAddress(CFSocketRef s, CFDataRef address, CFTimeInterval timeout);
extern void CFSocketInvalidate(CFSocketRef s);

extern Boolean CFSocketIsValid(CFSocketRef s);
extern CFDataRef CFSocketCopyAddress(CFSocketRef s);
extern CFDataRef CFSocketCopyPeerAddress(CFSocketRef s);
extern void CFSocketGetContext(CFSocketRef s, CFSocketContext *context);
extern CFSocketNativeHandle CFSocketGetNative(CFSocketRef s);

extern CFRunLoopSourceRef CFSocketCreateRunLoopSource(CFAllocatorRef allocator, CFSocketRef s, CFIndex order);


extern CFOptionFlags CFSocketGetSocketFlags(CFSocketRef s);
extern void CFSocketSetSocketFlags(CFSocketRef s, CFOptionFlags flags);
extern void CFSocketDisableCallBacks(CFSocketRef s, CFOptionFlags callBackTypes);
extern void CFSocketEnableCallBacks(CFSocketRef s, CFOptionFlags callBackTypes);



extern CFSocketError CFSocketSendData(CFSocketRef s, CFDataRef address, CFDataRef data, CFTimeInterval timeout);
# 201 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSocket.h" 3
extern CFSocketError CFSocketRegisterValue(const CFSocketSignature *nameServerSignature, CFTimeInterval timeout, CFStringRef name, CFPropertyListRef value);
extern CFSocketError CFSocketCopyRegisteredValue(const CFSocketSignature *nameServerSignature, CFTimeInterval timeout, CFStringRef name, CFPropertyListRef *value, CFDataRef *nameServerAddress);

extern CFSocketError CFSocketRegisterSocketSignature(const CFSocketSignature *nameServerSignature, CFTimeInterval timeout, CFStringRef name, const CFSocketSignature *signature);
extern CFSocketError CFSocketCopyRegisteredSocketSignature(const CFSocketSignature *nameServerSignature, CFTimeInterval timeout, CFStringRef name, CFSocketSignature *signature, CFDataRef *nameServerAddress);

extern CFSocketError CFSocketUnregister(const CFSocketSignature *nameServerSignature, CFTimeInterval timeout, CFStringRef name);

extern void CFSocketSetDefaultNameRegistryPortNumber(UInt16 port);
extern UInt16 CFSocketGetDefaultNameRegistryPortNumber(void);


extern const CFStringRef kCFSocketCommandKey;
extern const CFStringRef kCFSocketNameKey;
extern const CFStringRef kCFSocketValueKey;
extern const CFStringRef kCFSocketResultKey;
extern const CFStringRef kCFSocketErrorKey;
extern const CFStringRef kCFSocketRegisterCommand;
extern const CFStringRef kCFSocketRetrieveCommand;

}
# 14 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFStream.h" 2 3


extern "C" {

enum {
    kCFStreamStatusNotOpen = 0,
    kCFStreamStatusOpening,
    kCFStreamStatusOpen,
    kCFStreamStatusReading,
    kCFStreamStatusWriting,
    kCFStreamStatusAtEnd,
    kCFStreamStatusClosed,
    kCFStreamStatusError
};
typedef CFIndex CFStreamStatus;

enum {
    kCFStreamEventNone = 0,
    kCFStreamEventOpenCompleted = 1,
    kCFStreamEventHasBytesAvailable = 2,
    kCFStreamEventCanAcceptBytes = 4,
    kCFStreamEventErrorOccurred = 8,
    kCFStreamEventEndEncountered = 16
};
typedef CFOptionFlags CFStreamEventType;

typedef struct {
    CFIndex version;
    void *info;
    void *(*retain)(void *info);
    void (*release)(void *info);
    CFStringRef (*copyDescription)(void *info);
} CFStreamClientContext;

typedef struct __CFReadStream * CFReadStreamRef;
typedef struct __CFWriteStream * CFWriteStreamRef;

typedef void (*CFReadStreamClientCallBack)(CFReadStreamRef stream, CFStreamEventType type, void *clientCallBackInfo);
typedef void (*CFWriteStreamClientCallBack)(CFWriteStreamRef stream, CFStreamEventType type, void *clientCallBackInfo);

extern
CFTypeID CFReadStreamGetTypeID(void);
extern
CFTypeID CFWriteStreamGetTypeID(void);




extern
const CFStringRef kCFStreamPropertyDataWritten;


extern
CFReadStreamRef CFReadStreamCreateWithBytesNoCopy(CFAllocatorRef alloc, const UInt8 *bytes, CFIndex length, CFAllocatorRef bytesDeallocator);


extern
CFWriteStreamRef CFWriteStreamCreateWithBuffer(CFAllocatorRef alloc, UInt8 *buffer, CFIndex bufferCapacity);


extern
CFWriteStreamRef CFWriteStreamCreateWithAllocatedBuffers(CFAllocatorRef alloc, CFAllocatorRef bufferAllocator);


extern
CFReadStreamRef CFReadStreamCreateWithFile(CFAllocatorRef alloc, CFURLRef fileURL);
extern
CFWriteStreamRef CFWriteStreamCreateWithFile(CFAllocatorRef alloc, CFURLRef fileURL);
extern
void CFStreamCreateBoundPair(CFAllocatorRef alloc, CFReadStreamRef *readStream, CFWriteStreamRef *writeStream, CFIndex transferBufferSize);



extern
const CFStringRef kCFStreamPropertyAppendToFile;




extern const CFStringRef kCFStreamPropertyFileCurrentOffset ;






extern
const CFStringRef kCFStreamPropertySocketNativeHandle;


extern
const CFStringRef kCFStreamPropertySocketRemoteHostName;


extern
const CFStringRef kCFStreamPropertySocketRemotePortNumber;


extern
void CFStreamCreatePairWithSocket(CFAllocatorRef alloc, CFSocketNativeHandle sock, CFReadStreamRef *readStream, CFWriteStreamRef *writeStream);
extern
void CFStreamCreatePairWithSocketToHost(CFAllocatorRef alloc, CFStringRef host, UInt32 port, CFReadStreamRef *readStream, CFWriteStreamRef *writeStream);

extern
void CFStreamCreatePairWithPeerSocketSignature(CFAllocatorRef alloc, const CFSocketSignature *signature, CFReadStreamRef *readStream, CFWriteStreamRef *writeStream);




extern
CFStreamStatus CFReadStreamGetStatus(CFReadStreamRef stream);
extern
CFStreamStatus CFWriteStreamGetStatus(CFWriteStreamRef stream);


extern
CFErrorRef CFReadStreamCopyError(CFReadStreamRef stream) ;
extern
CFErrorRef CFWriteStreamCopyError(CFWriteStreamRef stream) ;






extern
Boolean CFReadStreamOpen(CFReadStreamRef stream);
extern
Boolean CFWriteStreamOpen(CFWriteStreamRef stream);




extern
void CFReadStreamClose(CFReadStreamRef stream);
extern
void CFWriteStreamClose(CFWriteStreamRef stream);



extern
Boolean CFReadStreamHasBytesAvailable(CFReadStreamRef stream);
# 164 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFStream.h" 3
extern
CFIndex CFReadStreamRead(CFReadStreamRef stream, UInt8 *buffer, CFIndex bufferLength);
# 176 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFStream.h" 3
extern
const UInt8 *CFReadStreamGetBuffer(CFReadStreamRef stream, CFIndex maxBytesToRead, CFIndex *numBytesRead);



extern
Boolean CFWriteStreamCanAcceptBytes(CFWriteStreamRef stream);






extern
CFIndex CFWriteStreamWrite(CFWriteStreamRef stream, const UInt8 *buffer, CFIndex bufferLength);
# 200 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFStream.h" 3
extern
CFTypeRef CFReadStreamCopyProperty(CFReadStreamRef stream, CFStringRef propertyName);
extern
CFTypeRef CFWriteStreamCopyProperty(CFWriteStreamRef stream, CFStringRef propertyName);




extern
Boolean CFReadStreamSetProperty(CFReadStreamRef stream, CFStringRef propertyName, CFTypeRef propertyValue);
extern
Boolean CFWriteStreamSetProperty(CFWriteStreamRef stream, CFStringRef propertyName, CFTypeRef propertyValue);
# 231 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFStream.h" 3
extern
Boolean CFReadStreamSetClient(CFReadStreamRef stream, CFOptionFlags streamEvents, CFReadStreamClientCallBack clientCB, CFStreamClientContext *clientContext);
extern
Boolean CFWriteStreamSetClient(CFWriteStreamRef stream, CFOptionFlags streamEvents, CFWriteStreamClientCallBack clientCB, CFStreamClientContext *clientContext);

extern
void CFReadStreamScheduleWithRunLoop(CFReadStreamRef stream, CFRunLoopRef runLoop, CFStringRef runLoopMode);
extern
void CFWriteStreamScheduleWithRunLoop(CFWriteStreamRef stream, CFRunLoopRef runLoop, CFStringRef runLoopMode);

extern
void CFReadStreamUnscheduleFromRunLoop(CFReadStreamRef stream, CFRunLoopRef runLoop, CFStringRef runLoopMode);
extern
void CFWriteStreamUnscheduleFromRunLoop(CFWriteStreamRef stream, CFRunLoopRef runLoop, CFStringRef runLoopMode);



enum {
    kCFStreamErrorDomainCustom = -1,
    kCFStreamErrorDomainPOSIX = 1,
    kCFStreamErrorDomainMacOSStatus
};
typedef CFIndex CFStreamErrorDomain;

typedef struct {
    CFIndex domain;
    SInt32 error;
} CFStreamError;
extern
CFStreamError CFReadStreamGetError(CFReadStreamRef stream);
extern
CFStreamError CFWriteStreamGetError(CFWriteStreamRef stream);


}
# 12 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFPropertyList.h" 2 3

extern "C" {

enum {
    kCFPropertyListImmutable = 0,
    kCFPropertyListMutableContainers,
    kCFPropertyListMutableContainersAndLeaves
};
typedef CFOptionFlags CFPropertyListMutabilityOptions;
# 32 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFPropertyList.h" 3
extern
CFPropertyListRef CFPropertyListCreateFromXMLData(CFAllocatorRef allocator, CFDataRef xmlData, CFOptionFlags mutabilityOption, CFStringRef *errorString);
# 47 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFPropertyList.h" 3
extern
CFDataRef CFPropertyListCreateXMLData(CFAllocatorRef allocator, CFPropertyListRef propertyList);







extern
CFPropertyListRef CFPropertyListCreateDeepCopy(CFAllocatorRef allocator, CFPropertyListRef propertyList, CFOptionFlags mutabilityOption);



enum {
    kCFPropertyListOpenStepFormat = 1,
    kCFPropertyListXMLFormat_v1_0 = 100,
    kCFPropertyListBinaryFormat_v1_0 = 200
};
typedef CFIndex CFPropertyListFormat;






extern
Boolean CFPropertyListIsValid(CFPropertyListRef plist, CFPropertyListFormat format);
# 86 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFPropertyList.h" 3
extern
CFIndex CFPropertyListWriteToStream(CFPropertyListRef propertyList, CFWriteStreamRef stream, CFPropertyListFormat format, CFStringRef *errorString);
# 101 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFPropertyList.h" 3
extern
CFPropertyListRef CFPropertyListCreateFromStream(CFAllocatorRef allocator, CFReadStreamRef stream, CFIndex streamLength, CFOptionFlags mutabilityOption, CFPropertyListFormat *format, CFStringRef *errorString);




enum {
    kCFPropertyListReadCorruptError = 3840,
    kCFPropertyListReadUnknownVersionError = 3841,
    kCFPropertyListReadStreamError = 3842,
    kCFPropertyListWriteStreamError = 3851,
};




extern
CFPropertyListRef CFPropertyListCreateWithData(CFAllocatorRef allocator, CFDataRef data, CFOptionFlags options, CFPropertyListFormat *format, CFErrorRef *error) ;



extern
CFPropertyListRef CFPropertyListCreateWithStream(CFAllocatorRef allocator, CFReadStreamRef stream, CFIndex streamLength, CFOptionFlags options, CFPropertyListFormat *format, CFErrorRef *error) ;



extern
CFIndex CFPropertyListWrite(CFPropertyListRef propertyList, CFWriteStreamRef stream, CFPropertyListFormat format, CFOptionFlags options, CFErrorRef *error) ;



extern
CFDataRef CFPropertyListCreateData(CFAllocatorRef allocator, CFPropertyListRef propertyList, CFPropertyListFormat format, CFOptionFlags options, CFErrorRef *error) ;


}
# 59 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3

# 1 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSet.h" 1 3
# 14 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSet.h" 3
extern "C" {
# 25 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSet.h" 3
typedef const void * (*CFSetRetainCallBack)(CFAllocatorRef allocator, const void *value);







typedef void (*CFSetReleaseCallBack)(CFAllocatorRef allocator, const void *value);







typedef CFStringRef (*CFSetCopyDescriptionCallBack)(const void *value);
# 50 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSet.h" 3
typedef Boolean (*CFSetEqualCallBack)(const void *value1, const void *value2);







typedef CFHashCode (*CFSetHashCallBack)(const void *value);
# 84 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSet.h" 3
typedef struct {
    CFIndex version;
    CFSetRetainCallBack retain;
    CFSetReleaseCallBack release;
    CFSetCopyDescriptionCallBack copyDescription;
    CFSetEqualCallBack equal;
    CFSetHashCallBack hash;
} CFSetCallBacks;






extern
const CFSetCallBacks kCFTypeSetCallBacks;







extern
const CFSetCallBacks kCFCopyStringSetCallBacks;
# 118 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSet.h" 3
typedef void (*CFSetApplierFunction)(const void *value, void *context);





typedef const struct __CFSet * CFSetRef;





typedef struct __CFSet * CFMutableSetRef;





extern
CFTypeID CFSetGetTypeID(void);
# 185 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSet.h" 3
extern
CFSetRef CFSetCreate(CFAllocatorRef allocator, const void **values, CFIndex numValues, const CFSetCallBacks *callBacks);
# 206 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSet.h" 3
extern
CFSetRef CFSetCreateCopy(CFAllocatorRef allocator, CFSetRef theSet);
# 252 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSet.h" 3
extern
CFMutableSetRef CFSetCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFSetCallBacks *callBacks);
# 282 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSet.h" 3
extern
CFMutableSetRef CFSetCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFSetRef theSet);
# 292 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSet.h" 3
extern
CFIndex CFSetGetCount(CFSetRef theSet);
# 310 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSet.h" 3
extern
CFIndex CFSetGetCountOfValue(CFSetRef theSet, const void *value);
# 326 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSet.h" 3
extern
Boolean CFSetContainsValue(CFSetRef theSet, const void *value);
# 341 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSet.h" 3
extern
const void *CFSetGetValue(CFSetRef theSet, const void *value);
# 365 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSet.h" 3
extern
Boolean CFSetGetValueIfPresent(CFSetRef theSet, const void *candidate, const void **value);
# 379 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSet.h" 3
extern
void CFSetGetValues(CFSetRef theSet, const void **values);
# 399 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSet.h" 3
extern
void CFSetApplyFunction(CFSetRef theSet, CFSetApplierFunction applier, void *context);
# 414 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSet.h" 3
extern
void CFSetAddValue(CFMutableSetRef theSet, const void *value);
# 433 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSet.h" 3
extern
void CFSetReplaceValue(CFMutableSetRef theSet, const void *value);
# 453 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSet.h" 3
extern
void CFSetSetValue(CFMutableSetRef theSet, const void *value);
# 468 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSet.h" 3
extern
void CFSetRemoveValue(CFMutableSetRef theSet, const void *value);
# 478 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSet.h" 3
extern
void CFSetRemoveAllValues(CFMutableSetRef theSet);

}
# 61 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3



# 1 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFStringEncodingExt.h" 1 3
# 10 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFStringEncodingExt.h" 3
extern "C" {

enum {

    kCFStringEncodingMacJapanese = 1,
    kCFStringEncodingMacChineseTrad = 2,
    kCFStringEncodingMacKorean = 3,
    kCFStringEncodingMacArabic = 4,
    kCFStringEncodingMacHebrew = 5,
    kCFStringEncodingMacGreek = 6,
    kCFStringEncodingMacCyrillic = 7,
    kCFStringEncodingMacDevanagari = 9,
    kCFStringEncodingMacGurmukhi = 10,
    kCFStringEncodingMacGujarati = 11,
    kCFStringEncodingMacOriya = 12,
    kCFStringEncodingMacBengali = 13,
    kCFStringEncodingMacTamil = 14,
    kCFStringEncodingMacTelugu = 15,
    kCFStringEncodingMacKannada = 16,
    kCFStringEncodingMacMalayalam = 17,
    kCFStringEncodingMacSinhalese = 18,
    kCFStringEncodingMacBurmese = 19,
    kCFStringEncodingMacKhmer = 20,
    kCFStringEncodingMacThai = 21,
    kCFStringEncodingMacLaotian = 22,
    kCFStringEncodingMacGeorgian = 23,
    kCFStringEncodingMacArmenian = 24,
    kCFStringEncodingMacChineseSimp = 25,
    kCFStringEncodingMacTibetan = 26,
    kCFStringEncodingMacMongolian = 27,
    kCFStringEncodingMacEthiopic = 28,
    kCFStringEncodingMacCentralEurRoman = 29,
    kCFStringEncodingMacVietnamese = 30,
    kCFStringEncodingMacExtArabic = 31,

    kCFStringEncodingMacSymbol = 33,
    kCFStringEncodingMacDingbats = 34,
    kCFStringEncodingMacTurkish = 35,
    kCFStringEncodingMacCroatian = 36,
    kCFStringEncodingMacIcelandic = 37,
    kCFStringEncodingMacRomanian = 38,
    kCFStringEncodingMacCeltic = 39,
    kCFStringEncodingMacGaelic = 40,

    kCFStringEncodingMacFarsi = 0x8C,

    kCFStringEncodingMacUkrainian = 0x98,

    kCFStringEncodingMacInuit = 0xEC,
    kCFStringEncodingMacVT100 = 0xFC,

    kCFStringEncodingMacHFS = 0xFF,






    kCFStringEncodingISOLatin2 = 0x0202,
    kCFStringEncodingISOLatin3 = 0x0203,
    kCFStringEncodingISOLatin4 = 0x0204,
    kCFStringEncodingISOLatinCyrillic = 0x0205,
    kCFStringEncodingISOLatinArabic = 0x0206,
    kCFStringEncodingISOLatinGreek = 0x0207,
    kCFStringEncodingISOLatinHebrew = 0x0208,
    kCFStringEncodingISOLatin5 = 0x0209,
    kCFStringEncodingISOLatin6 = 0x020A,
    kCFStringEncodingISOLatinThai = 0x020B,
    kCFStringEncodingISOLatin7 = 0x020D,
    kCFStringEncodingISOLatin8 = 0x020E,
    kCFStringEncodingISOLatin9 = 0x020F,

    kCFStringEncodingISOLatin10 = 0x0210,



    kCFStringEncodingDOSLatinUS = 0x0400,
    kCFStringEncodingDOSGreek = 0x0405,
    kCFStringEncodingDOSBalticRim = 0x0406,
    kCFStringEncodingDOSLatin1 = 0x0410,
    kCFStringEncodingDOSGreek1 = 0x0411,
    kCFStringEncodingDOSLatin2 = 0x0412,
    kCFStringEncodingDOSCyrillic = 0x0413,
    kCFStringEncodingDOSTurkish = 0x0414,
    kCFStringEncodingDOSPortuguese = 0x0415,
    kCFStringEncodingDOSIcelandic = 0x0416,
    kCFStringEncodingDOSHebrew = 0x0417,
    kCFStringEncodingDOSCanadianFrench = 0x0418,
    kCFStringEncodingDOSArabic = 0x0419,
    kCFStringEncodingDOSNordic = 0x041A,
    kCFStringEncodingDOSRussian = 0x041B,
    kCFStringEncodingDOSGreek2 = 0x041C,
    kCFStringEncodingDOSThai = 0x041D,
    kCFStringEncodingDOSJapanese = 0x0420,
    kCFStringEncodingDOSChineseSimplif = 0x0421,
    kCFStringEncodingDOSKorean = 0x0422,
    kCFStringEncodingDOSChineseTrad = 0x0423,

    kCFStringEncodingWindowsLatin2 = 0x0501,
    kCFStringEncodingWindowsCyrillic = 0x0502,
    kCFStringEncodingWindowsGreek = 0x0503,
    kCFStringEncodingWindowsLatin5 = 0x0504,
    kCFStringEncodingWindowsHebrew = 0x0505,
    kCFStringEncodingWindowsArabic = 0x0506,
    kCFStringEncodingWindowsBalticRim = 0x0507,
    kCFStringEncodingWindowsVietnamese = 0x0508,
    kCFStringEncodingWindowsKoreanJohab = 0x0510,




    kCFStringEncodingANSEL = 0x0601,

    kCFStringEncodingJIS_X0201_76 = 0x0620,
    kCFStringEncodingJIS_X0208_83 = 0x0621,
    kCFStringEncodingJIS_X0208_90 = 0x0622,
    kCFStringEncodingJIS_X0212_90 = 0x0623,
    kCFStringEncodingJIS_C6226_78 = 0x0624,

    kCFStringEncodingShiftJIS_X0213 = 0x0628,


    kCFStringEncodingShiftJIS_X0213_MenKuTen = 0x0629,

    kCFStringEncodingGB_2312_80 = 0x0630,
    kCFStringEncodingGBK_95 = 0x0631,
    kCFStringEncodingGB_18030_2000 = 0x0632,
    kCFStringEncodingKSC_5601_87 = 0x0640,
    kCFStringEncodingKSC_5601_92_Johab = 0x0641,
    kCFStringEncodingCNS_11643_92_P1 = 0x0651,
    kCFStringEncodingCNS_11643_92_P2 = 0x0652,
    kCFStringEncodingCNS_11643_92_P3 = 0x0653,


    kCFStringEncodingISO_2022_JP = 0x0820,
    kCFStringEncodingISO_2022_JP_2 = 0x0821,
    kCFStringEncodingISO_2022_JP_1 = 0x0822,
    kCFStringEncodingISO_2022_JP_3 = 0x0823,
    kCFStringEncodingISO_2022_CN = 0x0830,
    kCFStringEncodingISO_2022_CN_EXT = 0x0831,
    kCFStringEncodingISO_2022_KR = 0x0840,


    kCFStringEncodingEUC_JP = 0x0920,
    kCFStringEncodingEUC_CN = 0x0930,
    kCFStringEncodingEUC_TW = 0x0931,
    kCFStringEncodingEUC_KR = 0x0940,


    kCFStringEncodingShiftJIS = 0x0A01,
    kCFStringEncodingKOI8_R = 0x0A02,
    kCFStringEncodingBig5 = 0x0A03,
    kCFStringEncodingMacRomanLatin1 = 0x0A04,
    kCFStringEncodingHZ_GB_2312 = 0x0A05,
    kCFStringEncodingBig5_HKSCS_1999 = 0x0A06,

    kCFStringEncodingVISCII = 0x0A07,
    kCFStringEncodingKOI8_U = 0x0A08,
    kCFStringEncodingBig5_E = 0x0A09,





    kCFStringEncodingNextStepJapanese = 0x0B02,



    kCFStringEncodingEBCDIC_US = 0x0C01,
    kCFStringEncodingEBCDIC_CP037 = 0x0C02,


    kCFStringEncodingUTF7 = 0x04000100,
    kCFStringEncodingUTF7_IMAP = 0x0A10,



    kCFStringEncodingShiftJIS_X0213_00 = 0x0628
};
typedef CFIndex CFStringEncodings;

}
# 65 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3

# 1 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTree.h" 1 3
# 15 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTree.h" 3
extern "C" {
# 27 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTree.h" 3
typedef const void * (*CFTreeRetainCallBack)(const void *info);







typedef void (*CFTreeReleaseCallBack)(const void *info);
# 44 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTree.h" 3
typedef CFStringRef (*CFTreeCopyDescriptionCallBack)(const void *info);
# 63 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTree.h" 3
typedef struct {
    CFIndex version;
    void * info;
    CFTreeRetainCallBack retain;
    CFTreeReleaseCallBack release;
    CFTreeCopyDescriptionCallBack copyDescription;
} CFTreeContext;
# 79 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTree.h" 3
typedef void (*CFTreeApplierFunction)(const void *value, void *context);





typedef struct __CFTree * CFTreeRef;





extern
CFTypeID CFTreeGetTypeID(void);
# 111 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTree.h" 3
extern
CFTreeRef CFTreeCreate(CFAllocatorRef allocator, const CFTreeContext *context);
# 121 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTree.h" 3
extern
CFTreeRef CFTreeGetParent(CFTreeRef tree);
# 131 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTree.h" 3
extern
CFTreeRef CFTreeGetNextSibling(CFTreeRef tree);
# 141 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTree.h" 3
extern
CFTreeRef CFTreeGetFirstChild(CFTreeRef tree);
# 155 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTree.h" 3
extern
void CFTreeGetContext(CFTreeRef tree, CFTreeContext *context);
# 165 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTree.h" 3
extern
CFIndex CFTreeGetChildCount(CFTreeRef tree);
# 178 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTree.h" 3
extern
CFTreeRef CFTreeGetChildAtIndex(CFTreeRef tree, CFIndex idx);
# 191 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTree.h" 3
extern
void CFTreeGetChildren(CFTreeRef tree, CFTreeRef *children);
# 212 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTree.h" 3
extern
void CFTreeApplyFunctionToChildren(CFTreeRef tree, CFTreeApplierFunction applier, void *context);
# 222 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTree.h" 3
extern
CFTreeRef CFTreeFindRoot(CFTreeRef tree);
# 239 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTree.h" 3
extern
void CFTreeSetContext(CFTreeRef tree, const CFTreeContext *context);
# 252 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTree.h" 3
extern
void CFTreePrependChild(CFTreeRef tree, CFTreeRef newChild);
# 265 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTree.h" 3
extern
void CFTreeAppendChild(CFTreeRef tree, CFTreeRef newChild);
# 280 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTree.h" 3
extern
void CFTreeInsertSibling(CFTreeRef tree, CFTreeRef newSibling);







extern
void CFTreeRemove(CFTreeRef tree);







extern
void CFTreeRemoveAllChildren(CFTreeRef tree);
# 318 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTree.h" 3
extern
void CFTreeSortChildren(CFTreeRef tree, CFComparatorFunction comparator, void *context);

}
# 67 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3

# 1 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURLAccess.h" 1 3
# 16 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURLAccess.h" 3
extern "C" {
# 42 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURLAccess.h" 3
extern
Boolean CFURLCreateDataAndPropertiesFromResource(CFAllocatorRef alloc, CFURLRef url, CFDataRef *resourceData, CFDictionaryRef *properties, CFArrayRef desiredProperties, SInt32 *errorCode) ;
# 53 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURLAccess.h" 3
extern
Boolean CFURLWriteDataAndPropertiesToResource(CFURLRef url, CFDataRef dataToWrite, CFDictionaryRef propertiesToWrite, SInt32 *errorCode) ;



extern
Boolean CFURLDestroyResource(CFURLRef url, SInt32 *errorCode) ;



extern
CFTypeRef CFURLCreatePropertyFromResource(CFAllocatorRef alloc, CFURLRef url, CFStringRef property, SInt32 *errorCode) ;



enum {
    kCFURLUnknownError = -10,
    kCFURLUnknownSchemeError = -11,
    kCFURLResourceNotFoundError = -12,
    kCFURLResourceAccessViolationError = -13,
    kCFURLRemoteHostUnavailableError = -14,
    kCFURLImproperArgumentsError = -15,
    kCFURLUnknownPropertyKeyError = -16,
    kCFURLPropertyKeyUnavailableError = -17,
    kCFURLTimeoutError = -18
};
typedef CFIndex CFURLError;



extern
const CFStringRef kCFURLFileExists ;
extern
const CFStringRef kCFURLFileDirectoryContents ;
extern
const CFStringRef kCFURLFileLength ;
extern
const CFStringRef kCFURLFileLastModificationTime ;
extern
const CFStringRef kCFURLFilePOSIXMode ;
extern
const CFStringRef kCFURLFileOwnerID ;
extern
const CFStringRef kCFURLHTTPStatusCode ;
extern
const CFStringRef kCFURLHTTPStatusLine ;
# 111 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURLAccess.h" 3
}
# 69 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3



# 1 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFAttributedString.h" 1 3
# 20 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFAttributedString.h" 3
extern "C" {




typedef const struct __CFAttributedString *CFAttributedStringRef;
typedef struct __CFAttributedString *CFMutableAttributedStringRef;




extern CFTypeID CFAttributedStringGetTypeID(void) ;
# 40 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFAttributedString.h" 3
extern CFAttributedStringRef CFAttributedStringCreate(CFAllocatorRef alloc, CFStringRef str, CFDictionaryRef attributes) ;




extern CFAttributedStringRef CFAttributedStringCreateWithSubstring(CFAllocatorRef alloc, CFAttributedStringRef aStr, CFRange range) ;




extern CFAttributedStringRef CFAttributedStringCreateCopy(CFAllocatorRef alloc, CFAttributedStringRef aStr) ;




extern CFStringRef CFAttributedStringGetString(CFAttributedStringRef aStr) ;




extern CFIndex CFAttributedStringGetLength(CFAttributedStringRef aStr) ;






extern CFDictionaryRef CFAttributedStringGetAttributes(CFAttributedStringRef aStr, CFIndex loc, CFRange *effectiveRange) ;




extern CFTypeRef CFAttributedStringGetAttribute(CFAttributedStringRef aStr, CFIndex loc, CFStringRef attrName, CFRange *effectiveRange) ;




extern CFDictionaryRef CFAttributedStringGetAttributesAndLongestEffectiveRange(CFAttributedStringRef aStr, CFIndex loc, CFRange inRange, CFRange *longestEffectiveRange) ;




extern CFTypeRef CFAttributedStringGetAttributeAndLongestEffectiveRange(CFAttributedStringRef aStr, CFIndex loc, CFStringRef attrName, CFRange inRange, CFRange *longestEffectiveRange) ;
# 91 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFAttributedString.h" 3
extern CFMutableAttributedStringRef CFAttributedStringCreateMutableCopy(CFAllocatorRef alloc, CFIndex maxLength, CFAttributedStringRef aStr) ;




extern CFMutableAttributedStringRef CFAttributedStringCreateMutable(CFAllocatorRef alloc, CFIndex maxLength) ;






extern void CFAttributedStringReplaceString(CFMutableAttributedStringRef aStr, CFRange range, CFStringRef replacement) ;






extern CFMutableStringRef CFAttributedStringGetMutableString(CFMutableAttributedStringRef aStr) ;




extern void CFAttributedStringSetAttributes(CFMutableAttributedStringRef aStr, CFRange range, CFDictionaryRef replacement, Boolean clearOtherAttributes) ;




extern void CFAttributedStringSetAttribute(CFMutableAttributedStringRef aStr, CFRange range, CFStringRef attrName, CFTypeRef value) ;




extern void CFAttributedStringRemoveAttribute(CFMutableAttributedStringRef aStr, CFRange range, CFStringRef attrName) ;




extern void CFAttributedStringReplaceAttributedString(CFMutableAttributedStringRef aStr, CFRange range, CFAttributedStringRef replacement) ;




extern void CFAttributedStringBeginEditing(CFMutableAttributedStringRef aStr) ;




extern void CFAttributedStringEndEditing(CFMutableAttributedStringRef aStr) ;


}
# 73 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFNotificationCenter.h" 1 3
# 11 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFNotificationCenter.h" 3
extern "C" {

typedef struct __CFNotificationCenter * CFNotificationCenterRef;

typedef void (*CFNotificationCallback)(CFNotificationCenterRef center, void *observer, CFStringRef name, const void *object, CFDictionaryRef userInfo);

enum {
    CFNotificationSuspensionBehaviorDrop = 1,

    CFNotificationSuspensionBehaviorCoalesce = 2,

    CFNotificationSuspensionBehaviorHold = 3,

    CFNotificationSuspensionBehaviorDeliverImmediately = 4

};
typedef CFIndex CFNotificationSuspensionBehavior;

extern CFTypeID CFNotificationCenterGetTypeID(void);

extern CFNotificationCenterRef CFNotificationCenterGetLocalCenter(void) ;


extern CFNotificationCenterRef CFNotificationCenterGetDistributedCenter(void);


extern CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void) ;
# 55 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFNotificationCenter.h" 3
extern void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior);

extern void CFNotificationCenterRemoveObserver(CFNotificationCenterRef center, const void *observer, CFStringRef name, const void *object);
extern void CFNotificationCenterRemoveEveryObserver(CFNotificationCenterRef center, const void *observer);

extern void CFNotificationCenterPostNotification(CFNotificationCenterRef center, CFStringRef name, const void *object, CFDictionaryRef userInfo, Boolean deliverImmediately);



enum {
    kCFNotificationDeliverImmediately = (1UL << 0),
    kCFNotificationPostToAllSessions = (1UL << 1)
};

void CFNotificationCenterPostNotificationWithOptions(CFNotificationCenterRef center, CFStringRef name, const void *object, CFDictionaryRef userInfo, CFOptionFlags options) ;




}
# 74 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3



# 1 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURLEnumerator.h" 1 3
# 14 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURLEnumerator.h" 3
extern "C" {


typedef const struct __CFURLEnumerator *CFURLEnumeratorRef;


extern
CFTypeID CFURLEnumeratorGetTypeID( void ) ;



enum {
    kCFURLEnumeratorDescendRecursively = 1UL << 0,
    kCFURLEnumeratorSkipInvisibles = 1UL << 1,
    kCFURLEnumeratorGenerateFileReferenceURLs = 1UL << 2,
    kCFURLEnumeratorSkipPackageContents = 1UL << 3,
};
typedef CFOptionFlags CFURLEnumeratorOptions;







extern
CFURLEnumeratorRef CFURLEnumeratorCreateForDirectoryURL( CFAllocatorRef alloc, CFURLRef directoryURL, CFURLEnumeratorOptions option, CFArrayRef propertyKeys ) ;
# 49 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURLEnumerator.h" 3
extern
CFURLEnumeratorRef CFURLEnumeratorCreateForMountedVolumes( CFAllocatorRef alloc, CFURLEnumeratorOptions option, CFArrayRef propertyKeys ) ;



enum {
    kCFURLEnumeratorSuccess = 1,
    kCFURLEnumeratorEnd = 2,
    kCFURLEnumeratorError = 3
};
typedef CFIndex CFURLEnumeratorResult;





extern
CFURLEnumeratorResult CFURLEnumeratorGetNextURL( CFURLEnumeratorRef enumerator, CFURLRef *url, CFErrorRef *error ) ;
# 76 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURLEnumerator.h" 3
extern
void CFURLEnumeratorSkipDescendents( CFURLEnumeratorRef enumerator ) ;




extern
CFIndex CFURLEnumeratorGetDescendentLevel( CFURLEnumeratorRef enumerator ) ;




extern
Boolean CFURLEnumeratorGetSourceDidChange( CFURLEnumeratorRef enumerator ) ;


}
# 78 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3



# 1 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFFileDescriptor.h" 1 3
# 12 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFFileDescriptor.h" 3
extern "C" {

typedef int CFFileDescriptorNativeDescriptor;

typedef struct __CFFileDescriptor * CFFileDescriptorRef;


enum {
    kCFFileDescriptorReadCallBack = 1UL << 0,
    kCFFileDescriptorWriteCallBack = 1UL << 1
};

typedef void (*CFFileDescriptorCallBack)(CFFileDescriptorRef f, CFOptionFlags callBackTypes, void *info);

typedef struct {
    CFIndex version;
    void * info;
    void * (*retain)(void *info);
    void (*release)(void *info);
    CFStringRef (*copyDescription)(void *info);
} CFFileDescriptorContext;

extern CFTypeID CFFileDescriptorGetTypeID(void);

extern CFFileDescriptorRef CFFileDescriptorCreate(CFAllocatorRef allocator, CFFileDescriptorNativeDescriptor fd, Boolean closeOnInvalidate, CFFileDescriptorCallBack callout, const CFFileDescriptorContext *context);

extern CFFileDescriptorNativeDescriptor CFFileDescriptorGetNativeDescriptor(CFFileDescriptorRef f);

extern void CFFileDescriptorGetContext(CFFileDescriptorRef f, CFFileDescriptorContext *context);

extern void CFFileDescriptorEnableCallBacks(CFFileDescriptorRef f, CFOptionFlags callBackTypes);
extern void CFFileDescriptorDisableCallBacks(CFFileDescriptorRef f, CFOptionFlags callBackTypes);

extern void CFFileDescriptorInvalidate(CFFileDescriptorRef f);
extern Boolean CFFileDescriptorIsValid(CFFileDescriptorRef f);

extern CFRunLoopSourceRef CFFileDescriptorCreateRunLoopSource(CFAllocatorRef allocator, CFFileDescriptorRef f, CFIndex order);


}
# 82 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFMachPort.h" 1 3
# 11 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFMachPort.h" 3
extern "C" {

typedef struct __CFMachPort * CFMachPortRef;

typedef struct {
    CFIndex version;
    void * info;
    const void *(*retain)(const void *info);
    void (*release)(const void *info);
    CFStringRef (*copyDescription)(const void *info);
} CFMachPortContext;

typedef void (*CFMachPortCallBack)(CFMachPortRef port, void *msg, CFIndex size, void *info);
typedef void (*CFMachPortInvalidationCallBack)(CFMachPortRef port, void *info);

extern CFTypeID CFMachPortGetTypeID(void);

extern CFMachPortRef CFMachPortCreate(CFAllocatorRef allocator, CFMachPortCallBack callout, CFMachPortContext *context, Boolean *shouldFreeInfo);
extern CFMachPortRef CFMachPortCreateWithPort(CFAllocatorRef allocator, mach_port_t portNum, CFMachPortCallBack callout, CFMachPortContext *context, Boolean *shouldFreeInfo);

extern mach_port_t CFMachPortGetPort(CFMachPortRef port);
extern void CFMachPortGetContext(CFMachPortRef port, CFMachPortContext *context);
extern void CFMachPortInvalidate(CFMachPortRef port);
extern Boolean CFMachPortIsValid(CFMachPortRef port);
extern CFMachPortInvalidationCallBack CFMachPortGetInvalidationCallBack(CFMachPortRef port);
extern void CFMachPortSetInvalidationCallBack(CFMachPortRef port, CFMachPortInvalidationCallBack callout);

extern CFRunLoopSourceRef CFMachPortCreateRunLoopSource(CFAllocatorRef allocator, CFMachPortRef port, CFIndex order);

}
# 83 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3


# 1 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFUserNotification.h" 1 3
# 15 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFUserNotification.h" 3
extern "C" {

typedef struct __CFUserNotification * CFUserNotificationRef;
# 63 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFUserNotification.h" 3
typedef void (*CFUserNotificationCallBack)(CFUserNotificationRef userNotification, CFOptionFlags responseFlags);

extern
CFTypeID CFUserNotificationGetTypeID(void);

extern
CFUserNotificationRef CFUserNotificationCreate(CFAllocatorRef allocator, CFTimeInterval timeout, CFOptionFlags flags, SInt32 *error, CFDictionaryRef dictionary);

extern
SInt32 CFUserNotificationReceiveResponse(CFUserNotificationRef userNotification, CFTimeInterval timeout, CFOptionFlags *responseFlags);

extern
CFStringRef CFUserNotificationGetResponseValue(CFUserNotificationRef userNotification, CFStringRef key, CFIndex idx);

extern
CFDictionaryRef CFUserNotificationGetResponseDictionary(CFUserNotificationRef userNotification);

extern
SInt32 CFUserNotificationUpdate(CFUserNotificationRef userNotification, CFTimeInterval timeout, CFOptionFlags flags, CFDictionaryRef dictionary);

extern
SInt32 CFUserNotificationCancel(CFUserNotificationRef userNotification);

extern
CFRunLoopSourceRef CFUserNotificationCreateRunLoopSource(CFAllocatorRef allocator, CFUserNotificationRef userNotification, CFUserNotificationCallBack callout, CFIndex order);




extern
SInt32 CFUserNotificationDisplayNotice(CFTimeInterval timeout, CFOptionFlags flags, CFURLRef iconURL, CFURLRef soundURL, CFURLRef localizationURL, CFStringRef alertHeader, CFStringRef alertMessage, CFStringRef defaultButtonTitle);

extern
SInt32 CFUserNotificationDisplayAlert(CFTimeInterval timeout, CFOptionFlags flags, CFURLRef iconURL, CFURLRef soundURL, CFURLRef localizationURL, CFStringRef alertHeader, CFStringRef alertMessage, CFStringRef defaultButtonTitle, CFStringRef alternateButtonTitle, CFStringRef otherButtonTitle, CFOptionFlags *responseFlags);




enum {
    kCFUserNotificationStopAlertLevel = 0,
    kCFUserNotificationNoteAlertLevel = 1,
    kCFUserNotificationCautionAlertLevel = 2,
    kCFUserNotificationPlainAlertLevel = 3
};

enum {
    kCFUserNotificationDefaultResponse = 0,
    kCFUserNotificationAlternateResponse = 1,
    kCFUserNotificationOtherResponse = 2,
    kCFUserNotificationCancelResponse = 3
};

enum {
    kCFUserNotificationNoDefaultButtonFlag = (1UL << 5),
    kCFUserNotificationUseRadioButtonsFlag = (1UL << 6)
};

static __inline__ __attribute__((always_inline)) CFOptionFlags CFUserNotificationCheckBoxChecked(CFIndex i) {return ((CFOptionFlags)(1UL << (8 + i)));}
static __inline__ __attribute__((always_inline)) CFOptionFlags CFUserNotificationSecureTextField(CFIndex i) {return ((CFOptionFlags)(1UL << (16 + i)));}
static __inline__ __attribute__((always_inline)) CFOptionFlags CFUserNotificationPopUpSelection(CFIndex n) {return ((CFOptionFlags)(n << 24));}




extern
const CFStringRef kCFUserNotificationIconURLKey;

extern
const CFStringRef kCFUserNotificationSoundURLKey;

extern
const CFStringRef kCFUserNotificationLocalizationURLKey;

extern
const CFStringRef kCFUserNotificationAlertHeaderKey;

extern
const CFStringRef kCFUserNotificationAlertMessageKey;

extern
const CFStringRef kCFUserNotificationDefaultButtonTitleKey;

extern
const CFStringRef kCFUserNotificationAlternateButtonTitleKey;

extern
const CFStringRef kCFUserNotificationOtherButtonTitleKey;

extern
const CFStringRef kCFUserNotificationProgressIndicatorValueKey;

extern
const CFStringRef kCFUserNotificationPopUpTitlesKey;

extern
const CFStringRef kCFUserNotificationTextFieldTitlesKey;

extern
const CFStringRef kCFUserNotificationCheckBoxTitlesKey;

extern
const CFStringRef kCFUserNotificationTextFieldValuesKey;


extern
const CFStringRef kCFUserNotificationPopUpSelectionKey ;
# 179 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFUserNotification.h" 3
}
# 86 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFXMLNode.h" 1 3
# 20 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFXMLNode.h" 3
extern "C" {

enum {
 kCFXMLNodeCurrentVersion = 1
};

typedef const struct __CFXMLNode * CFXMLNodeRef;
typedef CFTreeRef CFXMLTreeRef;
# 50 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFXMLNode.h" 3
enum {
    kCFXMLNodeTypeDocument = 1,
    kCFXMLNodeTypeElement = 2,
    kCFXMLNodeTypeAttribute = 3,
    kCFXMLNodeTypeProcessingInstruction = 4,
    kCFXMLNodeTypeComment = 5,
    kCFXMLNodeTypeText = 6,
    kCFXMLNodeTypeCDATASection = 7,
    kCFXMLNodeTypeDocumentFragment = 8,
    kCFXMLNodeTypeEntity = 9,
    kCFXMLNodeTypeEntityReference = 10,
    kCFXMLNodeTypeDocumentType = 11,
    kCFXMLNodeTypeWhitespace = 12,
    kCFXMLNodeTypeNotation = 13,
    kCFXMLNodeTypeElementTypeDeclaration = 14,
    kCFXMLNodeTypeAttributeListDeclaration = 15
};
typedef CFIndex CFXMLNodeTypeCode;

typedef struct {
    CFDictionaryRef attributes;
    CFArrayRef attributeOrder;
    Boolean isEmpty;
    char _reserved[3];
} CFXMLElementInfo;

typedef struct {
    CFStringRef dataString;
} CFXMLProcessingInstructionInfo;

typedef struct {
    CFURLRef sourceURL;
    CFStringEncoding encoding;
} CFXMLDocumentInfo;

typedef struct {
    CFURLRef systemID;
    CFStringRef publicID;
} CFXMLExternalID;

typedef struct {
    CFXMLExternalID externalID;
} CFXMLDocumentTypeInfo;

typedef struct {
    CFXMLExternalID externalID;
} CFXMLNotationInfo;

typedef struct {

    CFStringRef contentDescription;
} CFXMLElementTypeDeclarationInfo;

typedef struct {

    CFStringRef attributeName;
    CFStringRef typeString;
    CFStringRef defaultString;
} CFXMLAttributeDeclarationInfo;

typedef struct {
    CFIndex numberOfAttributes;
    CFXMLAttributeDeclarationInfo *attributes;
} CFXMLAttributeListDeclarationInfo;

enum {
    kCFXMLEntityTypeParameter,
    kCFXMLEntityTypeParsedInternal,
    kCFXMLEntityTypeParsedExternal,
    kCFXMLEntityTypeUnparsed,
    kCFXMLEntityTypeCharacter
};
typedef CFIndex CFXMLEntityTypeCode;

typedef struct {
    CFXMLEntityTypeCode entityType;
    CFStringRef replacementText;
    CFXMLExternalID entityID;
    CFStringRef notationName;
} CFXMLEntityInfo;

typedef struct {
    CFXMLEntityTypeCode entityType;
} CFXMLEntityReferenceInfo;
# 155 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFXMLNode.h" 3
extern
CFTypeID CFXMLNodeGetTypeID(void);


extern
CFXMLNodeRef CFXMLNodeCreate(CFAllocatorRef alloc, CFXMLNodeTypeCode xmlType, CFStringRef dataString, const void *additionalInfoPtr, CFIndex version);


extern
CFXMLNodeRef CFXMLNodeCreateCopy(CFAllocatorRef alloc, CFXMLNodeRef origNode);

extern
CFXMLNodeTypeCode CFXMLNodeGetTypeCode(CFXMLNodeRef node);

extern
CFStringRef CFXMLNodeGetString(CFXMLNodeRef node);

extern
const void *CFXMLNodeGetInfoPtr(CFXMLNodeRef node);

extern
CFIndex CFXMLNodeGetVersion(CFXMLNodeRef node);




extern
CFXMLTreeRef CFXMLTreeCreateWithNode(CFAllocatorRef allocator, CFXMLNodeRef node);


extern
CFXMLNodeRef CFXMLTreeGetNode(CFXMLTreeRef xmlTree);

}
# 87 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 1 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFXMLParser.h" 1 3
# 22 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFXMLParser.h" 3
extern "C" {

typedef struct __CFXMLParser * CFXMLParserRef;
# 56 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFXMLParser.h" 3
enum {
    kCFXMLParserValidateDocument = (1UL << 0),
    kCFXMLParserSkipMetaData = (1UL << 1),
    kCFXMLParserReplacePhysicalEntities = (1UL << 2),
    kCFXMLParserSkipWhitespace = (1UL << 3),
    kCFXMLParserResolveExternalEntities = (1UL << 4),
    kCFXMLParserAddImpliedAttributes = (1UL << 5),
    kCFXMLParserAllOptions = 0x00FFFFFF,
    kCFXMLParserNoOptions = 0
};
typedef CFOptionFlags CFXMLParserOptions;


enum {
    kCFXMLStatusParseNotBegun = -2,
    kCFXMLStatusParseInProgress = -1,
    kCFXMLStatusParseSuccessful = 0,
    kCFXMLErrorUnexpectedEOF = 1,
    kCFXMLErrorUnknownEncoding,
    kCFXMLErrorEncodingConversionFailure,
    kCFXMLErrorMalformedProcessingInstruction,
    kCFXMLErrorMalformedDTD,
    kCFXMLErrorMalformedName,
    kCFXMLErrorMalformedCDSect,
    kCFXMLErrorMalformedCloseTag,
    kCFXMLErrorMalformedStartTag,
    kCFXMLErrorMalformedDocument,
    kCFXMLErrorElementlessDocument,
    kCFXMLErrorMalformedComment,
    kCFXMLErrorMalformedCharacterReference,
    kCFXMLErrorMalformedParsedCharacterData,
    kCFXMLErrorNoData
};
typedef CFIndex CFXMLParserStatusCode;
# 133 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFXMLParser.h" 3
typedef void * (*CFXMLParserCreateXMLStructureCallBack)(CFXMLParserRef parser, CFXMLNodeRef nodeDesc, void *info);
typedef void (*CFXMLParserAddChildCallBack)(CFXMLParserRef parser, void *parent, void *child, void *info);
typedef void (*CFXMLParserEndXMLStructureCallBack)(CFXMLParserRef parser, void *xmlType, void *info);
typedef CFDataRef (*CFXMLParserResolveExternalEntityCallBack)(CFXMLParserRef parser, CFXMLExternalID *extID, void *info);
typedef Boolean (*CFXMLParserHandleErrorCallBack)(CFXMLParserRef parser, CFXMLParserStatusCode error, void *info);
typedef struct {
    CFIndex version;
    CFXMLParserCreateXMLStructureCallBack createXMLStructure;
    CFXMLParserAddChildCallBack addChild;
    CFXMLParserEndXMLStructureCallBack endXMLStructure;
    CFXMLParserResolveExternalEntityCallBack resolveExternalEntity;
    CFXMLParserHandleErrorCallBack handleError;
} CFXMLParserCallBacks;

typedef const void * (*CFXMLParserRetainCallBack)(const void *info);
typedef void (*CFXMLParserReleaseCallBack)(const void *info);
typedef CFStringRef (*CFXMLParserCopyDescriptionCallBack)(const void *info);
typedef struct {
    CFIndex version;
    void * info;
    CFXMLParserRetainCallBack retain;
    CFXMLParserReleaseCallBack release;
    CFXMLParserCopyDescriptionCallBack copyDescription;
} CFXMLParserContext;

extern
CFTypeID CFXMLParserGetTypeID(void);
# 168 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFXMLParser.h" 3
extern
CFXMLParserRef CFXMLParserCreate(CFAllocatorRef allocator, CFDataRef xmlData, CFURLRef dataSource, CFOptionFlags parseOptions, CFIndex versionOfNodes, CFXMLParserCallBacks *callBacks, CFXMLParserContext *context);



extern
CFXMLParserRef CFXMLParserCreateWithDataFromURL(CFAllocatorRef allocator, CFURLRef dataSource, CFOptionFlags parseOptions, CFIndex versionOfNodes, CFXMLParserCallBacks *callBacks, CFXMLParserContext *context);

extern
void CFXMLParserGetContext(CFXMLParserRef parser, CFXMLParserContext *context);

extern
void CFXMLParserGetCallBacks(CFXMLParserRef parser, CFXMLParserCallBacks *callBacks);

extern
CFURLRef CFXMLParserGetSourceURL(CFXMLParserRef parser);


extern
CFIndex CFXMLParserGetLocation(CFXMLParserRef parser);


extern
CFIndex CFXMLParserGetLineNumber(CFXMLParserRef parser);


extern
void *CFXMLParserGetDocument(CFXMLParserRef parser);




extern
CFXMLParserStatusCode CFXMLParserGetStatusCode(CFXMLParserRef parser);

extern
CFStringRef CFXMLParserCopyErrorDescription(CFXMLParserRef parser);




extern
void CFXMLParserAbort(CFXMLParserRef parser, CFXMLParserStatusCode errorCode, CFStringRef errorDescription);






extern
Boolean CFXMLParserParse(CFXMLParserRef parser);







extern
CFXMLTreeRef CFXMLTreeCreateFromData(CFAllocatorRef allocator, CFDataRef xmlData, CFURLRef dataSource, CFOptionFlags parseOptions, CFIndex versionOfNodes);




extern
CFXMLTreeRef CFXMLTreeCreateFromDataWithError(CFAllocatorRef allocator, CFDataRef xmlData, CFURLRef dataSource, CFOptionFlags parseOptions, CFIndex versionOfNodes, CFDictionaryRef *errorDict) ;


extern
CFXMLTreeRef CFXMLTreeCreateWithDataFromURL(CFAllocatorRef allocator, CFURLRef dataSource, CFOptionFlags parseOptions, CFIndex versionOfNodes);






extern
CFDataRef CFXMLTreeCreateXMLData(CFAllocatorRef allocator, CFXMLTreeRef xmlTree);







extern
CFStringRef CFXMLCreateStringByEscapingEntities(CFAllocatorRef allocator, CFStringRef string, CFDictionaryRef entitiesDictionary) ;

extern
CFStringRef CFXMLCreateStringByUnescapingEntities(CFAllocatorRef allocator, CFStringRef string, CFDictionaryRef entitiesDictionary) ;


extern const CFStringRef kCFXMLTreeErrorDescription ;


extern const CFStringRef kCFXMLTreeErrorLineNumber ;


extern const CFStringRef kCFXMLTreeErrorLocation ;


extern const CFStringRef kCFXMLTreeErrorStatusCode ;


}
# 88 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3

# 1 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFStringTokenizer.h" 1 3
# 29 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFStringTokenizer.h" 3
extern "C" {
# 51 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFStringTokenizer.h" 3
extern
CFStringRef CFStringTokenizerCopyBestStringLanguage(CFStringRef string, CFRange range) ;







typedef struct __CFStringTokenizer * CFStringTokenizerRef;




enum {







    kCFStringTokenizerUnitWord = 0,
    kCFStringTokenizerUnitSentence = 1,
    kCFStringTokenizerUnitParagraph = 2,
    kCFStringTokenizerUnitLineBreak = 3,




    kCFStringTokenizerUnitWordBoundary = 4,
# 92 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFStringTokenizer.h" 3
    kCFStringTokenizerAttributeLatinTranscription = 1UL << 16,


    kCFStringTokenizerAttributeLanguage = 1UL << 17
};






enum {

    kCFStringTokenizerTokenNone = 0,


    kCFStringTokenizerTokenNormal = 1UL << 0,





    kCFStringTokenizerTokenHasSubTokensMask = 1UL << 1,






    kCFStringTokenizerTokenHasDerivedSubTokensMask = 1UL << 2,

    kCFStringTokenizerTokenHasHasNumbersMask = 1UL << 3,
    kCFStringTokenizerTokenHasNonLettersMask = 1UL << 4,
    kCFStringTokenizerTokenIsCJWordMask = 1UL << 5
};
typedef CFOptionFlags CFStringTokenizerTokenType;






extern
CFTypeID CFStringTokenizerGetTypeID(void) ;
# 156 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFStringTokenizer.h" 3
extern
CFStringTokenizerRef CFStringTokenizerCreate(CFAllocatorRef alloc, CFStringRef string, CFRange range, CFOptionFlags options, CFLocaleRef locale) ;
# 168 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFStringTokenizer.h" 3
extern
void CFStringTokenizerSetString(CFStringTokenizerRef tokenizer, CFStringRef string, CFRange range) ;
# 186 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFStringTokenizer.h" 3
extern
CFStringTokenizerTokenType CFStringTokenizerGoToTokenAtIndex(CFStringTokenizerRef tokenizer, CFIndex index) ;
# 210 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFStringTokenizer.h" 3
extern
CFStringTokenizerTokenType CFStringTokenizerAdvanceToNextToken(CFStringTokenizerRef tokenizer) ;
# 220 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFStringTokenizer.h" 3
extern
CFRange CFStringTokenizerGetCurrentTokenRange(CFStringTokenizerRef tokenizer) ;
# 234 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFStringTokenizer.h" 3
extern
CFTypeRef CFStringTokenizerCopyCurrentTokenAttribute(CFStringTokenizerRef tokenizer, CFOptionFlags attribute) ;
# 261 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CFStringTokenizer.h" 3
extern
CFIndex CFStringTokenizerGetCurrentSubTokens(CFStringTokenizerRef tokenizer, CFRange *ranges, CFIndex maxRangeLength, CFMutableArrayRef derivedSubTokens) ;

}
# 90 "/System/Library/Frameworks/CoreFoundation.framework/Headers/CoreFoundation.h" 2 3
# 21 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CarbonCore.h" 2 3
# 33 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CarbonCore.h" 3
# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Finder.h" 1 3
# 31 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Finder.h" 3
#pragma pack(push, 2)


enum {
  kClippingCreator = 'drag',
  kClippingPictureType = 'clpp',
  kClippingTextType = 'clpt',
  kClippingSoundType = 'clps',
  kClippingUnknownType = 'clpu'
};



enum {
  kInternetLocationCreator = 'drag',
  kInternetLocationHTTP = 'ilht',
  kInternetLocationFTP = 'ilft',
  kInternetLocationFile = 'ilfi',
  kInternetLocationMail = 'ilma',
  kInternetLocationNNTP = 'ilnw',
  kInternetLocationAFP = 'ilaf',
  kInternetLocationAppleTalk = 'ilat',
  kInternetLocationNSL = 'ilns',
  kInternetLocationGeneric = 'ilge'
};



enum {
  kCustomIconResource = -16455
};






enum {
  kCustomBadgeResourceType = 'badg',
  kCustomBadgeResourceID = kCustomIconResource,
  kCustomBadgeResourceVersion = 0
};

struct CustomBadgeResource {
  SInt16 version;
  SInt16 customBadgeResourceID;

  OSType customBadgeType;
  OSType customBadgeCreator;
  OSType windowBadgeType;
  OSType windowBadgeCreator;

  OSType overrideType;
  OSType overrideCreator;
};
typedef struct CustomBadgeResource CustomBadgeResource;
typedef CustomBadgeResource * CustomBadgeResourcePtr;
typedef CustomBadgeResourcePtr * CustomBadgeResourceHandle;
# 100 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Finder.h" 3
enum {
  kRoutingResourceType = 'rout',
  kRoutingResourceID = 0
};

struct RoutingResourceEntry {
  OSType creator;
  OSType fileType;
  OSType targetFolder;
  OSType destinationFolder;
  OSType reservedField;
};
typedef struct RoutingResourceEntry RoutingResourceEntry;
typedef RoutingResourceEntry * RoutingResourcePtr;
typedef RoutingResourcePtr * RoutingResourceHandle;


enum {
  kContainerFolderAliasType = 'fdrp',
  kContainerTrashAliasType = 'trsh',
  kContainerHardDiskAliasType = 'hdsk',
  kContainerFloppyAliasType = 'flpy',
  kContainerServerAliasType = 'srvr',
  kApplicationAliasType = 'adrp',
  kContainerAliasType = 'drop',
  kDesktopPrinterAliasType = 'dtpa',
  kContainerCDROMAliasType = 'cddr',
  kApplicationCPAliasType = 'acdp',
  kApplicationDAAliasType = 'addp',
  kPackageAliasType = 'fpka',
  kAppPackageAliasType = 'fapa'
};


enum {
  kSystemFolderAliasType = 'fasy',
  kAppleMenuFolderAliasType = 'faam',
  kStartupFolderAliasType = 'fast',
  kPrintMonitorDocsFolderAliasType = 'fapn',
  kPreferencesFolderAliasType = 'fapf',
  kControlPanelFolderAliasType = 'fact',
  kExtensionFolderAliasType = 'faex'
};


enum {
  kExportedFolderAliasType = 'faet',
  kDropFolderAliasType = 'fadr',
  kSharedFolderAliasType = 'fash',
  kMountedFolderAliasType = 'famn'
};





enum {
  kIsOnDesk = 0x0001,
  kColor = 0x000E,

  kIsShared = 0x0040,



  kHasNoINITs = 0x0080,

  kHasBeenInited = 0x0100,





  kHasCustomIcon = 0x0400,
  kIsStationery = 0x0800,
  kNameLocked = 0x1000,
  kHasBundle = 0x2000,


  kIsInvisible = 0x4000,
  kIsAlias = 0x8000
};


enum {
  fOnDesk = kIsOnDesk,
  fHasBundle = kHasBundle,
  fInvisible = kIsInvisible
};


enum {
  fTrash = -3,
  fDesktop = -2,
  fDisk = 0
};
# 205 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Finder.h" 3
enum {
  kExtendedFlagsAreInvalid = 0x8000,
  kExtendedFlagHasCustomBadge = 0x0100,
  kExtendedFlagObjectIsBusy = 0x0080,
  kExtendedFlagHasRoutingInfo = 0x0004
};
# 220 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Finder.h" 3
enum {
  kFirstMagicBusyFiletype = 'bzy ',
  kLastMagicBusyFiletype = 'bzy?'
};






enum {
  kMagicBusyCreationDate = 0x4F3AFDB0
};
# 243 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Finder.h" 3
struct FileInfo {
  OSType fileType;
  OSType fileCreator;
  UInt16 finderFlags;
  Point location;

  UInt16 reservedField;
};
typedef struct FileInfo FileInfo;
struct FolderInfo {
  Rect windowBounds;
  UInt16 finderFlags;
  Point location;

  UInt16 reservedField;
};
typedef struct FolderInfo FolderInfo;
struct ExtendedFileInfo {
  SInt16 reserved1[4];
  UInt16 extendedFinderFlags;
  SInt16 reserved2;
  SInt32 putAwayFolderID;
};
typedef struct ExtendedFileInfo ExtendedFileInfo;
struct ExtendedFolderInfo {
  Point scrollPosition;
  SInt32 reserved1;
  UInt16 extendedFinderFlags;
  SInt16 reserved2;
  SInt32 putAwayFolderID;
};
typedef struct ExtendedFolderInfo ExtendedFolderInfo;
# 287 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Finder.h" 3
struct FInfo {
  OSType fdType;
  OSType fdCreator;
  UInt16 fdFlags;
  Point fdLocation;

  SInt16 fdFldr;
};
typedef struct FInfo FInfo;







struct FXInfo {
  SInt16 fdIconID;
  SInt16 fdReserved[3];
  SInt8 fdScript;
  SInt8 fdXFlags;
  SInt16 fdComment;
  SInt32 fdPutAway;
};
typedef struct FXInfo FXInfo;






struct DInfo {
  Rect frRect;
  UInt16 frFlags;
  Point frLocation;

  SInt16 frView;
};
typedef struct DInfo DInfo;







struct DXInfo {
  Point frScroll;
  SInt32 frOpenChain;
  SInt8 frScript;
  SInt8 frXFlags;
  SInt16 frComment;
  SInt32 frPutAway;
};
typedef struct DXInfo DXInfo;


#pragma pack(pop)
# 34 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CarbonCore.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FixMath.h" 1 3
# 32 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FixMath.h" 3
extern "C" {
# 130 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FixMath.h" 3
extern Fixed
FixRatio(
  short numer,
  short denom) ;
# 144 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FixMath.h" 3
extern Fixed
FixMul(
  Fixed a,
  Fixed b) ;
# 158 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FixMath.h" 3
extern short
FixRound(Fixed x) ;
# 170 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FixMath.h" 3
extern Fract
Fix2Frac(Fixed x) ;
# 182 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FixMath.h" 3
extern SInt32
Fix2Long(Fixed x) ;
# 194 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FixMath.h" 3
extern Fixed
Long2Fix(SInt32 x) ;
# 206 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FixMath.h" 3
extern Fixed
Frac2Fix(Fract x) ;
# 218 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FixMath.h" 3
extern Fract
FracMul(
  Fract x,
  Fract y) ;
# 232 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FixMath.h" 3
extern Fixed
FixDiv(
  Fixed x,
  Fixed y) ;
# 246 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FixMath.h" 3
extern Fract
FracDiv(
  Fract x,
  Fract y) ;
# 260 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FixMath.h" 3
extern Fract
FracSqrt(Fract x) ;
# 272 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FixMath.h" 3
extern Fract
FracSin(Fixed x) ;
# 284 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FixMath.h" 3
extern Fract
FracCos(Fixed x) ;
# 296 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FixMath.h" 3
extern Fixed
FixATan2(
  SInt32 x,
  SInt32 y) ;
# 319 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FixMath.h" 3
extern double
Frac2X(Fract x) ;
# 331 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FixMath.h" 3
extern double
Fix2X(Fixed x) ;
# 343 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FixMath.h" 3
extern Fixed
X2Fix(double x) ;
# 355 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FixMath.h" 3
extern Fract
X2Frac(double x) ;
# 379 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FixMath.h" 3
extern short
WideCompare(
  const wide * target,
  const wide * source) ;
# 408 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FixMath.h" 3
extern wide *
WideAdd(
  wide * target,
  const wide * source) ;
# 437 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FixMath.h" 3
extern wide *
WideSubtract(
  wide * target,
  const wide * source) ;
# 462 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FixMath.h" 3
extern wide *
WideNegate(wide * target) ;
# 487 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FixMath.h" 3
extern wide *
WideShift(
  wide * target,
  SInt32 shift) ;
# 513 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FixMath.h" 3
extern UInt32
WideSquareRoot(const wide * source) ;
# 541 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FixMath.h" 3
extern wide *
WideMultiply(
  SInt32 multiplicand,
  SInt32 multiplier,
  wide * target) ;
# 580 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FixMath.h" 3
extern SInt32
WideDivide(
  const wide * dividend,
  SInt32 divisor,
  SInt32 * remainder) ;
# 615 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FixMath.h" 3
extern wide *
WideWideDivide(
  wide * dividend,
  SInt32 divisor,
  SInt32 * remainder) ;
# 646 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FixMath.h" 3
extern wide *
WideBitShift(
  wide * target,
  SInt32 shift) ;
# 660 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FixMath.h" 3
extern UnsignedFixed
UnsignedFixedMulDiv(
  UnsignedFixed value,
  UnsignedFixed multiplier,
  UnsignedFixed divisor) ;





}
# 38 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CarbonCore.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Script.h" 1 3
# 24 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Script.h" 3
# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/IntlResources.h" 1 3
# 31 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/IntlResources.h" 3
#pragma pack(push, 2)

enum {

  itlcShowIcon = 7,
  itlcDualCaret = 6,

  itlcSysDirection = 15
};

enum {

  itlcDisableKeyScriptSync = 3
};

enum {

  itlcDisableKeyScriptSyncMask = 1 << itlcDisableKeyScriptSync
};


enum {
  tokLeftQuote = 1,
  tokRightQuote = 2,
  tokLeadPlacer = 3,
  tokLeader = 4,
  tokNonLeader = 5,
  tokZeroLead = 6,
  tokPercent = 7,
  tokPlusSign = 8,
  tokMinusSign = 9,
  tokThousands = 10,
  tokReserved = 11,
  tokSeparator = 12,
  tokEscape = 13,
  tokDecPoint = 14,
  tokEPlus = 15,
  tokEMinus = 16,
  tokMaxSymbols = 31,
  curNumberPartsVersion = 1
};

enum {
  currSymLead = 16,
  currNegSym = 32,
  currTrailingZ = 64,
  currLeadingZ = 128
};

enum {
  mdy = 0,
  dmy = 1,
  ymd = 2,
  myd = 3,
  dym = 4,
  ydm = 5
};

typedef SInt8 DateOrders;
enum {
  timeCycle24 = 0,
  timeCycleZero = 1,
  timeCycle12 = 255,
  zeroCycle = 1,
  longDay = 0,
  longWeek = 1,
  longMonth = 2,
  longYear = 3,
  supDay = 1,
  supWeek = 2,
  supMonth = 4,
  supYear = 8,
  dayLdingZ = 32,
  mntLdingZ = 64,
  century = 128,
  secLeadingZ = 32,
  minLeadingZ = 64,
  hrLeadingZ = 128
};


struct OffPair {
  short offFirst;
  short offSecond;
};
typedef struct OffPair OffPair;
typedef OffPair OffsetTable[3];
struct Intl0Rec {
  char decimalPt;
  char thousSep;
  char listSep;
  char currSym1;
  char currSym2;
  char currSym3;
  UInt8 currFmt;
  UInt8 dateOrder;
  UInt8 shrtDateFmt;
  char dateSep;
  UInt8 timeCycle;
  UInt8 timeFmt;
  char mornStr[4];
  char eveStr[4];
  char timeSep;
  char time1Suff;
  char time2Suff;
  char time3Suff;
  char time4Suff;
  char time5Suff;
  char time6Suff;
  char time7Suff;
  char time8Suff;
  UInt8 metricSys;
  short intl0Vers;
};
typedef struct Intl0Rec Intl0Rec;
typedef Intl0Rec * Intl0Ptr;
typedef Intl0Ptr * Intl0Hndl;
struct Intl1Rec {
  Str15 days[7];
  Str15 months[12];
  UInt8 suppressDay;
  UInt8 lngDateFmt;
  UInt8 dayLeading0;
  UInt8 abbrLen;
  char st0[4];
  char st1[4];
  char st2[4];
  char st3[4];
  char st4[4];
  short intl1Vers;
  short localRtn[1];
};
typedef struct Intl1Rec Intl1Rec;
typedef Intl1Rec * Intl1Ptr;
typedef Intl1Ptr * Intl1Hndl;

struct Itl1ExtRec {
  Intl1Rec base;
  short version;
  short format;
  short calendarCode;
  SInt32 extraDaysTableOffset;
  SInt32 extraDaysTableLength;
  SInt32 extraMonthsTableOffset;
  SInt32 extraMonthsTableLength;
  SInt32 abbrevDaysTableOffset;
  SInt32 abbrevDaysTableLength;
  SInt32 abbrevMonthsTableOffset;
  SInt32 abbrevMonthsTableLength;
  SInt32 extraSepsTableOffset;
  SInt32 extraSepsTableLength;
  short tables[1];
};
typedef struct Itl1ExtRec Itl1ExtRec;
struct UntokenTable {
  short len;
  short lastToken;
  short index[256];
};
typedef struct UntokenTable UntokenTable;
typedef UntokenTable * UntokenTablePtr;
typedef UntokenTablePtr * UntokenTableHandle;
# 209 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/IntlResources.h" 3
union WideChar {
  struct {
    char lo;
    char hi;
  } a;
  short b;
};
typedef union WideChar WideChar;
# 227 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/IntlResources.h" 3
struct WideCharArr {
  short size;
  WideChar data[10];
};
typedef struct WideCharArr WideCharArr;
struct NumberParts {
  short version;
  WideChar data[31];
  WideCharArr pePlus;
  WideCharArr peMinus;
  WideCharArr peMinusPlus;
  WideCharArr altNumTable;
  char reserved[20];
};
typedef struct NumberParts NumberParts;
typedef NumberParts * NumberPartsPtr;

struct Itl4Rec {
  short flags;
  SInt32 resourceType;
  short resourceNum;
  short version;
  SInt32 resHeader1;
  SInt32 resHeader2;
  short numTables;
  SInt32 mapOffset;
  SInt32 strOffset;
  SInt32 fetchOffset;
  SInt32 unTokenOffset;
  SInt32 defPartsOffset;
  SInt32 resOffset6;
  SInt32 resOffset7;
  SInt32 resOffset8;
};
typedef struct Itl4Rec Itl4Rec;
typedef Itl4Rec * Itl4Ptr;
typedef Itl4Ptr * Itl4Handle;

struct NItl4Rec {
  short flags;
  SInt32 resourceType;
  short resourceNum;
  short version;
  short format;
  short resHeader;
  SInt32 resHeader2;
  short numTables;
  SInt32 mapOffset;
  SInt32 strOffset;
  SInt32 fetchOffset;
  SInt32 unTokenOffset;
  SInt32 defPartsOffset;
  SInt32 whtSpListOffset;
  SInt32 resOffset7;
  SInt32 resOffset8;
  short resLength1;
  short resLength2;
  short resLength3;
  short unTokenLength;
  short defPartsLength;
  short whtSpListLength;
  short resLength7;
  short resLength8;
};
typedef struct NItl4Rec NItl4Rec;
typedef NItl4Rec * NItl4Ptr;
typedef NItl4Ptr * NItl4Handle;

struct TableDirectoryRecord {
  OSType tableSignature;
  UInt32 reserved;
  UInt32 tableStartOffset;
  UInt32 tableSize;
};
typedef struct TableDirectoryRecord TableDirectoryRecord;
struct Itl5Record {
  Fixed versionNumber;
  unsigned short numberOfTables;
  unsigned short reserved[3];
  TableDirectoryRecord tableDirectory[1];
};
typedef struct Itl5Record Itl5Record;
struct RuleBasedTrslRecord {
  short sourceType;
  short targetType;
  short formatNumber;
  short propertyFlag;
  short numberOfRules;
};
typedef struct RuleBasedTrslRecord RuleBasedTrslRecord;

struct ItlcRecord {
  short itlcSystem;
  short itlcReserved;
  SInt8 itlcFontForce;
  SInt8 itlcIntlForce;
  SInt8 itlcOldKybd;
  SInt8 itlcFlags;
  short itlcIconOffset;
  SInt8 itlcIconSide;
  SInt8 itlcIconRsvd;
  short itlcRegionCode;
  short itlcSysFlags;
  SInt8 itlcReserved4[32];
};
typedef struct ItlcRecord ItlcRecord;
struct ItlbRecord {
  short itlbNumber;
  short itlbDate;
  short itlbSort;
  short itlbFlags;
  short itlbToken;
  short itlbEncoding;
  short itlbLang;
  SInt8 itlbNumRep;
  SInt8 itlbDateRep;
  short itlbKeys;
  short itlbIcon;
};
typedef struct ItlbRecord ItlbRecord;

struct ItlbExtRecord {
  ItlbRecord base;
  SInt32 itlbLocalSize;
  short itlbMonoFond;
  short itlbMonoSize;
  short itlbPrefFond;
  short itlbPrefSize;
  short itlbSmallFond;
  short itlbSmallSize;
  short itlbSysFond;
  short itlbSysSize;
  short itlbAppFond;
  short itlbAppSize;
  short itlbHelpFond;
  short itlbHelpSize;
  Style itlbValidStyles;
  Style itlbAliasStyle;
};
typedef struct ItlbExtRecord ItlbExtRecord;



#pragma pack(pop)
# 25 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Script.h" 2 3
# 36 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Script.h" 3
extern "C" {


#pragma pack(push, 2)


enum {
  smSystemScript = -1,
  smCurrentScript = -2,
  smAllScripts = -3
};
# 60 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Script.h" 3
enum {
  smRoman = 0,
  smJapanese = 1,
  smTradChinese = 2,
  smKorean = 3,
  smArabic = 4,
  smHebrew = 5,
  smGreek = 6,
  smCyrillic = 7,
  smRSymbol = 8,
  smDevanagari = 9,
  smGurmukhi = 10,
  smGujarati = 11,
  smOriya = 12,
  smBengali = 13,
  smTamil = 14,
  smTelugu = 15,
  smKannada = 16,
  smMalayalam = 17,
  smSinhalese = 18,
  smBurmese = 19,
  smKhmer = 20,
  smThai = 21,
  smLao = 22,
  smGeorgian = 23,
  smArmenian = 24,
  smSimpChinese = 25,
  smTibetan = 26,
  smMongolian = 27,
  smEthiopic = 28,
  smGeez = 28,
  smCentralEuroRoman = 29,
  smVietnamese = 30,
  smExtArabic = 31,
  smUninterp = 32
};


enum {
  smUnicodeScript = 0x7E
};


enum {
  smChinese = 2,
  smRussian = 7,

  smLaotian = 22,
  smAmharic = 28,
  smSlavic = 29,
  smEastEurRoman = 29,
  smSindhi = 31,
  smKlingon = 32
};






enum {
  langEnglish = 0,
  langFrench = 1,
  langGerman = 2,
  langItalian = 3,
  langDutch = 4,
  langSwedish = 5,
  langSpanish = 6,
  langDanish = 7,
  langPortuguese = 8,
  langNorwegian = 9,
  langHebrew = 10,
  langJapanese = 11,
  langArabic = 12,
  langFinnish = 13,
  langGreek = 14,
  langIcelandic = 15,
  langMaltese = 16,
  langTurkish = 17,
  langCroatian = 18,
  langTradChinese = 19,
  langUrdu = 20,
  langHindi = 21,
  langThai = 22,
  langKorean = 23
};

enum {
  langLithuanian = 24,
  langPolish = 25,
  langHungarian = 26,
  langEstonian = 27,
  langLatvian = 28,
  langSami = 29,
  langFaroese = 30,
  langFarsi = 31,
  langPersian = 31,
  langRussian = 32,
  langSimpChinese = 33,
  langFlemish = 34,
  langIrishGaelic = 35,
  langAlbanian = 36,
  langRomanian = 37,
  langCzech = 38,
  langSlovak = 39,
  langSlovenian = 40,
  langYiddish = 41,
  langSerbian = 42,
  langMacedonian = 43,
  langBulgarian = 44,
  langUkrainian = 45,
  langByelorussian = 46,
  langBelorussian = 46
};

enum {
  langUzbek = 47,
  langKazakh = 48,
  langAzerbaijani = 49,
  langAzerbaijanAr = 50,
  langArmenian = 51,
  langGeorgian = 52,
  langMoldavian = 53,
  langKirghiz = 54,
  langTajiki = 55,
  langTurkmen = 56,
  langMongolian = 57,
  langMongolianCyr = 58,
  langPashto = 59,
  langKurdish = 60,
  langKashmiri = 61,
  langSindhi = 62,
  langTibetan = 63,
  langNepali = 64,
  langSanskrit = 65,
  langMarathi = 66,
  langBengali = 67,
  langAssamese = 68,
  langGujarati = 69,
  langPunjabi = 70
};

enum {
  langOriya = 71,
  langMalayalam = 72,
  langKannada = 73,
  langTamil = 74,
  langTelugu = 75,
  langSinhalese = 76,
  langBurmese = 77,
  langKhmer = 78,
  langLao = 79,
  langVietnamese = 80,
  langIndonesian = 81,
  langTagalog = 82,
  langMalayRoman = 83,
  langMalayArabic = 84,
  langAmharic = 85,
  langTigrinya = 86,
  langOromo = 87,
  langSomali = 88,
  langSwahili = 89,
  langKinyarwanda = 90,
  langRuanda = 90,
  langRundi = 91,
  langNyanja = 92,
  langChewa = 92,
  langMalagasy = 93,
  langEsperanto = 94
};

enum {
  langWelsh = 128,
  langBasque = 129,
  langCatalan = 130,
  langLatin = 131,
  langQuechua = 132,
  langGuarani = 133,
  langAymara = 134,
  langTatar = 135,
  langUighur = 136,
  langDzongkha = 137,
  langJavaneseRom = 138,
  langSundaneseRom = 139,
  langGalician = 140,
  langAfrikaans = 141
};

enum {
  langBreton = 142,
  langInuktitut = 143,
  langScottishGaelic = 144,
  langManxGaelic = 145,
  langIrishGaelicScript = 146,
  langTongan = 147,
  langGreekAncient = 148,
  langGreenlandic = 149,
  langAzerbaijanRoman = 150,
  langNynorsk = 151
};

enum {
  langUnspecified = 32767
};





enum {
  langPortugese = 8,
  langMalta = 16,
  langYugoslavian = 18,
  langChinese = 19,
  langLettish = 28,
  langLapponian = 29,
  langLappish = 29,
  langSaamisk = 29,
  langFaeroese = 30,
  langIrish = 35,
  langGalla = 87,
  langAfricaans = 141,
  langGreekPoly = 148
};
# 297 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Script.h" 3
enum {

  verUS = 0,
  verFrance = 1,
  verBritain = 2,
  verGermany = 3,
  verItaly = 4,
  verNetherlands = 5,
  verFlemish = 6,
  verSweden = 7,
  verSpain = 8,
  verDenmark = 9,
  verPortugal = 10,
  verFrCanada = 11,
  verNorway = 12,
  verIsrael = 13,
  verJapan = 14,
  verAustralia = 15,
  verArabic = 16,
  verFinland = 17,
  verFrSwiss = 18,
  verGrSwiss = 19,
  verGreece = 20,
  verIceland = 21,
  verMalta = 22,
  verCyprus = 23,
  verTurkey = 24,
  verYugoCroatian = 25
};

enum {
  verNetherlandsComma = 26,
  verFlemishPoint = 27,
  verCanadaComma = 28,
  verCanadaPoint = 29,
  vervariantPortugal = 30,
  vervariantNorway = 31,
  vervariantDenmark = 32
};

enum {
  verIndiaHindi = 33,
  verPakistanUrdu = 34,
  verTurkishModified = 35,
  verItalianSwiss = 36,
  verInternational = 37,

  verRomania = 39,
  verGreekAncient = 40,
  verLithuania = 41,
  verPoland = 42,
  verHungary = 43,
  verEstonia = 44,
  verLatvia = 45,
  verSami = 46,
  verFaroeIsl = 47,
  verIran = 48,
  verRussia = 49,
  verIreland = 50,
  verKorea = 51,
  verChina = 52,
  verTaiwan = 53,
  verThailand = 54,
  verScriptGeneric = 55,
  verCzech = 56,
  verSlovak = 57,
  verEastAsiaGeneric = 58,
  verMagyar = 59,
  verBengali = 60,
  verBelarus = 61
};

enum {
  verUkraine = 62,

  verGreeceAlt = 64,
  verSerbian = 65,
  verSlovenian = 66,
  verMacedonian = 67,
  verCroatia = 68,

  verGermanReformed = 70,
  verBrazil = 71,
  verBulgaria = 72,
  verCatalonia = 73,
  verMultilingual = 74,
  verScottishGaelic = 75,
  verManxGaelic = 76,
  verBreton = 77,
  verNunavut = 78,
  verWelsh = 79,

  verIrishGaelicScript = 81,
  verEngCanada = 82,
  verBhutan = 83,
  verArmenian = 84,
  verGeorgian = 85,
  verSpLatinAmerica = 86,

  verTonga = 88,


  verFrenchUniversal = 91,
  verAustria = 92,

  verGujarati = 94,
  verPunjabi = 95,
  verIndiaUrdu = 96,
  verVietnam = 97
};

enum {
  verFrBelgium = 98,
  verUzbek = 99,
  verSingapore = 100,
  verNynorsk = 101,
  verAfrikaans = 102,
  verEsperanto = 103,
  verMarathi = 104,
  verTibetan = 105,
  verNepal = 106,
  verGreenland = 107,
  verIrelandEnglish = 108
};
# 435 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Script.h" 3
enum {
  verFrBelgiumLux = 6,
  verBelgiumLux = 6,
  verArabia = 16,
  verYugoslavia = 25,
  verBelgiumLuxPoint = 27,
  verIndia = 33,
  verPakistan = 34,
  verRumania = 39,
  verGreecePoly = 40,
  verLapland = 46,
  verFaeroeIsl = 47,
  verGenericFE = 58,
  verFarEastGeneric = 58,
  verByeloRussian = 61,
  verUkrania = 62,
  verAlternateGr = 64,
  verSerbia = 65,
  verSlovenia = 66,
  verMacedonia = 67,
  verBrittany = 77,
  verWales = 79,
  verArmenia = 84,
  verGeorgia = 85,
  verAustriaGerman = 92,
  verTibet = 105
};

enum {
  minCountry = verUS,
  maxCountry = verIrelandEnglish
};

enum {

  calGregorian = 0,
  calArabicCivil = 1,
  calArabicLunar = 2,
  calJapanese = 3,
  calJewish = 4,
  calCoptic = 5,
  calPersian = 6
};

enum {

  intWestern = 0,
  intArabic = 1,
  intRoman = 2,
  intJapanese = 3,
  intEuropean = 4,
  intOutputMask = 0x8000
};

enum {

  smSingleByte = 0,
  smFirstByte = -1,
  smLastByte = 1,
  smMiddleByte = 2
};

enum {

  smcTypeMask = 0x000F,
  smcReserved = 0x00F0,
  smcClassMask = 0x0F00,
  smcOrientationMask = 0x1000,
  smcRightMask = 0x2000,
  smcUpperMask = 0x4000,
  smcDoubleMask = 0x8000
};

enum {

  smCharPunct = 0x0000,
  smCharAscii = 0x0001,
  smCharEuro = 0x0007,
  smCharExtAscii = 0x0007,

  smCharKatakana = 0x0002,
  smCharHiragana = 0x0003,
  smCharIdeographic = 0x0004,
  smCharTwoByteGreek = 0x0005,
  smCharTwoByteRussian = 0x0006,
  smCharBidirect = 0x0008,
  smCharContextualLR = 0x0009,
  smCharNonContextualLR = 0x000A,
  smCharHangul = 0x000C,
  smCharJamo = 0x000D,
  smCharBopomofo = 0x000E,
  smCharGanaKana = 0x000F,

  smCharFISKana = 0x0002,
  smCharFISGana = 0x0003,
  smCharFISIdeo = 0x0004
};

enum {
  smCharFISGreek = 0x0005,
  smCharFISRussian = 0x0006,

  smPunctNormal = 0x0000,
  smPunctNumber = 0x0100,
  smPunctSymbol = 0x0200,
  smPunctBlank = 0x0300,
  smPunctRepeat = 0x0400,
  smPunctGraphic = 0x0500,

  smKanaSmall = 0x0100,
  smKanaHardOK = 0x0200,
  smKanaSoftOK = 0x0300,

  smIdeographicLevel1 = 0x0000,
  smIdeographicLevel2 = 0x0100,
  smIdeographicUser = 0x0200,

  smFISClassLvl1 = 0x0000,
  smFISClassLvl2 = 0x0100,
  smFISClassUser = 0x0200,

  smJamoJaeum = 0x0000,
  smJamoBogJaeum = 0x0100,
  smJamoMoeum = 0x0200,
  smJamoBogMoeum = 0x0300
};

enum {

  smCharHorizontal = 0x0000,
  smCharVertical = 0x1000,

  smCharLeft = 0x0000,
  smCharRight = 0x2000,
  smCharLower = 0x0000,
  smCharUpper = 0x4000,
  smChar1byte = 0x0000,
  smChar2byte = 0x8000
};

enum {

  smTransAscii = 0,
  smTransNative = 1,
  smTransCase = 0xFE,
  smTransSystem = 0xFF,

  smTransAscii1 = 2,
  smTransAscii2 = 3,
  smTransKana1 = 4,
  smTransKana2 = 5
};

enum {
  smTransGana2 = 7,
  smTransHangul2 = 8,
  smTransJamo2 = 9,
  smTransBopomofo2 = 10,

  smTransLower = 0x4000,
  smTransUpper = 0x8000,

  smTransRuleBaseFormat = 1,
  smTransHangulFormat = 2,

  smTransPreDoubleByting = 1,
  smTransPreLowerCasing = 2
};

enum {

  smMaskAll = (int)0xFFFFFFFF,

  smMaskAscii = 0x00000001,
  smMaskNative = 0x00000002,

  smMaskAscii1 = 0x00000004,
  smMaskAscii2 = 0x00000008,
  smMaskKana1 = 0x00000010,
  smMaskKana2 = 0x00000020,
  smMaskGana2 = 0x00000080,
  smMaskHangul2 = 0x00000100,
  smMaskJamo2 = 0x00000200,
  smMaskBopomofo2 = 0x00000400
};

enum {

  iuSystemScript = -1,
  iuCurrentScript = -2
};

enum {

  smKeyNextScript = -1,
  smKeySysScript = -2,
  smKeySwapScript = -3,

  smKeyNextKybd = -4,
  smKeySwapKybd = -5,
  smKeyDisableKybds = -6,
  smKeyEnableKybds = -7,
  smKeyToggleInline = -8,
  smKeyToggleDirection = -9,
  smKeyNextInputMethod = -10,
  smKeySwapInputMethod = -11,
  smKeyDisableKybdSwitch = -12,
  smKeySetDirLeftRight = -15,
  smKeySetDirRightLeft = -16,
  smKeyRoman = -17
};

enum {

  smKeyForceKeyScriptBit = 7,
  smKeyForceKeyScriptMask = 1 << smKeyForceKeyScriptBit
};

enum {



  romanSysFond = 0x3FFF,
  romanAppFond = 3,
  romanFlags = 0x0007,

  smFondStart = 0x4000,
  smFondEnd = 0xC000,

  smUprHalfCharSet = 0x80
};

enum {

  diaeresisUprY = 0xD9,
  fraction = 0xDA,
  intlCurrency = 0xDB,
  leftSingGuillemet = 0xDC,
  rightSingGuillemet = 0xDD,
  fiLigature = 0xDE,
  flLigature = 0xDF,
  dblDagger = 0xE0,
  centeredDot = 0xE1,
  baseSingQuote = 0xE2,
  baseDblQuote = 0xE3,
  perThousand = 0xE4,
  circumflexUprA = 0xE5,
  circumflexUprE = 0xE6,
  acuteUprA = 0xE7,
  diaeresisUprE = 0xE8,
  graveUprE = 0xE9,
  acuteUprI = 0xEA,
  circumflexUprI = 0xEB,
  diaeresisUprI = 0xEC,
  graveUprI = 0xED,
  acuteUprO = 0xEE,
  circumflexUprO = 0xEF,
  appleLogo = 0xF0,
  graveUprO = 0xF1,
  acuteUprU = 0xF2,
  circumflexUprU = 0xF3,
  graveUprU = 0xF4,
  dotlessLwrI = 0xF5,
  circumflex = 0xF6,
  tilde = 0xF7,
  macron = 0xF8,
  breveMark = 0xF9,
  overDot = 0xFA,
  ringMark = 0xFB,
  cedilla = 0xFC,
  doubleAcute = 0xFD,
  ogonek = 0xFE,
  hachek = 0xFF
};

enum {

  tokenIntl = 4,
  tokenEmpty = -1
};

enum {
  tokenUnknown = 0,
  tokenWhite = 1,
  tokenLeftLit = 2,
  tokenRightLit = 3,
  tokenAlpha = 4,
  tokenNumeric = 5,
  tokenNewLine = 6,
  tokenLeftComment = 7,
  tokenRightComment = 8,
  tokenLiteral = 9,
  tokenEscape = 10,
  tokenAltNum = 11,
  tokenRealNum = 12,
  tokenAltReal = 13,
  tokenReserve1 = 14,
  tokenReserve2 = 15,
  tokenLeftParen = 16,
  tokenRightParen = 17,
  tokenLeftBracket = 18,
  tokenRightBracket = 19
};

enum {
  tokenLeftCurly = 20,
  tokenRightCurly = 21,
  tokenLeftEnclose = 22,
  tokenRightEnclose = 23,
  tokenPlus = 24,
  tokenMinus = 25,
  tokenAsterisk = 26,
  tokenDivide = 27,
  tokenPlusMinus = 28,
  tokenSlash = 29,
  tokenBackSlash = 30,
  tokenLess = 31,
  tokenGreat = 32,
  tokenEqual = 33,
  tokenLessEqual2 = 34,
  tokenLessEqual1 = 35,
  tokenGreatEqual2 = 36,
  tokenGreatEqual1 = 37,
  token2Equal = 38,
  tokenColonEqual = 39
};

enum {
  tokenNotEqual = 40,
  tokenLessGreat = 41,
  tokenExclamEqual = 42,
  tokenExclam = 43,
  tokenTilde = 44,
  tokenComma = 45,
  tokenPeriod = 46,
  tokenLeft2Quote = 47,
  tokenRight2Quote = 48,
  tokenLeft1Quote = 49,
  tokenRight1Quote = 50,
  token2Quote = 51,
  token1Quote = 52,
  tokenSemicolon = 53,
  tokenPercent = 54,
  tokenCaret = 55,
  tokenUnderline = 56,
  tokenAmpersand = 57,
  tokenAtSign = 58,
  tokenBar = 59
};

enum {
  tokenQuestion = 60,
  tokenPi = 61,
  tokenRoot = 62,
  tokenSigma = 63,
  tokenIntegral = 64,
  tokenMicro = 65,
  tokenCapPi = 66,
  tokenInfinity = 67,
  tokenColon = 68,
  tokenHash = 69,
  tokenDollar = 70,
  tokenNoBreakSpace = 71,
  tokenFraction = 72,
  tokenIntlCurrency = 73,
  tokenLeftSingGuillemet = 74,
  tokenRightSingGuillemet = 75,
  tokenPerThousand = 76,
  tokenEllipsis = 77,
  tokenCenterDot = 78,
  tokenNil = 127
};

enum {
  delimPad = -2,
  tokenTilda = 44,
  tokenCarat = 55
};

enum {

  smWordSelectTable = 0,
  smWordWrapTable = 1,
  smNumberPartsTable = 2,
  smUnTokenTable = 3,
  smWhiteSpaceList = 4,
  iuWordSelectTable = 0,
  iuWordWrapTable = 1,
  iuNumberPartsTable = 2,
  iuUnTokenTable = 3,
  iuWhiteSpaceList = 4
};


enum {
  tokenOK = 0,
  tokenOverflow = 1,
  stringOverflow = 2,
  badDelim = 3,
  badEnding = 4,
  crash = 5
};

typedef SInt8 TokenResults;
typedef char CharByteTable[256];

typedef short ScriptTokenType;
typedef ScriptTokenType DelimType[2];
typedef ScriptTokenType CommentType[4];
struct TokenRec {
  ScriptTokenType theToken;
  Ptr position;
  long length;
  StringPtr stringPosition;
};
typedef struct TokenRec TokenRec;
typedef TokenRec * TokenRecPtr;
struct TokenBlock {
  Ptr source;
  long sourceLength;
  Ptr tokenList;
  long tokenLength;
  long tokenCount;
  Ptr stringList;
  long stringLength;
  long stringCount;
  Boolean doString;
  Boolean doAppend;
  Boolean doAlphanumeric;
  Boolean doNest;
  ScriptTokenType leftDelims[2];
  ScriptTokenType rightDelims[2];
  ScriptTokenType leftComment[4];
  ScriptTokenType rightComment[4];
  ScriptTokenType escapeCode;
  ScriptTokenType decimalCode;
  Handle itlResource;
  long reserved[8];
};
typedef struct TokenBlock TokenBlock;
typedef TokenBlock * TokenBlockPtr;


enum {
  smNotInstalled = 0,
  smBadVerb = -1,
  smBadScript = -2
};



enum {
  smfShowIcon = 31,
  smfDualCaret = 30,
  smfNameTagEnab = 29,
  smfUseAssocFontInfo = 28,
  smfDisableKeyScriptSync = 27
};


enum {
  smfDisableKeyScriptSyncMask = 1L << smfDisableKeyScriptSync
};


enum {
  smSysScript = 18,
  smKeyScript = 22,
  smKCHRCache = 38,
  smRegionCode = 40
};
# 992 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Script.h" 3
extern long
GetScriptManagerVariable(short selector) __attribute__((deprecated));
# 1014 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Script.h" 3
extern OSErr
SetScriptManagerVariable(
  short selector,
  long param) __attribute__((deprecated));
# 1032 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Script.h" 3
enum {
  smsfIntellCP = 0,
  smsfSingByte = 1,
  smsfNatCase = 2,
  smsfContext = 3,
  smsfNoForceFont = 4,
  smsfB0Digits = 5,
  smsfAutoInit = 6,
  smsfUnivExt = 7,
  smsfSynchUnstyledTE = 8,
  smsfForms = 13,
  smsfLigatures = 14,
  smsfReverse = 15
};
# 1648 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Script.h" 3
#pragma pack(pop)


}
# 42 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CarbonCore.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UTCUtils.h" 1 3
# 24 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UTCUtils.h" 3
# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacErrors.h" 1 3
# 31 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacErrors.h" 3
extern "C" {


enum {
  paramErr = -50,
  noHardwareErr = -200,
  notEnoughHardwareErr = -201,
  userCanceledErr = -128,
  qErr = -1,
  vTypErr = -2,
  corErr = -3,
  unimpErr = -4,
  SlpTypeErr = -5,
  seNoDB = -8,
  controlErr = -17,
  statusErr = -18,
  readErr = -19,
  writErr = -20,
  badUnitErr = -21,
  unitEmptyErr = -22,
  openErr = -23,
  closErr = -24,
  dRemovErr = -25,
  dInstErr = -26
};

enum {
  abortErr = -27,
  iIOAbortErr = -27,
  notOpenErr = -28,
  unitTblFullErr = -29,
  dceExtErr = -30,
  slotNumErr = -360,
  gcrOnMFMErr = -400,
  dirFulErr = -33,
  dskFulErr = -34,
  nsvErr = -35,
  ioErr = -36,
  bdNamErr = -37,
  fnOpnErr = -38,
  eofErr = -39,
  posErr = -40,
  mFulErr = -41,
  tmfoErr = -42,
  fnfErr = -43,
  wPrErr = -44,
  fLckdErr = -45
};

enum {
  vLckdErr = -46,
  fBsyErr = -47,
  dupFNErr = -48,
  opWrErr = -49,
  rfNumErr = -51,
  gfpErr = -52,
  volOffLinErr = -53,
  permErr = -54,
  volOnLinErr = -55,
  nsDrvErr = -56,
  noMacDskErr = -57,
  extFSErr = -58,
  fsRnErr = -59,
  badMDBErr = -60,
  wrPermErr = -61,
  dirNFErr = -120,
  tmwdoErr = -121,
  badMovErr = -122,
  wrgVolTypErr = -123,
  volGoneErr = -124
};

enum {
  fidNotFound = -1300,
  fidExists = -1301,
  notAFileErr = -1302,
  diffVolErr = -1303,
  catChangedErr = -1304,
  desktopDamagedErr = -1305,
  sameFileErr = -1306,
  badFidErr = -1307,
  notARemountErr = -1308,
  fileBoundsErr = -1309,
  fsDataTooBigErr = -1310,
  volVMBusyErr = -1311,
  badFCBErr = -1327,
  errFSUnknownCall = -1400,
  errFSBadFSRef = -1401,
  errFSBadForkName = -1402,
  errFSBadBuffer = -1403,
  errFSBadForkRef = -1404,
  errFSBadInfoBitmap = -1405,
  errFSMissingCatInfo = -1406,
  errFSNotAFolder = -1407,
  errFSForkNotFound = -1409,
  errFSNameTooLong = -1410,
  errFSMissingName = -1411,
  errFSBadPosMode = -1412,
  errFSBadAllocFlags = -1413,
  errFSNoMoreItems = -1417,
  errFSBadItemCount = -1418,
  errFSBadSearchParams = -1419,
  errFSRefsDifferent = -1420,
  errFSForkExists = -1421,
  errFSBadIteratorFlags = -1422,
  errFSIteratorNotFound = -1423,
  errFSIteratorNotSupported = -1424,
  errFSQuotaExceeded = -1425,
  errFSOperationNotSupported = -1426,
  errFSAttributeNotFound = -1427,
  errFSPropertyNotValid = -1428,
  errFSNotEnoughSpaceForOperation = -1429,
  envNotPresent = -5500,
  envBadVers = -5501,
  envVersTooBig = -5502,
  fontDecError = -64,
  fontNotDeclared = -65,
  fontSubErr = -66,
  fontNotOutlineErr = -32615,
  firstDskErr = -84,
  lastDskErr = -64,
  noDriveErr = -64,
  offLinErr = -65,
  noNybErr = -66
};

enum {
  noAdrMkErr = -67,
  dataVerErr = -68,
  badCksmErr = -69,
  badBtSlpErr = -70,
  noDtaMkErr = -71,
  badDCksum = -72,
  badDBtSlp = -73,
  wrUnderrun = -74,
  cantStepErr = -75,
  tk0BadErr = -76,
  initIWMErr = -77,
  twoSideErr = -78,
  spdAdjErr = -79,
  seekErr = -80,
  sectNFErr = -81,
  fmt1Err = -82,
  fmt2Err = -83,
  verErr = -84,
  clkRdErr = -85,
  clkWrErr = -86,
  prWrErr = -87,
  prInitErr = -88,
  rcvrErr = -89,
  breakRecd = -90
};

enum {

  noScrapErr = -100,
  noTypeErr = -102
};

enum {

  eLenErr = -92,
  eMultiErr = -91
};

enum {
  ddpSktErr = -91,
  ddpLenErr = -92,
  noBridgeErr = -93,
  lapProtErr = -94,
  excessCollsns = -95,
  portNotPwr = -96,
  portInUse = -97,
  portNotCf = -98
};

enum {

  memROZWarn = -99,
  memROZError = -99,
  memROZErr = -99,
  memFullErr = -108,
  nilHandleErr = -109,
  memWZErr = -111,
  memPurErr = -112,
  memAdrErr = -110,
  memAZErr = -113,
  memPCErr = -114,
  memBCErr = -115,
  memSCErr = -116,
  memLockedErr = -117
};

enum {

  iMemFullErr = -108,
  iIOAbort = -27
};


enum {
  resourceInMemory = -188,
  writingPastEnd = -189,
  inputOutOfBounds = -190,
  resNotFound = -192,
  resFNotFound = -193,
  addResFailed = -194,
  addRefFailed = -195,
  rmvResFailed = -196,
  rmvRefFailed = -197,
  resAttrErr = -198,
  mapReadErr = -199,
  CantDecompress = -186,
  badExtResource = -185,
  noMemForPictPlaybackErr = -145,
  rgnOverflowErr = -147,
  rgnTooBigError = -147,
  pixMapTooDeepErr = -148,
  insufficientStackErr = -149,
  nsStackErr = -149
};

enum {
  evtNotEnb = 1
};


enum {
  cMatchErr = -150,
  cTempMemErr = -151,
  cNoMemErr = -152,
  cRangeErr = -153,
  cProtectErr = -154,
  cDevErr = -155,
  cResErr = -156,
  cDepthErr = -157,
  rgnTooBigErr = -500,
  updPixMemErr = -125,
  pictInfoVersionErr = -11000,
  pictInfoIDErr = -11001,
  pictInfoVerbErr = -11002,
  cantLoadPickMethodErr = -11003,
  colorsRequestedErr = -11004,
  pictureDataErr = -11005
};


enum {

  cmProfileError = -170,
  cmMethodError = -171,
  cmMethodNotFound = -175,
  cmProfileNotFound = -176,
  cmProfilesIdentical = -177,
  cmCantConcatenateError = -178,
  cmCantXYZ = -179,
  cmCantDeleteProfile = -180,
  cmUnsupportedDataType = -181,
  cmNoCurrentProfile = -182
};


enum {

  noHardware = noHardwareErr,
  notEnoughHardware = notEnoughHardwareErr,
  queueFull = -203,
  resProblem = -204,
  badChannel = -205,
  badFormat = -206,
  notEnoughBufferSpace = -207,
  badFileFormat = -208,
  channelBusy = -209,
  buffersTooSmall = -210,
  channelNotBusy = -211,
  noMoreRealTime = -212,
  siVBRCompressionNotSupported = -213,
  siNoSoundInHardware = -220,
  siBadSoundInDevice = -221,
  siNoBufferSpecified = -222,
  siInvalidCompression = -223,
  siHardDriveTooSlow = -224,
  siInvalidSampleRate = -225,
  siInvalidSampleSize = -226,
  siDeviceBusyErr = -227,
  siBadDeviceName = -228,
  siBadRefNum = -229,
  siInputDeviceErr = -230,
  siUnknownInfoType = -231,
  siUnknownQuality = -232
};


enum {
  noSynthFound = -240,
  synthOpenFailed = -241,
  synthNotReady = -242,
  bufTooSmall = -243,
  voiceNotFound = -244,
  incompatibleVoice = -245,
  badDictFormat = -246,
  badInputText = -247
};


enum {
  midiNoClientErr = -250,
  midiNoPortErr = -251,
  midiTooManyPortsErr = -252,
  midiTooManyConsErr = -253,
  midiVConnectErr = -254,
  midiVConnectMade = -255,
  midiVConnectRmvd = -256,
  midiNoConErr = -257,
  midiWriteErr = -258,
  midiNameLenErr = -259,
  midiDupIDErr = -260,
  midiInvalidCmdErr = -261
};


enum {
  nmTypErr = -299
};


enum {
  siInitSDTblErr = 1,
  siInitVBLQsErr = 2,
  siInitSPTblErr = 3,
  sdmJTInitErr = 10,
  sdmInitErr = 11,
  sdmSRTInitErr = 12,
  sdmPRAMInitErr = 13,
  sdmPriInitErr = 14
};

enum {
  smSDMInitErr = -290,
  smSRTInitErr = -291,
  smPRAMInitErr = -292,
  smPriInitErr = -293,
  smEmptySlot = -300,
  smCRCFail = -301,
  smFormatErr = -302,
  smRevisionErr = -303,
  smNoDir = -304,
  smDisabledSlot = -305,
  smNosInfoArray = -306
};


enum {
  smResrvErr = -307,
  smUnExBusErr = -308,
  smBLFieldBad = -309,
  smFHBlockRdErr = -310,
  smFHBlkDispErr = -311,
  smDisposePErr = -312,
  smNoBoardSRsrc = -313,
  smGetPRErr = -314,
  smNoBoardId = -315,
  smInitStatVErr = -316,
  smInitTblVErr = -317,
  smNoJmpTbl = -318,
  smReservedSlot = -318,
  smBadBoardId = -319,
  smBusErrTO = -320,

  svTempDisable = -32768L,
  svDisabled = -32640,
  smBadRefId = -330,
  smBadsList = -331,
  smReservedErr = -332,
  smCodeRevErr = -333
};

enum {
  smCPUErr = -334,
  smsPointerNil = -335,
  smNilsBlockErr = -336,
  smSlotOOBErr = -337,
  smSelOOBErr = -338,
  smNewPErr = -339,
  smBlkMoveErr = -340,
  smCkStatusErr = -341,
  smGetDrvrNamErr = -342,
  smDisDrvrNamErr = -343,
  smNoMoresRsrcs = -344,
  smsGetDrvrErr = -345,
  smBadsPtrErr = -346,
  smByteLanesErr = -347,
  smOffsetErr = -348,
  smNoGoodOpens = -349,
  smSRTOvrFlErr = -350,
  smRecNotFnd = -351
};


enum {

  notBTree = -410,
  btNoSpace = -413,
  btDupRecErr = -414,
  btRecNotFnd = -415,
  btKeyLenErr = -416,
  btKeyAttrErr = -417,
  unknownInsertModeErr = -20000,
  recordDataTooBigErr = -20001,
  invalidIndexErr = -20002
};





enum {
  fsmFFSNotFoundErr = -431,
  fsmBusyFFSErr = -432,
  fsmBadFFSNameErr = -433,
  fsmBadFSDLenErr = -434,
  fsmDuplicateFSIDErr = -435,
  fsmBadFSDVersionErr = -436,
  fsmNoAlternateStackErr = -437,
  fsmUnknownFSMMessageErr = -438
};


enum {

  editionMgrInitErr = -450,
  badSectionErr = -451,
  notRegisteredSectionErr = -452,
  badEditionFileErr = -453,
  badSubPartErr = -454,
  multiplePublisherWrn = -460,
  containerNotFoundWrn = -461,
  containerAlreadyOpenWrn = -462,
  notThePublisherWrn = -463
};

enum {
  teScrapSizeErr = -501,
  hwParamErr = -502,
  driverHardwareGoneErr = -503
};

enum {

  procNotFound = -600,
  memFragErr = -601,
  appModeErr = -602,
  protocolErr = -603,
  hardwareConfigErr = -604,
  appMemFullErr = -605,
  appIsDaemon = -606,
  bufferIsSmall = -607,
  noOutstandingHLE = -608,
  connectionInvalid = -609,
  noUserInteractionAllowed = -610
};

enum {

  wrongApplicationPlatform = -875,
  appVersionTooOld = -876,
  notAppropriateForClassic = -877
};


enum {
  threadTooManyReqsErr = -617,
  threadNotFoundErr = -618,
  threadProtocolErr = -619
};

enum {
  threadBadAppContextErr = -616
};


enum {
  notEnoughMemoryErr = -620,
  notHeldErr = -621,
  cannotMakeContiguousErr = -622,
  notLockedErr = -623,
  interruptsMaskedErr = -624,
  cannotDeferErr = -625,
  noMMUErr = -626
};


enum {
  vmMorePhysicalThanVirtualErr = -628,
  vmKernelMMUInitErr = -629,
  vmOffErr = -630,
  vmMemLckdErr = -631,
  vmBadDriver = -632,
  vmNoVectorErr = -633
};


enum {
  vmInvalidBackingFileIDErr = -640,
  vmMappingPrivilegesErr = -641,
  vmBusyBackingFileErr = -642,
  vmNoMoreBackingFilesErr = -643,
  vmInvalidFileViewIDErr = -644,
  vmFileViewAccessErr = -645,
  vmNoMoreFileViewsErr = -646,
  vmAddressNotInFileViewErr = -647,
  vmInvalidOwningProcessErr = -648
};


enum {
  rcDBNull = -800,
  rcDBValue = -801,
  rcDBError = -802,
  rcDBBadType = -803,
  rcDBBreak = -804,
  rcDBExec = -805,
  rcDBBadSessID = -806,
  rcDBBadSessNum = -807,
  rcDBBadDDEV = -808,
  rcDBAsyncNotSupp = -809,
  rcDBBadAsyncPB = -810,
  rcDBNoHandler = -811,
  rcDBWrongVersion = -812,
  rcDBPackNotInited = -813
};



enum {
  hmHelpDisabled = -850,
  hmBalloonAborted = -853,
  hmSameAsLastBalloon = -854,
  hmHelpManagerNotInited = -855,
  hmSkippedBalloon = -857,
  hmWrongVersion = -858,
  hmUnknownHelpType = -859,
  hmOperationUnsupported = -861,
  hmNoBalloonUp = -862,
  hmCloseViewActive = -863
};



enum {

  notInitErr = -900,
  nameTypeErr = -902,
  noPortErr = -903,


  noGlobalsErr = -904,
  localOnlyErr = -905,
  destPortErr = -906,
  sessTableErr = -907,
  noSessionErr = -908,
  badReqErr = -909,
  portNameExistsErr = -910,
  noUserNameErr = -911,
  userRejectErr = -912,
  noMachineNameErr = -913,
  noToolboxNameErr = -914,
  noResponseErr = -915,
  portClosedErr = -916,
  sessClosedErr = -917,
  badPortNameErr = -919,
  noDefaultUserErr = -922,
  notLoggedInErr = -923,
  noUserRefErr = -924,
  networkErr = -925,
  noInformErr = -926,
  authFailErr = -927,
  noUserRecErr = -928,
  badServiceMethodErr = -930,
  badLocNameErr = -931,
  guestNotAllowedErr = -932
};


enum {
  kFMIterationCompleted = -980L,
  kFMInvalidFontFamilyErr = -981L,
  kFMInvalidFontErr = -982L,
  kFMIterationScopeModifiedErr = -983L,
  kFMFontTableAccessErr = -984L,
  kFMFontContainerAccessErr = -985L
};

enum {
  noMaskFoundErr = -1000
};

enum {
  nbpBuffOvr = -1024,
  nbpNoConfirm = -1025,
  nbpConfDiff = -1026,
  nbpDuplicate = -1027,
  nbpNotFound = -1028,
  nbpNISErr = -1029
};

enum {
  aspBadVersNum = -1066,
  aspBufTooSmall = -1067,
  aspNoMoreSess = -1068,
  aspNoServers = -1069,
  aspParamErr = -1070,
  aspServerBusy = -1071,
  aspSessClosed = -1072,
  aspSizeErr = -1073,
  aspTooMany = -1074,
  aspNoAck = -1075
};

enum {
  reqFailed = -1096,
  tooManyReqs = -1097,
  tooManySkts = -1098,
  badATPSkt = -1099,
  badBuffNum = -1100,
  noRelErr = -1101,
  cbNotFound = -1102,
  noSendResp = -1103,
  noDataArea = -1104,
  reqAborted = -1105
};


enum {

  errRefNum = -1280,
  errAborted = -1279,
  errState = -1278,
  errOpening = -1277,
  errAttention = -1276,
  errFwdReset = -1275,
  errDSPQueueSize = -1274,
  errOpenDenied = -1273
};






enum {
  errAECoercionFail = -1700,
  errAEDescNotFound = -1701,
  errAECorruptData = -1702,
  errAEWrongDataType = -1703,
  errAENotAEDesc = -1704,
  errAEBadListItem = -1705,
  errAENewerVersion = -1706,
  errAENotAppleEvent = -1707,
  errAEEventNotHandled = -1708,
  errAEReplyNotValid = -1709,
  errAEUnknownSendMode = -1710,
  errAEWaitCanceled = -1711,
  errAETimeout = -1712,
  errAENoUserInteraction = -1713,
  errAENotASpecialFunction = -1714,
  errAEParamMissed = -1715,
  errAEUnknownAddressType = -1716,
  errAEHandlerNotFound = -1717,
  errAEReplyNotArrived = -1718,
  errAEIllegalIndex = -1719,
  errAEImpossibleRange = -1720,
  errAEWrongNumberArgs = -1721,
  errAEAccessorNotFound = -1723,
  errAENoSuchLogical = -1725,
  errAEBadTestKey = -1726,
  errAENotAnObjSpec = -1727,
  errAENoSuchObject = -1728,
  errAENegativeCount = -1729,
  errAEEmptyListContainer = -1730,
  errAEUnknownObjectType = -1731,
  errAERecordingIsAlreadyOn = -1732,
  errAEReceiveTerminate = -1733,
  errAEReceiveEscapeCurrent = -1734,
  errAEEventFiltered = -1735,
  errAEDuplicateHandler = -1736,
  errAEStreamBadNesting = -1737,
  errAEStreamAlreadyConverted = -1738,
  errAEDescIsNull = -1739,
  errAEBuildSyntaxError = -1740,
  errAEBufferTooSmall = -1741
};

enum {
  errOSASystemError = -1750,
  errOSAInvalidID = -1751,
  errOSABadStorageType = -1752,
  errOSAScriptError = -1753,
  errOSABadSelector = -1754,
  errOSASourceNotAvailable = -1756,
  errOSANoSuchDialect = -1757,
  errOSADataFormatObsolete = -1758,
  errOSADataFormatTooNew = -1759,
  errOSACorruptData = errAECorruptData,
  errOSARecordingIsAlreadyOn = errAERecordingIsAlreadyOn,
  errOSAComponentMismatch = -1761,
  errOSACantOpenComponent = -1762
};




enum {
  errOffsetInvalid = -1800,
  errOffsetIsOutsideOfView = -1801,
  errTopOfDocument = -1810,
  errTopOfBody = -1811,
  errEndOfDocument = -1812,
  errEndOfBody = -1813
};


enum {

  badDragRefErr = -1850,
  badDragItemErr = -1851,
  badDragFlavorErr = -1852,
  duplicateFlavorErr = -1853,
  cantGetFlavorErr = -1854,
  duplicateHandlerErr = -1855,
  handlerNotFoundErr = -1856,
  dragNotAcceptedErr = -1857,
  unsupportedForPlatformErr = -1858,
  noSuitableDisplaysErr = -1859,
  badImageRgnErr = -1860,
  badImageErr = -1861,
  nonDragOriginatorErr = -1862
};



enum {
  couldNotResolveDataRef = -2000,
  badImageDescription = -2001,
  badPublicMovieAtom = -2002,
  cantFindHandler = -2003,
  cantOpenHandler = -2004,
  badComponentType = -2005,
  noMediaHandler = -2006,
  noDataHandler = -2007,
  invalidMedia = -2008,
  invalidTrack = -2009,
  invalidMovie = -2010,
  invalidSampleTable = -2011,
  invalidDataRef = -2012,
  invalidHandler = -2013,
  invalidDuration = -2014,
  invalidTime = -2015,
  cantPutPublicMovieAtom = -2016,
  badEditList = -2017,
  mediaTypesDontMatch = -2018,
  progressProcAborted = -2019,
  movieToolboxUninitialized = -2020,
  noRecordOfApp = movieToolboxUninitialized,
  wfFileNotFound = -2021,
  cantCreateSingleForkFile = -2022,
  invalidEditState = -2023,
  nonMatchingEditState = -2024,
  staleEditState = -2025,
  userDataItemNotFound = -2026,
  maxSizeToGrowTooSmall = -2027,
  badTrackIndex = -2028,
  trackIDNotFound = -2029,
  trackNotInMovie = -2030,
  timeNotInTrack = -2031,
  timeNotInMedia = -2032,
  badEditIndex = -2033,
  internalQuickTimeError = -2034,
  cantEnableTrack = -2035,
  invalidRect = -2036,
  invalidSampleNum = -2037,
  invalidChunkNum = -2038,
  invalidSampleDescIndex = -2039,
  invalidChunkCache = -2040,
  invalidSampleDescription = -2041,
  dataNotOpenForRead = -2042,
  dataNotOpenForWrite = -2043,
  dataAlreadyOpenForWrite = -2044,
  dataAlreadyClosed = -2045,
  endOfDataReached = -2046,
  dataNoDataRef = -2047,
  noMovieFound = -2048,
  invalidDataRefContainer = -2049,
  badDataRefIndex = -2050,
  noDefaultDataRef = -2051,
  couldNotUseAnExistingSample = -2052,
  featureUnsupported = -2053,
  noVideoTrackInMovieErr = -2054,
  noSoundTrackInMovieErr = -2055,
  soundSupportNotAvailableErr = -2056,
  unsupportedAuxiliaryImportData = -2057,
  auxiliaryExportDataUnavailable = -2058,
  samplesAlreadyInMediaErr = -2059,
  noSourceTreeFoundErr = -2060,
  sourceNotFoundErr = -2061,
  movieTextNotFoundErr = -2062,
  missingRequiredParameterErr = -2063,
  invalidSpriteWorldPropertyErr = -2064,
  invalidSpritePropertyErr = -2065,
  gWorldsNotSameDepthAndSizeErr = -2066,
  invalidSpriteIndexErr = -2067,
  invalidImageIndexErr = -2068,
  invalidSpriteIDErr = -2069
};

enum {
  internalComponentErr = -2070,
  notImplementedMusicOSErr = -2071,
  cantSendToSynthesizerOSErr = -2072,
  cantReceiveFromSynthesizerOSErr = -2073,
  illegalVoiceAllocationOSErr = -2074,
  illegalPartOSErr = -2075,
  illegalChannelOSErr = -2076,
  illegalKnobOSErr = -2077,
  illegalKnobValueOSErr = -2078,
  illegalInstrumentOSErr = -2079,
  illegalControllerOSErr = -2080,
  midiManagerAbsentOSErr = -2081,
  synthesizerNotRespondingOSErr = -2082,
  synthesizerOSErr = -2083,
  illegalNoteChannelOSErr = -2084,
  noteChannelNotAllocatedOSErr = -2085,
  tunePlayerFullOSErr = -2086,
  tuneParseOSErr = -2087,
  noExportProcAvailableErr = -2089,
  videoOutputInUseErr = -2090
};

enum {
  componentDllLoadErr = -2091,
  componentDllEntryNotFoundErr = -2092,
  qtmlDllLoadErr = -2093,
  qtmlDllEntryNotFoundErr = -2094,
  qtmlUninitialized = -2095,
  unsupportedOSErr = -2096,
  unsupportedProcessorErr = -2097,
  componentNotThreadSafeErr = -2098
};

enum {
  cannotFindAtomErr = -2101,
  notLeafAtomErr = -2102,
  atomsNotOfSameTypeErr = -2103,
  atomIndexInvalidErr = -2104,
  duplicateAtomTypeAndIDErr = -2105,
  invalidAtomErr = -2106,
  invalidAtomContainerErr = -2107,
  invalidAtomTypeErr = -2108,
  cannotBeLeafAtomErr = -2109,
  pathTooLongErr = -2110,
  emptyPathErr = -2111,
  noPathMappingErr = -2112,
  pathNotVerifiedErr = -2113,
  unknownFormatErr = -2114,
  wackBadFileErr = -2115,
  wackForkNotFoundErr = -2116,
  wackBadMetaDataErr = -2117,
  qfcbNotFoundErr = -2118,
  qfcbNotCreatedErr = -2119,
  AAPNotCreatedErr = -2120,
  AAPNotFoundErr = -2121,
  ASDBadHeaderErr = -2122,
  ASDBadForkErr = -2123,
  ASDEntryNotFoundErr = -2124,
  fileOffsetTooBigErr = -2125,
  notAllowedToSaveMovieErr = -2126,
  qtNetworkAlreadyAllocatedErr = -2127,
  urlDataHHTTPProtocolErr = -2129,
  urlDataHHTTPNoNetDriverErr = -2130,
  urlDataHHTTPURLErr = -2131,
  urlDataHHTTPRedirectErr = -2132,
  urlDataHFTPProtocolErr = -2133,
  urlDataHFTPShutdownErr = -2134,
  urlDataHFTPBadUserErr = -2135,
  urlDataHFTPBadPasswordErr = -2136,
  urlDataHFTPServerErr = -2137,
  urlDataHFTPDataConnectionErr = -2138,
  urlDataHFTPNoDirectoryErr = -2139,
  urlDataHFTPQuotaErr = -2140,
  urlDataHFTPPermissionsErr = -2141,
  urlDataHFTPFilenameErr = -2142,
  urlDataHFTPNoNetDriverErr = -2143,
  urlDataHFTPBadNameListErr = -2144,
  urlDataHFTPNeedPasswordErr = -2145,
  urlDataHFTPNoPasswordErr = -2146,
  urlDataHFTPServerDisconnectedErr = -2147,
  urlDataHFTPURLErr = -2148,
  notEnoughDataErr = -2149,
  qtActionNotHandledErr = -2157,
  qtXMLParseErr = -2158,
  qtXMLApplicationErr = -2159
};


enum {
  digiUnimpErr = -2201,
  qtParamErr = -2202,
  matrixErr = -2203,
  notExactMatrixErr = -2204,
  noMoreKeyColorsErr = -2205,
  notExactSizeErr = -2206,
  badDepthErr = -2207,
  noDMAErr = -2208,
  badCallOrderErr = -2209
};



enum {
  kernelIncompleteErr = -2401,
  kernelCanceledErr = -2402,
  kernelOptionsErr = -2403,
  kernelPrivilegeErr = -2404,
  kernelUnsupportedErr = -2405,
  kernelObjectExistsErr = -2406,
  kernelWritePermissionErr = -2407,
  kernelReadPermissionErr = -2408,
  kernelExecutePermissionErr = -2409,
  kernelDeletePermissionErr = -2410,
  kernelExecutionLevelErr = -2411,
  kernelAttributeErr = -2412,
  kernelAsyncSendLimitErr = -2413,
  kernelAsyncReceiveLimitErr = -2414,
  kernelTimeoutErr = -2415,
  kernelInUseErr = -2416,
  kernelTerminatedErr = -2417,
  kernelExceptionErr = -2418,
  kernelIDErr = -2419,
  kernelAlreadyFreeErr = -2421,
  kernelReturnValueErr = -2422,
  kernelUnrecoverableErr = -2499
};



enum {

  tsmComponentNoErr = 0,
  tsmUnsupScriptLanguageErr = -2500,
  tsmInputMethodNotFoundErr = -2501,
  tsmNotAnAppErr = -2502,
  tsmAlreadyRegisteredErr = -2503,
  tsmNeverRegisteredErr = -2504,
  tsmInvalidDocIDErr = -2505,
  tsmTSMDocBusyErr = -2506,
  tsmDocNotActiveErr = -2507,
  tsmNoOpenTSErr = -2508,
  tsmCantOpenComponentErr = -2509,
  tsmTextServiceNotFoundErr = -2510,
  tsmDocumentOpenErr = -2511,
  tsmUseInputWindowErr = -2512,
  tsmTSHasNoMenuErr = -2513,
  tsmTSNotOpenErr = -2514,
  tsmComponentAlreadyOpenErr = -2515,
  tsmInputMethodIsOldErr = -2516,
  tsmScriptHasNoIMErr = -2517,
  tsmUnsupportedTypeErr = -2518,
  tsmUnknownErr = -2519,
  tsmInvalidContext = -2520,
  tsmNoHandler = -2521,
  tsmNoMoreTokens = -2522,
  tsmNoStem = -2523,
  tsmDefaultIsNotInputMethodErr = -2524,
  tsmDocPropertyNotFoundErr = -2528,
  tsmDocPropertyBufferTooSmallErr = -2529,
  tsmCantChangeForcedClassStateErr = -2530,
  tsmComponentPropertyUnsupportedErr = -2531,
  tsmComponentPropertyNotFoundErr = -2532,
  tsmInputModeChangeFailedErr = -2533
};


enum {

  mmInternalError = -2526
};


enum {
  nrLockedErr = -2536,
  nrNotEnoughMemoryErr = -2537,
  nrInvalidNodeErr = -2538,
  nrNotFoundErr = -2539,
  nrNotCreatedErr = -2540,
  nrNameErr = -2541,
  nrNotSlotDeviceErr = -2542,
  nrDataTruncatedErr = -2543,
  nrPowerErr = -2544,
  nrPowerSwitchAbortErr = -2545,
  nrTypeMismatchErr = -2546,
  nrNotModifiedErr = -2547,
  nrOverrunErr = -2548,
  nrResultCodeBase = -2549,
  nrPathNotFound = -2550,
  nrPathBufferTooSmall = -2551,
  nrInvalidEntryIterationOp = -2552,
  nrPropertyAlreadyExists = -2553,
  nrIterationDone = -2554,
  nrExitedIteratorScope = -2555,
  nrTransactionAborted = -2556,
  nrCallNotSupported = -2557
};


enum {
  invalidIconRefErr = -2580,
  noSuchIconErr = -2581,
  noIconDataAvailableErr = -2582
};
# 1058 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacErrors.h" 3
enum {
  errOSACantCoerce = errAECoercionFail,
  errOSACantAccess = errAENoSuchObject,
  errOSACantAssign = -10006,
  errOSAGeneralError = -2700,
  errOSADivideByZero = -2701,
  errOSANumericOverflow = -2702,
  errOSACantLaunch = -2703,
  errOSAAppNotHighLevelEventAware = -2704,
  errOSACorruptTerminology = -2705,
  errOSAStackOverflow = -2706,
  errOSAInternalTableOverflow = -2707,
  errOSADataBlockTooLarge = -2708,
  errOSACantGetTerminology = -2709,
  errOSACantCreate = -2710
};
# 1089 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacErrors.h" 3
enum {
  errOSATypeError = errAEWrongDataType,
  OSAMessageNotUnderstood = errAEEventNotHandled,
  OSAUndefinedHandler = errAEHandlerNotFound,
  OSAIllegalAccess = errAEAccessorNotFound,
  OSAIllegalIndex = errAEIllegalIndex,
  OSAIllegalRange = errAEImpossibleRange,
  OSAIllegalAssign = -10003,
  OSASyntaxError = -2740,
  OSASyntaxTypeError = -2741,
  OSATokenTooLong = -2742,
  OSAMissingParameter = errAEDescNotFound,
  OSAParameterMismatch = errAEWrongNumberArgs,
  OSADuplicateParameter = -2750,
  OSADuplicateProperty = -2751,
  OSADuplicateHandler = -2752,
  OSAUndefinedVariable = -2753,
  OSAInconsistentDeclarations = -2754,
  OSAControlFlowError = -2755
};
# 1130 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacErrors.h" 3
enum {
  errASCantConsiderAndIgnore = -2720,
  errASCantCompareMoreThan32k = -2721,
  errASTerminologyNestingTooDeep = -2760,
  errASIllegalFormalParameter = -2761,
  errASParameterNotForEvent = -2762,
  errASNoResultReturned = -2763,
  errASInconsistentNames = -2780
};



enum {
  cfragFirstErrCode = -2800,
  cfragContextIDErr = -2800,
  cfragConnectionIDErr = -2801,
  cfragNoSymbolErr = -2802,
  cfragNoSectionErr = -2803,
  cfragNoLibraryErr = -2804,
  cfragDupRegistrationErr = -2805,
  cfragFragmentFormatErr = -2806,
  cfragUnresolvedErr = -2807,
  cfragNoPositionErr = -2808,
  cfragNoPrivateMemErr = -2809,
  cfragNoClientMemErr = -2810,
  cfragNoIDsErr = -2811,
  cfragInitOrderErr = -2812,
  cfragImportTooOldErr = -2813,
  cfragImportTooNewErr = -2814,
  cfragInitLoopErr = -2815,
  cfragInitAtBootErr = -2816,
  cfragLibConnErr = -2817,
  cfragCFMStartupErr = -2818,
  cfragCFMInternalErr = -2819,
  cfragFragmentCorruptErr = -2820,
  cfragInitFunctionErr = -2821,
  cfragNoApplicationErr = -2822,
  cfragArchitectureErr = -2823,
  cfragFragmentUsageErr = -2824,
  cfragFileSizeErr = -2825,
  cfragNotClosureErr = -2826,
  cfragNoRegistrationErr = -2827,
  cfragContainerIDErr = -2828,
  cfragClosureIDErr = -2829,
  cfragAbortClosureErr = -2830,
  cfragOutputLengthErr = -2831,
  cfragMapFileErr = -2851,
  cfragExecFileRefErr = -2854,
  cfragStdFolderErr = -2855,
  cfragRsrcForkErr = -2856,
  cfragCFragRsrcErr = -2857,
  cfragLastErrCode = -2899
};

enum {

  cfragFirstReservedCode = -2897,
  cfragReservedCode_3 = -2897,
  cfragReservedCode_2 = -2898,
  cfragReservedCode_1 = -2899
};
# 1225 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacErrors.h" 3
enum {
  invalidComponentID = -3000,
  validInstancesExist = -3001,
  componentNotCaptured = -3002,
  componentDontRegister = -3003,
  unresolvedComponentDLLErr = -3004,
  retryComponentRegistrationErr = -3005
};


enum {
  invalidTranslationPathErr = -3025,
  couldNotParseSourceFileErr = -3026,
  noTranslationPathErr = -3030,
  badTranslationSpecErr = -3031,
  noPrefAppErr = -3032
};

enum {
  buf2SmallErr = -3101,
  noMPPErr = -3102,
  ckSumErr = -3103,
  extractErr = -3104,
  readQErr = -3105,
  atpLenErr = -3106,
  atpBadRsp = -3107,
  recNotFnd = -3108,
  sktClosedErr = -3109
};



enum {
  kOTNoError = 0,
  kOTOutOfMemoryErr = -3211,
  kOTNotFoundErr = -3201,
  kOTDuplicateFoundErr = -3216,
  kOTBadAddressErr = -3150,
  kOTBadOptionErr = -3151,
  kOTAccessErr = -3152,
  kOTBadReferenceErr = -3153,
  kOTNoAddressErr = -3154,
  kOTOutStateErr = -3155,
  kOTBadSequenceErr = -3156,
  kOTSysErrorErr = -3157,
  kOTLookErr = -3158,
  kOTBadDataErr = -3159,
  kOTBufferOverflowErr = -3160,
  kOTFlowErr = -3161,
  kOTNoDataErr = -3162,
  kOTNoDisconnectErr = -3163,
  kOTNoUDErrErr = -3164,
  kOTBadFlagErr = -3165,
  kOTNoReleaseErr = -3166,
  kOTNotSupportedErr = -3167,
  kOTStateChangeErr = -3168,
  kOTNoStructureTypeErr = -3169,
  kOTBadNameErr = -3170,
  kOTBadQLenErr = -3171,
  kOTAddressBusyErr = -3172,
  kOTIndOutErr = -3173,
  kOTProviderMismatchErr = -3174,
  kOTResQLenErr = -3175,
  kOTResAddressErr = -3176,
  kOTQFullErr = -3177,
  kOTProtocolErr = -3178,
  kOTBadSyncErr = -3179,
  kOTCanceledErr = -3180,
  kEPERMErr = -3200,
  kENOENTErr = -3201,
  kENORSRCErr = -3202,
  kEINTRErr = -3203,
  kEIOErr = -3204,
  kENXIOErr = -3205,
  kEBADFErr = -3208,
  kEAGAINErr = -3210,
  kENOMEMErr = -3211,
  kEACCESErr = -3212,
  kEFAULTErr = -3213,
  kEBUSYErr = -3215,
  kEEXISTErr = -3216,
  kENODEVErr = -3218,
  kEINVALErr = -3221,
  kENOTTYErr = -3224,
  kEPIPEErr = -3231,
  kERANGEErr = -3233,
  kEWOULDBLOCKErr = -3234,
  kEDEADLKErr = -3234,
  kEALREADYErr = -3236,
  kENOTSOCKErr = -3237,
  kEDESTADDRREQErr = -3238,
  kEMSGSIZEErr = -3239,
  kEPROTOTYPEErr = -3240,
  kENOPROTOOPTErr = -3241,
  kEPROTONOSUPPORTErr = -3242,
  kESOCKTNOSUPPORTErr = -3243,
  kEOPNOTSUPPErr = -3244,
  kEADDRINUSEErr = -3247,
  kEADDRNOTAVAILErr = -3248,
  kENETDOWNErr = -3249,
  kENETUNREACHErr = -3250,
  kENETRESETErr = -3251,
  kECONNABORTEDErr = -3252,
  kECONNRESETErr = -3253,
  kENOBUFSErr = -3254,
  kEISCONNErr = -3255,
  kENOTCONNErr = -3256,
  kESHUTDOWNErr = -3257,
  kETOOMANYREFSErr = -3258,
  kETIMEDOUTErr = -3259,
  kECONNREFUSEDErr = -3260,
  kEHOSTDOWNErr = -3263,
  kEHOSTUNREACHErr = -3264,
  kEPROTOErr = -3269,
  kETIMEErr = -3270,
  kENOSRErr = -3271,
  kEBADMSGErr = -3272,
  kECANCELErr = -3273,
  kENOSTRErr = -3274,
  kENODATAErr = -3275,
  kEINPROGRESSErr = -3276,
  kESRCHErr = -3277,
  kENOMSGErr = -3278,
  kOTClientNotInittedErr = -3279,
  kOTPortHasDiedErr = -3280,
  kOTPortWasEjectedErr = -3281,
  kOTBadConfigurationErr = -3282,
  kOTConfigurationChangedErr = -3283,
  kOTUserRequestedErr = -3284,
  kOTPortLostConnection = -3285
};



enum {
  kQDNoPalette = -3950,
  kQDNoColorHWCursorSupport = -3951,
  kQDCursorAlreadyRegistered = -3952,
  kQDCursorNotRegistered = -3953,
  kQDCorruptPICTDataErr = -3954
};




enum {
  firstPickerError = -4000,
  invalidPickerType = firstPickerError,
  requiredFlagsDontMatch = -4001,
  pickerResourceError = -4002,
  cantLoadPicker = -4003,
  cantCreatePickerWindow = -4004,
  cantLoadPackage = -4005,
  pickerCantLive = -4006,
  colorSyncNotInstalled = -4007,
  badProfileError = -4008,
  noHelpForItem = -4009
};




enum {
  kNSL68kContextNotSupported = -4170,
  kNSLSchedulerError = -4171,
  kNSLBadURLSyntax = -4172,
  kNSLNoCarbonLib = -4173,
  kNSLUILibraryNotAvailable = -4174,
  kNSLNotImplementedYet = -4175,
  kNSLErrNullPtrError = -4176,
  kNSLSomePluginsFailedToLoad = -4177,
  kNSLNullNeighborhoodPtr = -4178,
  kNSLNoPluginsForSearch = -4179,
  kNSLSearchAlreadyInProgress = -4180,
  kNSLNoPluginsFound = -4181,
  kNSLPluginLoadFailed = -4182,
  kNSLBadProtocolTypeErr = -4183,
  kNSLNullListPtr = -4184,
  kNSLBadClientInfoPtr = -4185,
  kNSLCannotContinueLookup = -4186,
  kNSLBufferTooSmallForData = -4187,
  kNSLNoContextAvailable = -4188,
  kNSLRequestBufferAlreadyInList = -4189,
  kNSLInvalidPluginSpec = -4190,
  kNSLNoSupportForService = -4191,
  kNSLBadNetConnection = -4192,
  kNSLBadDataTypeErr = -4193,
  kNSLBadServiceTypeErr = -4194,
  kNSLBadReferenceErr = -4195,
  kNSLNoElementsInList = -4196,
  kNSLInsufficientOTVer = -4197,
  kNSLInsufficientSysVer = -4198,
  kNSLNotInitialized = -4199,
  kNSLInitializationFailed = -4200
};




enum {
  kDTPHoldJobErr = -4200,
  kDTPStopQueueErr = -4201,
  kDTPTryAgainErr = -4202,
  kDTPAbortJobErr = 128
};



enum {

  cmElementTagNotFound = -4200,
  cmIndexRangeErr = -4201,
  cmCantDeleteElement = -4202,
  cmFatalProfileErr = -4203,
  cmInvalidProfile = -4204,
  cmInvalidProfileLocation = -4205,
  cmCantCopyModifiedV1Profile = -4215,

  cmInvalidSearch = -4206,
  cmSearchError = -4207,
  cmErrIncompatibleProfile = -4208,
  cmInvalidColorSpace = -4209,
  cmInvalidSrcMap = -4210,
  cmInvalidDstMap = -4211,
  cmNoGDevicesError = -4212,
  cmInvalidProfileComment = -4213,
  cmRangeOverFlow = -4214,
  cmNamedColorNotFound = -4216,
  cmCantGamutCheckError = -4217
};


enum {
  badFolderDescErr = -4270,
  duplicateFolderDescErr = -4271,
  noMoreFolderDescErr = -4272,
  invalidFolderTypeErr = -4273,
  duplicateRoutingErr = -4274,
  routingNotFoundErr = -4275,
  badRoutingSizeErr = -4276
};



enum {
  coreFoundationUnknownErr = -4960
};


enum {
  errCoreEndianDataTooShortForFormat = -4940,
  errCoreEndianDataTooLongForFormat = -4941,
  errCoreEndianDataDoesNotMatchFormat = -4942
};



enum {
  internalScrapErr = -4988,
  duplicateScrapFlavorErr = -4989,
  badScrapRefErr = -4990,
  processStateIncorrectErr = -4991,
  scrapPromiseNotKeptErr = -4992,
  noScrapPromiseKeeperErr = -4993,
  nilScrapFlavorDataErr = -4994,
  scrapFlavorFlagsMismatchErr = -4995,
  scrapFlavorSizeMismatchErr = -4996,
  illegalScrapFlavorFlagsErr = -4997,
  illegalScrapFlavorTypeErr = -4998,
  illegalScrapFlavorSizeErr = -4999,
  scrapFlavorNotFoundErr = -102,
  needClearScrapErr = -100
};


enum {

  afpAccessDenied = -5000,
  afpAuthContinue = -5001,
  afpBadUAM = -5002,
  afpBadVersNum = -5003,
  afpBitmapErr = -5004,
  afpCantMove = -5005,
  afpDenyConflict = -5006,
  afpDirNotEmpty = -5007,
  afpDiskFull = -5008,
  afpEofError = -5009,
  afpFileBusy = -5010,
  afpFlatVol = -5011,
  afpItemNotFound = -5012,
  afpLockErr = -5013,
  afpMiscErr = -5014,
  afpNoMoreLocks = -5015,
  afpNoServer = -5016,
  afpObjectExists = -5017,
  afpObjectNotFound = -5018,
  afpParmErr = -5019,
  afpRangeNotLocked = -5020,
  afpRangeOverlap = -5021,
  afpSessClosed = -5022,
  afpUserNotAuth = -5023,
  afpCallNotSupported = -5024,
  afpObjectTypeErr = -5025,
  afpTooManyFilesOpen = -5026,
  afpServerGoingDown = -5027,
  afpCantRename = -5028,
  afpDirNotFound = -5029,
  afpIconTypeError = -5030,
  afpVolLocked = -5031,
  afpObjectLocked = -5032,
  afpContainsSharedErr = -5033,
  afpIDNotFound = -5034,
  afpIDExists = -5035,
  afpDiffVolErr = -5036,
  afpCatalogChanged = -5037,
  afpSameObjectErr = -5038,
  afpBadIDErr = -5039,
  afpPwdSameErr = -5040,
  afpPwdTooShortErr = -5041,
  afpPwdExpiredErr = -5042,
  afpInsideSharedErr = -5043,

  afpInsideTrashErr = -5044,

  afpPwdNeedsChangeErr = -5045,
  afpPwdPolicyErr = -5046,
  afpAlreadyLoggedInErr = -5047,
  afpCallNotAllowed = -5048
};

enum {

  afpBadDirIDType = -5060,
  afpCantMountMoreSrvre = -5061,
  afpAlreadyMounted = -5062,
  afpSameNodeErr = -5063
};






enum {
  numberFormattingNotANumberErr = -5200,
  numberFormattingOverflowInDestinationErr = -5201,
  numberFormattingBadNumberFormattingObjectErr = -5202,
  numberFormattingSpuriousCharErr = -5203,
  numberFormattingLiteralMissingErr = -5204,
  numberFormattingDelimiterMissingErr = -5205,
  numberFormattingEmptyFormatErr = -5206,
  numberFormattingBadFormatErr = -5207,
  numberFormattingBadOptionsErr = -5208,
  numberFormattingBadTokenErr = -5209,
  numberFormattingUnOrderedCurrencyRangeErr = -5210,
  numberFormattingBadCurrencyPositionErr = -5211,
  numberFormattingNotADigitErr = -5212,
  numberFormattingUnOrdredCurrencyRangeErr = -5210,
  numberFortmattingNotADigitErr = -5212
};


enum {
  textParserBadParamErr = -5220,
  textParserObjectNotFoundErr = -5221,
  textParserBadTokenValueErr = -5222,
  textParserBadParserObjectErr = -5223,
  textParserParamErr = -5224,
  textParserNoMoreTextErr = -5225,
  textParserBadTextLanguageErr = -5226,
  textParserBadTextEncodingErr = -5227,
  textParserNoSuchTokenFoundErr = -5228,
  textParserNoMoreTokensErr = -5229
};

enum {
  errUnknownAttributeTag = -5240,
  errMarginWilllNotFit = -5241,
  errNotInImagingMode = -5242,
  errAlreadyInImagingMode = -5243,
  errEngineNotFound = -5244,
  errIteratorReachedEnd = -5245,
  errInvalidRange = -5246,
  errOffsetNotOnElementBounday = -5247,
  errNoHiliteText = -5248,
  errEmptyScrap = -5249,
  errReadOnlyText = -5250,
  errUnknownElement = -5251,
  errNonContiuousAttribute = -5252,
  errCannotUndo = -5253
};



enum {
  hrHTMLRenderingLibNotInstalledErr = -5360,
  hrMiscellaneousExceptionErr = -5361,
  hrUnableToResizeHandleErr = -5362,
  hrURLNotHandledErr = -5363
};



enum {
  errIANoErr = 0,
  errIAUnknownErr = -5380,
  errIAAllocationErr = -5381,
  errIAParamErr = -5382,
  errIANoMoreItems = -5383,
  errIABufferTooSmall = -5384,
  errIACanceled = -5385,
  errIAInvalidDocument = -5386,
  errIATextExtractionErr = -5387,
  errIAEndOfTextRun = -5388
};



enum {
  qtsBadSelectorErr = -5400,
  qtsBadStateErr = -5401,
  qtsBadDataErr = -5402,
  qtsUnsupportedDataTypeErr = -5403,
  qtsUnsupportedRateErr = -5404,
  qtsUnsupportedFeatureErr = -5405,
  qtsTooMuchDataErr = -5406,
  qtsUnknownValueErr = -5407,
  qtsTimeoutErr = -5408,
  qtsConnectionFailedErr = -5420,
  qtsAddressBusyErr = -5421
};


enum {

  gestaltUnknownErr = -5550,
  gestaltUndefSelectorErr = -5551,
  gestaltDupSelectorErr = -5552,
  gestaltLocationErr = -5553
};



enum {
  menuPropertyInvalidErr = -5603,
  menuPropertyInvalid = menuPropertyInvalidErr,
  menuPropertyNotFoundErr = -5604,
  menuNotFoundErr = -5620,
  menuUsesSystemDefErr = -5621,
  menuItemNotFoundErr = -5622,
  menuInvalidErr = -5623
};



enum {
  errInvalidWindowPtr = -5600,
  errInvalidWindowRef = -5600,
  errUnsupportedWindowAttributesForClass = -5601,
  errWindowDoesNotHaveProxy = -5602,
  errInvalidWindowProperty = -5603,
  errWindowPropertyNotFound = -5604,
  errUnrecognizedWindowClass = -5605,
  errCorruptWindowDescription = -5606,
  errUserWantsToDragWindow = -5607,
  errWindowsAlreadyInitialized = -5608,
  errFloatingWindowsNotInitialized = -5609,
  errWindowNotFound = -5610,
  errWindowDoesNotFitOnscreen = -5611,
  windowAttributeImmutableErr = -5612,
  windowAttributesConflictErr = -5613,
  windowManagerInternalErr = -5614,
  windowWrongStateErr = -5615,
  windowGroupInvalidErr = -5616,
  windowAppModalStateAlreadyExistsErr = -5617,
  windowNoAppModalStateErr = -5618,
  errWindowDoesntSupportFocus = -30583,
  errWindowRegionCodeInvalid = -30593
};



enum {
  dialogNoTimeoutErr = -5640
};



enum {
  kNavWrongDialogStateErr = -5694,
  kNavWrongDialogClassErr = -5695,
  kNavInvalidSystemConfigErr = -5696,
  kNavCustomControlMessageFailedErr = -5697,
  kNavInvalidCustomControlMessageErr = -5698,
  kNavMissingKindStringErr = -5699
};



enum {
  collectionItemLockedErr = -5750,
  collectionItemNotFoundErr = -5751,
  collectionIndexRangeErr = -5752,
  collectionVersionErr = -5753
};



enum {
  kQTSSUnknownErr = -6150
};


enum {

  kDMGenErr = -6220,

  kDMMirroringOnAlready = -6221,
  kDMWrongNumberOfDisplays = -6222,
  kDMMirroringBlocked = -6223,
  kDMCantBlock = -6224,
  kDMMirroringNotOn = -6225,

  kSysSWTooOld = -6226,
  kDMSWNotInitializedErr = -6227,
  kDMDriverNotDisplayMgrAwareErr = -6228,
  kDMDisplayNotFoundErr = -6229,
  kDMNotFoundErr = -6229,
  kDMDisplayAlreadyInstalledErr = -6230,
  kDMMainDisplayCannotMoveErr = -6231,
  kDMNoDeviceTableclothErr = -6231,
  kDMFoundErr = -6232
};





enum {
  laTooSmallBufferErr = -6984,
  laEnvironmentBusyErr = -6985,
  laEnvironmentNotFoundErr = -6986,
  laEnvironmentExistErr = -6987,
  laInvalidPathErr = -6988,
  laNoMoreMorphemeErr = -6989,
  laFailAnalysisErr = -6990,
  laTextOverFlowErr = -6991,
  laDictionaryNotOpenedErr = -6992,
  laDictionaryUnknownErr = -6993,
  laDictionaryTooManyErr = -6994,
  laPropertyValueErr = -6995,
  laPropertyUnknownErr = -6996,
  laPropertyIsReadOnlyErr = -6997,
  laPropertyNotFoundErr = -6998,
  laPropertyErr = -6999,
  laEngineNotFoundErr = -7000
};


enum {
  kUSBNoErr = 0,
  kUSBNoTran = 0,
  kUSBNoDelay = 0,
  kUSBPending = 1
};
# 1804 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacErrors.h" 3
enum {
  kUSBNotSent2Err = -6901,
  kUSBNotSent1Err = -6902,
  kUSBBufUnderRunErr = -6903,
  kUSBBufOvrRunErr = -6904,
  kUSBRes2Err = -6905,
  kUSBRes1Err = -6906,
  kUSBUnderRunErr = -6907,
  kUSBOverRunErr = -6908,
  kUSBWrongPIDErr = -6909,
  kUSBPIDCheckErr = -6910,
  kUSBNotRespondingErr = -6911,
  kUSBEndpointStallErr = -6912,
  kUSBDataToggleErr = -6913,
  kUSBBitstufErr = -6914,
  kUSBCRCErr = -6915,
  kUSBLinkErr = -6916
};






enum {
  kUSBQueueFull = -6948,
  kUSBNotHandled = -6987,
  kUSBUnknownNotification = -6949,
  kUSBBadDispatchTable = -6950
};







enum {
  kUSBInternalReserved10 = -6951,
  kUSBInternalReserved9 = -6952,
  kUSBInternalReserved8 = -6953,
  kUSBInternalReserved7 = -6954,
  kUSBInternalReserved6 = -6955,
  kUSBInternalReserved5 = -6956,
  kUSBInternalReserved4 = -6957,
  kUSBInternalReserved3 = -6958,
  kUSBInternalReserved2 = -6959,
  kUSBInternalReserved1 = -6960
};


enum {
  kUSBPortDisabled = -6969,
  kUSBQueueAborted = -6970,
  kUSBTimedOut = -6971,
  kUSBDeviceDisconnected = -6972,
  kUSBDeviceNotSuspended = -6973,
  kUSBDeviceSuspended = -6974,
  kUSBInvalidBuffer = -6975,
  kUSBDevicePowerProblem = -6976,
  kUSBDeviceBusy = -6977,
  kUSBUnknownInterfaceErr = -6978,
  kUSBPipeStalledError = -6979,
  kUSBPipeIdleError = -6980,
  kUSBNoBandwidthError = -6981,
  kUSBAbortedError = -6982,
  kUSBFlagsError = -6983,
  kUSBCompletionError = -6984,
  kUSBPBLengthError = -6985,
  kUSBPBVersionError = -6986,
  kUSBNotFound = -6987,
  kUSBOutOfMemoryErr = -6988,
  kUSBDeviceErr = -6989,
  kUSBNoDeviceErr = -6990,
  kUSBAlreadyOpenErr = -6991,
  kUSBTooManyTransactionsErr = -6992,
  kUSBUnknownRequestErr = -6993,
  kUSBRqErr = -6994,
  kUSBIncorrectTypeErr = -6995,
  kUSBTooManyPipesErr = -6996,
  kUSBUnknownPipeErr = -6997,
  kUSBUnknownDeviceErr = -6998,
  kUSBInternalErr = -6999
};





enum {
  dcmParamErr = -7100,
  dcmNotDictionaryErr = -7101,
  dcmBadDictionaryErr = -7102,
  dcmPermissionErr = -7103,
  dcmDictionaryNotOpenErr = -7104,
  dcmDictionaryBusyErr = -7105,
  dcmBlockFullErr = -7107,
  dcmNoRecordErr = -7108,
  dcmDupRecordErr = -7109,
  dcmNecessaryFieldErr = -7110,
  dcmBadFieldInfoErr = -7111,
  dcmBadFieldTypeErr = -7112,
  dcmNoFieldErr = -7113,
  dcmBadKeyErr = -7115,
  dcmTooManyKeyErr = -7116,
  dcmBadDataSizeErr = -7117,
  dcmBadFindMethodErr = -7118,
  dcmBadPropertyErr = -7119,
  dcmProtectedErr = -7121,
  dcmNoAccessMethodErr = -7122,
  dcmBadFeatureErr = -7124,
  dcmIterationCompleteErr = -7126,
  dcmBufferOverflowErr = -7127
};



enum {
  kRAInvalidParameter = -7100,
  kRAInvalidPort = -7101,
  kRAStartupFailed = -7102,
  kRAPortSetupFailed = -7103,
  kRAOutOfMemory = -7104,
  kRANotSupported = -7105,
  kRAMissingResources = -7106,
  kRAIncompatiblePrefs = -7107,
  kRANotConnected = -7108,
  kRAConnectionCanceled = -7109,
  kRAUnknownUser = -7110,
  kRAInvalidPassword = -7111,
  kRAInternalError = -7112,
  kRAInstallationDamaged = -7113,
  kRAPortBusy = -7114,
  kRAUnknownPortState = -7115,
  kRAInvalidPortState = -7116,
  kRAInvalidSerialProtocol = -7117,
  kRAUserLoginDisabled = -7118,
  kRAUserPwdChangeRequired = -7119,
  kRAUserPwdEntryRequired = -7120,
  kRAUserInteractionRequired = -7121,
  kRAInitOpenTransportFailed = -7122,
  kRARemoteAccessNotReady = -7123,
  kRATCPIPInactive = -7124,
  kRATCPIPNotConfigured = -7125,
  kRANotPrimaryInterface = -7126,
  kRAConfigurationDBInitErr = -7127,
  kRAPPPProtocolRejected = -7128,
  kRAPPPAuthenticationFailed = -7129,
  kRAPPPNegotiationFailed = -7130,
  kRAPPPUserDisconnected = -7131,
  kRAPPPPeerDisconnected = -7132,
  kRAPeerNotResponding = -7133,
  kRAATalkInactive = -7134,
  kRAExtAuthenticationFailed = -7135,
  kRANCPRejectedbyPeer = -7136,
  kRADuplicateIPAddr = -7137,
  kRACallBackFailed = -7138,
  kRANotEnabled = -7139
};
# 1972 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacErrors.h" 3
enum {
  kATSUInvalidTextLayoutErr = -8790,


  kATSUInvalidStyleErr = -8791,


  kATSUInvalidTextRangeErr = -8792,


  kATSUFontsMatched = -8793,


  kATSUFontsNotMatched = -8794,


  kATSUNoCorrespondingFontErr = -8795,






  kATSUInvalidFontErr = -8796,
  kATSUInvalidAttributeValueErr = -8797,

  kATSUInvalidAttributeSizeErr = -8798,

  kATSUInvalidAttributeTagErr = -8799,

  kATSUInvalidCacheErr = -8800,




  kATSUNotSetErr = -8801,



  kATSUNoStyleRunsAssignedErr = -8802,

  kATSUQuickDrawTextErr = -8803,

  kATSULowLevelErr = -8804,

  kATSUNoFontCmapAvailableErr = -8805,

  kATSUNoFontScalerAvailableErr = -8806,

  kATSUCoordinateOverflowErr = -8807,

  kATSULineBreakInWord = -8808,


  kATSUBusyObjectErr = -8809
};
# 2037 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacErrors.h" 3
enum {

  kTextUnsupportedEncodingErr = -8738,
  kTextMalformedInputErr = -8739,
  kTextUndefinedElementErr = -8740,
  kTECMissingTableErr = -8745,
  kTECTableChecksumErr = -8746,
  kTECTableFormatErr = -8747,
  kTECCorruptConverterErr = -8748,
  kTECNoConversionPathErr = -8749,
  kTECBufferBelowMinimumSizeErr = -8750,
  kTECArrayFullErr = -8751,
  kTECBadTextRunErr = -8752,
  kTECPartialCharErr = -8753,
  kTECUnmappableElementErr = -8754,
  kTECIncompleteElementErr = -8755,
  kTECDirectionErr = -8756,
  kTECGlobalsUnavailableErr = -8770,
  kTECItemUnavailableErr = -8771,

  kTECUsedFallbacksStatus = -8783,
  kTECNeedFlushStatus = -8784,
  kTECOutputBufferFullStatus = -8785,

  unicodeChecksumErr = -8769,
  unicodeNoTableErr = -8768,
  unicodeVariantErr = -8767,
  unicodeFallbacksErr = -8766,
  unicodePartConvertErr = -8765,
  unicodeBufErr = -8764,
  unicodeCharErr = -8763,
  unicodeElementErr = -8762,
  unicodeNotFoundErr = -8761,
  unicodeTableFormatErr = -8760,
  unicodeDirectionErr = -8759,
  unicodeContextualErr = -8758,
  unicodeTextEncodingDataErr = -8757
};



enum {
  kUTCUnderflowErr = -8850,
  kUTCOverflowErr = -8851,
  kIllegalClockValueErr = -8852
};





enum {
  kATSUInvalidFontFallbacksErr = -8900,

  kATSUUnsupportedStreamFormatErr = -8901,

  kATSUBadStreamErr = -8902,


  kATSUOutputBufferTooSmallErr = -8903,

  kATSUInvalidCallInsideCallbackErr = -8904,

  kATSUNoFontNameErr = -8905,

  kATSULastErr = -8959
};



enum {
  codecErr = -8960,
  noCodecErr = -8961,
  codecUnimpErr = -8962,
  codecSizeErr = -8963,
  codecScreenBufErr = -8964,
  codecImageBufErr = -8965,
  codecSpoolErr = -8966,
  codecAbortErr = -8967,
  codecWouldOffscreenErr = -8968,
  codecBadDataErr = -8969,
  codecDataVersErr = -8970,
  codecExtensionNotFoundErr = -8971,
  scTypeNotFoundErr = codecExtensionNotFoundErr,
  codecConditionErr = -8972,
  codecOpenErr = -8973,
  codecCantWhenErr = -8974,
  codecCantQueueErr = -8975,
  codecNothingToBlitErr = -8976,
  codecNoMemoryPleaseWaitErr = -8977,
  codecDisabledErr = -8978,
  codecNeedToFlushChainErr = -8979,
  lockPortBitsBadSurfaceErr = -8980,
  lockPortBitsWindowMovedErr = -8981,
  lockPortBitsWindowResizedErr = -8982,
  lockPortBitsWindowClippedErr = -8983,
  lockPortBitsBadPortErr = -8984,
  lockPortBitsSurfaceLostErr = -8985,
  codecParameterDialogConfirm = -8986,
  codecNeedAccessKeyErr = -8987,
  codecOffscreenFailedErr = -8988,
  codecDroppedFrameErr = -8989,
  directXObjectAlreadyExists = -8990,
  lockPortBitsWrongGDeviceErr = -8991,
  codecOffscreenFailedPleaseRetryErr = -8992,
  badCodecCharacterizationErr = -8993,
  noThumbnailFoundErr = -8994
};



enum {
  kBadAdapterErr = -9050,
  kBadAttributeErr = -9051,
  kBadBaseErr = -9052,
  kBadEDCErr = -9053,
  kBadIRQErr = -9054,
  kBadOffsetErr = -9055,
  kBadPageErr = -9056,
  kBadSizeErr = -9057,
  kBadSocketErr = -9058,
  kBadTypeErr = -9059,
  kBadVccErr = -9060,
  kBadVppErr = -9061,
  kBadWindowErr = -9062,
  kBadArgLengthErr = -9063,
  kBadArgsErr = -9064,
  kBadHandleErr = -9065,
  kBadCISErr = -9066,
  kBadSpeedErr = -9067,
  kReadFailureErr = -9068,
  kWriteFailureErr = -9069,
  kGeneralFailureErr = -9070,
  kNoCardErr = -9071,
  kUnsupportedFunctionErr = -9072,
  kUnsupportedModeErr = -9073,
  kBusyErr = -9074,
  kWriteProtectedErr = -9075,
  kConfigurationLockedErr = -9076,
  kInUseErr = -9077,
  kNoMoreItemsErr = -9078,
  kOutOfResourceErr = -9079,
  kNoCardSevicesSocketsErr = -9080,
  kInvalidRegEntryErr = -9081,
  kBadLinkErr = -9082,
  kBadDeviceErr = -9083,
  k16BitCardErr = -9084,
  kCardBusCardErr = -9085,
  kPassCallToChainErr = -9086,
  kCantConfigureCardErr = -9087,
  kPostCardEventErr = -9088,
  kInvalidDeviceNumber = -9089,
  kUnsupportedVsErr = -9090,
  kInvalidCSClientErr = -9091,
  kBadTupleDataErr = -9092,
  kBadCustomIFIDErr = -9093,
  kNoIOWindowRequestedErr = -9094,
  kNoMoreTimerClientsErr = -9095,
  kNoMoreInterruptSlotsErr = -9096,
  kNoClientTableErr = -9097,
  kUnsupportedCardErr = -9098,
  kNoCardEnablersFoundErr = -9099,
  kNoEnablerForCardErr = -9100,
  kNoCompatibleNameErr = -9101,
  kClientRequestDenied = -9102,

  kNotReadyErr = -9103,
  kTooManyIOWindowsErr = -9104,
  kAlreadySavedStateErr = -9105,
  kAttemptDupCardEntryErr = -9106,
  kCardPowerOffErr = -9107,
  kNotZVCapableErr = -9108,
  kNoCardBusCISErr = -9109
};


enum {
  noDeviceForChannel = -9400,
  grabTimeComplete = -9401,
  cantDoThatInCurrentMode = -9402,
  notEnoughMemoryToGrab = -9403,
  notEnoughDiskSpaceToGrab = -9404,
  couldntGetRequiredComponent = -9405,
  badSGChannel = -9406,
  seqGrabInfoNotAvailable = -9407,
  deviceCantMeetRequest = -9408,
  badControllerHeight = -9994,
  editingNotAllowed = -9995,
  controllerBoundsNotExact = -9996,
  cannotSetWidthOfAttachedController = -9997,
  controllerHasFixedHeight = -9998,
  cannotMoveAttachedController = -9999
};


enum {
  errAEBadKeyForm = -10002,
  errAECantHandleClass = -10010,
  errAECantSupplyType = -10009,
  errAECantUndo = -10015,
  errAEEventFailed = -10000,
  errAEIndexTooLarge = -10007,
  errAEInTransaction = -10011,
  errAELocalOnly = -10016,
  errAENoSuchTransaction = -10012,
  errAENotAnElement = -10008,
  errAENotASingleObject = -10014,
  errAENotModifiable = -10003,
  errAENoUserSelection = -10013,
  errAEPrivilegeError = -10004,
  errAEReadDenied = -10005,
  errAETypeError = -10001,
  errAEWriteDenied = -10006,
  errAENotAnEnumMember = -10023,
  errAECantPutThatThere = -10024,
  errAEPropertiesClash = -10025
};


enum {
  telGenericError = -1,
  telNoErr = 0,
  telNoTools = 8,
  telBadTermErr = -10001,
  telBadDNErr = -10002,
  telBadCAErr = -10003,
  telBadHandErr = -10004,
  telBadProcErr = -10005,
  telCAUnavail = -10006,
  telNoMemErr = -10007,
  telNoOpenErr = -10008,
  telBadHTypeErr = -10010,
  telHTypeNotSupp = -10011,
  telBadLevelErr = -10012,
  telBadVTypeErr = -10013,
  telVTypeNotSupp = -10014,
  telBadAPattErr = -10015,
  telAPattNotSupp = -10016,
  telBadIndex = -10017,
  telIndexNotSupp = -10018,
  telBadStateErr = -10019,
  telStateNotSupp = -10020,
  telBadIntExt = -10021,
  telIntExtNotSupp = -10022,
  telBadDNDType = -10023,
  telDNDTypeNotSupp = -10024,
  telFeatNotSub = -10030,
  telFeatNotAvail = -10031,
  telFeatActive = -10032,
  telFeatNotSupp = -10033,
  telConfLimitErr = -10040,
  telConfNoLimit = -10041,
  telConfErr = -10042,
  telConfRej = -10043,
  telTransferErr = -10044,
  telTransferRej = -10045,
  telCBErr = -10046,
  telConfLimitExceeded = -10047,
  telBadDNType = -10050,
  telBadPageID = -10051,
  telBadIntercomID = -10052,
  telBadFeatureID = -10053,
  telBadFwdType = -10054,
  telBadPickupGroupID = -10055,
  telBadParkID = -10056,
  telBadSelect = -10057,
  telBadBearerType = -10058,
  telBadRate = -10059,
  telDNTypeNotSupp = -10060,
  telFwdTypeNotSupp = -10061,
  telBadDisplayMode = -10062,
  telDisplayModeNotSupp = -10063,
  telNoCallbackRef = -10064,
  telAlreadyOpen = -10070,
  telStillNeeded = -10071,
  telTermNotOpen = -10072,
  telCANotAcceptable = -10080,
  telCANotRejectable = -10081,
  telCANotDeflectable = -10082,
  telPBErr = -10090,
  telBadFunction = -10091,

  telNoSuchTool = -10102,
  telUnknownErr = -10103,
  telNoCommFolder = -10106,
  telInitFailed = -10107,
  telBadCodeResource = -10108,
  telDeviceNotFound = -10109,
  telBadProcID = -10110,
  telValidateFailed = -10111,
  telAutoAnsNotOn = -10112,
  telDetAlreadyOn = -10113,
  telBadSWErr = -10114,
  telBadSampleRate = -10115,
  telNotEnoughdspBW = -10116
};

enum {
  errTaskNotFound = -10780
};





enum {

  pmBusyErr = -13000,
  pmReplyTOErr = -13001,
  pmSendStartErr = -13002,
  pmSendEndErr = -13003,
  pmRecvStartErr = -13004,
  pmRecvEndErr = -13005
};


enum {
  kPowerHandlerExistsForDeviceErr = -13006,
  kPowerHandlerNotFoundForDeviceErr = -13007,
  kPowerHandlerNotFoundForProcErr = -13008,
  kPowerMgtMessageNotHandled = -13009,
  kPowerMgtRequestDenied = -13010,
  kCantReportProcessorTemperatureErr = -13013,
  kProcessorTempRoutineRequiresMPLib2 = -13014,
  kNoSuchPowerSource = -13020,
  kBridgeSoftwareRunningCantSleep = -13038
};



enum {
  debuggingExecutionContextErr = -13880,
  debuggingDuplicateSignatureErr = -13881,
  debuggingDuplicateOptionErr = -13882,
  debuggingInvalidSignatureErr = -13883,
  debuggingInvalidOptionErr = -13884,
  debuggingInvalidNameErr = -13885,
  debuggingNoCallbackErr = -13886,
  debuggingNoMatchErr = -13887
};



enum {
  kHIDVersionIncompatibleErr = -13909,
  kHIDDeviceNotReady = -13910
};



enum {
  kHIDSuccess = 0,
  kHIDInvalidRangePageErr = -13923,
  kHIDReportIDZeroErr = -13924,
  kHIDReportCountZeroErr = -13925,
  kHIDReportSizeZeroErr = -13926,
  kHIDUnmatchedDesignatorRangeErr = -13927,
  kHIDUnmatchedStringRangeErr = -13928,
  kHIDInvertedUsageRangeErr = -13929,
  kHIDUnmatchedUsageRangeErr = -13930,
  kHIDInvertedPhysicalRangeErr = -13931,
  kHIDInvertedLogicalRangeErr = -13932,
  kHIDBadLogicalMaximumErr = -13933,
  kHIDBadLogicalMinimumErr = -13934,
  kHIDUsagePageZeroErr = -13935,
  kHIDEndOfDescriptorErr = -13936,
  kHIDNotEnoughMemoryErr = -13937,
  kHIDBadParameterErr = -13938,
  kHIDNullPointerErr = -13939,
  kHIDInvalidReportLengthErr = -13940,
  kHIDInvalidReportTypeErr = -13941,
  kHIDBadLogPhysValuesErr = -13942,
  kHIDIncompatibleReportErr = -13943,
  kHIDInvalidPreparsedDataErr = -13944,
  kHIDNotValueArrayErr = -13945,
  kHIDUsageNotFoundErr = -13946,
  kHIDValueOutOfRangeErr = -13947,
  kHIDBufferTooSmallErr = -13948,
  kHIDNullStateErr = -13949,
  kHIDBaseError = -13950
};



enum {
  kModemOutOfMemory = -14000,
  kModemPreferencesMissing = -14001,
  kModemScriptMissing = -14002
};




enum {
  kTXNEndIterationErr = -22000,
  kTXNCannotAddFrameErr = -22001,
  kTXNInvalidFrameIDErr = -22002,
  kTXNIllegalToCrossDataBoundariesErr = -22003,
  kTXNUserCanceledOperationErr = -22004,
  kTXNBadDefaultFileTypeWarning = -22005,
  kTXNCannotSetAutoIndentErr = -22006,
  kTXNRunIndexOutofBoundsErr = -22007,
  kTXNNoMatchErr = -22008,
  kTXNAttributeTagInvalidForRunErr = -22009,
  kTXNSomeOrAllTagsInvalidForRunErr = -22010,
  kTXNInvalidRunIndex = -22011,
  kTXNAlreadyInitializedErr = -22012,
  kTXNCannotTurnTSMOffWhenUsingUnicodeErr = -22013,
  kTXNCopyNotAllowedInEchoModeErr = -22014,
  kTXNDataTypeNotAllowedErr = -22015,
  kTXNATSUIIsNotInstalledErr = -22016,
  kTXNOutsideOfLineErr = -22017,
  kTXNOutsideOfFrameErr = -22018
};





enum {
  printerStatusOpCodeNotSupportedErr = -25280
};



enum {
  errKCNotAvailable = -25291,
  errKCReadOnly = -25292,
  errKCAuthFailed = -25293,
  errKCNoSuchKeychain = -25294,
  errKCInvalidKeychain = -25295,
  errKCDuplicateKeychain = -25296,
  errKCDuplicateCallback = -25297,
  errKCInvalidCallback = -25298,
  errKCDuplicateItem = -25299,
  errKCItemNotFound = -25300,
  errKCBufferTooSmall = -25301,
  errKCDataTooLarge = -25302,
  errKCNoSuchAttr = -25303,
  errKCInvalidItemRef = -25304,
  errKCInvalidSearchRef = -25305,
  errKCNoSuchClass = -25306,
  errKCNoDefaultKeychain = -25307,
  errKCInteractionNotAllowed = -25308,
  errKCReadOnlyAttr = -25309,
  errKCWrongKCVersion = -25310,
  errKCKeySizeNotAllowed = -25311,
  errKCNoStorageModule = -25312,
  errKCNoCertificateModule = -25313,
  errKCNoPolicyModule = -25314,
  errKCInteractionRequired = -25315,
  errKCDataNotAvailable = -25316,
  errKCDataNotModifiable = -25317,
  errKCCreateChainFailed = -25318
};



enum {
  kUCOutputBufferTooSmall = -25340,
  kUCTextBreakLocatorMissingType = -25341
};

enum {
  kUCTSNoKeysAddedToObjectErr = -25342,
  kUCTSSearchListErr = -25343
};

enum {
  kUCTokenizerIterationFinished = -25344,
  kUCTokenizerUnknownLang = -25345,
  kUCTokenNotFound = -25346
};


enum {
  kMPIterationEndErr = -29275,
  kMPPrivilegedErr = -29276,
  kMPProcessCreatedErr = -29288,
  kMPProcessTerminatedErr = -29289,
  kMPTaskCreatedErr = -29290,
  kMPTaskBlockedErr = -29291,
  kMPTaskStoppedErr = -29292,
  kMPBlueBlockingErr = -29293,
  kMPDeletedErr = -29295,
  kMPTimeoutErr = -29296,
  kMPTaskAbortedErr = -29297,
  kMPInsufficientResourcesErr = -29298,
  kMPInvalidIDErr = -29299
};

enum {
  kMPNanokernelNeedsMemoryErr = -29294
};


enum {
  kCollateAttributesNotFoundErr = -29500,
  kCollateInvalidOptions = -29501,
  kCollateMissingUnicodeTableErr = -29502,
  kCollateUnicodeConvertFailedErr = -29503,
  kCollatePatternNotFoundErr = -29504,
  kCollateInvalidChar = -29505,
  kCollateBufferTooSmall = -29506,
  kCollateInvalidCollationRef = -29507
};



enum {
  kFNSInvalidReferenceErr = -29580,
  kFNSBadReferenceVersionErr = -29581,
  kFNSInvalidProfileErr = -29582,
  kFNSBadProfileVersionErr = -29583,
  kFNSDuplicateReferenceErr = -29584,
  kFNSMismatchErr = -29585,
  kFNSInsufficientDataErr = -29586,
  kFNSBadFlattenedSizeErr = -29587,
  kFNSNameNotFoundErr = -29589
};




enum {
  kLocalesBufferTooSmallErr = -30001,
  kLocalesTableFormatErr = -30002,
  kLocalesDefaultDisplayStatus = -30029
};



enum {
  kALMInternalErr = -30049,
  kALMGroupNotFoundErr = -30048,
  kALMNoSuchModuleErr = -30047,
  kALMModuleCommunicationErr = -30046,
  kALMDuplicateModuleErr = -30045,
  kALMInstallationErr = -30044,
  kALMDeferSwitchErr = -30043,
  kALMRebootFlagsLevelErr = -30042
};

enum {
  kALMLocationNotFoundErr = kALMGroupNotFoundErr
};



enum {
  kSSpInternalErr = -30340,
  kSSpVersionErr = -30341,
  kSSpCantInstallErr = -30342,
  kSSpParallelUpVectorErr = -30343,
  kSSpScaleToZeroErr = -30344
};



enum {
  kNSpInitializationFailedErr = -30360,
  kNSpAlreadyInitializedErr = -30361,
  kNSpTopologyNotSupportedErr = -30362,
  kNSpPipeFullErr = -30364,
  kNSpHostFailedErr = -30365,
  kNSpProtocolNotAvailableErr = -30366,
  kNSpInvalidGameRefErr = -30367,
  kNSpInvalidParameterErr = -30369,
  kNSpOTNotPresentErr = -30370,
  kNSpOTVersionTooOldErr = -30371,
  kNSpMemAllocationErr = -30373,
  kNSpAlreadyAdvertisingErr = -30374,
  kNSpNotAdvertisingErr = -30376,
  kNSpInvalidAddressErr = -30377,
  kNSpFreeQExhaustedErr = -30378,
  kNSpRemovePlayerFailedErr = -30379,
  kNSpAddressInUseErr = -30380,
  kNSpFeatureNotImplementedErr = -30381,
  kNSpNameRequiredErr = -30382,
  kNSpInvalidPlayerIDErr = -30383,
  kNSpInvalidGroupIDErr = -30384,
  kNSpNoPlayersErr = -30385,
  kNSpNoGroupsErr = -30386,
  kNSpNoHostVolunteersErr = -30387,
  kNSpCreateGroupFailedErr = -30388,
  kNSpAddPlayerFailedErr = -30389,
  kNSpInvalidDefinitionErr = -30390,
  kNSpInvalidProtocolRefErr = -30391,
  kNSpInvalidProtocolListErr = -30392,
  kNSpTimeoutErr = -30393,
  kNSpGameTerminatedErr = -30394,
  kNSpConnectFailedErr = -30395,
  kNSpSendFailedErr = -30396,
  kNSpMessageTooBigErr = -30397,
  kNSpCantBlockErr = -30398,
  kNSpJoinFailedErr = -30399
};



enum {
  kISpInternalErr = -30420,
  kISpSystemListErr = -30421,
  kISpBufferToSmallErr = -30422,
  kISpElementInListErr = -30423,
  kISpElementNotInListErr = -30424,
  kISpSystemInactiveErr = -30425,
  kISpDeviceInactiveErr = -30426,
  kISpSystemActiveErr = -30427,
  kISpDeviceActiveErr = -30428,
  kISpListBusyErr = -30429
};


enum {
  kDSpNotInitializedErr = -30440L,
  kDSpSystemSWTooOldErr = -30441L,
  kDSpInvalidContextErr = -30442L,
  kDSpInvalidAttributesErr = -30443L,
  kDSpContextAlreadyReservedErr = -30444L,
  kDSpContextNotReservedErr = -30445L,
  kDSpContextNotFoundErr = -30446L,
  kDSpFrameRateNotReadyErr = -30447L,
  kDSpConfirmSwitchWarning = -30448L,
  kDSpInternalErr = -30449L,
  kDSpStereoContextErr = -30450L
};







enum {
  kFBCvTwinExceptionErr = -30500,
  kFBCnoIndexesFound = -30501,
  kFBCallocFailed = -30502,
  kFBCbadParam = -30503,
  kFBCfileNotIndexed = -30504,
  kFBCbadIndexFile = -30505,
  kFBCcompactionFailed = -30506,
  kFBCvalidationFailed = -30507,
  kFBCindexingFailed = -30508,
  kFBCcommitFailed = -30509,
  kFBCdeletionFailed = -30510,
  kFBCmoveFailed = -30511,
  kFBCtokenizationFailed = -30512,
  kFBCmergingFailed = -30513,
  kFBCindexCreationFailed = -30514,
  kFBCaccessorStoreFailed = -30515,
  kFBCaddDocFailed = -30516,
  kFBCflushFailed = -30517,
  kFBCindexNotFound = -30518,
  kFBCnoSearchSession = -30519,
  kFBCindexingCanceled = -30520,
  kFBCaccessCanceled = -30521,
  kFBCindexFileDestroyed = -30522,
  kFBCindexNotAvailable = -30523,
  kFBCsearchFailed = -30524,
  kFBCsomeFilesNotIndexed = -30525,
  kFBCillegalSessionChange = -30526,

  kFBCanalysisNotAvailable = -30527,
  kFBCbadIndexFileVersion = -30528,
  kFBCsummarizationCanceled = -30529,
  kFBCindexDiskIOFailed = -30530,
  kFBCbadSearchSession = -30531,
  kFBCnoSuchHit = -30532
};



enum {
  notAQTVRMovieErr = -30540,
  constraintReachedErr = -30541,
  callNotSupportedByNodeErr = -30542,
  selectorNotSupportedByNodeErr = -30543,
  invalidNodeIDErr = -30544,
  invalidViewStateErr = -30545,
  timeNotInViewErr = -30546,
  propertyNotSupportedByNodeErr = -30547,
  settingNotSupportedByNodeErr = -30548,
  limitReachedErr = -30549,
  invalidNodeFormatErr = -30550,
  invalidHotSpotIDErr = -30551,
  noMemoryNodeFailedInitialize = -30552,
  streamingNodeNotReadyErr = -30553,
  qtvrLibraryLoadErr = -30554,
  qtvrUninitialized = -30555
};



enum {
  themeInvalidBrushErr = -30560,
  themeProcessRegisteredErr = -30561,
  themeProcessNotRegisteredErr = -30562,
  themeBadTextColorErr = -30563,
  themeHasNoAccentsErr = -30564,
  themeBadCursorIndexErr = -30565,
  themeScriptFontNotFoundErr = -30566,
  themeMonitorDepthNotSupportedErr = -30567,
  themeNoAppropriateBrushErr = -30568
};







enum {






  errMessageNotSupported = -30580,







  errDataNotSupported = -30581,






  errControlDoesntSupportFocus = -30582,







  errUnknownControl = -30584,
# 2788 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacErrors.h" 3
  errCouldntSetFocus = -30585,
# 2797 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacErrors.h" 3
  errNoRootControl = -30586,





  errRootAlreadyExists = -30587,





  errInvalidPartCode = -30588,
# 2820 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacErrors.h" 3
  errControlsAlreadyExist = -30589,





  errControlIsNotEmbedder = -30590,






  errDataSizeMismatch = -30591,






  errControlHiddenOrDisabled = -30592,






  errCantEmbedIntoSelf = -30594,






  errCantEmbedRoot = -30595,





  errItemNotControl = -30596,







  controlInvalidDataVersionErr = -30597,





  controlPropertyInvalid = -5603,






  controlPropertyNotFoundErr = -5604,




  controlHandleInvalidErr = -30599
};





enum {
  kURLInvalidURLReferenceError = -30770,
  kURLProgressAlreadyDisplayedError = -30771,
  kURLDestinationExistsError = -30772,
  kURLInvalidURLError = -30773,
  kURLUnsupportedSchemeError = -30774,
  kURLServerBusyError = -30775,
  kURLAuthenticationError = -30776,
  kURLPropertyNotYetKnownError = -30777,
  kURLUnknownPropertyError = -30778,
  kURLPropertyBufferTooSmallError = -30779,
  kURLUnsettablePropertyError = -30780,
  kURLInvalidCallError = -30781,
  kURLFileEmptyError = -30783,
  kURLExtensionFailureError = -30785,
  kURLInvalidConfigurationError = -30786,
  kURLAccessNotAvailableError = -30787,
  kURL68kNotSupportedError = -30788
};
# 2922 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacErrors.h" 3
enum {
  errCppGeneral = -32000,
  errCppbad_alloc = -32001,
  errCppbad_cast = -32002,
  errCppbad_exception = -32003,
  errCppbad_typeid = -32004,
  errCpplogic_error = -32005,
  errCppdomain_error = -32006,
  errCppinvalid_argument = -32007,
  errCpplength_error = -32008,
  errCppout_of_range = -32009,
  errCppruntime_error = -32010,
  errCppoverflow_error = -32011,
  errCpprange_error = -32012,
  errCppunderflow_error = -32013,
  errCppios_base_failure = -32014,
  errCppLastSystemDefinedError = -32020,
  errCppLastUserDefinedError = -32049
};


enum {
  badComponentInstance = (int)0x80008001,
  badComponentSelector = (int)0x80008002
};



enum {
  dsBusError = 1,
  dsAddressErr = 2,
  dsIllInstErr = 3,
  dsZeroDivErr = 4,
  dsChkErr = 5,
  dsOvflowErr = 6,
  dsPrivErr = 7,
  dsTraceErr = 8,
  dsLineAErr = 9,
  dsLineFErr = 10,
  dsMiscErr = 11,
  dsCoreErr = 12,
  dsIrqErr = 13,
  dsIOCoreErr = 14,
  dsLoadErr = 15,
  dsFPErr = 16,
  dsNoPackErr = 17,
  dsNoPk1 = 18,
  dsNoPk2 = 19
};

enum {
  dsNoPk3 = 20,
  dsNoPk4 = 21,
  dsNoPk5 = 22,
  dsNoPk6 = 23,
  dsNoPk7 = 24,
  dsMemFullErr = 25,
  dsBadLaunch = 26,
  dsFSErr = 27,
  dsStknHeap = 28,
  negZcbFreeErr = 33,
  dsFinderErr = 41,
  dsBadSlotInt = 51,
  dsBadSANEOpcode = 81,
  dsBadPatchHeader = 83,
  menuPrgErr = 84,
  dsMBarNFnd = 85,
  dsHMenuFindErr = 86,
  dsWDEFNotFound = 87,
  dsCDEFNotFound = 88,
  dsMDEFNotFound = 89
};

enum {
  dsNoFPU = 90,
  dsNoPatch = 98,
  dsBadPatch = 99,
  dsParityErr = 101,
  dsOldSystem = 102,
  ds32BitMode = 103,
  dsNeedToWriteBootBlocks = 104,
  dsNotEnoughRAMToBoot = 105,
  dsBufPtrTooLow = 106,
  dsVMDeferredFuncTableFull = 112,
  dsVMBadBackingStore = 113,
  dsCantHoldSystemHeap = 114,
  dsSystemRequiresPowerPC = 116,
  dsGibblyMovedToDisabledFolder = 117,
  dsUnBootableSystem = 118,
  dsMustUseFCBAccessors = 119,
  dsMacOSROMVersionTooOld = 120,
  dsLostConnectionToNetworkDisk = 121,
  dsRAMDiskTooBig = 122,
  dsWriteToSupervisorStackGuardPage = 128,
  dsReinsert = 30,
  shutDownAlert = 42,
  dsShutDownOrRestart = 20000,
  dsSwitchOffOrRestart = 20001,
  dsForcedQuit = 20002,
  dsRemoveDisk = 20003,
  dsDirtyDisk = 20004,
  dsShutDownOrResume = 20109,
  dsSCSIWarn = 20010,
  dsMBSysError = 29200,
  dsMBFlpySysError = 29201,
  dsMBATASysError = 29202,
  dsMBATAPISysError = 29203,
  dsMBExternFlpySysError = 29204,
  dsPCCardATASysError = 29205
};






enum {
  dsNoExtsMacsBug = -1,
  dsNoExtsDisassembler = -2,
  dsMacsBugInstalled = -10,
  dsDisassemblerInstalled = -11,
  dsExtensionsDisabled = -13,
  dsGreeting = 40,
  dsSysErr = 32767,

  WDEFNFnd = dsWDEFNotFound
};

enum {
  CDEFNFnd = dsCDEFNotFound,
  dsNotThe1 = 31,
  dsBadStartupDisk = 42,
  dsSystemFileErr = 43,
  dsHD20Installed = -12,
  mBarNFnd = -126,
  fsDSIntErr = -127,
  hMenuFindErr = -127,
  userBreak = -490,
  strUserBreak = -491,
  exUserBreak = -492
};


enum {

  dsBadLibrary = 1010,
  dsMixedModeFailure = 1011
};
# 3078 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacErrors.h" 3
enum {
  kPOSIXErrorBase = 100000,
  kPOSIXErrorEPERM = 100001,
  kPOSIXErrorENOENT = 100002,
  kPOSIXErrorESRCH = 100003,
  kPOSIXErrorEINTR = 100004,
  kPOSIXErrorEIO = 100005,
  kPOSIXErrorENXIO = 100006,
  kPOSIXErrorE2BIG = 100007,
  kPOSIXErrorENOEXEC = 100008,
  kPOSIXErrorEBADF = 100009,
  kPOSIXErrorECHILD = 100010,
  kPOSIXErrorEDEADLK = 100011,
  kPOSIXErrorENOMEM = 100012,
  kPOSIXErrorEACCES = 100013,
  kPOSIXErrorEFAULT = 100014,
  kPOSIXErrorENOTBLK = 100015,
  kPOSIXErrorEBUSY = 100016,
  kPOSIXErrorEEXIST = 100017,
  kPOSIXErrorEXDEV = 100018,
  kPOSIXErrorENODEV = 100019,
  kPOSIXErrorENOTDIR = 100020,
  kPOSIXErrorEISDIR = 100021,
  kPOSIXErrorEINVAL = 100022,
  kPOSIXErrorENFILE = 100023,
  kPOSIXErrorEMFILE = 100024,
  kPOSIXErrorENOTTY = 100025,
  kPOSIXErrorETXTBSY = 100026,
  kPOSIXErrorEFBIG = 100027,
  kPOSIXErrorENOSPC = 100028,
  kPOSIXErrorESPIPE = 100029,
  kPOSIXErrorEROFS = 100030,
  kPOSIXErrorEMLINK = 100031,
  kPOSIXErrorEPIPE = 100032,
  kPOSIXErrorEDOM = 100033,
  kPOSIXErrorERANGE = 100034,
  kPOSIXErrorEAGAIN = 100035,
  kPOSIXErrorEINPROGRESS = 100036,
  kPOSIXErrorEALREADY = 100037,
  kPOSIXErrorENOTSOCK = 100038,
  kPOSIXErrorEDESTADDRREQ = 100039,
  kPOSIXErrorEMSGSIZE = 100040,
  kPOSIXErrorEPROTOTYPE = 100041,
  kPOSIXErrorENOPROTOOPT = 100042,
  kPOSIXErrorEPROTONOSUPPORT = 100043,
  kPOSIXErrorESOCKTNOSUPPORT = 100044,
  kPOSIXErrorENOTSUP = 100045,
  kPOSIXErrorEPFNOSUPPORT = 100046,
  kPOSIXErrorEAFNOSUPPORT = 100047,
  kPOSIXErrorEADDRINUSE = 100048,
  kPOSIXErrorEADDRNOTAVAIL = 100049,
  kPOSIXErrorENETDOWN = 100050,
  kPOSIXErrorENETUNREACH = 100051,
  kPOSIXErrorENETRESET = 100052,
  kPOSIXErrorECONNABORTED = 100053,
  kPOSIXErrorECONNRESET = 100054,
  kPOSIXErrorENOBUFS = 100055,
  kPOSIXErrorEISCONN = 100056,
  kPOSIXErrorENOTCONN = 100057,
  kPOSIXErrorESHUTDOWN = 100058,
  kPOSIXErrorETOOMANYREFS = 100059,
  kPOSIXErrorETIMEDOUT = 100060,
  kPOSIXErrorECONNREFUSED = 100061,
  kPOSIXErrorELOOP = 100062,
  kPOSIXErrorENAMETOOLONG = 100063,
  kPOSIXErrorEHOSTDOWN = 100064,
  kPOSIXErrorEHOSTUNREACH = 100065,
  kPOSIXErrorENOTEMPTY = 100066,
  kPOSIXErrorEPROCLIM = 100067,
  kPOSIXErrorEUSERS = 100068,
  kPOSIXErrorEDQUOT = 100069,
  kPOSIXErrorESTALE = 100070,
  kPOSIXErrorEREMOTE = 100071,
  kPOSIXErrorEBADRPC = 100072,
  kPOSIXErrorERPCMISMATCH = 100073,
  kPOSIXErrorEPROGUNAVAIL = 100074,
  kPOSIXErrorEPROGMISMATCH = 100075,
  kPOSIXErrorEPROCUNAVAIL = 100076,
  kPOSIXErrorENOLCK = 100077,
  kPOSIXErrorENOSYS = 100078,
  kPOSIXErrorEFTYPE = 100079,
  kPOSIXErrorEAUTH = 100080,
  kPOSIXErrorENEEDAUTH = 100081,
  kPOSIXErrorEPWROFF = 100082,
  kPOSIXErrorEDEVERR = 100083,
  kPOSIXErrorEOVERFLOW = 100084,
  kPOSIXErrorEBADEXEC = 100085,
  kPOSIXErrorEBADARCH = 100086,
  kPOSIXErrorESHLIBVERS = 100087,
  kPOSIXErrorEBADMACHO = 100088,
  kPOSIXErrorECANCELED = 100089,
  kPOSIXErrorEIDRM = 100090,
  kPOSIXErrorENOMSG = 100091,
  kPOSIXErrorEILSEQ = 100092,
  kPOSIXErrorENOATTR = 100093,
  kPOSIXErrorEBADMSG = 100094,
  kPOSIXErrorEMULTIHOP = 100095,
  kPOSIXErrorENODATA = 100096,
  kPOSIXErrorENOLINK = 100097,
  kPOSIXErrorENOSR = 100098,
  kPOSIXErrorENOSTR = 100099,
  kPOSIXErrorEPROTO = 100100,
  kPOSIXErrorETIME = 100101,
  kPOSIXErrorEOPNOTSUPP = 100102
};
# 3193 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacErrors.h" 3
extern void
SysError(short errorCode) ;






}
# 25 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UTCUtils.h" 2 3
# 36 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UTCUtils.h" 3
extern "C" {


#pragma pack(push, 2)


enum {
  kUTCDefaultOptions = 0
};


struct UTCDateTime {
  UInt16 highSeconds;
  UInt32 lowSeconds;
  UInt16 fraction;
};
typedef struct UTCDateTime UTCDateTime;
typedef UTCDateTime * UTCDateTimePtr;
typedef UTCDateTimePtr * UTCDateTimeHandle;
struct LocalDateTime {
  UInt16 highSeconds;
  UInt32 lowSeconds;
  UInt16 fraction;
};
typedef struct LocalDateTime LocalDateTime;
typedef LocalDateTime * LocalDateTimePtr;
typedef LocalDateTimePtr * LocalDateTimeHandle;
# 249 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UTCUtils.h" 3
#pragma pack(pop)


}
# 46 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CarbonCore.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextCommon.h" 1 3
# 32 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextCommon.h" 3
extern "C" {


#pragma pack(push, 2)
# 50 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextCommon.h" 3
enum {




  kTextFlushDefault = 0,




  kTextCenter = 1,




  kTextFlushRight = -1,




  kTextFlushLeft = -2
};



typedef UInt32 TextEncodingBase;
enum {

  kTextEncodingMacRoman = 0,
  kTextEncodingMacJapanese = 1,
  kTextEncodingMacChineseTrad = 2,
  kTextEncodingMacKorean = 3,
  kTextEncodingMacArabic = 4,
  kTextEncodingMacHebrew = 5,
  kTextEncodingMacGreek = 6,
  kTextEncodingMacCyrillic = 7,
  kTextEncodingMacDevanagari = 9,
  kTextEncodingMacGurmukhi = 10,
  kTextEncodingMacGujarati = 11,
  kTextEncodingMacOriya = 12,
  kTextEncodingMacBengali = 13,
  kTextEncodingMacTamil = 14,
  kTextEncodingMacTelugu = 15,
  kTextEncodingMacKannada = 16,
  kTextEncodingMacMalayalam = 17,
  kTextEncodingMacSinhalese = 18,
  kTextEncodingMacBurmese = 19,
  kTextEncodingMacKhmer = 20,
  kTextEncodingMacThai = 21,
  kTextEncodingMacLaotian = 22,
  kTextEncodingMacGeorgian = 23,
  kTextEncodingMacArmenian = 24,
  kTextEncodingMacChineseSimp = 25,
  kTextEncodingMacTibetan = 26,
  kTextEncodingMacMongolian = 27,
  kTextEncodingMacEthiopic = 28,
  kTextEncodingMacCentralEurRoman = 29,
  kTextEncodingMacVietnamese = 30,
  kTextEncodingMacExtArabic = 31,
  kTextEncodingMacSymbol = 33,
  kTextEncodingMacDingbats = 34,
  kTextEncodingMacTurkish = 35,
  kTextEncodingMacCroatian = 36,
  kTextEncodingMacIcelandic = 37,
  kTextEncodingMacRomanian = 38,
  kTextEncodingMacCeltic = 39,
  kTextEncodingMacGaelic = 40,
  kTextEncodingMacKeyboardGlyphs = 41
};


enum {
  kTextEncodingMacTradChinese = kTextEncodingMacChineseTrad,
  kTextEncodingMacRSymbol = 8,
  kTextEncodingMacSimpChinese = kTextEncodingMacChineseSimp,
  kTextEncodingMacGeez = kTextEncodingMacEthiopic,
  kTextEncodingMacEastEurRoman = kTextEncodingMacCentralEurRoman,
  kTextEncodingMacUninterp = 32
};
# 140 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextCommon.h" 3
enum {
  kTextEncodingMacUnicode = 0x7E
};


enum {

  kTextEncodingMacFarsi = 0x8C,

  kTextEncodingMacUkrainian = 0x98,

  kTextEncodingMacInuit = 0xEC,
  kTextEncodingMacVT100 = 0xFC
};


enum {
  kTextEncodingMacHFS = 0xFF
};


enum {
  kTextEncodingUnicodeDefault = 0x0100,
  kTextEncodingUnicodeV1_1 = 0x0101,
  kTextEncodingISO10646_1993 = 0x0101,
  kTextEncodingUnicodeV2_0 = 0x0103,
  kTextEncodingUnicodeV2_1 = 0x0103,
  kTextEncodingUnicodeV3_0 = 0x0104,
  kTextEncodingUnicodeV3_1 = 0x0105,
  kTextEncodingUnicodeV3_2 = 0x0106,
  kTextEncodingUnicodeV4_0 = 0x0108,
  kTextEncodingUnicodeV5_0 = 0x010A,
  kTextEncodingUnicodeV5_1 = 0x010B
};


enum {
  kTextEncodingISOLatin1 = 0x0201,
  kTextEncodingISOLatin2 = 0x0202,
  kTextEncodingISOLatin3 = 0x0203,
  kTextEncodingISOLatin4 = 0x0204,
  kTextEncodingISOLatinCyrillic = 0x0205,
  kTextEncodingISOLatinArabic = 0x0206,
  kTextEncodingISOLatinGreek = 0x0207,
  kTextEncodingISOLatinHebrew = 0x0208,
  kTextEncodingISOLatin5 = 0x0209,
  kTextEncodingISOLatin6 = 0x020A,
  kTextEncodingISOLatin7 = 0x020D,
  kTextEncodingISOLatin8 = 0x020E,
  kTextEncodingISOLatin9 = 0x020F,
  kTextEncodingISOLatin10 = 0x0210
};


enum {
  kTextEncodingDOSLatinUS = 0x0400,
  kTextEncodingDOSGreek = 0x0405,
  kTextEncodingDOSBalticRim = 0x0406,
  kTextEncodingDOSLatin1 = 0x0410,
  kTextEncodingDOSGreek1 = 0x0411,
  kTextEncodingDOSLatin2 = 0x0412,
  kTextEncodingDOSCyrillic = 0x0413,
  kTextEncodingDOSTurkish = 0x0414,
  kTextEncodingDOSPortuguese = 0x0415,
  kTextEncodingDOSIcelandic = 0x0416,
  kTextEncodingDOSHebrew = 0x0417,
  kTextEncodingDOSCanadianFrench = 0x0418,
  kTextEncodingDOSArabic = 0x0419,
  kTextEncodingDOSNordic = 0x041A,
  kTextEncodingDOSRussian = 0x041B,
  kTextEncodingDOSGreek2 = 0x041C,
  kTextEncodingDOSThai = 0x041D,
  kTextEncodingDOSJapanese = 0x0420,
  kTextEncodingDOSChineseSimplif = 0x0421,
  kTextEncodingDOSKorean = 0x0422,
  kTextEncodingDOSChineseTrad = 0x0423,
  kTextEncodingWindowsLatin1 = 0x0500,
  kTextEncodingWindowsANSI = 0x0500,
  kTextEncodingWindowsLatin2 = 0x0501,
  kTextEncodingWindowsCyrillic = 0x0502,
  kTextEncodingWindowsGreek = 0x0503,
  kTextEncodingWindowsLatin5 = 0x0504,
  kTextEncodingWindowsHebrew = 0x0505,
  kTextEncodingWindowsArabic = 0x0506,
  kTextEncodingWindowsBalticRim = 0x0507,
  kTextEncodingWindowsVietnamese = 0x0508,
  kTextEncodingWindowsKoreanJohab = 0x0510
};


enum {
  kTextEncodingUS_ASCII = 0x0600,
  kTextEncodingANSEL = 0x0601,
  kTextEncodingJIS_X0201_76 = 0x0620,
  kTextEncodingJIS_X0208_83 = 0x0621,
  kTextEncodingJIS_X0208_90 = 0x0622,
  kTextEncodingJIS_X0212_90 = 0x0623,
  kTextEncodingJIS_C6226_78 = 0x0624,
  kTextEncodingShiftJIS_X0213 = 0x0628,
  kTextEncodingJIS_X0213_MenKuTen = 0x0629,
  kTextEncodingGB_2312_80 = 0x0630,
  kTextEncodingGBK_95 = 0x0631,
  kTextEncodingGB_18030_2000 = 0x0632,
  kTextEncodingKSC_5601_87 = 0x0640,
  kTextEncodingKSC_5601_92_Johab = 0x0641,
  kTextEncodingCNS_11643_92_P1 = 0x0651,
  kTextEncodingCNS_11643_92_P2 = 0x0652,
  kTextEncodingCNS_11643_92_P3 = 0x0653
};


enum {
  kTextEncodingISO_2022_JP = 0x0820,
  kTextEncodingISO_2022_JP_2 = 0x0821,
  kTextEncodingISO_2022_JP_1 = 0x0822,
  kTextEncodingISO_2022_JP_3 = 0x0823,
  kTextEncodingISO_2022_CN = 0x0830,
  kTextEncodingISO_2022_CN_EXT = 0x0831,
  kTextEncodingISO_2022_KR = 0x0840
};


enum {
  kTextEncodingEUC_JP = 0x0920,
  kTextEncodingEUC_CN = 0x0930,
  kTextEncodingEUC_TW = 0x0931,
  kTextEncodingEUC_KR = 0x0940
};


enum {
  kTextEncodingShiftJIS = 0x0A01,
  kTextEncodingKOI8_R = 0x0A02,
  kTextEncodingBig5 = 0x0A03,
  kTextEncodingMacRomanLatin1 = 0x0A04,
  kTextEncodingHZ_GB_2312 = 0x0A05,
  kTextEncodingBig5_HKSCS_1999 = 0x0A06,
  kTextEncodingVISCII = 0x0A07,
  kTextEncodingKOI8_U = 0x0A08,
  kTextEncodingBig5_E = 0x0A09
};


enum {
  kTextEncodingNextStepLatin = 0x0B01,
  kTextEncodingNextStepJapanese = 0x0B02
};


enum {
  kTextEncodingEBCDIC_LatinCore = 0x0C01,
  kTextEncodingEBCDIC_CP037 = 0x0C02
};


enum {
  kTextEncodingMultiRun = 0x0FFF,
  kTextEncodingUnknown = 0xFFFF
};


enum {
  kTextEncodingEBCDIC_US = 0x0C01
};



typedef UInt32 TextEncodingVariant;

enum {
  kTextEncodingDefaultVariant = 0
};


enum {
  kMacRomanDefaultVariant = 0,
  kMacRomanCurrencySignVariant = 1,
  kMacRomanEuroSignVariant = 2
};


enum {
  kMacCyrillicDefaultVariant = 0,
  kMacCyrillicCurrSignStdVariant = 1,
  kMacCyrillicCurrSignUkrVariant = 2,
  kMacCyrillicEuroSignVariant = 3
};


enum {
  kMacIcelandicStdDefaultVariant = 0,
  kMacIcelandicTTDefaultVariant = 1,

  kMacIcelandicStdCurrSignVariant = 2,
  kMacIcelandicTTCurrSignVariant = 3,

  kMacIcelandicStdEuroSignVariant = 4,
  kMacIcelandicTTEuroSignVariant = 5
};


enum {
  kMacCroatianDefaultVariant = 0,
  kMacCroatianCurrencySignVariant = 1,
  kMacCroatianEuroSignVariant = 2
};



enum {
  kMacRomanianDefaultVariant = 0,
  kMacRomanianCurrencySignVariant = 1,
  kMacRomanianEuroSignVariant = 2
};



enum {
  kMacJapaneseStandardVariant = 0,
  kMacJapaneseStdNoVerticalsVariant = 1,
  kMacJapaneseBasicVariant = 2,
  kMacJapanesePostScriptScrnVariant = 3,
  kMacJapanesePostScriptPrintVariant = 4,
  kMacJapaneseVertAtKuPlusTenVariant = 5
};


enum {
  kMacArabicStandardVariant = 0,
  kMacArabicTrueTypeVariant = 1,
  kMacArabicThuluthVariant = 2,
  kMacArabicAlBayanVariant = 3
};


enum {
  kMacFarsiStandardVariant = 0,
  kMacFarsiTrueTypeVariant = 1
};


enum {
  kMacHebrewStandardVariant = 0,
  kMacHebrewFigureSpaceVariant = 1
};


enum {
  kMacGreekDefaultVariant = 0,
  kMacGreekNoEuroSignVariant = 1,
  kMacGreekEuroSignVariant = 2
};


enum {
  kMacVT100DefaultVariant = 0,
  kMacVT100CurrencySignVariant = 1,
  kMacVT100EuroSignVariant = 2
};


enum {
  kUnicodeNoSubset = 0,
  kUnicodeNormalizationFormD = 5,
  kUnicodeNormalizationFormC = 3,
  kUnicodeHFSPlusDecompVariant = 8,
  kUnicodeHFSPlusCompVariant = 9
};


enum {
  kISOLatin1StandardVariant = 0,
  kISOLatin1MusicCDVariant = 1
};
# 434 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextCommon.h" 3
enum {
  kISOLatinArabicImplicitOrderVariant = 0,
  kISOLatinArabicVisualOrderVariant = 1,
  kISOLatinArabicExplicitOrderVariant = 2
};

enum {
  kISOLatinHebrewImplicitOrderVariant = 0,
  kISOLatinHebrewVisualOrderVariant = 1,
  kISOLatinHebrewExplicitOrderVariant = 2
};


enum {
  kWindowsLatin1StandardVariant = 0,
  kWindowsLatin1PalmVariant = 1
};


enum {
  kDOSJapaneseStandardVariant = 0,
  kDOSJapanesePalmVariant = 1
};






enum {
  kEUC_CN_BasicVariant = 0,
  kEUC_CN_DOSVariant = 1
};






enum {
  kEUC_KR_BasicVariant = 0,
  kEUC_KR_DOSVariant = 1
};






enum {
  kShiftJIS_BasicVariant = 0,
  kShiftJIS_DOSVariant = 1,
  kShiftJIS_MusicCDVariant = 2
};






enum {
  kBig5_BasicVariant = 0,
  kBig5_StandardVariant = 1,
  kBig5_ETenVariant = 2,
  kBig5_DOSVariant = 3
};


enum {
  kMacRomanLatin1DefaultVariant = 0,
  kMacRomanLatin1StandardVariant = 2,
  kMacRomanLatin1TurkishVariant = 6,
  kMacRomanLatin1CroatianVariant = 8,
  kMacRomanLatin1IcelandicVariant = 11,
  kMacRomanLatin1RomanianVariant = 14
};


enum {
  kUnicodeNoCompatibilityVariant = 1,
  kUnicodeNoCorporateVariant = 4
};


enum {
  kMacRomanStandardVariant = 0,
  kMacIcelandicStandardVariant = 0,
  kMacIcelandicTrueTypeVariant = 1,
  kJapaneseStandardVariant = 0,
  kJapaneseStdNoVerticalsVariant = 1,
  kJapaneseBasicVariant = 2,
  kJapanesePostScriptScrnVariant = 3,
  kJapanesePostScriptPrintVariant = 4,
  kJapaneseVertAtKuPlusTenVariant = 5,
  kTextEncodingShiftJIS_X0213_00 = 0x0628,


  kHebrewStandardVariant = 0,
  kHebrewFigureSpaceVariant = 1,






  kUnicodeCanonicalDecompVariant = 2,
  kUnicodeMaxDecomposedVariant = 2,
  kUnicodeCanonicalCompVariant = 3,
  kUnicodeNoComposedVariant = 3
};


typedef UInt32 TextEncodingFormat;
enum {

  kTextEncodingDefaultFormat = 0,
  kUnicodeUTF16Format = 0,
  kUnicodeUTF7Format = 1,
  kUnicodeUTF8Format = 2,
  kUnicodeUTF32Format = 3,
  kUnicodeUTF16BEFormat = 4,
  kUnicodeUTF16LEFormat = 5,
  kUnicodeUTF32BEFormat = 6,
  kUnicodeUTF32LEFormat = 7,
  kUnicodeSCSUFormat = 8,
# 568 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextCommon.h" 3
  kUnicode16BitFormat = 0,
  kUnicode32BitFormat = 3
};


typedef UInt32 TextEncoding;

typedef UInt32 TextEncodingNameSelector;
enum {
  kTextEncodingFullName = 0,
  kTextEncodingBaseName = 1,
  kTextEncodingVariantName = 2,
  kTextEncodingFormatName = 3
};


struct TextEncodingRun {
  ByteOffset offset;
  TextEncoding textEncoding;
};
typedef struct TextEncodingRun TextEncodingRun;
typedef TextEncodingRun * TextEncodingRunPtr;
typedef const TextEncodingRun * ConstTextEncodingRunPtr;
struct ScriptCodeRun {
  ByteOffset offset;
  ScriptCode script;
};
typedef struct ScriptCodeRun ScriptCodeRun;
typedef ScriptCodeRun * ScriptCodeRunPtr;
typedef const ScriptCodeRun * ConstScriptCodeRunPtr;
typedef UInt8 * TextPtr;
typedef const UInt8 * ConstTextPtr;

typedef UniChar * UniCharArrayPtr;
typedef const UniChar * ConstUniCharArrayPtr;




typedef UniCharArrayPtr * UniCharArrayHandle;




typedef unsigned long UniCharArrayOffset;

enum {
  kTextScriptDontCare = -128,
  kTextLanguageDontCare = -128,
  kTextRegionDontCare = -128
};



struct TECInfo {
  UInt16 format;
  UInt16 tecVersion;
  UInt32 tecTextConverterFeatures;
  UInt32 tecUnicodeConverterFeatures;
  UInt32 tecTextCommonFeatures;
  Str31 tecTextEncodingsFolderName;
  Str31 tecExtensionFileName;
  UInt16 tecLowestTEFileVersion;
  UInt16 tecHighestTEFileVersion;
};
typedef struct TECInfo TECInfo;
typedef TECInfo * TECInfoPtr;
typedef TECInfoPtr * TECInfoHandle;

enum {
  kTECInfoCurrentFormat = 2
};
# 684 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextCommon.h" 3
enum {
  kTECKeepInfoFixBit = 0,
  kTECFallbackTextLengthFixBit = 1,
  kTECTextRunBitClearFixBit = 2,
  kTECTextToUnicodeScanFixBit = 3,
  kTECAddForceASCIIChangesBit = 4,
  kTECPreferredEncodingFixBit = 5,
  kTECAddTextRunHeuristicsBit = 6,
  kTECAddFallbackInterruptBit = 7
};

enum {
  kTECKeepInfoFixMask = 1L << kTECKeepInfoFixBit,
  kTECFallbackTextLengthFixMask = 1L << kTECFallbackTextLengthFixBit,
  kTECTextRunBitClearFixMask = 1L << kTECTextRunBitClearFixBit,
  kTECTextToUnicodeScanFixMask = 1L << kTECTextToUnicodeScanFixBit,
  kTECAddForceASCIIChangesMask = 1L << kTECAddForceASCIIChangesBit,
  kTECPreferredEncodingFixMask = 1L << kTECPreferredEncodingFixBit,
  kTECAddTextRunHeuristicsMask = 1L << kTECAddTextRunHeuristicsBit,
  kTECAddFallbackInterruptMask = 1L << kTECAddFallbackInterruptBit
};







enum {
  kUnicodeByteOrderMark = 0xFEFF,
  kUnicodeObjectReplacement = 0xFFFC,
  kUnicodeReplacementChar = 0xFFFD,
  kUnicodeSwappedByteOrderMark = 0xFFFE,
  kUnicodeNotAChar = 0xFFFF
};
# 727 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextCommon.h" 3
typedef SInt32 UCCharPropertyType;
enum {
  kUCCharPropTypeGenlCategory = 1,
  kUCCharPropTypeCombiningClass = 2,
  kUCCharPropTypeBidiCategory = 3,
  kUCCharPropTypeDecimalDigitValue = 4
};

typedef UInt32 UCCharPropertyValue;

enum {

  kUCGenlCatOtherNotAssigned = 0,
  kUCGenlCatOtherControl = 1,
  kUCGenlCatOtherFormat = 2,
  kUCGenlCatOtherSurrogate = 3,
  kUCGenlCatOtherPrivateUse = 4,
  kUCGenlCatMarkNonSpacing = 5,
  kUCGenlCatMarkSpacingCombining = 6,
  kUCGenlCatMarkEnclosing = 7,
  kUCGenlCatNumberDecimalDigit = 8,
  kUCGenlCatNumberLetter = 9,
  kUCGenlCatNumberOther = 10,
  kUCGenlCatSeparatorSpace = 11,
  kUCGenlCatSeparatorLine = 12,
  kUCGenlCatSeparatorParagraph = 13,
  kUCGenlCatLetterUppercase = 14,
  kUCGenlCatLetterLowercase = 15,
  kUCGenlCatLetterTitlecase = 16,

  kUCGenlCatLetterModifier = 17,
  kUCGenlCatLetterOther = 18,
  kUCGenlCatPunctConnector = 20,
  kUCGenlCatPunctDash = 21,
  kUCGenlCatPunctOpen = 22,
  kUCGenlCatPunctClose = 23,
  kUCGenlCatPunctInitialQuote = 24,
  kUCGenlCatPunctFinalQuote = 25,
  kUCGenlCatPunctOther = 26,
  kUCGenlCatSymbolMath = 28,
  kUCGenlCatSymbolCurrency = 29,
  kUCGenlCatSymbolModifier = 30,
  kUCGenlCatSymbolOther = 31
};


enum {
  kUCBidiCatNotApplicable = 0,

  kUCBidiCatLeftRight = 1,
  kUCBidiCatRightLeft = 2,

  kUCBidiCatEuroNumber = 3,
  kUCBidiCatEuroNumberSeparator = 4,
  kUCBidiCatEuroNumberTerminator = 5,
  kUCBidiCatArabicNumber = 6,
  kUCBidiCatCommonNumberSeparator = 7,

  kUCBidiCatBlockSeparator = 8,
  kUCBidiCatSegmentSeparator = 9,

  kUCBidiCatWhitespace = 10,
  kUCBidiCatOtherNeutral = 11,

  kUCBidiCatRightLeftArabic = 12,
  kUCBidiCatLeftRightEmbedding = 13,
  kUCBidiCatRightLeftEmbedding = 14,
  kUCBidiCatLeftRightOverride = 15,
  kUCBidiCatRightLeftOverride = 16,
  kUCBidiCatPopDirectionalFormat = 17,
  kUCBidiCatNonSpacingMark = 18,
  kUCBidiCatBoundaryNeutral = 19
};
# 817 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextCommon.h" 3
extern TextEncoding
CreateTextEncoding(
  TextEncodingBase encodingBase,
  TextEncodingVariant encodingVariant,
  TextEncodingFormat encodingFormat) ;
# 832 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextCommon.h" 3
extern TextEncodingBase
GetTextEncodingBase(TextEncoding encoding) ;
# 844 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextCommon.h" 3
extern TextEncodingVariant
GetTextEncodingVariant(TextEncoding encoding) ;
# 856 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextCommon.h" 3
extern TextEncodingFormat
GetTextEncodingFormat(TextEncoding encoding) ;
# 868 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextCommon.h" 3
extern TextEncoding
ResolveDefaultTextEncoding(TextEncoding encoding) ;
# 880 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextCommon.h" 3
extern OSStatus
GetTextEncodingName(
  TextEncoding iEncoding,
  TextEncodingNameSelector iNamePartSelector,
  RegionCode iPreferredRegion,
  TextEncoding iPreferredEncoding,
  ByteCount iOutputBufLen,
  ByteCount * oNameLength,
  RegionCode * oActualRegion,
  TextEncoding * oActualEncoding,
  TextPtr oEncodingName) ;
# 901 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextCommon.h" 3
extern OSStatus
TECGetInfo(TECInfoHandle * tecInfo) ;
# 914 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextCommon.h" 3
extern OSStatus
UpgradeScriptInfoToTextEncoding(
  ScriptCode iTextScriptID,
  LangCode iTextLanguageID,
  RegionCode iRegionID,
  ConstStr255Param iTextFontname,
  TextEncoding * oEncoding) ;
# 931 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextCommon.h" 3
extern OSStatus
RevertTextEncodingToScriptInfo(
  TextEncoding iEncoding,
  ScriptCode * oTextScriptID,
  LangCode * oTextLanguageID,
  Str255 oTextFontname) ;
# 984 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextCommon.h" 3
extern OSStatus
GetTextEncodingFromScriptInfo(
  ScriptCode iTextScriptID,
  LangCode iTextLanguageID,
  RegionCode iTextRegionID,
  TextEncoding * oEncoding) ;
# 1033 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextCommon.h" 3
extern OSStatus
GetScriptInfoFromTextEncoding(
  TextEncoding iEncoding,
  ScriptCode * oTextScriptID,
  LangCode * oTextLanguageID) ;
# 1049 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextCommon.h" 3
extern OSStatus
NearestMacTextEncodings(
  TextEncoding generalEncoding,
  TextEncoding * bestMacEncoding,
  TextEncoding * alternateMacEncoding) ;
# 1064 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextCommon.h" 3
extern OSStatus
UCGetCharProperty(
  const UniChar * charPtr,
  UniCharCount textLength,
  UCCharPropertyType propType,
  UCCharPropertyValue * propValue) ;
# 1090 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextCommon.h" 3
enum {
  kUCHighSurrogateRangeStart = 0xD800,
  kUCHighSurrogateRangeEnd = 0xDBFF,
  kUCLowSurrogateRangeStart = 0xDC00,
  kUCLowSurrogateRangeEnd = 0xDFFF
};
# 1104 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextCommon.h" 3
static __inline__ Boolean UCIsSurrogateHighCharacter( UniChar character ) {

   return ( ( character & 0xFC00 ) == kUCHighSurrogateRangeStart );
}







static __inline__ Boolean UCIsSurrogateLowCharacter( UniChar character ) {

    return ( ( character & 0xFC00 ) == kUCLowSurrogateRangeStart );
}
# 1129 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextCommon.h" 3
static __inline__ UnicodeScalarValue UCGetUnicodeScalarValueForSurrogatePair( UniChar surrogateHigh, UniChar surrogateLow ) {
  return ( ( surrogateHigh - kUCHighSurrogateRangeStart ) << 10 ) + ( surrogateLow - kUCLowSurrogateRangeStart ) + 0x0010000;
}



#pragma pack(pop)


}
# 50 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CarbonCore.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 1 3
# 24 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MixedMode.h" 1 3
# 31 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MixedMode.h" 3
#pragma pack(push, 2)
# 47 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MixedMode.h" 3
enum {
  kRoutineDescriptorVersion = 7
};


enum {
  _MixedModeMagic = 0xAAFE
};


enum {
  kCurrentMixedModeStateRecord = 1
};


typedef unsigned short CallingConventionType;
enum {
  kPascalStackBased = 0,
  kCStackBased = 1,
  kRegisterBased = 2,
  kD0DispatchedPascalStackBased = 8,
  kD1DispatchedPascalStackBased = 12,
  kD0DispatchedCStackBased = 9,
  kStackDispatchedPascalStackBased = 14,
  kThinkCStackBased = 5
};


typedef SInt8 ISAType;
enum {
  kM68kISA = 0,
  kPowerPCISA = 1
};

enum {
  kX86ISA = 2
};


typedef SInt8 RTAType;
enum {
  kOld68kRTA = 0 << 4,
  kPowerPCRTA = 0 << 4,
  kCFM68kRTA = 1 << 4
};

enum {
  kX86RTA = 2 << 4
};
# 114 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MixedMode.h" 3
enum {
  kRegisterD0 = 0,
  kRegisterD1 = 1,
  kRegisterD2 = 2,
  kRegisterD3 = 3,
  kRegisterD4 = 8,
  kRegisterD5 = 9,
  kRegisterD6 = 10,
  kRegisterD7 = 11,
  kRegisterA0 = 4,
  kRegisterA1 = 5,
  kRegisterA2 = 6,
  kRegisterA3 = 7,
  kRegisterA4 = 12,
  kRegisterA5 = 13,
  kRegisterA6 = 14,
  kCCRegisterCBit = 16,
  kCCRegisterVBit = 17,
  kCCRegisterZBit = 18,
  kCCRegisterNBit = 19,
  kCCRegisterXBit = 20
};

typedef unsigned short registerSelectorType;

enum {
  kNoByteCode = 0,
  kOneByteCode = 1,
  kTwoByteCode = 2,
  kFourByteCode = 3
};


typedef unsigned long ProcInfoType;

typedef unsigned short RoutineFlagsType;
enum {
  kProcDescriptorIsAbsolute = 0x00,
  kProcDescriptorIsRelative = 0x01
};

enum {
  kFragmentIsPrepared = 0x00,
  kFragmentNeedsPreparing = 0x02
};

enum {
  kUseCurrentISA = 0x00,
  kUseNativeISA = 0x04
};

enum {
  kPassSelector = 0x00,
  kDontPassSelector = 0x08
};

enum {
  kRoutineIsNotDispatchedDefaultRoutine = 0x00,
  kRoutineIsDispatchedDefaultRoutine = 0x10
};

enum {
  kProcDescriptorIsProcPtr = 0x00,
  kProcDescriptorIsIndex = 0x20
};

struct RoutineRecord {
  ProcInfoType procInfo;
  SInt8 reserved1;
  ISAType ISA;
  RoutineFlagsType routineFlags;
  ProcPtr procDescriptor;
  UInt32 reserved2;
  UInt32 selector;
};
typedef struct RoutineRecord RoutineRecord;
typedef RoutineRecord * RoutineRecordPtr;
typedef RoutineRecordPtr * RoutineRecordHandle;


typedef UInt8 RDFlagsType;
enum {
  kSelectorsAreNotIndexable = 0x00,
  kSelectorsAreIndexable = 0x01
};


struct RoutineDescriptor {
  UInt16 goMixedModeTrap;
  SInt8 version;
  RDFlagsType routineDescriptorFlags;
  UInt32 reserved1;
  UInt8 reserved2;
  UInt8 selectorInfo;
  UInt16 routineCount;
  RoutineRecord routineRecords[1];
};
typedef struct RoutineDescriptor RoutineDescriptor;
typedef RoutineDescriptor * RoutineDescriptorPtr;
typedef RoutineDescriptorPtr * RoutineDescriptorHandle;

struct MixedModeStateRecord {
  UInt32 state1;
  UInt32 state2;
  UInt32 state3;
  UInt32 state4;
};
typedef struct MixedModeStateRecord MixedModeStateRecord;
# 264 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MixedMode.h" 3
enum {

  kCallingConventionWidth = 4,
  kCallingConventionPhase = 0,
  kCallingConventionMask = 0x0F,
  kResultSizeWidth = 2,
  kResultSizePhase = kCallingConventionWidth,
  kResultSizeMask = 0x30,
  kStackParameterWidth = 2,
  kStackParameterPhase = (kCallingConventionWidth + kResultSizeWidth),
  kStackParameterMask = (int)0xFFFFFFC0,
  kRegisterResultLocationWidth = 5,
  kRegisterResultLocationPhase = (kCallingConventionWidth + kResultSizeWidth),
  kRegisterParameterWidth = 5,
  kRegisterParameterPhase = (kCallingConventionWidth + kResultSizeWidth + kRegisterResultLocationWidth),
  kRegisterParameterMask = 0x7FFFF800,
  kRegisterParameterSizePhase = 0,
  kRegisterParameterSizeWidth = 2,
  kRegisterParameterWhichPhase = kRegisterParameterSizeWidth,
  kRegisterParameterWhichWidth = 3,
  kDispatchedSelectorSizeWidth = 2,
  kDispatchedSelectorSizePhase = (kCallingConventionWidth + kResultSizeWidth),
  kDispatchedParameterPhase = (kCallingConventionWidth + kResultSizeWidth + kDispatchedSelectorSizeWidth),
  kSpecialCaseSelectorWidth = 6,
  kSpecialCaseSelectorPhase = kCallingConventionWidth,
  kSpecialCaseSelectorMask = 0x03F0
};

enum {
  kSpecialCase = 0x000F
};

enum {

  kSpecialCaseHighHook = 0,
  kSpecialCaseCaretHook = 0,
  kSpecialCaseEOLHook = 1,
  kSpecialCaseWidthHook = 2,
  kSpecialCaseTextWidthHook = 2,
  kSpecialCaseNWidthHook = 3,
  kSpecialCaseDrawHook = 4,
  kSpecialCaseHitTestHook = 5,
  kSpecialCaseTEFindWord = 6,
  kSpecialCaseProtocolHandler = 7,
  kSpecialCaseSocketListener = 8,
  kSpecialCaseTERecalc = 9,
  kSpecialCaseTEDoText = 10,
  kSpecialCaseGNEFilterProc = 11,
  kSpecialCaseMBarHook = 12
};
# 531 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MixedMode.h" 3
#pragma pack(pop)
# 25 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 2 3
# 36 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern "C" {






enum {
  kCollectionDontWantTag = 0,
  kCollectionDontWantId = 0,
  kCollectionDontWantSize = 0,
  kCollectionDontWantAttributes = 0,
  kCollectionDontWantIndex = 0,
  kCollectionDontWantData = 0
};



enum {
  kCollectionNoAttributes = 0x00000000,
  kCollectionAllAttributes = (int)0xFFFFFFFF,
  kCollectionUserAttributes = 0x0000FFFF,
  kCollectionDefaultAttributes = 0x40000000
};







enum {
  kCollectionUser0Bit = 0,
  kCollectionUser1Bit = 1,
  kCollectionUser2Bit = 2,
  kCollectionUser3Bit = 3,
  kCollectionUser4Bit = 4,
  kCollectionUser5Bit = 5,
  kCollectionUser6Bit = 6,
  kCollectionUser7Bit = 7,
  kCollectionUser8Bit = 8,
  kCollectionUser9Bit = 9,
  kCollectionUser10Bit = 10,
  kCollectionUser11Bit = 11,
  kCollectionUser12Bit = 12,
  kCollectionUser13Bit = 13,
  kCollectionUser14Bit = 14,
  kCollectionUser15Bit = 15,
  kCollectionReserved0Bit = 16,
  kCollectionReserved1Bit = 17,
  kCollectionReserved2Bit = 18,
  kCollectionReserved3Bit = 19,
  kCollectionReserved4Bit = 20,
  kCollectionReserved5Bit = 21,
  kCollectionReserved6Bit = 22,
  kCollectionReserved7Bit = 23,
  kCollectionReserved8Bit = 24,
  kCollectionReserved9Bit = 25,
  kCollectionReserved10Bit = 26,
  kCollectionReserved11Bit = 27,
  kCollectionReserved12Bit = 28,
  kCollectionReserved13Bit = 29,
  kCollectionPersistenceBit = 30,
  kCollectionLockBit = 31
};



enum {
  kCollectionUser0Mask = 1L << kCollectionUser0Bit,
  kCollectionUser1Mask = 1L << kCollectionUser1Bit,
  kCollectionUser2Mask = 1L << kCollectionUser2Bit,
  kCollectionUser3Mask = 1L << kCollectionUser3Bit,
  kCollectionUser4Mask = 1L << kCollectionUser4Bit,
  kCollectionUser5Mask = 1L << kCollectionUser5Bit,
  kCollectionUser6Mask = 1L << kCollectionUser6Bit,
  kCollectionUser7Mask = 1L << kCollectionUser7Bit,
  kCollectionUser8Mask = 1L << kCollectionUser8Bit,
  kCollectionUser9Mask = 1L << kCollectionUser9Bit,
  kCollectionUser10Mask = 1L << kCollectionUser10Bit,
  kCollectionUser11Mask = 1L << kCollectionUser11Bit,
  kCollectionUser12Mask = 1L << kCollectionUser12Bit,
  kCollectionUser13Mask = 1L << kCollectionUser13Bit,
  kCollectionUser14Mask = 1L << kCollectionUser14Bit,
  kCollectionUser15Mask = 1L << kCollectionUser15Bit,
  kCollectionReserved0Mask = 1L << kCollectionReserved0Bit,
  kCollectionReserved1Mask = 1L << kCollectionReserved1Bit,
  kCollectionReserved2Mask = 1L << kCollectionReserved2Bit,
  kCollectionReserved3Mask = 1L << kCollectionReserved3Bit,
  kCollectionReserved4Mask = 1L << kCollectionReserved4Bit,
  kCollectionReserved5Mask = 1L << kCollectionReserved5Bit,
  kCollectionReserved6Mask = 1L << kCollectionReserved6Bit,
  kCollectionReserved7Mask = 1L << kCollectionReserved7Bit,
  kCollectionReserved8Mask = 1L << kCollectionReserved8Bit,
  kCollectionReserved9Mask = 1L << kCollectionReserved9Bit,
  kCollectionReserved10Mask = 1L << kCollectionReserved10Bit,
  kCollectionReserved11Mask = 1L << kCollectionReserved11Bit,
  kCollectionReserved12Mask = 1L << kCollectionReserved12Bit,
  kCollectionReserved13Mask = 1L << kCollectionReserved13Bit,
  kCollectionPersistenceMask = 1L << kCollectionPersistenceBit,
  kCollectionLockMask = 1L << kCollectionLockBit
};






typedef struct OpaqueCollection* Collection;

typedef FourCharCode CollectionTag;
typedef OSErr ( * CollectionFlattenProcPtr)(SInt32 size, void *data, void *refCon);
typedef OSErr ( * CollectionExceptionProcPtr)(Collection c, OSErr status);
typedef CollectionFlattenProcPtr CollectionFlattenUPP;
typedef CollectionExceptionProcPtr CollectionExceptionUPP;
# 159 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern CollectionFlattenUPP
NewCollectionFlattenUPP(CollectionFlattenProcPtr userRoutine) ;
# 170 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern CollectionExceptionUPP
NewCollectionExceptionUPP(CollectionExceptionProcPtr userRoutine) ;
# 181 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern void
DisposeCollectionFlattenUPP(CollectionFlattenUPP userUPP) ;
# 192 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern void
DisposeCollectionExceptionUPP(CollectionExceptionUPP userUPP) ;
# 203 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern OSErr
InvokeCollectionFlattenUPP(
  SInt32 size,
  void * data,
  void * refCon,
  CollectionFlattenUPP userUPP) ;
# 218 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern OSErr
InvokeCollectionExceptionUPP(
  Collection c,
  OSErr status,
  CollectionExceptionUPP userUPP) ;



    inline CollectionFlattenUPP NewCollectionFlattenUPP(CollectionFlattenProcPtr userRoutine) { return userRoutine; }
    inline CollectionExceptionUPP NewCollectionExceptionUPP(CollectionExceptionProcPtr userRoutine) { return userRoutine; }
    inline void DisposeCollectionFlattenUPP(CollectionFlattenUPP) { }
    inline void DisposeCollectionExceptionUPP(CollectionExceptionUPP) { }
    inline OSErr InvokeCollectionFlattenUPP(SInt32 size, void * data, void * refCon, CollectionFlattenUPP userUPP) { return (*userUPP)(size, data, refCon); }
    inline OSErr InvokeCollectionExceptionUPP(Collection c, OSErr status, CollectionExceptionUPP userUPP) { return (*userUPP)(c, status); }
# 253 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern Collection
NewCollection(void) ;
# 266 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern void
DisposeCollection(Collection c) ;
# 279 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern Collection
CloneCollection(Collection c) ;
# 292 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern SInt32
CountCollectionOwners(Collection c) ;
# 305 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern OSStatus
RetainCollection(Collection c) ;
# 318 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern OSStatus
ReleaseCollection(Collection c) ;
# 331 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern ItemCount
GetCollectionRetainCount(Collection c) ;
# 344 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern Collection
CopyCollection(
  Collection srcCollection,
  Collection dstCollection) ;
# 359 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern SInt32
GetCollectionDefaultAttributes(Collection c) ;
# 372 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern void
SetCollectionDefaultAttributes(
  Collection c,
  SInt32 whichAttributes,
  SInt32 newAttributes) ;
# 388 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern SInt32
CountCollectionItems(Collection c) ;
# 401 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern OSErr
AddCollectionItem(
  Collection c,
  CollectionTag tag,
  SInt32 id,
  SInt32 itemSize,
  const void * itemData) ;
# 419 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern OSErr
GetCollectionItem(
  Collection c,
  CollectionTag tag,
  SInt32 id,
  SInt32 * itemSize,
  void * itemData) ;
# 437 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern OSErr
RemoveCollectionItem(
  Collection c,
  CollectionTag tag,
  SInt32 id) ;
# 453 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern OSErr
SetCollectionItemInfo(
  Collection c,
  CollectionTag tag,
  SInt32 id,
  SInt32 whichAttributes,
  SInt32 newAttributes) ;
# 471 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern OSErr
GetCollectionItemInfo(
  Collection c,
  CollectionTag tag,
  SInt32 id,
  SInt32 * itemIndex,
  SInt32 * itemSize,
  SInt32 * attributes) ;
# 490 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern OSErr
ReplaceIndexedCollectionItem(
  Collection c,
  SInt32 itemIndex,
  SInt32 itemSize,
  const void * itemData) ;
# 507 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern OSErr
GetIndexedCollectionItem(
  Collection c,
  SInt32 itemIndex,
  SInt32 * itemSize,
  void * itemData) ;
# 524 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern OSErr
RemoveIndexedCollectionItem(
  Collection c,
  SInt32 itemIndex) ;
# 539 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern OSErr
SetIndexedCollectionItemInfo(
  Collection c,
  SInt32 itemIndex,
  SInt32 whichAttributes,
  SInt32 newAttributes) ;
# 556 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern OSErr
GetIndexedCollectionItemInfo(
  Collection c,
  SInt32 itemIndex,
  CollectionTag * tag,
  SInt32 * id,
  SInt32 * itemSize,
  SInt32 * attributes) ;
# 575 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern Boolean
CollectionTagExists(
  Collection c,
  CollectionTag tag) ;
# 590 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern SInt32
CountCollectionTags(Collection c) ;
# 603 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern OSErr
GetIndexedCollectionTag(
  Collection c,
  SInt32 tagIndex,
  CollectionTag * tag) ;
# 619 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern SInt32
CountTaggedCollectionItems(
  Collection c,
  CollectionTag tag) ;
# 634 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern OSErr
GetTaggedCollectionItem(
  Collection c,
  CollectionTag tag,
  SInt32 whichItem,
  SInt32 * itemSize,
  void * itemData) ;
# 652 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern OSErr
GetTaggedCollectionItemInfo(
  Collection c,
  CollectionTag tag,
  SInt32 whichItem,
  SInt32 * id,
  SInt32 * itemIndex,
  SInt32 * itemSize,
  SInt32 * attributes) ;
# 672 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern void
PurgeCollection(
  Collection c,
  SInt32 whichAttributes,
  SInt32 matchingAttributes) ;
# 688 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern void
PurgeCollectionTag(
  Collection c,
  CollectionTag tag) ;
# 703 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern void
EmptyCollection(Collection c) ;
# 715 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern OSErr
FlattenCollection(
  Collection c,
  CollectionFlattenUPP flattenProc,
  void * refCon) ;
# 731 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern OSErr
FlattenPartialCollection(
  Collection c,
  CollectionFlattenUPP flattenProc,
  void * refCon,
  SInt32 whichAttributes,
  SInt32 matchingAttributes) ;
# 749 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern OSErr
UnflattenCollection(
  Collection c,
  CollectionFlattenUPP flattenProc,
  void * refCon) ;
# 765 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern CollectionExceptionUPP
GetCollectionExceptionProc(Collection c) ;
# 778 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern void
SetCollectionExceptionProc(
  Collection c,
  CollectionExceptionUPP exceptionProc) ;
# 793 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern Collection
GetNewCollection(SInt16 collectionID) ;
# 809 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern OSErr
AddCollectionItemHdl(
  Collection aCollection,
  CollectionTag tag,
  SInt32 id,
  Handle itemData) ;
# 826 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern OSErr
GetCollectionItemHdl(
  Collection aCollection,
  CollectionTag tag,
  SInt32 id,
  Handle itemData) ;
# 843 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern OSErr
ReplaceIndexedCollectionItemHdl(
  Collection aCollection,
  SInt32 itemIndex,
  Handle itemData) ;
# 859 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern OSErr
GetIndexedCollectionItemHdl(
  Collection aCollection,
  SInt32 itemIndex,
  Handle itemData) ;
# 875 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern OSErr
FlattenCollectionToHdl(
  Collection aCollection,
  Handle flattened) ;
# 890 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
extern OSErr
UnflattenCollectionFromHdl(
  Collection aCollection,
  Handle flattened) ;
# 989 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Collections.h" 3
}
# 54 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CarbonCore.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Endian.h" 1 3
# 36 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Endian.h" 3
extern "C" {


#pragma pack(push, 2)
# 251 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Endian.h" 3
struct BigEndianUInt32 {
  UInt32 bigEndianValue;
};
typedef struct BigEndianUInt32 BigEndianUInt32;
struct BigEndianLong {
  long bigEndianValue;
};
typedef struct BigEndianLong BigEndianLong;
struct BigEndianUnsignedLong {
  unsigned long bigEndianValue;
};
typedef struct BigEndianUnsignedLong BigEndianUnsignedLong;
struct BigEndianShort {
  short bigEndianValue;
};
typedef struct BigEndianShort BigEndianShort;
struct BigEndianUnsignedShort {
  unsigned short bigEndianValue;
};
typedef struct BigEndianUnsignedShort BigEndianUnsignedShort;
struct BigEndianFixed {
  Fixed bigEndianValue;
};
typedef struct BigEndianFixed BigEndianFixed;
struct BigEndianUnsignedFixed {
  UnsignedFixed bigEndianValue;
};
typedef struct BigEndianUnsignedFixed BigEndianUnsignedFixed;
struct BigEndianOSType {
  OSType bigEndianValue;
};
typedef struct BigEndianOSType BigEndianOSType;
# 312 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Endian.h" 3
enum {
  kCoreEndianResourceManagerDomain = 'rsrc',
  kCoreEndianAppleEventManagerDomain = 'aevt'
};
# 356 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Endian.h" 3
typedef OSStatus ( * CoreEndianFlipProc)(OSType dataDomain, OSType dataType, SInt16 id, void *dataPtr, ByteCount dataSize, Boolean currentlyNative, void *refcon);
# 393 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Endian.h" 3
extern OSStatus
CoreEndianInstallFlipper(
  OSType dataDomain,
  OSType dataType,
  CoreEndianFlipProc proc,
  void * refcon) ;
# 433 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Endian.h" 3
extern OSStatus
CoreEndianGetFlipper(
  OSType dataDomain,
  OSType dataType,
  CoreEndianFlipProc * proc,
  void ** refcon) ;
# 481 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Endian.h" 3
extern OSStatus
CoreEndianFlipData(
  OSType dataDomain,
  OSType dataType,
  SInt16 id,
  void * data,
  ByteCount dataLen,
  Boolean currentlyNative) ;





#pragma pack(pop)


}
# 58 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CarbonCore.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Gestalt.h" 1 3
# 36 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Gestalt.h" 3
extern "C" {




typedef OSErr ( * SelectorFunctionProcPtr)(OSType selector, SInt32 *response);
typedef SelectorFunctionProcPtr SelectorFunctionUPP;
# 128 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Gestalt.h" 3
extern OSErr
Gestalt(
  OSType selector,
  SInt32 * response) ;
# 279 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Gestalt.h" 3
extern OSErr
NewGestaltValue(
  OSType selector,
  SInt32 newValue) ;
# 319 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Gestalt.h" 3
extern OSErr
ReplaceGestaltValue(
  OSType selector,
  SInt32 replacementValue) ;
# 358 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Gestalt.h" 3
extern OSErr
SetGestaltValue(
  OSType selector,
  SInt32 newValue) ;
# 393 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Gestalt.h" 3
extern OSErr
DeleteGestaltValue(OSType selector) ;
# 406 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Gestalt.h" 3
extern SelectorFunctionUPP
NewSelectorFunctionUPP(SelectorFunctionProcPtr userRoutine) ;
# 417 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Gestalt.h" 3
extern void
DisposeSelectorFunctionUPP(SelectorFunctionUPP userUPP) ;
# 428 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Gestalt.h" 3
extern OSErr
InvokeSelectorFunctionUPP(
  OSType selector,
  SInt32 * response,
  SelectorFunctionUPP userUPP) ;



    inline SelectorFunctionUPP NewSelectorFunctionUPP(SelectorFunctionProcPtr userRoutine) { return userRoutine; }
    inline void DisposeSelectorFunctionUPP(SelectorFunctionUPP) { }
    inline OSErr InvokeSelectorFunctionUPP(OSType selector, SInt32 * response, SelectorFunctionUPP userUPP) { return (*userUPP)(selector, response); }
# 448 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Gestalt.h" 3
enum {
  gestaltAddressingModeAttr = 'addr',
  gestalt32BitAddressing = 0,
  gestalt32BitSysZone = 1,
  gestalt32BitCapable = 2
};

enum {
  gestaltAFPClient = 'afps',
  gestaltAFPClientVersionMask = 0x0000FFFF,

  gestaltAFPClient3_5 = 0x0001,
  gestaltAFPClient3_6 = 0x0002,
  gestaltAFPClient3_6_1 = 0x0003,
  gestaltAFPClient3_6_2 = 0x0004,
  gestaltAFPClient3_6_3 = 0x0005,
  gestaltAFPClient3_7 = 0x0006,
  gestaltAFPClient3_7_2 = 0x0007,
  gestaltAFPClient3_8 = 0x0008,
  gestaltAFPClient3_8_1 = 0x0009,
  gestaltAFPClient3_8_3 = 0x000A,
  gestaltAFPClient3_8_4 = 0x000B,
  gestaltAFPClientAttributeMask = (int)0xFFFF0000,

  gestaltAFPClientCfgRsrc = 16,
  gestaltAFPClientSupportsIP = 29,
  gestaltAFPClientVMUI = 30,
  gestaltAFPClientMultiReq = 31
};


enum {
  gestaltAliasMgrAttr = 'alis',
  gestaltAliasMgrPresent = 0,
  gestaltAliasMgrSupportsRemoteAppletalk = 1,
  gestaltAliasMgrSupportsAOCEKeychain = 2,
  gestaltAliasMgrResolveAliasFileWithMountOptions = 3,
  gestaltAliasMgrFollowsAliasesWhenResolving = 4,
  gestaltAliasMgrSupportsExtendedCalls = 5,
  gestaltAliasMgrSupportsFSCalls = 6,
  gestaltAliasMgrPrefersPath = 7,
  gestaltAliasMgrRequiresAccessors = 8
};


enum {
  gestaltAppearanceAttr = 'appr',
  gestaltAppearanceExists = 0,
  gestaltAppearanceCompatMode = 1
};







enum {
  gestaltAppearanceVersion = 'apvr'
};

enum {
  gestaltArbitorAttr = 'arb ',
  gestaltSerialArbitrationExists = 0
};

enum {
  gestaltAppleScriptVersion = 'ascv'
};

enum {
  gestaltAppleScriptAttr = 'ascr',
  gestaltAppleScriptPresent = 0,
  gestaltAppleScriptPowerPCSupport = 1
};

enum {
  gestaltATAAttr = 'ata ',
  gestaltATAPresent = 0
};

enum {
  gestaltATalkVersion = 'atkv'
};

enum {
  gestaltAppleTalkVersion = 'atlk'
};
# 559 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Gestalt.h" 3
enum {
  gestaltAUXVersion = 'a/ux'
};

enum {
  gestaltMacOSCompatibilityBoxAttr = 'bbox',
  gestaltMacOSCompatibilityBoxPresent = 0,
  gestaltMacOSCompatibilityBoxHasSerial = 1,
  gestaltMacOSCompatibilityBoxless = 2
};

enum {
  gestaltBusClkSpeed = 'bclk'
};

enum {
  gestaltBusClkSpeedMHz = 'bclm'
};

enum {
  gestaltCloseViewAttr = 'BSDa',
  gestaltCloseViewEnabled = 0,
  gestaltCloseViewDisplayMgrFriendly = 1
};

enum {
  gestaltCarbonVersion = 'cbon'
};

enum {
  gestaltCFMAttr = 'cfrg',
  gestaltCFMPresent = 0,
  gestaltCFMPresentMask = 0x0001,
  gestaltCFM99Present = 2,
  gestaltCFM99PresentMask = 0x0004
};

enum {
  gestaltProcessorCacheLineSize = 'csiz'
};

enum {
  gestaltCollectionMgrVersion = 'cltn'
};

enum {
  gestaltColorMatchingAttr = 'cmta',
  gestaltHighLevelMatching = 0,
  gestaltColorMatchingLibLoaded = 1
};

enum {
  gestaltColorMatchingVersion = 'cmtc',
  gestaltColorSync10 = 0x0100,
  gestaltColorSync11 = 0x0110,
  gestaltColorSync104 = 0x0104,
  gestaltColorSync105 = 0x0105,
  gestaltColorSync20 = 0x0200,
  gestaltColorSync21 = 0x0210,
  gestaltColorSync211 = 0x0211,
  gestaltColorSync212 = 0x0212,
  gestaltColorSync213 = 0x0213,
  gestaltColorSync25 = 0x0250,
  gestaltColorSync26 = 0x0260,
  gestaltColorSync261 = 0x0261,
  gestaltColorSync30 = 0x0300
};

enum {
  gestaltControlMgrVersion = 'cmvr'
};

enum {
  gestaltControlMgrAttr = 'cntl',
  gestaltControlMgrPresent = (1L << 0),


  gestaltControlMgrPresentBit = 0,
  gestaltControlMsgPresentMask = (1L << gestaltControlMgrPresentBit)
};

enum {
  gestaltConnMgrAttr = 'conn',
  gestaltConnMgrPresent = 0,
  gestaltConnMgrCMSearchFix = 1,
  gestaltConnMgrErrorString = 2,
  gestaltConnMgrMultiAsyncIO = 3
};

enum {
  gestaltColorPickerVersion = 'cpkr',
  gestaltColorPicker = 'cpkr'
};

enum {
  gestaltComponentMgr = 'cpnt',
  gestaltComponentPlatform = 'copl'
};
# 686 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Gestalt.h" 3
enum {
  gestaltNativeCPUtype = 'cput',
  gestaltNativeCPUfamily = 'cpuf',
  gestaltCPU68000 = 0,
  gestaltCPU68010 = 1,
  gestaltCPU68020 = 2,
  gestaltCPU68030 = 3,
  gestaltCPU68040 = 4,
  gestaltCPU601 = 0x0101,
  gestaltCPU603 = 0x0103,
  gestaltCPU604 = 0x0104,
  gestaltCPU603e = 0x0106,
  gestaltCPU603ev = 0x0107,
  gestaltCPU750 = 0x0108,
  gestaltCPU604e = 0x0109,
  gestaltCPU604ev = 0x010A,
  gestaltCPUG4 = 0x010C,
  gestaltCPUG47450 = 0x0110
};

enum {
  gestaltCPUApollo = 0x0111,
  gestaltCPUG47447 = 0x0112,
  gestaltCPU750FX = 0x0120,
  gestaltCPU970 = 0x0139,
  gestaltCPU970FX = 0x013C,
  gestaltCPU970MP = 0x0144
};

enum {

  gestaltCPU486 = 'i486',
  gestaltCPUPentium = 'i586',
  gestaltCPUPentiumPro = 'i5pr',
  gestaltCPUPentiumII = 'i5ii',
  gestaltCPUX86 = 'ixxx',
  gestaltCPUPentium4 = 'i5iv'
};

enum {
  gestaltCRMAttr = 'crm ',
  gestaltCRMPresent = 0,
  gestaltCRMPersistentFix = 1,
  gestaltCRMToolRsrcCalls = 2
};

enum {
  gestaltControlStripVersion = 'csvr'
};

enum {
  gestaltCountOfCPUs = 'cpus'
};

enum {
  gestaltCTBVersion = 'ctbv'
};

enum {
  gestaltDBAccessMgrAttr = 'dbac',
  gestaltDBAccessMgrPresent = 0
};

enum {
  gestaltDiskCacheSize = 'dcsz'
};

enum {
  gestaltSDPFindVersion = 'dfnd'
};

enum {
  gestaltDictionaryMgrAttr = 'dict',
  gestaltDictionaryMgrPresent = 0
};

enum {
  gestaltDITLExtAttr = 'ditl',
  gestaltDITLExtPresent = 0,
  gestaltDITLExtSupportsIctb = 1
};

enum {
  gestaltDialogMgrAttr = 'dlog',
  gestaltDialogMgrPresent = (1L << 0),


  gestaltDialogMgrPresentBit = 0,
  gestaltDialogMgrHasAquaAlertBit = 2,
  gestaltDialogMgrPresentMask = (1L << gestaltDialogMgrPresentBit),
  gestaltDialogMgrHasAquaAlertMask = (1L << gestaltDialogMgrHasAquaAlertBit),
  gestaltDialogMsgPresentMask = gestaltDialogMgrPresentMask
};

enum {
  gestaltDesktopPicturesAttr = 'dkpx',
  gestaltDesktopPicturesInstalled = 0,
  gestaltDesktopPicturesDisplayed = 1
};

enum {
  gestaltDisplayMgrVers = 'dplv'
};

enum {
  gestaltDisplayMgrAttr = 'dply',
  gestaltDisplayMgrPresent = 0,
  gestaltDisplayMgrCanSwitchMirrored = 2,
  gestaltDisplayMgrSetDepthNotifies = 3,
  gestaltDisplayMgrCanConfirm = 4,
  gestaltDisplayMgrColorSyncAware = 5,
  gestaltDisplayMgrGeneratesProfiles = 6,
  gestaltDisplayMgrSleepNotifies = 7
};

enum {
  gestaltDragMgrAttr = 'drag',
  gestaltDragMgrPresent = 0,
  gestaltDragMgrFloatingWind = 1,
  gestaltPPCDragLibPresent = 2,
  gestaltDragMgrHasImageSupport = 3,
  gestaltCanStartDragInFloatWindow = 4,
  gestaltSetDragImageUpdates = 5
};

enum {
  gestaltDrawSprocketVersion = 'dspv'
};

enum {
  gestaltDigitalSignatureVersion = 'dsig'
};





enum {
  gestaltDTPFeatures = 'dtpf',
  kDTPThirdPartySupported = 0x00000004
};






enum {
  gestaltDTPInfo = 'dtpx'
};

enum {
  gestaltEasyAccessAttr = 'easy',
  gestaltEasyAccessOff = 0,
  gestaltEasyAccessOn = 1,
  gestaltEasyAccessSticky = 2,
  gestaltEasyAccessLocked = 3
};

enum {
  gestaltEditionMgrAttr = 'edtn',
  gestaltEditionMgrPresent = 0,
  gestaltEditionMgrTranslationAware = 1
};

enum {
  gestaltAppleEventsAttr = 'evnt',
  gestaltAppleEventsPresent = 0,
  gestaltScriptingSupport = 1,
  gestaltOSLInSystem = 2,
  gestaltSupportsApplicationURL = 4
};

enum {
  gestaltExtensionTableVersion = 'etbl'
};


enum {
  gestaltFBCIndexingState = 'fbci',
  gestaltFBCindexingSafe = 0,
  gestaltFBCindexingCritical = 1
};

enum {
  gestaltFBCVersion = 'fbcv',
  gestaltFBCCurrentVersion = 0x0011,
  gestaltOSXFBCCurrentVersion = 0x0100
};


enum {
  gestaltFileMappingAttr = 'flmp',
  gestaltFileMappingPresent = 0,
  gestaltFileMappingMultipleFilesFix = 1
};

enum {
  gestaltFloppyAttr = 'flpy',
  gestaltFloppyIsMFMOnly = 0,
  gestaltFloppyIsManualEject = 1,
  gestaltFloppyUsesDiskInPlace = 2
};

enum {
  gestaltFinderAttr = 'fndr',
  gestaltFinderDropEvent = 0,
  gestaltFinderMagicPlacement = 1,
  gestaltFinderCallsAEProcess = 2,
  gestaltOSLCompliantFinder = 3,
  gestaltFinderSupports4GBVolumes = 4,
  gestaltFinderHasClippings = 6,
  gestaltFinderFullDragManagerSupport = 7,
  gestaltFinderFloppyRootComments = 8,
  gestaltFinderLargeAndNotSavedFlavorsOK = 9,
  gestaltFinderUsesExtensibleFolderManager = 10,
  gestaltFinderUnderstandsRedirectedDesktopFolder = 11
};

enum {
  gestaltFindFolderAttr = 'fold',
  gestaltFindFolderPresent = 0,
  gestaltFolderDescSupport = 1,
  gestaltFolderMgrFollowsAliasesWhenResolving = 2,
  gestaltFolderMgrSupportsExtendedCalls = 3,
  gestaltFolderMgrSupportsDomains = 4,
  gestaltFolderMgrSupportsFSCalls = 5
};

enum {
  gestaltFindFolderRedirectionAttr = 'fole'
};


enum {
  gestaltFontMgrAttr = 'font',
  gestaltOutlineFonts = 0
};

enum {
  gestaltFPUType = 'fpu ',
  gestaltNoFPU = 0,
  gestalt68881 = 1,
  gestalt68882 = 2,
  gestalt68040FPU = 3
};

enum {
  gestaltFSAttr = 'fs  ',
  gestaltFullExtFSDispatching = 0,
  gestaltHasFSSpecCalls = 1,
  gestaltHasFileSystemManager = 2,
  gestaltFSMDoesDynamicLoad = 3,
  gestaltFSSupports4GBVols = 4,
  gestaltFSSupports2TBVols = 5,
  gestaltHasExtendedDiskInit = 6,
  gestaltDTMgrSupportsFSM = 7,
  gestaltFSNoMFSVols = 8,
  gestaltFSSupportsHFSPlusVols = 9,
  gestaltFSIncompatibleDFA82 = 10
};

enum {
  gestaltFSSupportsDirectIO = 11
};

enum {
  gestaltHasHFSPlusAPIs = 12,
  gestaltMustUseFCBAccessors = 13,
  gestaltFSUsesPOSIXPathsForConversion = 14,
  gestaltFSSupportsExclusiveLocks = 15,
  gestaltFSSupportsHardLinkDetection = 16,
  gestaltFSAllowsConcurrentAsyncIO = 17
};

enum {
  gestaltAdminFeaturesFlagsAttr = 'fred',
  gestaltFinderUsesSpecialOpenFoldersFile = 0
};

enum {
  gestaltFSMVersion = 'fsm '
};

enum {
  gestaltFXfrMgrAttr = 'fxfr',
  gestaltFXfrMgrPresent = 0,
  gestaltFXfrMgrMultiFile = 1,
  gestaltFXfrMgrErrorString = 2,
  gestaltFXfrMgrAsync = 3
};

enum {
  gestaltGraphicsAttr = 'gfxa',
  gestaltGraphicsIsDebugging = 0x00000001,
  gestaltGraphicsIsLoaded = 0x00000002,
  gestaltGraphicsIsPowerPC = 0x00000004
};

enum {
  gestaltGraphicsVersion = 'grfx',
  gestaltCurrentGraphicsVersion = 0x00010200
};

enum {
  gestaltHardwareAttr = 'hdwr',
  gestaltHasVIA1 = 0,
  gestaltHasVIA2 = 1,
  gestaltHasASC = 3,
  gestaltHasSCC = 4,
  gestaltHasSCSI = 7,
  gestaltHasSoftPowerOff = 19,
  gestaltHasSCSI961 = 21,
  gestaltHasSCSI962 = 22,
  gestaltHasUniversalROM = 24,
  gestaltHasEnhancedLtalk = 30
};

enum {
  gestaltHelpMgrAttr = 'help',
  gestaltHelpMgrPresent = 0,
  gestaltHelpMgrExtensions = 1,
  gestaltAppleGuideIsDebug = 30,
  gestaltAppleGuidePresent = 31
};

enum {
  gestaltHardwareVendorCode = 'hrad',
  gestaltHardwareVendorApple = 'Appl'
};

enum {
  gestaltCompressionMgr = 'icmp'
};

enum {
  gestaltIconUtilitiesAttr = 'icon',
  gestaltIconUtilitiesPresent = 0,
  gestaltIconUtilitiesHas48PixelIcons = 1,
  gestaltIconUtilitiesHas32BitIcons = 2,
  gestaltIconUtilitiesHas8BitDeepMasks = 3,
  gestaltIconUtilitiesHasIconServices = 4
};

enum {
  gestaltInternalDisplay = 'idsp'
};





enum {
  gestaltKeyboardType = 'kbd ',
  gestaltMacKbd = 1,
  gestaltMacAndPad = 2,
  gestaltMacPlusKbd = 3,
  gestaltUnknownThirdPartyKbd = 3,
  gestaltExtADBKbd = 4,
  gestaltStdADBKbd = 5,
  gestaltPrtblADBKbd = 6,
  gestaltPrtblISOKbd = 7,
  gestaltStdISOADBKbd = 8,
  gestaltExtISOADBKbd = 9,
  gestaltADBKbdII = 10,
  gestaltADBISOKbdII = 11,
  gestaltPwrBookADBKbd = 12,
  gestaltPwrBookISOADBKbd = 13,
  gestaltAppleAdjustKeypad = 14,
  gestaltAppleAdjustADBKbd = 15,
  gestaltAppleAdjustISOKbd = 16,
  gestaltJapanAdjustADBKbd = 17,
  gestaltPwrBkExtISOKbd = 20,
  gestaltPwrBkExtJISKbd = 21,
  gestaltPwrBkExtADBKbd = 24,
  gestaltPS2Keyboard = 27,
  gestaltPwrBkSubDomKbd = 28,
  gestaltPwrBkSubISOKbd = 29,
  gestaltPwrBkSubJISKbd = 30,
  gestaltPortableUSBANSIKbd = 37,
  gestaltPortableUSBISOKbd = 38,
  gestaltPortableUSBJISKbd = 39,
  gestaltThirdPartyANSIKbd = 40,
  gestaltThirdPartyISOKbd = 41,
  gestaltThirdPartyJISKbd = 42,
  gestaltPwrBkEKDomKbd = 195,
  gestaltPwrBkEKISOKbd = 196,
  gestaltPwrBkEKJISKbd = 197,
  gestaltUSBCosmoANSIKbd = 198,
  gestaltUSBCosmoISOKbd = 199,
  gestaltUSBCosmoJISKbd = 200,
  gestaltPwrBk99JISKbd = 201,
  gestaltUSBAndyANSIKbd = 204,
  gestaltUSBAndyISOKbd = 205,
  gestaltUSBAndyJISKbd = 206
};


enum {
  gestaltPortable2001ANSIKbd = 202,
  gestaltPortable2001ISOKbd = 203,
  gestaltPortable2001JISKbd = 207
};

enum {
  gestaltUSBProF16ANSIKbd = 34,
  gestaltUSBProF16ISOKbd = 35,
  gestaltUSBProF16JISKbd = 36,
  gestaltProF16ANSIKbd = 31,
  gestaltProF16ISOKbd = 32,
  gestaltProF16JISKbd = 33
};





enum {
  gestaltUDFSupport = 'kudf'
};

enum {
  gestaltLowMemorySize = 'lmem'
};

enum {
  gestaltLogicalRAMSize = 'lram'
};
# 1212 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Gestalt.h" 3
enum {
  gestaltMachineType = 'mach',
  gestaltClassic = 1,
  gestaltMacXL = 2,
  gestaltMac512KE = 3,
  gestaltMacPlus = 4,
  gestaltMacSE = 5,
  gestaltMacII = 6,
  gestaltMacIIx = 7,
  gestaltMacIIcx = 8,
  gestaltMacSE030 = 9,
  gestaltPortable = 10,
  gestaltMacIIci = 11,
  gestaltPowerMac8100_120 = 12,
  gestaltMacIIfx = 13,
  gestaltMacClassic = 17,
  gestaltMacIIsi = 18,
  gestaltMacLC = 19,
  gestaltMacQuadra900 = 20,
  gestaltPowerBook170 = 21,
  gestaltMacQuadra700 = 22,
  gestaltClassicII = 23,
  gestaltPowerBook100 = 24,
  gestaltPowerBook140 = 25,
  gestaltMacQuadra950 = 26,
  gestaltMacLCIII = 27,
  gestaltPerforma450 = gestaltMacLCIII,
  gestaltPowerBookDuo210 = 29,
  gestaltMacCentris650 = 30,
  gestaltPowerBookDuo230 = 32,
  gestaltPowerBook180 = 33,
  gestaltPowerBook160 = 34,
  gestaltMacQuadra800 = 35,
  gestaltMacQuadra650 = 36,
  gestaltMacLCII = 37,
  gestaltPowerBookDuo250 = 38,
  gestaltAWS9150_80 = 39,
  gestaltPowerMac8100_110 = 40,
  gestaltAWS8150_110 = gestaltPowerMac8100_110,
  gestaltPowerMac5200 = 41,
  gestaltPowerMac5260 = gestaltPowerMac5200,
  gestaltPerforma5300 = gestaltPowerMac5200,
  gestaltPowerMac6200 = 42,
  gestaltPerforma6300 = gestaltPowerMac6200,
  gestaltMacIIvi = 44,
  gestaltMacIIvm = 45,
  gestaltPerforma600 = gestaltMacIIvm,
  gestaltPowerMac7100_80 = 47,
  gestaltMacIIvx = 48,
  gestaltMacColorClassic = 49,
  gestaltPerforma250 = gestaltMacColorClassic,
  gestaltPowerBook165c = 50,
  gestaltMacCentris610 = 52,
  gestaltMacQuadra610 = 53,
  gestaltPowerBook145 = 54,
  gestaltPowerMac8100_100 = 55,
  gestaltMacLC520 = 56,
  gestaltAWS9150_120 = 57,
  gestaltPowerMac6400 = 58,
  gestaltPerforma6400 = gestaltPowerMac6400,
  gestaltPerforma6360 = gestaltPerforma6400,
  gestaltMacCentris660AV = 60,
  gestaltMacQuadra660AV = gestaltMacCentris660AV,
  gestaltPerforma46x = 62,
  gestaltPowerMac8100_80 = 65,
  gestaltAWS8150_80 = gestaltPowerMac8100_80,
  gestaltPowerMac9500 = 67,
  gestaltPowerMac9600 = gestaltPowerMac9500,
  gestaltPowerMac7500 = 68,
  gestaltPowerMac7600 = gestaltPowerMac7500,
  gestaltPowerMac8500 = 69,
  gestaltPowerMac8600 = gestaltPowerMac8500,
  gestaltAWS8550 = gestaltPowerMac7500,
  gestaltPowerBook180c = 71,
  gestaltPowerBook520 = 72,
  gestaltPowerBook520c = gestaltPowerBook520,
  gestaltPowerBook540 = gestaltPowerBook520,
  gestaltPowerBook540c = gestaltPowerBook520,
  gestaltPowerMac5400 = 74,
  gestaltPowerMac6100_60 = 75,
  gestaltAWS6150_60 = gestaltPowerMac6100_60,
  gestaltPowerBookDuo270c = 77,
  gestaltMacQuadra840AV = 78,
  gestaltPerforma550 = 80,
  gestaltPowerBook165 = 84,
  gestaltPowerBook190 = 85,
  gestaltMacTV = 88,
  gestaltMacLC475 = 89,
  gestaltPerforma47x = gestaltMacLC475,
  gestaltMacLC575 = 92,
  gestaltMacQuadra605 = 94,
  gestaltMacQuadra630 = 98,
  gestaltMacLC580 = 99,
  gestaltPerforma580 = gestaltMacLC580,
  gestaltPowerMac6100_66 = 100,
  gestaltAWS6150_66 = gestaltPowerMac6100_66,
  gestaltPowerBookDuo280 = 102,
  gestaltPowerBookDuo280c = 103,
  gestaltPowerMacLC475 = 104,
  gestaltPowerMacPerforma47x = gestaltPowerMacLC475,
  gestaltPowerMacLC575 = 105,
  gestaltPowerMacPerforma57x = gestaltPowerMacLC575,
  gestaltPowerMacQuadra630 = 106,
  gestaltPowerMacLC630 = gestaltPowerMacQuadra630,
  gestaltPowerMacPerforma63x = gestaltPowerMacQuadra630,
  gestaltPowerMac7200 = 108,
  gestaltPowerMac7300 = 109,
  gestaltPowerMac7100_66 = 112,
  gestaltPowerBook150 = 115,
  gestaltPowerMacQuadra700 = 116,
  gestaltPowerMacQuadra900 = 117,
  gestaltPowerMacQuadra950 = 118,
  gestaltPowerMacCentris610 = 119,
  gestaltPowerMacCentris650 = 120,
  gestaltPowerMacQuadra610 = 121,
  gestaltPowerMacQuadra650 = 122,
  gestaltPowerMacQuadra800 = 123,
  gestaltPowerBookDuo2300 = 124,
  gestaltPowerBook500PPCUpgrade = 126,
  gestaltPowerBook5300 = 128,
  gestaltPowerBook1400 = 310,
  gestaltPowerBook3400 = 306,
  gestaltPowerBook2400 = 307,
  gestaltPowerBookG3Series = 312,
  gestaltPowerBookG3 = 313,
  gestaltPowerBookG3Series2 = 314,
  gestaltPowerMacNewWorld = 406,
  gestaltPowerMacG3 = 510,
  gestaltPowerMac5500 = 512,
  gestalt20thAnniversary = gestaltPowerMac5500,
  gestaltPowerMac6500 = 513,
  gestaltPowerMac4400_160 = 514,
  gestaltPowerMac4400 = 515,
  gestaltMacOSCompatibility = 1206
};


enum {
  gestaltQuadra605 = gestaltMacQuadra605,
  gestaltQuadra610 = gestaltMacQuadra610,
  gestaltQuadra630 = gestaltMacQuadra630,
  gestaltQuadra650 = gestaltMacQuadra650,
  gestaltQuadra660AV = gestaltMacQuadra660AV,
  gestaltQuadra700 = gestaltMacQuadra700,
  gestaltQuadra800 = gestaltMacQuadra800,
  gestaltQuadra840AV = gestaltMacQuadra840AV,
  gestaltQuadra900 = gestaltMacQuadra900,
  gestaltQuadra950 = gestaltMacQuadra950
};

enum {
  kMachineNameStrID = -16395
};

enum {
  gestaltSMPMailerVersion = 'malr'
};

enum {
  gestaltMediaBay = 'mbeh',
  gestaltMBLegacy = 0,
  gestaltMBSingleBay = 1,
  gestaltMBMultipleBays = 2
};

enum {
  gestaltMessageMgrVersion = 'mess'
};



enum {
  gestaltMenuMgrAttr = 'menu',
  gestaltMenuMgrPresent = (1L << 0),


  gestaltMenuMgrPresentBit = 0,
  gestaltMenuMgrAquaLayoutBit = 1,
  gestaltMenuMgrMultipleItemsWithCommandIDBit = 2,
  gestaltMenuMgrRetainsIconRefBit = 3,
  gestaltMenuMgrSendsMenuBoundsToDefProcBit = 4,
  gestaltMenuMgrMoreThanFiveMenusDeepBit = 5,
  gestaltMenuMgrCGImageMenuTitleBit = 6,

  gestaltMenuMgrPresentMask = (1L << gestaltMenuMgrPresentBit),
  gestaltMenuMgrAquaLayoutMask = (1L << gestaltMenuMgrAquaLayoutBit),
  gestaltMenuMgrMultipleItemsWithCommandIDMask = (1L << gestaltMenuMgrMultipleItemsWithCommandIDBit),
  gestaltMenuMgrRetainsIconRefMask = (1L << gestaltMenuMgrRetainsIconRefBit),
  gestaltMenuMgrSendsMenuBoundsToDefProcMask = (1L << gestaltMenuMgrSendsMenuBoundsToDefProcBit),
  gestaltMenuMgrMoreThanFiveMenusDeepMask = (1L << gestaltMenuMgrMoreThanFiveMenusDeepBit),
  gestaltMenuMgrCGImageMenuTitleMask = (1L << gestaltMenuMgrCGImageMenuTitleBit)
};


enum {
  gestaltMultipleUsersState = 'mfdr'
};


enum {
  gestaltMachineIcon = 'micn'
};

enum {
  gestaltMiscAttr = 'misc',
  gestaltScrollingThrottle = 0,
  gestaltSquareMenuBar = 2
};
# 1436 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Gestalt.h" 3
enum {
  gestaltMixedModeVersion = 'mixd'
};

enum {
  gestaltMixedModeAttr = 'mixd',
  gestaltMixedModePowerPC = 0,
  gestaltPowerPCAware = 0,
  gestaltMixedModeCFM68K = 1,
  gestaltMixedModeCFM68KHasTrap = 2,
  gestaltMixedModeCFM68KHasState = 3
};

enum {
  gestaltQuickTimeConferencing = 'mtlk'
};

enum {
  gestaltMemoryMapAttr = 'mmap',
  gestaltMemoryMapSparse = 0
};

enum {
  gestaltMMUType = 'mmu ',
  gestaltNoMMU = 0,
  gestaltAMU = 1,
  gestalt68851 = 2,
  gestalt68030MMU = 3,
  gestalt68040MMU = 4,
  gestaltEMMU1 = 5
};

enum {



  gestaltUserVisibleMachineName = 'mnam'
};

enum {
  gestaltMPCallableAPIsAttr = 'mpsc',
  gestaltMPFileManager = 0,
  gestaltMPDeviceManager = 1,
  gestaltMPTrapCalls = 2
};

enum {
  gestaltStdNBPAttr = 'nlup',
  gestaltStdNBPPresent = 0,
  gestaltStdNBPSupportsAutoPosition = 1
};

enum {
  gestaltNotificationMgrAttr = 'nmgr',
  gestaltNotificationPresent = 0
};

enum {
  gestaltNameRegistryVersion = 'nreg'
};

enum {
  gestaltNuBusSlotCount = 'nubs'
};

enum {
  gestaltOCEToolboxVersion = 'ocet',
  gestaltOCETB = 0x0102,
  gestaltSFServer = 0x0100
};

enum {
  gestaltOCEToolboxAttr = 'oceu',
  gestaltOCETBPresent = 0x01,
  gestaltOCETBAvailable = 0x02,
  gestaltOCESFServerAvailable = 0x04,
  gestaltOCETBNativeGlueAvailable = 0x10
};

enum {
  gestaltOpenFirmwareInfo = 'opfw'
};

enum {
  gestaltOSAttr = 'os  ',
  gestaltSysZoneGrowable = 0,
  gestaltLaunchCanReturn = 1,
  gestaltLaunchFullFileSpec = 2,
  gestaltLaunchControl = 3,
  gestaltTempMemSupport = 4,
  gestaltRealTempMemory = 5,
  gestaltTempMemTracked = 6,
  gestaltIPCSupport = 7,
  gestaltSysDebuggerSupport = 8,
  gestaltNativeProcessMgrBit = 19,
  gestaltAltivecRegistersSwappedCorrectlyBit = 20
};

enum {
  gestaltOSTable = 'ostt'
};
# 1545 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Gestalt.h" 3
enum {
  gestaltOpenTptNetworkSetup = 'otcf',
  gestaltOpenTptNetworkSetupLegacyImport = 0,
  gestaltOpenTptNetworkSetupLegacyExport = 1,
  gestaltOpenTptNetworkSetupSupportsMultihoming = 2
};

enum {
  gestaltOpenTptNetworkSetupVersion = 'otcv'
};







enum {
  gestaltOpenTptRemoteAccess = 'otra',
  gestaltOpenTptRemoteAccessPresent = 0,
  gestaltOpenTptRemoteAccessLoaded = 1,
  gestaltOpenTptRemoteAccessClientOnly = 2,
  gestaltOpenTptRemoteAccessPServer = 3,
  gestaltOpenTptRemoteAccessMPServer = 4,
  gestaltOpenTptPPPPresent = 5,
  gestaltOpenTptARAPPresent = 6
};

enum {
  gestaltOpenTptRemoteAccessVersion = 'otrv'
};





enum {
  gestaltOpenTptVersions = 'otvr'
};

enum {
  gestaltOpenTpt = 'otan',
  gestaltOpenTptPresentMask = 0x00000001,
  gestaltOpenTptLoadedMask = 0x00000002,
  gestaltOpenTptAppleTalkPresentMask = 0x00000004,
  gestaltOpenTptAppleTalkLoadedMask = 0x00000008,
  gestaltOpenTptTCPPresentMask = 0x00000010,
  gestaltOpenTptTCPLoadedMask = 0x00000020,
  gestaltOpenTptIPXSPXPresentMask = 0x00000040,
  gestaltOpenTptIPXSPXLoadedMask = 0x00000080,
  gestaltOpenTptPresentBit = 0,
  gestaltOpenTptLoadedBit = 1,
  gestaltOpenTptAppleTalkPresentBit = 2,
  gestaltOpenTptAppleTalkLoadedBit = 3,
  gestaltOpenTptTCPPresentBit = 4,
  gestaltOpenTptTCPLoadedBit = 5,
  gestaltOpenTptIPXSPXPresentBit = 6,
  gestaltOpenTptIPXSPXLoadedBit = 7
};


enum {
  gestaltPCCard = 'pccd',
  gestaltCardServicesPresent = 0,
  gestaltPCCardFamilyPresent = 1,
  gestaltPCCardHasPowerControl = 2,
  gestaltPCCardSupportsCardBus = 3
};

enum {
  gestaltProcClkSpeed = 'pclk'
};

enum {
  gestaltProcClkSpeedMHz = 'mclk'
};

enum {
  gestaltPCXAttr = 'pcxg',
  gestaltPCXHas8and16BitFAT = 0,
  gestaltPCXHasProDOS = 1,
  gestaltPCXNewUI = 2,
  gestaltPCXUseICMapping = 3
};

enum {
  gestaltLogicalPageSize = 'pgsz'
};
# 1644 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Gestalt.h" 3
enum {
  gestaltScreenCaptureMain = 'pic1',
  gestaltScreenCaptureDir = 'pic2'
};

enum {
  gestaltGXPrintingMgrVersion = 'pmgr'
};

enum {
  gestaltPopupAttr = 'pop!',
  gestaltPopupPresent = 0
};

enum {
  gestaltPowerMgrAttr = 'powr',
  gestaltPMgrExists = 0,
  gestaltPMgrCPUIdle = 1,
  gestaltPMgrSCC = 2,
  gestaltPMgrSound = 3,
  gestaltPMgrDispatchExists = 4,
  gestaltPMgrSupportsAVPowerStateAtSleepWake = 5
};

enum {
  gestaltPowerMgrVers = 'pwrv'
};







enum {
  gestaltPPCToolboxAttr = 'ppc ',
  gestaltPPCToolboxPresent = 0x0000,
  gestaltPPCSupportsRealTime = 0x1000,
  gestaltPPCSupportsIncoming = 0x0001,
  gestaltPPCSupportsOutGoing = 0x0002,
  gestaltPPCSupportsTCP_IP = 0x0004,
  gestaltPPCSupportsIncomingAppleTalk = 0x0010,
  gestaltPPCSupportsIncomingTCP_IP = 0x0020,
  gestaltPPCSupportsOutgoingAppleTalk = 0x0100,
  gestaltPPCSupportsOutgoingTCP_IP = 0x0200
};






enum {
  gestaltPowerPCProcessorFeatures = 'ppcf',
  gestaltPowerPCHasGraphicsInstructions = 0,
  gestaltPowerPCHasSTFIWXInstruction = 1,
  gestaltPowerPCHasSquareRootInstructions = 2,
  gestaltPowerPCHasDCBAInstruction = 3,
  gestaltPowerPCHasVectorInstructions = 4,
  gestaltPowerPCHasDataStreams = 5,
  gestaltPowerPCHas64BitSupport = 6,
  gestaltPowerPCHasDCBTStreams = 7,
  gestaltPowerPCASArchitecture = 8,
  gestaltPowerPCIgnoresDCBST = 9
};

enum {
  gestaltProcessorType = 'proc',
  gestalt68000 = 1,
  gestalt68010 = 2,
  gestalt68020 = 3,
  gestalt68030 = 4,
  gestalt68040 = 5
};

enum {
  gestaltSDPPromptVersion = 'prpv'
};

enum {
  gestaltParityAttr = 'prty',
  gestaltHasParityCapability = 0,
  gestaltParityEnabled = 1
};

enum {
  gestaltQD3DVersion = 'q3v '
};

enum {
  gestaltQD3DViewer = 'q3vc',
  gestaltQD3DViewerPresent = 0
};
# 1746 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Gestalt.h" 3
enum {
  gestaltQuickdrawVersion = 'qd  ',
  gestaltOriginalQD = 0x0000,
  gestalt8BitQD = 0x0100,
  gestalt32BitQD = 0x0200,
  gestalt32BitQD11 = 0x0201,
  gestalt32BitQD12 = 0x0220,
  gestalt32BitQD13 = 0x0230,
  gestaltAllegroQD = 0x0250,
  gestaltMacOSXQD = 0x0300
};

enum {
  gestaltQD3D = 'qd3d',
  gestaltQD3DPresent = 0
};
# 1771 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Gestalt.h" 3
enum {
  gestaltGXVersion = 'qdgx'
};

enum {
  gestaltQuickdrawFeatures = 'qdrw',
  gestaltHasColor = 0,
  gestaltHasDeepGWorlds = 1,
  gestaltHasDirectPixMaps = 2,
  gestaltHasGrayishTextOr = 3,
  gestaltSupportsMirroring = 4,
  gestaltQDHasLongRowBytes = 5
};

enum {
  gestaltQDTextVersion = 'qdtx',
  gestaltOriginalQDText = 0x0000,
  gestaltAllegroQDText = 0x0100,
  gestaltMacOSXQDText = 0x0200
};

enum {
  gestaltQDTextFeatures = 'qdtf',
  gestaltWSIISupport = 0,
  gestaltSbitFontSupport = 1,
  gestaltAntiAliasedTextAvailable = 2,
  gestaltOFA2available = 3,
  gestaltCreatesAliasFontRsrc = 4,
  gestaltNativeType1FontSupport = 5,
  gestaltCanUseCGTextRendering = 6
};


enum {
  gestaltQuickTimeConferencingInfo = 'qtci'
};

enum {
  gestaltQuickTimeVersion = 'qtim',
  gestaltQuickTime = 'qtim'
};

enum {
  gestaltQuickTimeFeatures = 'qtrs',
  gestaltPPCQuickTimeLibPresent = 0
};

enum {
  gestaltQuickTimeStreamingFeatures = 'qtsf'
};

enum {
  gestaltQuickTimeStreamingVersion = 'qtst'
};

enum {
  gestaltQuickTimeThreadSafeFeaturesAttr = 'qtth',
  gestaltQuickTimeThreadSafeICM = 0,
  gestaltQuickTimeThreadSafeMovieToolbox = 1,
  gestaltQuickTimeThreadSafeMovieImport = 2,
  gestaltQuickTimeThreadSafeMovieExport = 3,
  gestaltQuickTimeThreadSafeGraphicsImport = 4,
  gestaltQuickTimeThreadSafeGraphicsExport = 5,
  gestaltQuickTimeThreadSafeMoviePlayback = 6
};

enum {
  gestaltQTVRMgrAttr = 'qtvr',
  gestaltQTVRMgrPresent = 0,
  gestaltQTVRObjMoviesPresent = 1,
  gestaltQTVRCylinderPanosPresent = 2,
  gestaltQTVRCubicPanosPresent = 3
};

enum {
  gestaltQTVRMgrVers = 'qtvv'
};
# 1861 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Gestalt.h" 3
enum {
  gestaltPhysicalRAMSize = 'ram '
};

enum {
  gestaltPhysicalRAMSizeInMegabytes = 'ramm'
};

enum {
  gestaltRBVAddr = 'rbv '
};

enum {
  gestaltROMSize = 'rom '
};

enum {
  gestaltROMVersion = 'romv'
};

enum {
  gestaltResourceMgrAttr = 'rsrc',
  gestaltPartialRsrcs = 0,
  gestaltHasResourceOverrides = 1
};

enum {
  gestaltResourceMgrBugFixesAttrs = 'rmbg',
  gestaltRMForceSysHeapRolledIn = 0,
  gestaltRMFakeAppleMenuItemsRolledIn = 1,
  gestaltSanityCheckResourceFiles = 2,
  gestaltSupportsFSpResourceFileAlreadyOpenBit = 3,
  gestaltRMSupportsFSCalls = 4,
  gestaltRMTypeIndexOrderingReverse = 8
};


enum {
  gestaltRealtimeMgrAttr = 'rtmr',
  gestaltRealtimeMgrPresent = 0
};


enum {
  gestaltSafeOFAttr = 'safe',
  gestaltVMZerosPagesBit = 0,
  gestaltInitHeapZerosOutHeapsBit = 1,
  gestaltNewHandleReturnsZeroedMemoryBit = 2,
  gestaltNewPtrReturnsZeroedMemoryBit = 3,
  gestaltFileAllocationZeroedBlocksBit = 4
};


enum {
  gestaltSCCReadAddr = 'sccr'
};

enum {
  gestaltSCCWriteAddr = 'sccw'
};

enum {
  gestaltScrapMgrAttr = 'scra',
  gestaltScrapMgrTranslationAware = 0
};

enum {
  gestaltScriptMgrVersion = 'scri'
};

enum {
  gestaltScriptCount = 'scr#'
};

enum {
  gestaltSCSI = 'scsi',
  gestaltAsyncSCSI = 0,
  gestaltAsyncSCSIINROM = 1,
  gestaltSCSISlotBoot = 2,
  gestaltSCSIPollSIH = 3
};

enum {
  gestaltControlStripAttr = 'sdev',
  gestaltControlStripExists = 0,
  gestaltControlStripVersionFixed = 1,
  gestaltControlStripUserFont = 2,
  gestaltControlStripUserHotKey = 3
};

enum {
  gestaltSDPStandardDirectoryVersion = 'sdvr'
};

enum {
  gestaltSerialAttr = 'ser ',
  gestaltHasGPIaToDCDa = 0,
  gestaltHasGPIaToRTxCa = 1,
  gestaltHasGPIbToDCDb = 2,
  gestaltHidePortA = 3,
  gestaltHidePortB = 4,
  gestaltPortADisabled = 5,
  gestaltPortBDisabled = 6
};

enum {
  gestaltShutdownAttributes = 'shut',
  gestaltShutdownHassdOnBootVolUnmount = 0
};

enum {
  gestaltNuBusConnectors = 'sltc'
};

enum {
  gestaltSlotAttr = 'slot',
  gestaltSlotMgrExists = 0,
  gestaltNuBusPresent = 1,
  gestaltSESlotPresent = 2,
  gestaltSE30SlotPresent = 3,
  gestaltPortableSlotPresent = 4
};

enum {
  gestaltFirstSlotNumber = 'slt1'
};

enum {
  gestaltSoundAttr = 'snd ',
  gestaltStereoCapability = 0,
  gestaltStereoMixing = 1,
  gestaltSoundIOMgrPresent = 3,
  gestaltBuiltInSoundInput = 4,
  gestaltHasSoundInputDevice = 5,
  gestaltPlayAndRecord = 6,
  gestalt16BitSoundIO = 7,
  gestaltStereoInput = 8,
  gestaltLineLevelInput = 9,

  gestaltSndPlayDoubleBuffer = 10,
  gestaltMultiChannels = 11,
  gestalt16BitAudioSupport = 12
};

enum {
  gestaltSplitOSAttr = 'spos',
  gestaltSplitOSBootDriveIsNetworkVolume = 0,
  gestaltSplitOSAware = 1,
  gestaltSplitOSEnablerVolumeIsDifferentFromBootVolume = 2,
  gestaltSplitOSMachineNameSetToNetworkNameTemp = 3,
  gestaltSplitOSMachineNameStartupDiskIsNonPersistent = 5
};

enum {
  gestaltSMPSPSendLetterVersion = 'spsl'
};

enum {
  gestaltSpeechRecognitionAttr = 'srta',
  gestaltDesktopSpeechRecognition = 1,
  gestaltTelephoneSpeechRecognition = 2
};

enum {
  gestaltSpeechRecognitionVersion = 'srtb'
};

enum {
  gestaltSoftwareVendorCode = 'srad',
  gestaltSoftwareVendorApple = 'Appl',
  gestaltSoftwareVendorLicensee = 'Lcns'
};

enum {
  gestaltStandardFileAttr = 'stdf',
  gestaltStandardFile58 = 0,
  gestaltStandardFileTranslationAware = 1,
  gestaltStandardFileHasColorIcons = 2,
  gestaltStandardFileUseGenericIcons = 3,
  gestaltStandardFileHasDynamicVolumeAllocation = 4
};

enum {
  gestaltSysArchitecture = 'sysa',
  gestalt68k = 1,
  gestaltPowerPC = 2,
  gestaltIntel = 10
};

enum {
  gestaltSystemUpdateVersion = 'sysu'
};
# 2080 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Gestalt.h" 3
enum {
  gestaltSystemVersion = 'sysv',
  gestaltSystemVersionMajor = 'sys1',
  gestaltSystemVersionMinor = 'sys2',
  gestaltSystemVersionBugFix = 'sys3'
};

enum {
  gestaltToolboxTable = 'tbtt'
};

enum {
  gestaltTextEditVersion = 'te  ',
  gestaltTE1 = 1,
  gestaltTE2 = 2,
  gestaltTE3 = 3,
  gestaltTE4 = 4,
  gestaltTE5 = 5
};

enum {
  gestaltTE6 = 6
};

enum {
  gestaltTEAttr = 'teat',
  gestaltTEHasGetHiliteRgn = 0,
  gestaltTESupportsInlineInput = 1,
  gestaltTESupportsTextObjects = 2,
  gestaltTEHasWhiteBackground = 3
};

enum {
  gestaltTeleMgrAttr = 'tele',
  gestaltTeleMgrPresent = 0,
  gestaltTeleMgrPowerPCSupport = 1,
  gestaltTeleMgrSoundStreams = 2,
  gestaltTeleMgrAutoAnswer = 3,
  gestaltTeleMgrIndHandset = 4,
  gestaltTeleMgrSilenceDetect = 5,
  gestaltTeleMgrNewTELNewSupport = 6
};

enum {
  gestaltTermMgrAttr = 'term',
  gestaltTermMgrPresent = 0,
  gestaltTermMgrErrorString = 2
};

enum {
  gestaltThreadMgrAttr = 'thds',
  gestaltThreadMgrPresent = 0,
  gestaltSpecificMatchSupport = 1,
  gestaltThreadsLibraryPresent = 2
};

enum {
  gestaltTimeMgrVersion = 'tmgr',
  gestaltStandardTimeMgr = 1,
  gestaltRevisedTimeMgr = 2,
  gestaltExtendedTimeMgr = 3,
  gestaltNativeTimeMgr = 4
};

enum {
  gestaltTSMTEVersion = 'tmTV',
  gestaltTSMTE1 = 0x0100,
  gestaltTSMTE15 = 0x0150,
  gestaltTSMTE152 = 0x0152
};

enum {
  gestaltTSMTEAttr = 'tmTE',
  gestaltTSMTEPresent = 0,
  gestaltTSMTE = 0
};

enum {
  gestaltAVLTreeAttr = 'tree',
  gestaltAVLTreePresentBit = 0,
  gestaltAVLTreeSupportsHandleBasedTreeBit = 1,
  gestaltAVLTreeSupportsTreeLockingBit = 2
};

enum {
  gestaltALMAttr = 'trip',
  gestaltALMPresent = 0,
  gestaltALMHasSFGroup = 1,
  gestaltALMHasCFMSupport = 2,
  gestaltALMHasRescanNotifiers = 3
};

enum {
  gestaltALMHasSFLocation = gestaltALMHasSFGroup
};

enum {
  gestaltTSMgrVersion = 'tsmv',
  gestaltTSMgr15 = 0x0150,
  gestaltTSMgr20 = 0x0200,
  gestaltTSMgr22 = 0x0220,
  gestaltTSMgr23 = 0x0230
};

enum {
  gestaltTSMgrAttr = 'tsma',
  gestaltTSMDisplayMgrAwareBit = 0,
  gestaltTSMdoesTSMTEBit = 1
};

enum {
  gestaltSpeechAttr = 'ttsc',
  gestaltSpeechMgrPresent = 0,
  gestaltSpeechHasPPCGlue = 1
};

enum {
  gestaltTVAttr = 'tv  ',
  gestaltHasTVTuner = 0,
  gestaltHasSoundFader = 1,
  gestaltHasHWClosedCaptioning = 2,
  gestaltHasIRRemote = 3,
  gestaltHasVidDecoderScaler = 4,
  gestaltHasStereoDecoder = 5,
  gestaltHasSerialFader = 6,
  gestaltHasFMTuner = 7,
  gestaltHasSystemIRFunction = 8,
  gestaltIRDisabled = 9,
  gestaltINeedIRPowerOffConfirm = 10,
  gestaltHasZoomedVideo = 11
};


enum {
  gestaltATSUVersion = 'uisv',
  gestaltOriginalATSUVersion = (1 << 16),
  gestaltATSUUpdate1 = (2 << 16),
  gestaltATSUUpdate2 = (3 << 16),
  gestaltATSUUpdate3 = (4 << 16),
  gestaltATSUUpdate4 = (5 << 16),
  gestaltATSUUpdate5 = (6 << 16),
  gestaltATSUUpdate6 = (7 << 16),
  gestaltATSUUpdate7 = (8 << 16)
};

enum {
  gestaltATSUFeatures = 'uisf',
  gestaltATSUTrackingFeature = 0x00000001,
  gestaltATSUMemoryFeature = 0x00000001,
  gestaltATSUFallbacksFeature = 0x00000001,
  gestaltATSUGlyphBoundsFeature = 0x00000001,
  gestaltATSULineControlFeature = 0x00000001,
  gestaltATSULayoutCreateAndCopyFeature = 0x00000001,
  gestaltATSULayoutCacheClearFeature = 0x00000001,
  gestaltATSUTextLocatorUsageFeature = 0x00000002,
  gestaltATSULowLevelOrigFeatures = 0x00000004,
  gestaltATSUFallbacksObjFeatures = 0x00000008,
  gestaltATSUIgnoreLeadingFeature = 0x00000008,
  gestaltATSUByCharacterClusterFeature = 0x00000010,
  gestaltATSUAscentDescentControlsFeature = 0x00000010,
  gestaltATSUHighlightInactiveTextFeature = 0x00000010,
  gestaltATSUPositionToCursorFeature = 0x00000010,
  gestaltATSUBatchBreakLinesFeature = 0x00000010,
  gestaltATSUTabSupportFeature = 0x00000010,
  gestaltATSUDirectAccess = 0x00000010,
  gestaltATSUDecimalTabFeature = 0x00000020,
  gestaltATSUBiDiCursorPositionFeature = 0x00000020,
  gestaltATSUNearestCharLineBreakFeature = 0x00000020,
  gestaltATSUHighlightColorControlFeature = 0x00000020,
  gestaltATSUUnderlineOptionsStyleFeature = 0x00000020,
  gestaltATSUStrikeThroughStyleFeature = 0x00000020,
  gestaltATSUDropShadowStyleFeature = 0x00000020
};

enum {
  gestaltUSBAttr = 'usb ',
  gestaltUSBPresent = 0,
  gestaltUSBHasIsoch = 1
};

enum {
  gestaltUSBVersion = 'usbv'
};

enum {
  gestaltVersion = 'vers',
  gestaltValueImplementedVers = 5
};

enum {
  gestaltVIA1Addr = 'via1'
};

enum {
  gestaltVIA2Addr = 'via2'
};

enum {
  gestaltVMAttr = 'vm  ',
  gestaltVMPresent = 0,
  gestaltVMHasLockMemoryForOutput = 1,
  gestaltVMFilemappingOn = 3,
  gestaltVMHasPagingControl = 4
};

enum {
  gestaltVMInfoType = 'vmin',

  gestaltVMInfoSizeStorageType = 0,
  gestaltVMInfoSizeType = 1,
  gestaltVMInfoSimpleType = 2,
  gestaltVMInfoNoneType = 3
};

enum {
  gestaltVMBackingStoreFileRefNum = 'vmbs'
};



enum {
  gestaltALMVers = 'walk'
};

enum {
  gestaltWindowMgrAttr = 'wind',
  gestaltWindowMgrPresent = (1L << 0),


  gestaltWindowMgrPresentBit = 0,
  gestaltExtendedWindowAttributes = 1,
  gestaltExtendedWindowAttributesBit = 1,
  gestaltHasFloatingWindows = 2,
  gestaltHasFloatingWindowsBit = 2,
  gestaltHasWindowBuffering = 3,
  gestaltHasWindowBufferingBit = 3,
  gestaltWindowLiveResizeBit = 4,
  gestaltWindowMinimizeToDockBit = 5,
  gestaltHasWindowShadowsBit = 6,
  gestaltSheetsAreWindowModalBit = 7,
  gestaltFrontWindowMayBeHiddenBit = 8,

  gestaltWindowMgrPresentMask = (1L << gestaltWindowMgrPresentBit),
  gestaltExtendedWindowAttributesMask = (1L << gestaltExtendedWindowAttributesBit),
  gestaltHasFloatingWindowsMask = (1L << gestaltHasFloatingWindowsBit),
  gestaltHasWindowBufferingMask = (1L << gestaltHasWindowBufferingBit),
  gestaltWindowLiveResizeMask = (1L << gestaltWindowLiveResizeBit),
  gestaltWindowMinimizeToDockMask = (1L << gestaltWindowMinimizeToDockBit),
  gestaltHasWindowShadowsMask = (1L << gestaltHasWindowShadowsBit),
  gestaltSheetsAreWindowModalMask = (1L << gestaltSheetsAreWindowModalBit),
  gestaltFrontWindowMayBeHiddenMask = (1L << gestaltFrontWindowMayBeHiddenBit)
};

enum {
  gestaltHasSingleWindowModeBit = 8,
  gestaltHasSingleWindowModeMask = (1L << gestaltHasSingleWindowModeBit)
};






enum {
  gestaltX86Features = 'x86f',
  gestaltX86HasFPU = 0,
  gestaltX86HasVME = 1,
  gestaltX86HasDE = 2,
  gestaltX86HasPSE = 3,
  gestaltX86HasTSC = 4,
  gestaltX86HasMSR = 5,
  gestaltX86HasPAE = 6,
  gestaltX86HasMCE = 7,
  gestaltX86HasCX8 = 8,
  gestaltX86HasAPIC = 9,
  gestaltX86HasSEP = 11,
  gestaltX86HasMTRR = 12,
  gestaltX86HasPGE = 13,
  gestaltX86HasMCA = 14,
  gestaltX86HasCMOV = 15,

  gestaltX86HasPAT = 16,
  gestaltX86HasPSE36 = 17,
  gestaltX86HasPSN = 18,
  gestaltX86HasCLFSH = 19,
  gestaltX86Serviced20 = 20,
  gestaltX86HasDS = 21,
  gestaltX86ResACPI = 22,
  gestaltX86HasMMX = 23,
  gestaltX86HasFXSR = 24,
  gestaltX86HasSSE = 25,
  gestaltX86HasSSE2 = 26,
  gestaltX86HasSS = 27,
  gestaltX86HasHTT = 28,
  gestaltX86HasTM = 29
};




enum {
  gestaltX86AdditionalFeatures = 'x86a',
  gestaltX86HasSSE3 = 0,
  gestaltX86HasMONITOR = 3,
  gestaltX86HasDSCPL = 4,
  gestaltX86HasVMX = 5,
  gestaltX86HasSMX = 6,
  gestaltX86HasEST = 7,
  gestaltX86HasTM2 = 8,
  gestaltX86HasSupplementalSSE3 = 9,
  gestaltX86HasCID = 10,
  gestaltX86HasCX16 = 13,
  gestaltX86HasxTPR = 14
};

enum {
  gestaltTranslationAttr = 'xlat',
  gestaltTranslationMgrExists = 0,
  gestaltTranslationMgrHintOrder = 1,
  gestaltTranslationPPCAvail = 2,
  gestaltTranslationGetPathAPIAvail = 3
};

enum {
  gestaltExtToolboxTable = 'xttt'
};

enum {
  gestaltUSBPrinterSharingVersion = 'zak ',
  gestaltUSBPrinterSharingVersionMask = 0x0000FFFF,
  gestaltUSBPrinterSharingAttr = 'zak ',
  gestaltUSBPrinterSharingAttrMask = (int)0xFFFF0000,
  gestaltUSBPrinterSharingAttrRunning = (int)0x80000000,
  gestaltUSBPrinterSharingAttrBooted = 0x40000000
};


enum {
  gestaltWorldScriptIIVersion = 'doub',
  gestaltWorldScriptIIAttr = 'wsat',
  gestaltWSIICanPrintWithoutPrGeneralBit = 0
};






}
# 62 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CarbonCore.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacMemory.h" 1 3
# 37 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacMemory.h" 3
extern "C" {


#pragma pack(push, 2)

enum {
  maxSize = 0x7FFFFFF0
};
# 56 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacMemory.h" 3
enum {
  defaultPhysicalEntryCount = 8
};

enum {

  kPageInMemory = 0,
  kPageOnDisk = 1,
  kNotPaged = 2
};

enum {

  k32BitHeap = 1,
  kNewStyleHeap = 2,
  kNewDebugHeap = 4
};





enum {
  kHandleIsResourceBit = 5,
  kHandlePurgeableBit = 6,
  kHandleLockedBit = 7
};


enum {
  kHandleIsResourceMask = 0x20,
  kHandlePurgeableMask = 0x40,
  kHandleLockedMask = 0x80
};
# 326 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacMemory.h" 3
extern OSErr
MemError(void) ;
# 377 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacMemory.h" 3
extern SInt16
LMGetMemErr(void) ;
# 404 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacMemory.h" 3
extern void
LMSetMemErr(SInt16 value) ;
# 447 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacMemory.h" 3
extern Handle
NewHandle(Size byteCount) ;
# 489 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacMemory.h" 3
extern Handle
NewHandleClear(Size byteCount) ;
# 528 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacMemory.h" 3
extern Handle
RecoverHandle(Ptr p) ;
# 564 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacMemory.h" 3
extern Ptr
NewPtr(Size byteCount) ;
# 601 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacMemory.h" 3
extern Ptr
NewPtrClear(Size byteCount) ;
# 672 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacMemory.h" 3
extern Handle
NewEmptyHandle(void) ;
# 721 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacMemory.h" 3
extern void
HLock(Handle h) ;
# 754 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacMemory.h" 3
extern void
HLockHi(Handle h) ;
# 787 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacMemory.h" 3
extern void
HUnlock(Handle h) ;
# 911 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacMemory.h" 3
extern Handle
TempNewHandle(
  Size logicalSize,
  OSErr * resultCode) ;
# 1184 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacMemory.h" 3
extern void
DisposePtr(Ptr p) ;
# 1217 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacMemory.h" 3
extern Size
GetPtrSize(Ptr p) ;
# 1232 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacMemory.h" 3
extern void
SetPtrSize(
  Ptr p,
  Size newSize) ;
# 1274 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacMemory.h" 3
extern void
DisposeHandle(Handle h) ;
# 1317 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacMemory.h" 3
extern void
SetHandleSize(
  Handle h,
  Size newSize) ;
# 1352 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacMemory.h" 3
extern Size
GetHandleSize(Handle h) ;
# 1394 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacMemory.h" 3
extern void
ReallocateHandle(
  Handle h,
  Size byteCount) ;
# 1442 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacMemory.h" 3
extern void
EmptyHandle(Handle h) ;
# 1460 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacMemory.h" 3
extern void
HSetRBit(Handle h) ;
# 1478 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacMemory.h" 3
extern void
HClrRBit(Handle h) ;
# 1534 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacMemory.h" 3
extern SInt8
HGetState(Handle h) ;
# 1565 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacMemory.h" 3
extern void
HSetState(
  Handle h,
  SInt8 flags) ;
# 1690 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacMemory.h" 3
extern OSErr
HandToHand(Handle * theHndl) ;
# 1725 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacMemory.h" 3
extern OSErr
PtrToXHand(
  const void * srcPtr,
  Handle dstHndl,
  long size) ;
# 1768 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacMemory.h" 3
extern OSErr
PtrToHand(
  const void * srcPtr,
  Handle * dstHndl,
  long size) ;
# 1818 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacMemory.h" 3
extern OSErr
HandAndHand(
  Handle hand1,
  Handle hand2) ;
# 1860 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacMemory.h" 3
extern OSErr
PtrAndHand(
  const void * ptr1,
  Handle hand2,
  long size) ;
# 2327 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacMemory.h" 3
extern Boolean
IsHeapValid(void) ;
# 2343 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacMemory.h" 3
extern Boolean
IsHandleValid(Handle h) ;
# 2359 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacMemory.h" 3
extern Boolean
IsPointerValid(Ptr p) ;
# 2519 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacMemory.h" 3
#pragma pack(pop)


}
# 66 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CarbonCore.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 1 3
# 36 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern "C" {
# 51 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern SInt64
S64Max(void);
# 73 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern SInt64
S64Min(void);
# 98 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern SInt64
S64Add(
  SInt64 left,
  SInt64 right);
# 125 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern SInt64
S64Subtract(
  SInt64 left,
  SInt64 right);
# 152 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern SInt64
S64Negate(SInt64 value);
# 206 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern SInt64
S64Multiply(
  SInt64 left,
  SInt64 right);
# 232 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern SInt64
S64Mod(
  SInt64 dividend,
  SInt64 divisor);
# 265 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern SInt64
S64Divide(
  SInt64 dividend,
  SInt64 divisor,
  SInt64 * remainder);
# 289 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern SInt64
S64Div(
  SInt64 dividend,
  SInt64 divisor);
# 316 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern SInt64
S64Set(SInt32 value);
# 339 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern SInt64
S64SetU(UInt32 value);
# 362 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern SInt32
S32Set(SInt64 value);
# 385 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern Boolean
S64And(
  SInt64 left,
  SInt64 right);
# 410 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern Boolean
S64Or(
  SInt64 left,
  SInt64 right);
# 435 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern Boolean
S64Eor(
  SInt64 left,
  SInt64 right);
# 460 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern Boolean
S64Not(SInt64 value);
# 492 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern SInt32
S64Compare(
  SInt64 left,
  SInt64 right) ;
# 510 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern SInt64
S64BitwiseAnd(
  SInt64 left,
  SInt64 right);
# 535 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern SInt64
S64BitwiseOr(
  SInt64 left,
  SInt64 right);
# 560 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern SInt64
S64BitwiseEor(
  SInt64 left,
  SInt64 right);
# 585 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern SInt64
S64BitwiseNot(SInt64 value);
# 608 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern SInt64
S64ShiftRight(
  SInt64 value,
  UInt32 shift);
# 633 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern SInt64
S64ShiftLeft(
  SInt64 value,
  UInt32 shift);
# 664 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern long double
SInt64ToLongDouble(SInt64 value);
# 691 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern SInt64
LongDoubleToSInt64(long double value);
# 716 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern UInt64
U64Max(void);
# 740 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern UInt64
U64Add(
  UInt64 left,
  UInt64 right);
# 766 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern UInt64
U64Subtract(
  UInt64 left,
  UInt64 right);
# 794 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern UInt64
U64Multiply(
  UInt64 left,
  UInt64 right);
# 820 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern UInt64
U64Mod(
  UInt64 dividend,
  UInt64 divisor);
# 852 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern UInt64
U64Divide(
  UInt64 dividend,
  UInt64 divisor,
  UInt64 * remainder);
# 878 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern UInt64
U64Div(
  UInt64 dividend,
  UInt64 divisor);
# 905 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern UInt64
U64Set(SInt32 value);
# 928 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern UInt64
U64SetU(UInt32 value);
# 951 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern UInt32
U32SetU(UInt64 value);
# 974 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern Boolean
U64And(
  UInt64 left,
  UInt64 right);
# 999 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern Boolean
U64Or(
  UInt64 left,
  UInt64 right);
# 1024 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern Boolean
U64Eor(
  UInt64 left,
  UInt64 right);
# 1049 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern Boolean
U64Not(UInt64 value);
# 1081 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern SInt32
U64Compare(
  UInt64 left,
  UInt64 right) ;
# 1098 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern UInt64
U64BitwiseAnd(
  UInt64 left,
  UInt64 right);
# 1123 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern UInt64
U64BitwiseOr(
  UInt64 left,
  UInt64 right);
# 1148 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern UInt64
U64BitwiseEor(
  UInt64 left,
  UInt64 right);
# 1173 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern UInt64
U64BitwiseNot(UInt64 value);
# 1196 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern UInt64
U64ShiftRight(
  UInt64 value,
  UInt32 shift);
# 1221 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern UInt64
U64ShiftLeft(
  UInt64 value,
  UInt32 shift);
# 1248 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern long double
UInt64ToLongDouble(UInt64 value);
# 1271 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern UInt64
LongDoubleToUInt64(long double value);
# 1296 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern SInt64
UInt64ToSInt64(UInt64 value);
# 1319 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
extern UInt64
SInt64ToUInt64(SInt64 value);
# 1371 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
       static inline wide SInt64ToWide ( SInt64 s ) { wide result; result.hi = ( s >> 32 ); result.lo = ( s & 0xffffffffUL ); return result; }
       static inline SInt64 WideToSInt64 ( wide w ) { SInt64 result = w.hi; result = ( result << 32 ) | ( w.lo ); return result; }

     static inline UnsignedWide UInt64ToUnsignedWide ( UInt64 u ) { UnsignedWide result; result.hi = ( u >> 32 ); result.lo = ( u & 0xffffffffUL ); return result; }
       static inline UInt64 UnsignedWideToUInt64 ( UnsignedWide uw ) { UInt64 result = uw.hi ; result = ( result << 32 ) | ( uw.lo ); return result; }
# 1410 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Math64.h" 3
}
# 70 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CarbonCore.h" 2 3
# 81 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CarbonCore.h" 3
# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/BackupCore.h" 1 3
# 32 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/BackupCore.h" 3
extern "C" {
# 66 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/BackupCore.h" 3
extern OSStatus
CSBackupSetItemExcluded(
  CFURLRef item,
  Boolean exclude,
  Boolean excludeByPath) ;
# 101 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/BackupCore.h" 3
extern Boolean
CSBackupIsItemExcluded(
  CFURLRef item,
  Boolean * excludeByPath) ;




}
# 82 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CarbonCore.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 1 3
# 32 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 1 3
# 28 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/OSUtils.h" 1 3
# 34 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/OSUtils.h" 3
# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DateTimeUtils.h" 1 3
# 44 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DateTimeUtils.h" 3
extern "C" {


#pragma pack(push, 2)
# 79 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DateTimeUtils.h" 3
typedef SInt16 ToggleResults;
enum {

  toggleUndefined = 0,
  toggleOK = 1,
  toggleBadField = 2,
  toggleBadDelta = 3,
  toggleBadChar = 4,
  toggleUnknown = 5,
  toggleBadNum = 6,
  toggleOutOfRange = 7,
  toggleErr3 = 7,
  toggleErr4 = 8,
  toggleErr5 = 9
};

enum {

  smallDateBit = 31,
  togChar12HourBit = 30,
  togCharZCycleBit = 29,
  togDelta12HourBit = 28,
  genCdevRangeBit = 27,
  validDateFields = -1,
  maxDateField = 10
};

enum {
  eraMask = 0x0001,
  yearMask = 0x0002,
  monthMask = 0x0004,
  dayMask = 0x0008,
  hourMask = 0x0010,
  minuteMask = 0x0020,
  secondMask = 0x0040,
  dayOfWeekMask = 0x0080,
  dayOfYearMask = 0x0100,
  weekOfYearMask = 0x0200,
  pmMask = 0x0400,
  dateStdMask = 0x007F
};

typedef SInt8 LongDateField;
enum {
  eraField = 0,
  yearField = 1,
  monthField = 2,
  dayField = 3,
  hourField = 4,
  minuteField = 5,
  secondField = 6,
  dayOfWeekField = 7,
  dayOfYearField = 8,
  weekOfYearField = 9,
  pmField = 10,
  res1Field = 11,
  res2Field = 12,
  res3Field = 13
};

typedef SInt8 DateForm;
enum {
  shortDate = 0,
  longDate = 1,
  abbrevDate = 2
};

enum {

  fatalDateTime = 0x8000,
  longDateFound = 1,
  leftOverChars = 2,
  sepNotIntlSep = 4,
  fieldOrderNotIntl = 8,
  extraneousStrings = 16,
  tooManySeps = 32,
  sepNotConsistent = 64,
  tokenErr = 0x8100,
  cantReadUtilities = 0x8200,
  dateTimeNotFound = 0x8400,
  dateTimeInvalid = 0x8800
};

typedef short StringToDateStatus;
typedef StringToDateStatus String2DateStatus;
struct DateCacheRecord {
  short hidden[256];
};
typedef struct DateCacheRecord DateCacheRecord;
typedef DateCacheRecord * DateCachePtr;
struct DateTimeRec {
  short year;
  short month;
  short day;
  short hour;
  short minute;
  short second;
  short dayOfWeek;
};
typedef struct DateTimeRec DateTimeRec;

typedef SInt64 LongDateTime;
# 191 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DateTimeUtils.h" 3
union LongDateCvt {
  SInt64 c;
  struct {
    UInt32 lLow;
    UInt32 lHigh;
  } hl;
};
typedef union LongDateCvt LongDateCvt;


union LongDateRec {
  struct {
    short era;
    short year;
    short month;
    short day;
    short hour;
    short minute;
    short second;
    short dayOfWeek;
    short dayOfYear;
    short weekOfYear;
    short pm;
    short res1;
    short res2;
    short res3;
  } ld;
  short list[14];
  struct {
    short eraAlt;
    DateTimeRec oldDate;
  } od;
};
typedef union LongDateRec LongDateRec;

typedef SInt8 DateDelta;
struct TogglePB {
  long togFlags;
  ResType amChars;
  ResType pmChars;
  long reserved[4];
};
typedef struct TogglePB TogglePB;
# 264 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DateTimeUtils.h" 3
extern OSStatus
UCConvertUTCDateTimeToCFAbsoluteTime(
  const UTCDateTime * iUTCDate,
  CFAbsoluteTime * oCFTime) ;
# 297 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DateTimeUtils.h" 3
extern OSStatus
UCConvertSecondsToCFAbsoluteTime(
  UInt32 iSeconds,
  CFAbsoluteTime * oCFTime) ;
# 330 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DateTimeUtils.h" 3
extern OSStatus
UCConvertLongDateTimeToCFAbsoluteTime(
  LongDateTime iLongTime,
  CFAbsoluteTime * oCFTime) ;
# 363 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DateTimeUtils.h" 3
extern OSStatus
UCConvertCFAbsoluteTimeToUTCDateTime(
  CFAbsoluteTime iCFTime,
  UTCDateTime * oUTCDate) ;
# 396 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DateTimeUtils.h" 3
extern OSStatus
UCConvertCFAbsoluteTimeToSeconds(
  CFAbsoluteTime iCFTime,
  UInt32 * oSeconds) ;
# 429 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DateTimeUtils.h" 3
extern OSStatus
UCConvertCFAbsoluteTimeToLongDateTime(
  CFAbsoluteTime iCFTime,
  LongDateTime * oLongDate) ;
# 987 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DateTimeUtils.h" 3
#pragma pack(pop)


}
# 35 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/OSUtils.h" 2 3
# 49 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/OSUtils.h" 3
extern "C" {


#pragma pack(push, 2)

enum {

  sortsBefore = -1,
  sortsEqual = 0,
  sortsAfter = 1
};

enum {
  dummyType = 0,
  vType = 1,
  ioQType = 2,
  drvQType = 3,
  evType = 4,
  fsQType = 5,
  sIQType = 6,
  dtQType = 7,
  nmType = 8
};

typedef SignedByte QTypes;
struct QElem {
  struct QElem * qLink;
  short qType;
  short qData[1];
};
typedef struct QElem QElem;
typedef QElem * QElemPtr;
struct QHdr {
  volatile short qFlags;
  volatile QElemPtr qHead;
  volatile QElemPtr qTail;
};
typedef struct QHdr QHdr;
typedef QHdr * QHdrPtr;
# 117 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/OSUtils.h" 3
struct MachineLocation {
    Fract latitude;
    Fract longitude;
    union {



        long gmtDelta;
        struct {

            SInt8 pad[3];

            SInt8 Delta;
        } dls;
    } u;
};
typedef struct MachineLocation MachineLocation;
# 171 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/OSUtils.h" 3
extern Boolean
IsMetric(void) ;
# 198 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/OSUtils.h" 3
extern void
Delay(
  unsigned long numTicks,
  unsigned long * finalTicks) ;
# 233 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/OSUtils.h" 3
extern void
Enqueue(
  QElemPtr qElement,
  QHdrPtr qHeader) ;
# 267 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/OSUtils.h" 3
extern OSErr
Dequeue(
  QElemPtr qElement,
  QHdrPtr qHeader) ;
# 359 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/OSUtils.h" 3
extern void
ReadLocation(MachineLocation * loc) ;
# 395 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/OSUtils.h" 3
extern UInt32
TickCount(void) ;
# 423 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/OSUtils.h" 3
extern CFStringRef
CSCopyUserName(Boolean useShortName) ;
# 446 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/OSUtils.h" 3
extern CFStringRef
CSCopyMachineName(void) ;


enum {
  useFree = 0,
  useATalk = 1,
  useAsync = 2,
  useExtClk = 3,
  useMIDI = 4
};

enum {
  false32b = 0,
  true32b = 1
};
# 480 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/OSUtils.h" 3
typedef void * SysPPtr;
# 512 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/OSUtils.h" 3
typedef void ( * DeferredTaskProcPtr)(long dtParam);
typedef DeferredTaskProcPtr DeferredTaskUPP;
# 522 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/OSUtils.h" 3
extern DeferredTaskUPP
NewDeferredTaskUPP(DeferredTaskProcPtr userRoutine) ;
# 533 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/OSUtils.h" 3
extern void
DisposeDeferredTaskUPP(DeferredTaskUPP userUPP) ;
# 544 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/OSUtils.h" 3
extern void
InvokeDeferredTaskUPP(
  long dtParam,
  DeferredTaskUPP userUPP) ;



    inline DeferredTaskUPP NewDeferredTaskUPP(DeferredTaskProcPtr userRoutine) { return userRoutine; }
    inline void DisposeDeferredTaskUPP(DeferredTaskUPP) { }
    inline void InvokeDeferredTaskUPP(long dtParam, DeferredTaskUPP userUPP) { (*userUPP)(dtParam); }







struct DeferredTask {
  volatile QElemPtr qLink;
  short qType;
  volatile short dtFlags;
  DeferredTaskUPP dtAddr;
  long dtParam;
  long dtReserved;
};
typedef struct DeferredTask DeferredTask;
typedef DeferredTask * DeferredTaskPtr;
# 785 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/OSUtils.h" 3
#pragma pack(pop)


}
# 29 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 2 3
# 60 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
# 1 "/usr/include/sys/fcntl.h" 1 3 4
# 314 "/usr/include/sys/fcntl.h" 3 4
struct flock {
 off_t l_start;
 off_t l_len;
 pid_t l_pid;
 short l_type;
 short l_whence;
};
# 330 "/usr/include/sys/fcntl.h" 3 4
struct radvisory {
       off_t ra_offset;
       int ra_count;
};
# 342 "/usr/include/sys/fcntl.h" 3 4
typedef struct fsignatures {
 off_t fs_file_start;
 void *fs_blob_start;
 size_t fs_blob_size;
} fsignatures_t;
# 356 "/usr/include/sys/fcntl.h" 3 4
typedef struct fstore {
 unsigned int fst_flags;
 int fst_posmode;
 off_t fst_offset;
 off_t fst_length;
 off_t fst_bytesalloc;
} fstore_t;



typedef struct fbootstraptransfer {
  off_t fbt_offset;
  size_t fbt_length;
  void *fbt_buffer;
} fbootstraptransfer_t;
# 389 "/usr/include/sys/fcntl.h" 3 4
#pragma pack(4)

struct log2phys {
 unsigned int l2p_flags;
 off_t l2p_contigbytes;
 off_t l2p_devoffset;
};

#pragma pack()
# 408 "/usr/include/sys/fcntl.h" 3 4
struct _filesec;
typedef struct _filesec *filesec_t;


typedef enum {
 FILESEC_OWNER = 1,
 FILESEC_GROUP = 2,
 FILESEC_UUID = 3,
 FILESEC_MODE = 4,
 FILESEC_ACL = 5,
 FILESEC_GRPUUID = 6,


 FILESEC_ACL_RAW = 100,
 FILESEC_ACL_ALLOCSIZE = 101
} filesec_property_t;





extern "C" {
int open(const char *, int, ...) __asm("_" "open" );
int creat(const char *, mode_t) __asm("_" "creat" );
int fcntl(int, int, ...) __asm("_" "fcntl" );


int openx_np(const char *, int, filesec_t);
int flock(int, int);
filesec_t filesec_init(void);
filesec_t filesec_dup(filesec_t);
void filesec_free(filesec_t);
int filesec_get_property(filesec_t, filesec_property_t, void *);
int filesec_query_property(filesec_t, filesec_property_t, int *);
int filesec_set_property(filesec_t, filesec_property_t, const void *);
int filesec_unset_property(filesec_t, filesec_property_t);



}
# 61 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 2 3
# 1 "/usr/include/sys/acl.h" 1 3 4
# 26 "/usr/include/sys/acl.h" 3 4
# 1 "/usr/include/sys/kauth.h" 1 3 4
# 55 "/usr/include/sys/kauth.h" 3 4
typedef struct {

 unsigned char g_guid[16];
} guid_t;




#pragma pack(1)
typedef struct {
 u_int8_t sid_kind;
 u_int8_t sid_authcount;
 u_int8_t sid_authority[6];

 u_int32_t sid_authorities[16];
} ntsid_t;
#pragma pack()
# 85 "/usr/include/sys/kauth.h" 3 4
struct kauth_identity_extlookup {
 u_int32_t el_seqno;
 u_int32_t el_result;





 u_int32_t el_flags;
# 110 "/usr/include/sys/kauth.h" 3 4
 __darwin_pid_t el_info_pid;
 u_int32_t el_info_reserved_1;
 u_int32_t el_info_reserved_2;
 u_int32_t el_info_reserved_3;

 uid_t el_uid;
 guid_t el_uguid;
 u_int32_t el_uguid_valid;
 ntsid_t el_usid;
 u_int32_t el_usid_valid;
 gid_t el_gid;
 guid_t el_gguid;
 u_int32_t el_gguid_valid;
 ntsid_t el_gsid;
 u_int32_t el_gsid_valid;
 u_int32_t el_member_valid;
};
# 140 "/usr/include/sys/kauth.h" 3 4
typedef u_int32_t kauth_ace_rights_t;


struct kauth_ace {
 guid_t ace_applicable;
 u_int32_t ace_flags;
# 164 "/usr/include/sys/kauth.h" 3 4
 kauth_ace_rights_t ace_rights;






};



typedef struct kauth_ace *kauth_ace_t;




struct kauth_acl {
 u_int32_t acl_entrycount;
 u_int32_t acl_flags;

 struct kauth_ace acl_ace[1];
};
# 225 "/usr/include/sys/kauth.h" 3 4
typedef struct kauth_acl *kauth_acl_t;
# 235 "/usr/include/sys/kauth.h" 3 4
struct kauth_filesec {
 u_int32_t fsec_magic;

 guid_t fsec_owner;
 guid_t fsec_group;

 struct kauth_acl fsec_acl;
};
# 256 "/usr/include/sys/kauth.h" 3 4
typedef struct kauth_filesec *kauth_filesec_t;
# 27 "/usr/include/sys/acl.h" 2 3 4
# 38 "/usr/include/sys/acl.h" 3 4
typedef enum {
 ACL_READ_DATA = (1<<1),
 ACL_LIST_DIRECTORY = (1<<1),
 ACL_WRITE_DATA = (1<<2),
 ACL_ADD_FILE = (1<<2),
 ACL_EXECUTE = (1<<3),
 ACL_SEARCH = (1<<3),
 ACL_DELETE = (1<<4),
 ACL_APPEND_DATA = (1<<5),
 ACL_ADD_SUBDIRECTORY = (1<<5),
 ACL_DELETE_CHILD = (1<<6),
 ACL_READ_ATTRIBUTES = (1<<7),
 ACL_WRITE_ATTRIBUTES = (1<<8),
 ACL_READ_EXTATTRIBUTES = (1<<9),
 ACL_WRITE_EXTATTRIBUTES = (1<<10),
 ACL_READ_SECURITY = (1<<11),
 ACL_WRITE_SECURITY = (1<<12),
 ACL_CHANGE_OWNER = (1<<13)
} acl_perm_t;


typedef enum {
 ACL_UNDEFINED_TAG = 0,
 ACL_EXTENDED_ALLOW = 1,
 ACL_EXTENDED_DENY = 2
} acl_tag_t;


typedef enum {
 ACL_TYPE_EXTENDED = 0x00000100,

 ACL_TYPE_ACCESS = 0x00000000,
 ACL_TYPE_DEFAULT = 0x00000001,

 ACL_TYPE_AFS = 0x00000002,
 ACL_TYPE_CODA = 0x00000003,
 ACL_TYPE_NTFS = 0x00000004,
 ACL_TYPE_NWFS = 0x00000005
} acl_type_t;






typedef enum {
 ACL_FIRST_ENTRY = 0,
 ACL_NEXT_ENTRY = -1,
 ACL_LAST_ENTRY = -2
} acl_entry_id_t;


typedef enum {
 ACL_FLAG_DEFER_INHERIT = (1 << 0),
 ACL_ENTRY_INHERITED = (1<<4),
 ACL_ENTRY_FILE_INHERIT = (1<<5),
 ACL_ENTRY_DIRECTORY_INHERIT = (1<<6),
 ACL_ENTRY_LIMIT_INHERIT = (1<<7),
 ACL_ENTRY_ONLY_INHERIT = (1<<8)
} acl_flag_t;



struct _acl;
struct _acl_entry;
struct _acl_permset;
struct _acl_flagset;

typedef struct _acl *acl_t;
typedef struct _acl_entry *acl_entry_t;
typedef struct _acl_permset *acl_permset_t;
typedef struct _acl_flagset *acl_flagset_t;

extern "C" {

extern acl_t acl_dup(acl_t acl);
extern int acl_free(void *obj_p);
extern acl_t acl_init(int count);


extern int acl_copy_entry(acl_entry_t dest_d, acl_entry_t src_d);
extern int acl_create_entry(acl_t *acl_p, acl_entry_t *entry_p);
extern int acl_create_entry_np(acl_t *acl_p, acl_entry_t *entry_p, int entry_index);
extern int acl_delete_entry(acl_t acl, acl_entry_t entry_d);
extern int acl_get_entry(acl_t acl, int entry_id, acl_entry_t *entry_p);
extern int acl_valid(acl_t acl);
extern int acl_valid_fd_np(int fd, acl_type_t type, acl_t acl);
extern int acl_valid_file_np(const char *path, acl_type_t type, acl_t acl);
extern int acl_valid_link_np(const char *path, acl_type_t type, acl_t acl);


extern int acl_add_perm(acl_permset_t permset_d, acl_perm_t perm);
extern int acl_calc_mask(acl_t *acl_p);
extern int acl_clear_perms(acl_permset_t permset_d);
extern int acl_delete_perm(acl_permset_t permset_d, acl_perm_t perm);
extern int acl_get_perm_np(acl_permset_t permset_d, acl_perm_t perm);
extern int acl_get_permset(acl_entry_t entry_d, acl_permset_t *permset_p);
extern int acl_set_permset(acl_entry_t entry_d, acl_permset_t permset_d);


extern int acl_add_flag_np(acl_flagset_t flagset_d, acl_flag_t flag);
extern int acl_clear_flags_np(acl_flagset_t flagset_d);
extern int acl_delete_flag_np(acl_flagset_t flagset_d, acl_flag_t flag);
extern int acl_get_flag_np(acl_flagset_t flagset_d, acl_flag_t flag);
extern int acl_get_flagset_np(void *obj_p, acl_flagset_t *flagset_p);
extern int acl_set_flagset_np(void *obj_p, acl_flagset_t flagset_d);


extern void *acl_get_qualifier(acl_entry_t entry_d);
extern int acl_get_tag_type(acl_entry_t entry_d, acl_tag_t *tag_type_p);
extern int acl_set_qualifier(acl_entry_t entry_d, const void *tag_qualifier_p);
extern int acl_set_tag_type(acl_entry_t entry_d, acl_tag_t tag_type);


extern int acl_delete_def_file(const char *path_p);
extern acl_t acl_get_fd(int fd);
extern acl_t acl_get_fd_np(int fd, acl_type_t type);
extern acl_t acl_get_file(const char *path_p, acl_type_t type);
extern acl_t acl_get_link_np(const char *path_p, acl_type_t type);
extern int acl_set_fd(int fd, acl_t acl);
extern int acl_set_fd_np(int fd, acl_t acl, acl_type_t acl_type);
extern int acl_set_file(const char *path_p, acl_type_t type, acl_t acl);
extern int acl_set_link_np(const char *path_p, acl_type_t type, acl_t acl);


extern ssize_t acl_copy_ext(void *buf_p, acl_t acl, ssize_t size);
extern ssize_t acl_copy_ext_native(void *buf_p, acl_t acl, ssize_t size);
extern acl_t acl_copy_int(const void *buf_p);
extern acl_t acl_copy_int_native(const void *buf_p);
extern acl_t acl_from_text(const char *buf_p);
extern ssize_t acl_size(acl_t acl);
extern char *acl_to_text(acl_t acl, ssize_t *len_p);
}
# 62 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 2 3
# 1 "/System/Library/Frameworks/DiskArbitration.framework/Headers/DADisk.h" 1 3
# 28 "/System/Library/Frameworks/DiskArbitration.framework/Headers/DADisk.h" 3
# 1 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 1 3
# 42 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
# 1 "/usr/include/mach/mach_types.h" 1 3 4
# 80 "/usr/include/mach/mach_types.h" 3 4
# 1 "/usr/include/mach/host_info.h" 1 3 4
# 69 "/usr/include/mach/host_info.h" 3 4
# 1 "/usr/include/mach/vm_statistics.h" 1 3 4
# 84 "/usr/include/mach/vm_statistics.h" 3 4
struct vm_statistics {
 natural_t free_count;
 natural_t active_count;
 natural_t inactive_count;
 natural_t wire_count;
 natural_t zero_fill_count;
 natural_t reactivations;
 natural_t pageins;
 natural_t pageouts;
 natural_t faults;
 natural_t cow_faults;
 natural_t lookups;
 natural_t hits;


 natural_t purgeable_count;
 natural_t purges;
# 109 "/usr/include/mach/vm_statistics.h" 3 4
 natural_t speculative_count;
};


typedef struct vm_statistics *vm_statistics_t;
typedef struct vm_statistics vm_statistics_data_t;
# 139 "/usr/include/mach/vm_statistics.h" 3 4
struct vm_statistics64 {
 natural_t free_count;
 natural_t active_count;
 natural_t inactive_count;
 natural_t wire_count;
 uint64_t zero_fill_count;
 uint64_t reactivations;
 uint64_t pageins;
 uint64_t pageouts;
 uint64_t faults;
 uint64_t cow_faults;
 uint64_t lookups;
 uint64_t hits;


 uint64_t purges;
 natural_t purgeable_count;
# 164 "/usr/include/mach/vm_statistics.h" 3 4
 natural_t speculative_count;

}



;

typedef struct vm_statistics64 *vm_statistics64_t;
typedef struct vm_statistics64 vm_statistics64_data_t;
# 70 "/usr/include/mach/host_info.h" 2 3 4
# 1 "/usr/include/mach/machine.h" 1 3 4
# 67 "/usr/include/mach/machine.h" 3 4
typedef integer_t cpu_type_t;
typedef integer_t cpu_subtype_t;
typedef integer_t cpu_threadtype_t;
# 71 "/usr/include/mach/host_info.h" 2 3 4

# 1 "/usr/include/mach/time_value.h" 1 3 4
# 66 "/usr/include/mach/time_value.h" 3 4
struct time_value {
 integer_t seconds;
 integer_t microseconds;
};

typedef struct time_value time_value_t;
# 73 "/usr/include/mach/host_info.h" 2 3 4






typedef integer_t *host_info_t;
typedef integer_t *host_info64_t;


typedef integer_t host_info_data_t[(1024)];


typedef char kernel_version_t[(512)];


typedef char kernel_boot_info_t[(4096)];





typedef integer_t host_flavor_t;
# 104 "/usr/include/mach/host_info.h" 3 4
#pragma pack(4)

struct host_basic_info {
 integer_t max_cpus;
 integer_t avail_cpus;
 natural_t memory_size;
 cpu_type_t cpu_type;
 cpu_subtype_t cpu_subtype;
 cpu_threadtype_t cpu_threadtype;
 integer_t physical_cpu;
 integer_t physical_cpu_max;
 integer_t logical_cpu;
 integer_t logical_cpu_max;
 uint64_t max_mem;
};

#pragma pack()

typedef struct host_basic_info host_basic_info_data_t;
typedef struct host_basic_info *host_basic_info_t;



struct host_sched_info {
 integer_t min_timeout;
 integer_t min_quantum;
};

typedef struct host_sched_info host_sched_info_data_t;
typedef struct host_sched_info *host_sched_info_t;



struct kernel_resource_sizes {
 natural_t task;
        natural_t thread;
        natural_t port;
        natural_t memory_region;
        natural_t memory_object;
};

typedef struct kernel_resource_sizes kernel_resource_sizes_data_t;
typedef struct kernel_resource_sizes *kernel_resource_sizes_t;



struct host_priority_info {
     integer_t kernel_priority;
     integer_t system_priority;
     integer_t server_priority;
     integer_t user_priority;
     integer_t depress_priority;
     integer_t idle_priority;
     integer_t minimum_priority;
 integer_t maximum_priority;
};

typedef struct host_priority_info host_priority_info_data_t;
typedef struct host_priority_info *host_priority_info_t;
# 175 "/usr/include/mach/host_info.h" 3 4
struct host_load_info {
 integer_t avenrun[3];
 integer_t mach_factor[3];
};

typedef struct host_load_info host_load_info_data_t;
typedef struct host_load_info *host_load_info_t;
# 209 "/usr/include/mach/host_info.h" 3 4
struct host_cpu_load_info {
 natural_t cpu_ticks[4];
};

typedef struct host_cpu_load_info host_cpu_load_info_data_t;
typedef struct host_cpu_load_info *host_cpu_load_info_t;
# 81 "/usr/include/mach/mach_types.h" 2 3 4
# 1 "/usr/include/mach/host_notify.h" 1 3 4
# 82 "/usr/include/mach/mach_types.h" 2 3 4
# 1 "/usr/include/mach/host_special_ports.h" 1 3 4
# 83 "/usr/include/mach/mach_types.h" 2 3 4


# 1 "/usr/include/mach/memory_object_types.h" 1 3 4
# 75 "/usr/include/mach/memory_object_types.h" 3 4
# 1 "/usr/include/mach/vm_prot.h" 1 3 4
# 75 "/usr/include/mach/vm_prot.h" 3 4
typedef int vm_prot_t;
# 76 "/usr/include/mach/memory_object_types.h" 2 3 4
# 1 "/usr/include/mach/vm_sync.h" 1 3 4
# 66 "/usr/include/mach/vm_sync.h" 3 4
typedef unsigned vm_sync_t;
# 77 "/usr/include/mach/memory_object_types.h" 2 3 4
# 1 "/usr/include/mach/vm_types.h" 1 3 4
# 40 "/usr/include/mach/vm_types.h" 3 4
typedef vm_offset_t pointer_t;
typedef vm_offset_t vm_address_t;







typedef uint64_t addr64_t;
# 61 "/usr/include/mach/vm_types.h" 3 4
typedef uint32_t reg64_t;






typedef uint32_t ppnum_t;




typedef mach_port_t vm_map_t;
# 82 "/usr/include/mach/vm_types.h" 3 4
typedef uint64_t vm_object_offset_t;
typedef uint64_t vm_object_size_t;


typedef mach_port_t upl_t;
typedef mach_port_t vm_named_entry_t;
# 78 "/usr/include/mach/memory_object_types.h" 2 3 4






typedef unsigned long long memory_object_offset_t;
typedef unsigned long long memory_object_size_t;
typedef natural_t memory_object_cluster_size_t;
typedef natural_t * memory_object_fault_info_t;

typedef unsigned long long vm_object_id_t;







typedef mach_port_t memory_object_t;
typedef mach_port_t memory_object_control_t;


typedef memory_object_t *memory_object_array_t;




typedef mach_port_t memory_object_name_t;



typedef mach_port_t memory_object_default_t;
# 120 "/usr/include/mach/memory_object_types.h" 3 4
typedef int memory_object_copy_strategy_t;
# 156 "/usr/include/mach/memory_object_types.h" 3 4
typedef int memory_object_return_t;
# 185 "/usr/include/mach/memory_object_types.h" 3 4
typedef int *memory_object_info_t;
typedef int memory_object_flavor_t;
typedef int memory_object_info_data_t[(1024)];







struct memory_object_perf_info {
 memory_object_cluster_size_t cluster_size;
 boolean_t may_cache;
};

struct memory_object_attr_info {
 memory_object_copy_strategy_t copy_strategy;
 memory_object_cluster_size_t cluster_size;
 boolean_t may_cache_object;
 boolean_t temporary;
};

struct memory_object_behave_info {
 memory_object_copy_strategy_t copy_strategy;
 boolean_t temporary;
 boolean_t invalidate;
 boolean_t silent_overwrite;
 boolean_t advisory_pageout;
};


typedef struct memory_object_behave_info *memory_object_behave_info_t;
typedef struct memory_object_behave_info memory_object_behave_info_data_t;

typedef struct memory_object_perf_info *memory_object_perf_info_t;
typedef struct memory_object_perf_info memory_object_perf_info_data_t;

typedef struct memory_object_attr_info *memory_object_attr_info_t;
typedef struct memory_object_attr_info memory_object_attr_info_data_t;
# 86 "/usr/include/mach/mach_types.h" 2 3 4

# 1 "/usr/include/mach/exception_types.h" 1 3 4
# 62 "/usr/include/mach/exception_types.h" 3 4
# 1 "/usr/include/mach/machine/exception.h" 1 3 4
# 35 "/usr/include/mach/machine/exception.h" 3 4
# 1 "/usr/include/mach/i386/exception.h" 1 3 4
# 36 "/usr/include/mach/machine/exception.h" 2 3 4
# 63 "/usr/include/mach/exception_types.h" 2 3 4
# 159 "/usr/include/mach/exception_types.h" 3 4
# 1 "/usr/include/mach/thread_status.h" 1 3 4
# 76 "/usr/include/mach/thread_status.h" 3 4
# 1 "/usr/include/mach/machine/thread_status.h" 1 3 4
# 35 "/usr/include/mach/machine/thread_status.h" 3 4
# 1 "/usr/include/mach/i386/thread_status.h" 1 3 4
# 72 "/usr/include/mach/i386/thread_status.h" 3 4
# 1 "/usr/include/mach/i386/fp_reg.h" 1 3 4
# 64 "/usr/include/mach/i386/fp_reg.h" 3 4
struct x86_fx_save {
        unsigned short fx_control;
        unsigned short fx_status;
        unsigned char fx_tag;
        unsigned char fx_bbz1;
        unsigned short fx_opcode;
        unsigned int fx_eip;
        unsigned short fx_cs;
        unsigned short fx_bbz2;
        unsigned int fx_dp;
        unsigned short fx_ds;
        unsigned short fx_bbz3;
        unsigned int fx_MXCSR;
        unsigned int fx_MXCSR_MASK;
        unsigned short fx_reg_word[8][8];
        unsigned short fx_XMM_reg[8][16];

        unsigned char fx_reserved[16*6];
};
# 73 "/usr/include/mach/i386/thread_status.h" 2 3 4
# 1 "/usr/include/mach/i386/thread_state.h" 1 3 4
# 74 "/usr/include/mach/i386/thread_status.h" 2 3 4
# 1 "/usr/include/i386/eflags.h" 1 3 4
# 75 "/usr/include/mach/i386/thread_status.h" 2 3 4
# 141 "/usr/include/mach/i386/thread_status.h" 3 4
struct x86_state_hdr {
 int flavor;
 int count;
};
typedef struct x86_state_hdr x86_state_hdr_t;
# 159 "/usr/include/mach/i386/thread_status.h" 3 4
typedef struct __darwin_i386_thread_state i386_thread_state_t;



typedef struct __darwin_i386_thread_state x86_thread_state32_t;






typedef struct __darwin_i386_float_state i386_float_state_t;



typedef struct __darwin_i386_float_state x86_float_state32_t;






typedef struct __darwin_i386_exception_state i386_exception_state_t;



typedef struct __darwin_i386_exception_state x86_exception_state32_t;





typedef struct __darwin_x86_debug_state32 x86_debug_state32_t;





typedef struct __darwin_x86_thread_state64 x86_thread_state64_t;



typedef struct __darwin_x86_float_state64 x86_float_state64_t;



typedef struct __darwin_x86_exception_state64 x86_exception_state64_t;





typedef struct __darwin_x86_debug_state64 x86_debug_state64_t;
# 220 "/usr/include/mach/i386/thread_status.h" 3 4
struct x86_thread_state {
 x86_state_hdr_t tsh;
 union {
     x86_thread_state32_t ts32;
     x86_thread_state64_t ts64;
 } uts;
};

struct x86_float_state {
 x86_state_hdr_t fsh;
 union {
  x86_float_state32_t fs32;
  x86_float_state64_t fs64;
 } ufs;
};

struct x86_exception_state {
 x86_state_hdr_t esh;
 union {
  x86_exception_state32_t es32;
  x86_exception_state64_t es64;
 } ues;
};

struct x86_debug_state {
 x86_state_hdr_t dsh;
 union {
  x86_debug_state32_t ds32;
  x86_debug_state64_t ds64;
 } uds;
};

typedef struct x86_thread_state x86_thread_state_t;



typedef struct x86_float_state x86_float_state_t;



typedef struct x86_exception_state x86_exception_state_t;



typedef struct x86_debug_state x86_debug_state_t;
# 288 "/usr/include/mach/i386/thread_status.h" 3 4
struct x86_seg_load_fault32 {
 unsigned int trapno;
 unsigned int err;
 unsigned int eip;
 unsigned int cs;
 unsigned int efl;
};
# 36 "/usr/include/mach/machine/thread_status.h" 2 3 4
# 77 "/usr/include/mach/thread_status.h" 2 3 4
# 1 "/usr/include/mach/machine/thread_state.h" 1 3 4
# 78 "/usr/include/mach/thread_status.h" 2 3 4





typedef natural_t *thread_state_t;


typedef natural_t thread_state_data_t[(144)];




typedef int thread_state_flavor_t;
typedef thread_state_flavor_t *thread_state_flavor_array_t;
# 160 "/usr/include/mach/exception_types.h" 2 3 4





typedef int exception_type_t;
typedef integer_t exception_data_type_t;
typedef int64_t mach_exception_data_type_t;
typedef int exception_behavior_t;
typedef exception_data_type_t *exception_data_t;
typedef mach_exception_data_type_t *mach_exception_data_t;
typedef unsigned int exception_mask_t;
typedef exception_mask_t *exception_mask_array_t;
typedef exception_behavior_t *exception_behavior_array_t;
typedef thread_state_flavor_t *exception_flavor_array_t;
typedef mach_port_t *exception_port_array_t;
typedef mach_exception_data_type_t mach_exception_code_t;
typedef mach_exception_data_type_t mach_exception_subcode_t;
# 88 "/usr/include/mach/mach_types.h" 2 3 4

# 1 "/usr/include/mach/processor_info.h" 1 3 4
# 72 "/usr/include/mach/processor_info.h" 3 4
# 1 "/usr/include/mach/machine/processor_info.h" 1 3 4
# 35 "/usr/include/mach/machine/processor_info.h" 3 4
# 1 "/usr/include/mach/i386/processor_info.h" 1 3 4
# 36 "/usr/include/mach/machine/processor_info.h" 2 3 4
# 73 "/usr/include/mach/processor_info.h" 2 3 4




typedef integer_t *processor_info_t;
typedef integer_t *processor_info_array_t;


typedef integer_t processor_info_data_t[(1024)];


typedef integer_t *processor_set_info_t;


typedef integer_t processor_set_info_data_t[(1024)];




typedef int processor_flavor_t;





struct processor_basic_info {
 cpu_type_t cpu_type;
 cpu_subtype_t cpu_subtype;
 boolean_t running;
 int slot_num;
 boolean_t is_master;
};

typedef struct processor_basic_info processor_basic_info_data_t;
typedef struct processor_basic_info *processor_basic_info_t;



struct processor_cpu_load_info {
        unsigned int cpu_ticks[4];
};

typedef struct processor_cpu_load_info processor_cpu_load_info_data_t;
typedef struct processor_cpu_load_info *processor_cpu_load_info_t;
# 125 "/usr/include/mach/processor_info.h" 3 4
typedef int processor_set_flavor_t;


struct processor_set_basic_info {
 int processor_count;
 int default_policy;
};

typedef struct processor_set_basic_info processor_set_basic_info_data_t;
typedef struct processor_set_basic_info *processor_set_basic_info_t;





struct processor_set_load_info {
        int task_count;
        int thread_count;
        integer_t load_average;
        integer_t mach_factor;
};

typedef struct processor_set_load_info processor_set_load_info_data_t;
typedef struct processor_set_load_info *processor_set_load_info_t;
# 90 "/usr/include/mach/mach_types.h" 2 3 4
# 1 "/usr/include/mach/task_info.h" 1 3 4
# 71 "/usr/include/mach/task_info.h" 3 4
# 1 "/usr/include/mach/policy.h" 1 3 4
# 79 "/usr/include/mach/policy.h" 3 4
typedef int policy_t;
typedef integer_t *policy_info_t;
typedef integer_t *policy_base_t;
typedef integer_t *policy_limit_t;
# 113 "/usr/include/mach/policy.h" 3 4
struct policy_timeshare_base {
 integer_t base_priority;
};
struct policy_timeshare_limit {
 integer_t max_priority;
};
struct policy_timeshare_info {
 integer_t max_priority;
 integer_t base_priority;
 integer_t cur_priority;
 boolean_t depressed;
 integer_t depress_priority;
};

typedef struct policy_timeshare_base *policy_timeshare_base_t;
typedef struct policy_timeshare_limit *policy_timeshare_limit_t;
typedef struct policy_timeshare_info *policy_timeshare_info_t;

typedef struct policy_timeshare_base policy_timeshare_base_data_t;
typedef struct policy_timeshare_limit policy_timeshare_limit_data_t;
typedef struct policy_timeshare_info policy_timeshare_info_data_t;
# 147 "/usr/include/mach/policy.h" 3 4
struct policy_rr_base {
 integer_t base_priority;
 integer_t quantum;
};
struct policy_rr_limit {
 integer_t max_priority;
};
struct policy_rr_info {
 integer_t max_priority;
 integer_t base_priority;
 integer_t quantum;
 boolean_t depressed;
 integer_t depress_priority;
};

typedef struct policy_rr_base *policy_rr_base_t;
typedef struct policy_rr_limit *policy_rr_limit_t;
typedef struct policy_rr_info *policy_rr_info_t;

typedef struct policy_rr_base policy_rr_base_data_t;
typedef struct policy_rr_limit policy_rr_limit_data_t;
typedef struct policy_rr_info policy_rr_info_data_t;
# 181 "/usr/include/mach/policy.h" 3 4
struct policy_fifo_base {
 integer_t base_priority;
};
struct policy_fifo_limit {
 integer_t max_priority;
};
struct policy_fifo_info {
 integer_t max_priority;
 integer_t base_priority;
 boolean_t depressed;
 integer_t depress_priority;
};

typedef struct policy_fifo_base *policy_fifo_base_t;
typedef struct policy_fifo_limit *policy_fifo_limit_t;
typedef struct policy_fifo_info *policy_fifo_info_t;

typedef struct policy_fifo_base policy_fifo_base_data_t;
typedef struct policy_fifo_limit policy_fifo_limit_data_t;
typedef struct policy_fifo_info policy_fifo_info_data_t;
# 213 "/usr/include/mach/policy.h" 3 4
struct policy_bases {
 policy_timeshare_base_data_t ts;
 policy_rr_base_data_t rr;
 policy_fifo_base_data_t fifo;
};

struct policy_limits {
 policy_timeshare_limit_data_t ts;
 policy_rr_limit_data_t rr;
 policy_fifo_limit_data_t fifo;
};

struct policy_infos {
 policy_timeshare_info_data_t ts;
 policy_rr_info_data_t rr;
 policy_fifo_info_data_t fifo;
};

typedef struct policy_bases policy_base_data_t;
typedef struct policy_limits policy_limit_data_t;
typedef struct policy_infos policy_info_data_t;
# 72 "/usr/include/mach/task_info.h" 2 3 4






typedef natural_t task_flavor_t;
typedef integer_t *task_info_t;


typedef integer_t task_info_data_t[(1024)];





#pragma pack(4)




struct task_basic_info_32 {
        integer_t suspend_count;
        natural_t virtual_size;
        natural_t resident_size;
        time_value_t user_time;

        time_value_t system_time;

 policy_t policy;
};
typedef struct task_basic_info_32 task_basic_info_32_data_t;
typedef struct task_basic_info_32 *task_basic_info_32_t;






struct task_basic_info_64 {
        integer_t suspend_count;
        mach_vm_size_t virtual_size;
        mach_vm_size_t resident_size;
        time_value_t user_time;

        time_value_t system_time;

 policy_t policy;
};
typedef struct task_basic_info_64 task_basic_info_64_data_t;
typedef struct task_basic_info_64 *task_basic_info_64_t;






struct task_basic_info {
        integer_t suspend_count;
        vm_size_t virtual_size;
        vm_size_t resident_size;
        time_value_t user_time;

        time_value_t system_time;

 policy_t policy;
};

typedef struct task_basic_info task_basic_info_data_t;
typedef struct task_basic_info *task_basic_info_t;
# 154 "/usr/include/mach/task_info.h" 3 4
struct task_events_info {
 integer_t faults;
 integer_t pageins;
 integer_t cow_faults;
 integer_t messages_sent;
 integer_t messages_received;
        integer_t syscalls_mach;
 integer_t syscalls_unix;
 integer_t csw;
};
typedef struct task_events_info task_events_info_data_t;
typedef struct task_events_info *task_events_info_t;






struct task_thread_times_info {
 time_value_t user_time;

 time_value_t system_time;

};

typedef struct task_thread_times_info task_thread_times_info_data_t;
typedef struct task_thread_times_info *task_thread_times_info_t;





struct task_absolutetime_info {
 uint64_t total_user;
 uint64_t total_system;
 uint64_t threads_user;
 uint64_t threads_system;
};

typedef struct task_absolutetime_info task_absolutetime_info_data_t;
typedef struct task_absolutetime_info *task_absolutetime_info_t;
# 209 "/usr/include/mach/task_info.h" 3 4
struct task_affinity_tag_info {
 integer_t set_count;
 integer_t min;
 integer_t max;
 integer_t task_count;
};
typedef struct task_affinity_tag_info task_affinity_tag_info_data_t;
typedef struct task_affinity_tag_info *task_affinity_tag_info_t;





struct task_dyld_info {
 mach_vm_address_t all_image_info_addr;
 mach_vm_size_t all_image_info_size;
};
typedef struct task_dyld_info task_dyld_info_data_t;
typedef struct task_dyld_info *task_dyld_info_t;



#pragma pack()
# 91 "/usr/include/mach/mach_types.h" 2 3 4
# 1 "/usr/include/mach/task_policy.h" 1 3 4
# 32 "/usr/include/mach/task_policy.h" 3 4
# 1 "/usr/include/mach/mach_types.h" 1 3 4
# 33 "/usr/include/mach/task_policy.h" 2 3 4
# 51 "/usr/include/mach/task_policy.h" 3 4
typedef natural_t task_policy_flavor_t;
typedef integer_t *task_policy_t;
# 106 "/usr/include/mach/task_policy.h" 3 4
enum task_role {
 TASK_RENICED = -1,
 TASK_UNSPECIFIED = 0,
 TASK_FOREGROUND_APPLICATION,
 TASK_BACKGROUND_APPLICATION,
 TASK_CONTROL_APPLICATION,
 TASK_GRAPHICS_SERVER,
 TASK_THROTTLE_APPLICATION,
 TASK_DEFAULT_APPLICATION
};

typedef enum task_role task_role_t;

struct task_category_policy {
 task_role_t role;
};

typedef struct task_category_policy task_category_policy_data_t;
typedef struct task_category_policy *task_category_policy_t;
# 92 "/usr/include/mach/mach_types.h" 2 3 4
# 1 "/usr/include/mach/task_special_ports.h" 1 3 4
# 70 "/usr/include/mach/task_special_ports.h" 3 4
typedef int task_special_port_t;
# 93 "/usr/include/mach/mach_types.h" 2 3 4
# 1 "/usr/include/mach/thread_info.h" 1 3 4
# 81 "/usr/include/mach/thread_info.h" 3 4
typedef natural_t thread_flavor_t;
typedef integer_t *thread_info_t;


typedef integer_t thread_info_data_t[(1024)];






struct thread_basic_info {
        time_value_t user_time;
        time_value_t system_time;
        integer_t cpu_usage;
 policy_t policy;
        integer_t run_state;
        integer_t flags;
        integer_t suspend_count;
        integer_t sleep_time;

};

typedef struct thread_basic_info thread_basic_info_data_t;
typedef struct thread_basic_info *thread_basic_info_t;





struct thread_identifier_info {
 uint64_t thread_id;
 uint64_t thread_handle;
 uint64_t dispatch_qaddr;
};

typedef struct thread_identifier_info thread_identifier_info_data_t;
typedef struct thread_identifier_info *thread_identifier_info_t;
# 94 "/usr/include/mach/mach_types.h" 2 3 4
# 1 "/usr/include/mach/thread_policy.h" 1 3 4
# 51 "/usr/include/mach/thread_policy.h" 3 4
typedef natural_t thread_policy_flavor_t;
typedef integer_t *thread_policy_t;
# 86 "/usr/include/mach/thread_policy.h" 3 4
struct thread_standard_policy {
 natural_t no_data;
};

typedef struct thread_standard_policy thread_standard_policy_data_t;
typedef struct thread_standard_policy *thread_standard_policy_t;
# 109 "/usr/include/mach/thread_policy.h" 3 4
struct thread_extended_policy {
 boolean_t timeshare;
};

typedef struct thread_extended_policy thread_extended_policy_data_t;
typedef struct thread_extended_policy *thread_extended_policy_t;
# 148 "/usr/include/mach/thread_policy.h" 3 4
struct thread_time_constraint_policy {
 uint32_t period;
 uint32_t computation;
 uint32_t constraint;
 boolean_t preemptible;
};

typedef struct thread_time_constraint_policy thread_time_constraint_policy_data_t;

typedef struct thread_time_constraint_policy *thread_time_constraint_policy_t;
# 176 "/usr/include/mach/thread_policy.h" 3 4
struct thread_precedence_policy {
 integer_t importance;
};

typedef struct thread_precedence_policy thread_precedence_policy_data_t;
typedef struct thread_precedence_policy *thread_precedence_policy_t;
# 206 "/usr/include/mach/thread_policy.h" 3 4
struct thread_affinity_policy {
 integer_t affinity_tag;
};



typedef struct thread_affinity_policy thread_affinity_policy_data_t;
typedef struct thread_affinity_policy *thread_affinity_policy_t;
# 95 "/usr/include/mach/mach_types.h" 2 3 4
# 1 "/usr/include/mach/thread_special_ports.h" 1 3 4
# 96 "/usr/include/mach/mach_types.h" 2 3 4


# 1 "/usr/include/mach/clock_types.h" 1 3 4
# 51 "/usr/include/mach/clock_types.h" 3 4
typedef int alarm_type_t;
typedef int sleep_type_t;
typedef int clock_id_t;
typedef int clock_flavor_t;
typedef int *clock_attr_t;
typedef int clock_res_t;




struct mach_timespec {
 unsigned int tv_sec;
 clock_res_t tv_nsec;
};
typedef struct mach_timespec mach_timespec_t;
# 99 "/usr/include/mach/mach_types.h" 2 3 4
# 1 "/usr/include/mach/vm_attributes.h" 1 3 4
# 76 "/usr/include/mach/vm_attributes.h" 3 4
typedef unsigned int vm_machine_attribute_t;
# 85 "/usr/include/mach/vm_attributes.h" 3 4
typedef int vm_machine_attribute_val_t;
# 100 "/usr/include/mach/mach_types.h" 2 3 4
# 1 "/usr/include/mach/vm_inherit.h" 1 3 4
# 75 "/usr/include/mach/vm_inherit.h" 3 4
typedef unsigned int vm_inherit_t;
# 101 "/usr/include/mach/mach_types.h" 2 3 4
# 1 "/usr/include/mach/vm_purgable.h" 1 3 4
# 53 "/usr/include/mach/vm_purgable.h" 3 4
typedef int vm_purgable_t;
# 102 "/usr/include/mach/mach_types.h" 2 3 4
# 1 "/usr/include/mach/vm_behavior.h" 1 3 4
# 47 "/usr/include/mach/vm_behavior.h" 3 4
typedef int vm_behavior_t;
# 103 "/usr/include/mach/mach_types.h" 2 3 4




# 1 "/usr/include/mach/vm_region.h" 1 3 4
# 47 "/usr/include/mach/vm_region.h" 3 4
# 1 "/usr/include/mach/machine/vm_param.h" 1 3 4
# 48 "/usr/include/mach/vm_region.h" 2 3 4





#pragma pack(4)




typedef uint32_t vm32_object_id_t;
# 67 "/usr/include/mach/vm_region.h" 3 4
typedef int *vm_region_info_t;
typedef int *vm_region_info_64_t;
typedef int *vm_region_recurse_info_t;
typedef int *vm_region_recurse_info_64_t;
typedef int vm_region_flavor_t;
typedef int vm_region_info_data_t[(1024)];


struct vm_region_basic_info_64 {
 vm_prot_t protection;
 vm_prot_t max_protection;
 vm_inherit_t inheritance;
 boolean_t shared;
 boolean_t reserved;
 memory_object_offset_t offset;
 vm_behavior_t behavior;
 unsigned short user_wired_count;
};
typedef struct vm_region_basic_info_64 *vm_region_basic_info_64_t;
typedef struct vm_region_basic_info_64 vm_region_basic_info_data_64_t;
# 103 "/usr/include/mach/vm_region.h" 3 4
struct vm_region_basic_info {
 vm_prot_t protection;
 vm_prot_t max_protection;
 vm_inherit_t inheritance;
 boolean_t shared;
 boolean_t reserved;
 uint32_t offset;
 vm_behavior_t behavior;
 unsigned short user_wired_count;
};

typedef struct vm_region_basic_info *vm_region_basic_info_t;
typedef struct vm_region_basic_info vm_region_basic_info_data_t;
# 138 "/usr/include/mach/vm_region.h" 3 4
struct vm_region_extended_info {
 vm_prot_t protection;
        unsigned int user_tag;
        unsigned int pages_resident;
        unsigned int pages_shared_now_private;
        unsigned int pages_swapped_out;
        unsigned int pages_dirtied;
        unsigned int ref_count;
        unsigned short shadow_depth;
        unsigned char external_pager;
        unsigned char share_mode;
};

typedef struct vm_region_extended_info *vm_region_extended_info_t;
typedef struct vm_region_extended_info vm_region_extended_info_data_t;







struct vm_region_top_info {
        unsigned int obj_id;
        unsigned int ref_count;
        unsigned int private_pages_resident;
        unsigned int shared_pages_resident;
        unsigned char share_mode;
};

typedef struct vm_region_top_info *vm_region_top_info_t;
typedef struct vm_region_top_info vm_region_top_info_data_t;
# 196 "/usr/include/mach/vm_region.h" 3 4
struct vm_region_submap_info {
 vm_prot_t protection;
 vm_prot_t max_protection;
 vm_inherit_t inheritance;
 uint32_t offset;
        unsigned int user_tag;
        unsigned int pages_resident;
        unsigned int pages_shared_now_private;
        unsigned int pages_swapped_out;
        unsigned int pages_dirtied;
        unsigned int ref_count;
        unsigned short shadow_depth;
        unsigned char external_pager;
        unsigned char share_mode;
 boolean_t is_submap;
 vm_behavior_t behavior;
 vm32_object_id_t object_id;
 unsigned short user_wired_count;
};

typedef struct vm_region_submap_info *vm_region_submap_info_t;
typedef struct vm_region_submap_info vm_region_submap_info_data_t;




struct vm_region_submap_info_64 {
 vm_prot_t protection;
 vm_prot_t max_protection;
 vm_inherit_t inheritance;
 memory_object_offset_t offset;
        unsigned int user_tag;
        unsigned int pages_resident;
        unsigned int pages_shared_now_private;
        unsigned int pages_swapped_out;
        unsigned int pages_dirtied;
        unsigned int ref_count;
        unsigned short shadow_depth;
        unsigned char external_pager;
        unsigned char share_mode;
 boolean_t is_submap;
 vm_behavior_t behavior;
 vm32_object_id_t object_id;
 unsigned short user_wired_count;
};

typedef struct vm_region_submap_info_64 *vm_region_submap_info_64_t;
typedef struct vm_region_submap_info_64 vm_region_submap_info_data_64_t;




struct vm_region_submap_short_info_64 {
 vm_prot_t protection;
 vm_prot_t max_protection;
 vm_inherit_t inheritance;
 memory_object_offset_t offset;
        unsigned int user_tag;
        unsigned int ref_count;
        unsigned short shadow_depth;
        unsigned char external_pager;
        unsigned char share_mode;
 boolean_t is_submap;
 vm_behavior_t behavior;
 vm32_object_id_t object_id;
 unsigned short user_wired_count;
};

typedef struct vm_region_submap_short_info_64 *vm_region_submap_short_info_64_t;
typedef struct vm_region_submap_short_info_64 vm_region_submap_short_info_data_64_t;





struct mach_vm_read_entry {
 mach_vm_address_t address;
 mach_vm_size_t size;
};

struct vm_read_entry {
 vm_address_t address;
 vm_size_t size;
};
# 291 "/usr/include/mach/vm_region.h" 3 4
typedef struct mach_vm_read_entry mach_vm_read_entry_t[(256)];
typedef struct vm_read_entry vm_read_entry_t[(256)];




#pragma pack()



typedef int *vm_page_info_t;
typedef int vm_page_info_data_t[];
typedef int vm_page_info_flavor_t;


struct vm_page_info_basic {
 int disposition;
 int ref_count;
 vm_object_id_t object_id;
 memory_object_offset_t offset;
 int depth;
};
typedef struct vm_page_info_basic *vm_page_info_basic_t;
typedef struct vm_page_info_basic vm_page_info_basic_data_t;
# 108 "/usr/include/mach/mach_types.h" 2 3 4
# 1 "/usr/include/mach/kmod.h" 1 3 4
# 43 "/usr/include/mach/kmod.h" 3 4
extern "C" {
# 56 "/usr/include/mach/kmod.h" 3 4
typedef int kmod_t;

struct kmod_info;
typedef kern_return_t kmod_start_func_t(struct kmod_info * ki, void * data);
typedef kern_return_t kmod_stop_func_t(struct kmod_info * ki, void * data);
# 70 "/usr/include/mach/kmod.h" 3 4
#pragma pack(4)


typedef struct kmod_reference {
    struct kmod_reference * next;
    struct kmod_info * info;
} kmod_reference_t;
# 87 "/usr/include/mach/kmod.h" 3 4
typedef struct kmod_info {
    struct kmod_info * next;
    int32_t info_version;
    uint32_t id;
    char name[64];
    char version[64];
    int32_t reference_count;
    kmod_reference_t * reference_list;
    vm_address_t address;
    vm_size_t size;
    vm_size_t hdr_size;
    kmod_start_func_t * start;
    kmod_stop_func_t * stop;
} kmod_info_t;



typedef struct kmod_info_32_v1 {
    uint32_t next_addr;
    int32_t info_version;
    uint32_t id;
    uint8_t name[64];
    uint8_t version[64];
    int32_t reference_count;
    uint32_t reference_list_addr;
    uint32_t address;
    uint32_t size;
    uint32_t hdr_size;
    uint32_t start_addr;
    uint32_t stop_addr;
} kmod_info_32_v1_t;



typedef struct kmod_info_64_v1 {
    uint64_t next_addr;
    int32_t info_version;
    uint32_t id;
    uint8_t name[64];
    uint8_t version[64];
    int32_t reference_count;
    uint64_t reference_list_addr;
    uint64_t address;
    uint64_t size;
    uint64_t hdr_size;
    uint64_t start_addr;
    uint64_t stop_addr;
} kmod_info_64_v1_t;

#pragma pack()
# 174 "/usr/include/mach/kmod.h" 3 4
typedef void * kmod_args_t;
typedef int kmod_control_flavor_t;
typedef kmod_info_t * kmod_info_array_t;

}
# 109 "/usr/include/mach/mach_types.h" 2 3 4






typedef mach_port_t task_t;
typedef mach_port_t task_name_t;
typedef mach_port_t thread_t;
typedef mach_port_t thread_act_t;
typedef mach_port_t ipc_space_t;
typedef mach_port_t host_t;
typedef mach_port_t host_priv_t;
typedef mach_port_t host_security_t;
typedef mach_port_t processor_t;
typedef mach_port_t processor_set_t;
typedef mach_port_t processor_set_control_t;
typedef mach_port_t semaphore_t;
typedef mach_port_t lock_set_t;
typedef mach_port_t ledger_t;
typedef mach_port_t alarm_t;
typedef mach_port_t clock_serv_t;
typedef mach_port_t clock_ctrl_t;







typedef processor_set_t processor_set_name_t;




typedef mach_port_t clock_reply_t;
typedef mach_port_t bootstrap_t;
typedef mach_port_t mem_entry_name_port_t;
typedef mach_port_t exception_handler_t;
typedef exception_handler_t *exception_handler_array_t;
typedef mach_port_t vm_task_entry_t;
typedef mach_port_t io_master_t;
typedef mach_port_t UNDServerRef;
# 160 "/usr/include/mach/mach_types.h" 3 4
typedef task_t *task_array_t;
typedef thread_t *thread_array_t;
typedef processor_set_t *processor_set_array_t;
typedef processor_set_t *processor_set_name_array_t;
typedef processor_t *processor_array_t;
typedef thread_act_t *thread_act_array_t;
typedef ledger_t *ledger_array_t;







typedef task_t task_port_t;
typedef task_array_t task_port_array_t;
typedef thread_t thread_port_t;
typedef thread_array_t thread_port_array_t;
typedef ipc_space_t ipc_space_port_t;
typedef host_t host_name_t;
typedef host_t host_name_port_t;
typedef processor_set_t processor_set_port_t;
typedef processor_set_t processor_set_name_port_t;
typedef processor_set_array_t processor_set_name_port_array_t;
typedef processor_set_t processor_set_control_port_t;
typedef processor_t processor_port_t;
typedef processor_array_t processor_port_array_t;
typedef thread_act_t thread_act_port_t;
typedef thread_act_array_t thread_act_port_array_t;
typedef semaphore_t semaphore_port_t;
typedef lock_set_t lock_set_port_t;
typedef ledger_t ledger_port_t;
typedef ledger_array_t ledger_port_array_t;
typedef alarm_t alarm_port_t;
typedef clock_serv_t clock_serv_port_t;
typedef clock_ctrl_t clock_ctrl_port_t;
typedef exception_handler_t exception_port_t;
typedef exception_handler_array_t exception_port_arrary_t;
# 217 "/usr/include/mach/mach_types.h" 3 4
typedef natural_t ledger_item_t;


typedef mach_vm_offset_t *emulation_vector_t;
typedef char *user_subsystem_t;

typedef char *labelstr_t;




# 1 "/usr/include/mach/std_types.h" 1 3 4
# 229 "/usr/include/mach/mach_types.h" 2 3 4
# 43 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 2 3
# 1 "/usr/include/mach/mach_init.h" 1 3 4
# 70 "/usr/include/mach/mach_init.h" 3 4
extern "C" {
extern mach_port_t mach_task_self(void);
extern mach_port_t mach_host_self(void);
extern mach_port_t mach_thread_self(void);
extern kern_return_t host_page_size(host_t, vm_size_t *);

extern mach_port_t mach_task_self_;



}
# 1 "/usr/include/mach/mach_traps.h" 1 3 4
# 82 "/usr/include/mach/mach_traps.h" 3 4
extern "C" {



extern kern_return_t macx_swapon(
    uint64_t filename,
    int flags,
    int size,
    int priority);

extern kern_return_t macx_swapoff(
    uint64_t filename,
    int flags);

extern kern_return_t macx_triggers(
    int hi_water,
    int low_water,
    int flags,
    mach_port_t alert_port);

extern kern_return_t macx_backing_store_suspend(
    boolean_t suspend);

extern kern_return_t macx_backing_store_recovery(
    int pid);

extern boolean_t swtch_pri(int pri);

extern boolean_t swtch(void);

extern kern_return_t thread_switch(
    mach_port_name_t thread_name,
    int option,
    mach_msg_timeout_t option_time);

extern mach_port_name_t task_self_trap(void);





extern kern_return_t task_for_pid(
    mach_port_name_t target_tport,
    int pid,
    mach_port_name_t *t);

extern kern_return_t task_name_for_pid(
    mach_port_name_t target_tport,
    int pid,
    mach_port_name_t *tn);

extern kern_return_t pid_for_task(
    mach_port_name_t t,
    int *x);
# 150 "/usr/include/mach/mach_traps.h" 3 4
}
# 82 "/usr/include/mach/mach_init.h" 2 3 4
extern "C" {





extern mach_port_t bootstrap_port;
extern mach_port_t name_server_port;
extern mach_port_t environment_port;
extern mach_port_t service_port;
# 109 "/usr/include/mach/mach_init.h" 3 4
extern vm_size_t vm_page_size;
extern vm_size_t vm_page_mask;
extern int vm_page_shift;
# 127 "/usr/include/mach/mach_init.h" 3 4
extern int (*vprintf_stderr_func)(const char *format, va_list ap);
}
# 44 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 2 3





# 1 "/System/Library/Frameworks/IOKit.framework/Headers/IOTypes.h" 1 3
# 38 "/System/Library/Frameworks/IOKit.framework/Headers/IOTypes.h" 3
# 1 "/System/Library/Frameworks/IOKit.framework/Headers/IOReturn.h" 1 3
# 40 "/System/Library/Frameworks/IOKit.framework/Headers/IOReturn.h" 3
extern "C" {


# 1 "/usr/include/mach/error.h" 1 3 4
# 111 "/usr/include/mach/error.h" 3 4
typedef kern_return_t mach_error_t;
typedef mach_error_t (* mach_error_fn_t)( void );
# 44 "/System/Library/Frameworks/IOKit.framework/Headers/IOReturn.h" 2 3

typedef kern_return_t IOReturn;
# 134 "/System/Library/Frameworks/IOKit.framework/Headers/IOReturn.h" 3
}
# 39 "/System/Library/Frameworks/IOKit.framework/Headers/IOTypes.h" 2 3


extern "C" {
# 65 "/System/Library/Frameworks/IOKit.framework/Headers/IOTypes.h" 3
typedef UInt32 IOOptionBits;
typedef SInt32 IOFixed;
typedef UInt32 IOVersion;
typedef UInt32 IOItemCount;
typedef UInt32 IOCacheMode;

typedef UInt32 IOByteCount32;
typedef UInt64 IOByteCount64;

typedef UInt32 IOPhysicalAddress32;
typedef UInt64 IOPhysicalAddress64;
typedef UInt32 IOPhysicalLength32;
typedef UInt64 IOPhysicalLength64;


typedef mach_vm_address_t IOVirtualAddress;







typedef IOByteCount32 IOByteCount;


typedef IOVirtualAddress IOLogicalAddress;
# 102 "/System/Library/Frameworks/IOKit.framework/Headers/IOTypes.h" 3
typedef IOPhysicalAddress32 IOPhysicalAddress;
typedef IOPhysicalLength32 IOPhysicalLength;






typedef struct
{
    IOPhysicalAddress address;
    IOByteCount length;
} IOPhysicalRange;

typedef struct
{
    IOVirtualAddress address;
    IOByteCount length;
} IOVirtualRange;


typedef IOVirtualRange IOAddressRange;
# 135 "/System/Library/Frameworks/IOKit.framework/Headers/IOTypes.h" 3
typedef struct {
 int value;
 const char *name;
} IONamedValue;





typedef unsigned int IOAlignment;
# 159 "/System/Library/Frameworks/IOKit.framework/Headers/IOTypes.h" 3
typedef mach_port_t io_object_t;


# 1 "/usr/include/device/device_types.h" 1 3 4
# 77 "/usr/include/device/device_types.h" 3 4
typedef char * io_buf_ptr_t;
# 86 "/usr/include/device/device_types.h" 3 4
typedef char io_name_t[128];
typedef char io_string_t[512];
typedef char io_struct_inband_t[4096];


typedef uint64_t io_user_scalar_t;
typedef uint64_t io_user_reference_t;
typedef io_user_scalar_t io_scalar_inband_t[16];
typedef io_user_reference_t io_async_ref_t[8];
typedef io_user_scalar_t io_scalar_inband64_t[16];
typedef io_user_reference_t io_async_ref64_t[8];
# 163 "/System/Library/Frameworks/IOKit.framework/Headers/IOTypes.h" 2 3

typedef io_object_t io_connect_t;
typedef io_object_t io_enumerator_t;
typedef io_object_t io_iterator_t;
typedef io_object_t io_registry_entry_t;
typedef io_object_t io_service_t;






enum {
    kIODefaultMemoryType = 0
};

enum {
    kIODefaultCache = 0,
    kIOInhibitCache = 1,
    kIOWriteThruCache = 2,
    kIOCopybackCache = 3,
    kIOWriteCombineCache = 4
};


enum {
    kIOMapAnywhere = 0x00000001,

    kIOMapCacheMask = 0x00000700,
    kIOMapCacheShift = 8,
    kIOMapDefaultCache = kIODefaultCache << kIOMapCacheShift,
    kIOMapInhibitCache = kIOInhibitCache << kIOMapCacheShift,
    kIOMapWriteThruCache = kIOWriteThruCache << kIOMapCacheShift,
    kIOMapCopybackCache = kIOCopybackCache << kIOMapCacheShift,
    kIOMapWriteCombineCache = kIOWriteCombineCache << kIOMapCacheShift,

    kIOMapUserOptionsMask = 0x00000fff,

    kIOMapReadOnly = 0x00001000,

    kIOMapStatic = 0x01000000,
    kIOMapReference = 0x02000000,
    kIOMapUnique = 0x04000000
};
# 216 "/System/Library/Frameworks/IOKit.framework/Headers/IOTypes.h" 3
enum {
    kNanosecondScale = 1,
    kMicrosecondScale = 1000,
    kMillisecondScale = 1000 * 1000,
    kSecondScale = 1000 * 1000 * 1000,
    kTickScale = (kSecondScale / 100)
};




typedef unsigned int IODeviceNumber;



}
# 50 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 2 3
# 1 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitKeys.h" 1 3
# 51 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 2 3

# 1 "/System/Library/Frameworks/IOKit.framework/Headers/OSMessageNotification.h" 1 3
# 39 "/System/Library/Frameworks/IOKit.framework/Headers/OSMessageNotification.h" 3
extern "C" {






enum {
    kFirstIOKitNotificationType = 100,
    kIOServicePublishNotificationType = 100,
    kIOServiceMatchedNotificationType = 101,
    kIOServiceTerminatedNotificationType = 102,
    kIOAsyncCompletionNotificationType = 150,
    kIOServiceMessageNotificationType = 160,
    kLastIOKitNotificationType = 199
};

enum {
    kOSNotificationMessageID = 53,
    kOSAsyncCompleteMessageID = 57,
    kMaxAsyncArgs = 16
};

enum {
    kIOAsyncReservedIndex = 0,
    kIOAsyncReservedCount,

    kIOAsyncCalloutFuncIndex = kIOAsyncReservedCount,
    kIOAsyncCalloutRefconIndex,
    kIOAsyncCalloutCount,

    kIOMatchingCalloutFuncIndex = kIOAsyncReservedCount,
    kIOMatchingCalloutRefconIndex,
    kIOMatchingCalloutCount,

    kIOInterestCalloutFuncIndex = kIOAsyncReservedCount,
    kIOInterestCalloutRefconIndex,
    kIOInterestCalloutServiceIndex,
    kIOInterestCalloutCount
};




enum {
    kOSAsyncRef64Count = 8,
    kOSAsyncRef64Size = kOSAsyncRef64Count * ((int) sizeof(io_user_reference_t))
};
typedef io_user_reference_t OSAsyncReference64[kOSAsyncRef64Count];

struct OSNotificationHeader64 {
    mach_msg_size_t size;
    natural_t type;
    OSAsyncReference64 reference;




    unsigned char content[0];

};

#pragma pack(4)
struct IOServiceInterestContent64 {
    natural_t messageType;
    io_user_reference_t messageArgument[1];
};
#pragma pack()




enum {
    kOSAsyncRefCount = 8,
    kOSAsyncRefSize = 32
};
typedef natural_t OSAsyncReference[kOSAsyncRefCount];

struct OSNotificationHeader {
    mach_msg_size_t size;
    natural_t type;
    OSAsyncReference reference;




    unsigned char content[0];

};

#pragma pack(4)
struct IOServiceInterestContent {
    natural_t messageType;
    void * messageArgument[1];
};
#pragma pack()



struct IOAsyncCompletionContent {
    IOReturn result;



    void * args[0] __attribute__ ((packed));

};
# 154 "/System/Library/Frameworks/IOKit.framework/Headers/OSMessageNotification.h" 3
}
# 53 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 2 3



extern "C" {
# 65 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
typedef struct IONotificationPort * IONotificationPortRef;







typedef void
(*IOServiceMatchingCallback)(
 void * refcon,
 io_iterator_t iterator );
# 86 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
typedef void
(*IOServiceInterestCallback)(
 void * refcon,
 io_service_t service,
 uint32_t messageType,
 void * messageArgument );
# 100 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
extern
const mach_port_t kIOMasterPortDefault;
# 110 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
kern_return_t
IOMasterPort( mach_port_t bootstrapPort,
       mach_port_t * masterPort );
# 121 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
IONotificationPortRef
IONotificationPortCreate(
 mach_port_t masterPort );





void
IONotificationPortDestroy(
 IONotificationPortRef notify );







CFRunLoopSourceRef
IONotificationPortGetRunLoopSource(
 IONotificationPortRef notify );







mach_port_t
IONotificationPortGetMachPort(
 IONotificationPortRef notify );
# 160 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
void
IODispatchCalloutFromMessage(
        void *unused,
        mach_msg_header_t *msg,
        void *reference );
# 177 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
kern_return_t
IOCreateReceivePort( uint32_t msgType, mach_port_t * recvPort );
# 192 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
kern_return_t
IOObjectRelease(
 io_object_t object );







kern_return_t
IOObjectRetain(
 io_object_t object );
# 213 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
kern_return_t
IOObjectGetClass(
 io_object_t object,
 io_name_t className );







CFStringRef
IOObjectCopyClass(io_object_t object)
;







CFStringRef
IOObjectCopySuperclassForClass(CFStringRef classname)
;







CFStringRef
IOObjectCopyBundleIdentifierForClass(CFStringRef classname)
;
# 255 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
boolean_t
IOObjectConformsTo(
 io_object_t object,
 const io_name_t className );
# 267 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
boolean_t
IOObjectIsEqualTo(
 io_object_t object,
 io_object_t anObject );







uint32_t
IOObjectGetKernelRetainCount(
 io_object_t object )
;







uint32_t
IOObjectGetUserRetainCount(
 io_object_t object )
;







uint32_t
IOObjectGetRetainCount(
 io_object_t object );
# 317 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
io_object_t
IOIteratorNext(
 io_iterator_t iterator );






void
IOIteratorReset(
 io_iterator_t iterator );







boolean_t
IOIteratorIsValid(
 io_iterator_t iterator );
# 355 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
io_service_t
IOServiceGetMatchingService(
 mach_port_t masterPort,
 CFDictionaryRef matching );
# 368 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
kern_return_t
IOServiceGetMatchingServices(
 mach_port_t masterPort,
 CFDictionaryRef matching,
 io_iterator_t * existing );


kern_return_t
IOServiceAddNotification(
 mach_port_t masterPort,
 const io_name_t notificationType,
 CFDictionaryRef matching,
 mach_port_t wakePort,
 uintptr_t reference,
 io_iterator_t * notification ) __attribute__((deprecated));
# 400 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
kern_return_t
IOServiceAddMatchingNotification(
 IONotificationPortRef notifyPort,
 const io_name_t notificationType,
 CFDictionaryRef matching,
        IOServiceMatchingCallback callback,
        void * refCon,
 io_iterator_t * notification );
# 421 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
kern_return_t
IOServiceAddInterestNotification(
 IONotificationPortRef notifyPort,
        io_service_t service,
 const io_name_t interestType,
        IOServiceInterestCallback callback,
        void * refCon,
        io_object_t * notification );
# 438 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
kern_return_t
IOServiceMatchPropertyTable(
        io_service_t service,
        CFDictionaryRef matching,
        boolean_t * matches );
# 451 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
kern_return_t
IOServiceGetBusyState(
 io_service_t service,
 uint32_t * busyState );
# 463 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
kern_return_t
IOServiceWaitQuiet(
 io_service_t service,
 mach_timespec_t * waitTime );
# 475 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
kern_return_t
IOKitGetBusyState(
 mach_port_t masterPort,
 uint32_t * busyState );
# 487 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
kern_return_t
IOKitWaitQuiet(
 mach_port_t masterPort,
 mach_timespec_t * waitTime );
# 501 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
kern_return_t
IOServiceOpen(
 io_service_t service,
 task_port_t owningTask,
 uint32_t type,
 io_connect_t * connect );
# 515 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
kern_return_t
IOServiceRequestProbe(
 io_service_t service,
 uint32_t options );
# 532 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
kern_return_t
IOServiceClose(
 io_connect_t connect );







kern_return_t
IOConnectAddRef(
 io_connect_t connect );







kern_return_t
IOConnectRelease(
 io_connect_t connect );
# 563 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
kern_return_t
IOConnectGetService(
 io_connect_t connect,
 io_service_t * service );
# 577 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
kern_return_t
IOConnectSetNotificationPort(
 io_connect_t connect,
 uint32_t type,
 mach_port_t port,
 uintptr_t reference );
# 607 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
kern_return_t
IOConnectMapMemory(
  io_connect_t connect,
  uint32_t memoryType,
  task_port_t intoTask,
  mach_vm_address_t *atAddress,
  mach_vm_size_t *ofSize,
  IOOptionBits options );
# 629 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
kern_return_t IOConnectMapMemory64(
  io_connect_t connect,
  uint32_t memoryType,
  task_port_t intoTask,
  mach_vm_address_t *atAddress,
  mach_vm_size_t *ofSize,
  IOOptionBits options );
# 657 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
kern_return_t
IOConnectUnmapMemory(
 io_connect_t connect,
 uint32_t memoryType,
 task_port_t fromTask,
 mach_vm_address_t atAddress );
# 676 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
kern_return_t IOConnectUnmapMemory64(
 io_connect_t connect,
  uint32_t memoryType,
  task_port_t fromTask,
  mach_vm_address_t atAddress );
# 690 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
kern_return_t
IOConnectSetCFProperties(
 io_connect_t connect,
 CFTypeRef properties );
# 703 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
kern_return_t
IOConnectSetCFProperty(
 io_connect_t connect,
        CFStringRef propertyName,
 CFTypeRef property );





kern_return_t
IOConnectCallMethod(
 mach_port_t connection,
 uint32_t selector,
 const uint64_t *input,
 uint32_t inputCnt,
 const void *inputStruct,
 size_t inputStructCnt,
 uint64_t *output,
 uint32_t *outputCnt,
 void *outputStruct,
 size_t *outputStructCnt)
;

kern_return_t
IOConnectCallAsyncMethod(
 mach_port_t connection,
 uint32_t selector,
 mach_port_t wake_port,
 uint64_t *reference,
 uint32_t referenceCnt,
 const uint64_t *input,
 uint32_t inputCnt,
 const void *inputStruct,
 size_t inputStructCnt,
 uint64_t *output,
 uint32_t *outputCnt,
 void *outputStruct,
 size_t *outputStructCnt)
;

kern_return_t
IOConnectCallStructMethod(
 mach_port_t connection,
 uint32_t selector,
 const void *inputStruct,
 size_t inputStructCnt,
 void *outputStruct,
 size_t *outputStructCnt)
;

kern_return_t
IOConnectCallAsyncStructMethod(
 mach_port_t connection,
 uint32_t selector,
 mach_port_t wake_port,
 uint64_t *reference,
 uint32_t referenceCnt,
 const void *inputStruct,
 size_t inputStructCnt,
 void *outputStruct,
 size_t *outputStructCnt)
;

kern_return_t
IOConnectCallScalarMethod(
 mach_port_t connection,
 uint32_t selector,
 const uint64_t *input,
 uint32_t inputCnt,
 uint64_t *output,
 uint32_t *outputCnt)
;

kern_return_t
IOConnectCallAsyncScalarMethod(
 mach_port_t connection,
 uint32_t selector,
 mach_port_t wake_port,
 uint64_t *reference,
 uint32_t referenceCnt,
 const uint64_t *input,
 uint32_t inputCnt,
 uint64_t *output,
 uint32_t *outputCnt)
;



kern_return_t
IOConnectTrap0(io_connect_t connect,
        uint32_t index );

kern_return_t
IOConnectTrap1(io_connect_t connect,
        uint32_t index,
        uintptr_t p1 );

kern_return_t
IOConnectTrap2(io_connect_t connect,
        uint32_t index,
        uintptr_t p1,
        uintptr_t p2);

kern_return_t
IOConnectTrap3(io_connect_t connect,
        uint32_t index,
        uintptr_t p1,
        uintptr_t p2,
        uintptr_t p3);

kern_return_t
IOConnectTrap4(io_connect_t connect,
        uint32_t index,
        uintptr_t p1,
        uintptr_t p2,
        uintptr_t p3,
        uintptr_t p4);

kern_return_t
IOConnectTrap5(io_connect_t connect,
        uint32_t index,
        uintptr_t p1,
        uintptr_t p2,
        uintptr_t p3,
        uintptr_t p4,
        uintptr_t p5);

kern_return_t
IOConnectTrap6(io_connect_t connect,
        uint32_t index,
        uintptr_t p1,
        uintptr_t p2,
        uintptr_t p3,
        uintptr_t p4,
        uintptr_t p5,
        uintptr_t p6);
# 850 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
kern_return_t
IOConnectAddClient(
 io_connect_t connect,
 io_connect_t client );
# 867 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
io_registry_entry_t
IORegistryGetRootEntry(
 mach_port_t masterPort );
# 878 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
io_registry_entry_t
IORegistryEntryFromPath(
 mach_port_t masterPort,
 const io_string_t path );


enum {
    kIORegistryIterateRecursively = 0x00000001,
    kIORegistryIterateParents = 0x00000002
};
# 898 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
kern_return_t
IORegistryCreateIterator(
 mach_port_t masterPort,
 const io_name_t plane,
 IOOptionBits options,
 io_iterator_t * iterator );
# 914 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
kern_return_t
IORegistryEntryCreateIterator(
 io_registry_entry_t entry,
 const io_name_t plane,
 IOOptionBits options,
 io_iterator_t * iterator );
# 932 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
kern_return_t
IORegistryIteratorEnterEntry(
 io_iterator_t iterator );






kern_return_t
IORegistryIteratorExitEntry(
 io_iterator_t iterator );
# 958 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
kern_return_t
IORegistryEntryGetName(
 io_registry_entry_t entry,
 io_name_t name );
# 971 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
kern_return_t
IORegistryEntryGetNameInPlane(
 io_registry_entry_t entry,
 const io_name_t plane,
 io_name_t name );
# 985 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
kern_return_t
IORegistryEntryGetLocationInPlane(
 io_registry_entry_t entry,
 const io_name_t plane,
 io_name_t location );
# 999 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
kern_return_t
IORegistryEntryGetPath(
 io_registry_entry_t entry,
 const io_name_t plane,
 io_string_t path );
# 1012 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
kern_return_t
IORegistryEntryGetRegistryEntryID(
 io_registry_entry_t entry,
 uint64_t * entryID );
# 1026 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
kern_return_t
IORegistryEntryCreateCFProperties(
 io_registry_entry_t entry,
 CFMutableDictionaryRef * properties,
        CFAllocatorRef allocator,
 IOOptionBits options );
# 1042 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
CFTypeRef
IORegistryEntryCreateCFProperty(
 io_registry_entry_t entry,
 CFStringRef key,
        CFAllocatorRef allocator,
 IOOptionBits options );
# 1060 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
CFTypeRef
IORegistryEntrySearchCFProperty(
 io_registry_entry_t entry,
 const io_name_t plane,
 CFStringRef key,
        CFAllocatorRef allocator,
 IOOptionBits options );




kern_return_t
IORegistryEntryGetProperty(
 io_registry_entry_t entry,
 const io_name_t propertyName,
 io_struct_inband_t buffer,
 uint32_t * size );
# 1085 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
kern_return_t
IORegistryEntrySetCFProperties(
 io_registry_entry_t entry,
 CFTypeRef properties );
# 1098 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
kern_return_t
IORegistryEntrySetCFProperty(
 io_registry_entry_t entry,
        CFStringRef propertyName,
 CFTypeRef property );
# 1112 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
kern_return_t
IORegistryEntryGetChildIterator(
 io_registry_entry_t entry,
 const io_name_t plane,
 io_iterator_t * iterator );
# 1126 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
kern_return_t
IORegistryEntryGetChildEntry(
 io_registry_entry_t entry,
 const io_name_t plane,
 io_registry_entry_t * child );
# 1140 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
kern_return_t
IORegistryEntryGetParentIterator(
 io_registry_entry_t entry,
 const io_name_t plane,
 io_iterator_t * iterator );
# 1154 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
kern_return_t
IORegistryEntryGetParentEntry(
 io_registry_entry_t entry,
 const io_name_t plane,
 io_registry_entry_t * parent );
# 1167 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
boolean_t
IORegistryEntryInPlane(
 io_registry_entry_t entry,
 const io_name_t plane );
# 1184 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
CFMutableDictionaryRef
IOServiceMatching(
 const char * name );







CFMutableDictionaryRef
IOServiceNameMatching(
 const char * name );
# 1206 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
CFMutableDictionaryRef
IOBSDNameMatching(
 mach_port_t masterPort,
 uint32_t options,
 const char * bsdName );
# 1220 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
CFMutableDictionaryRef
IOOpenFirmwarePathMatching(
 mach_port_t masterPort,
 uint32_t options,
 const char * path );







CFMutableDictionaryRef
IORegistryEntryIDMatching(
 uint64_t entryID );
# 1246 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
kern_return_t
IOServiceOFPathToBSDName(mach_port_t masterPort,
                         const io_name_t openFirmwarePath,
                         io_name_t bsdName);
# 1259 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
typedef void (*IOAsyncCallback0)(void *refcon, IOReturn result);
# 1269 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
typedef void (*IOAsyncCallback1)(void *refcon, IOReturn result, void *arg0);
# 1279 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
typedef void (*IOAsyncCallback2)(void *refcon, IOReturn result, void *arg0, void *arg1);
# 1289 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
typedef void (*IOAsyncCallback)(void *refcon, IOReturn result, void **args,
                                uint32_t numArgs);




kern_return_t
OSGetNotificationFromMessage(
 mach_msg_header_t * msg,
 uint32_t index,
        uint32_t * type,
        uintptr_t * reference,
 void ** content,
        vm_size_t * size );





kern_return_t
IOCatalogueSendData(
        mach_port_t masterPort,
        uint32_t flag,
        const char *buffer,
        uint32_t size );

kern_return_t
IOCatalogueTerminate(
        mach_port_t masterPort,
        uint32_t flag,
 io_name_t description );

kern_return_t
IOCatalogueGetData(
        mach_port_t masterPort,
        uint32_t flag,
        char **buffer,
        uint32_t *size );

kern_return_t
IOCatalogueModuleLoaded(
        mach_port_t masterPort,
        io_name_t name );

kern_return_t
IOCatalogueReset(
        mach_port_t masterPort,
        uint32_t flag );
# 1510 "/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h" 3
}
# 29 "/System/Library/Frameworks/DiskArbitration.framework/Headers/DADisk.h" 2 3

# 1 "/System/Library/Frameworks/DiskArbitration.framework/Headers/DASession.h" 1 3
# 30 "/System/Library/Frameworks/DiskArbitration.framework/Headers/DASession.h" 3
extern "C" {
# 40 "/System/Library/Frameworks/DiskArbitration.framework/Headers/DASession.h" 3
typedef struct __DASession * DASessionRef;






extern CFTypeID DASessionGetTypeID( void );
# 58 "/System/Library/Frameworks/DiskArbitration.framework/Headers/DASession.h" 3
extern DASessionRef DASessionCreate( CFAllocatorRef allocator );
# 68 "/System/Library/Frameworks/DiskArbitration.framework/Headers/DASession.h" 3
extern void DASessionScheduleWithRunLoop( DASessionRef session, CFRunLoopRef runLoop, CFStringRef runLoopMode );
# 78 "/System/Library/Frameworks/DiskArbitration.framework/Headers/DASession.h" 3
extern void DASessionUnscheduleFromRunLoop( DASessionRef session, CFRunLoopRef runLoop, CFStringRef runLoopMode );






typedef struct __DASession * DAApprovalSessionRef;






extern CFTypeID DAApprovalSessionGetTypeID( void );
# 103 "/System/Library/Frameworks/DiskArbitration.framework/Headers/DASession.h" 3
extern DAApprovalSessionRef DAApprovalSessionCreate( CFAllocatorRef allocator );
# 113 "/System/Library/Frameworks/DiskArbitration.framework/Headers/DASession.h" 3
extern void DAApprovalSessionScheduleWithRunLoop( DAApprovalSessionRef session, CFRunLoopRef runLoop, CFStringRef runLoopMode );
# 123 "/System/Library/Frameworks/DiskArbitration.framework/Headers/DASession.h" 3
extern void DAApprovalSessionUnscheduleFromRunLoop( DAApprovalSessionRef session, CFRunLoopRef runLoop, CFStringRef runLoopMode );




}
# 31 "/System/Library/Frameworks/DiskArbitration.framework/Headers/DADisk.h" 2 3


extern "C" {


extern const CFStringRef kDADiskDescriptionVolumeKindKey;
extern const CFStringRef kDADiskDescriptionVolumeMountableKey;
extern const CFStringRef kDADiskDescriptionVolumeNameKey;
extern const CFStringRef kDADiskDescriptionVolumeNetworkKey;
extern const CFStringRef kDADiskDescriptionVolumePathKey;
extern const CFStringRef kDADiskDescriptionVolumeUUIDKey;

extern const CFStringRef kDADiskDescriptionMediaBlockSizeKey;
extern const CFStringRef kDADiskDescriptionMediaBSDMajorKey;
extern const CFStringRef kDADiskDescriptionMediaBSDMinorKey;
extern const CFStringRef kDADiskDescriptionMediaBSDNameKey;
extern const CFStringRef kDADiskDescriptionMediaBSDUnitKey;
extern const CFStringRef kDADiskDescriptionMediaContentKey;
extern const CFStringRef kDADiskDescriptionMediaEjectableKey;
extern const CFStringRef kDADiskDescriptionMediaIconKey;
extern const CFStringRef kDADiskDescriptionMediaKindKey;
extern const CFStringRef kDADiskDescriptionMediaLeafKey;
extern const CFStringRef kDADiskDescriptionMediaNameKey;
extern const CFStringRef kDADiskDescriptionMediaPathKey;
extern const CFStringRef kDADiskDescriptionMediaRemovableKey;
extern const CFStringRef kDADiskDescriptionMediaSizeKey;
extern const CFStringRef kDADiskDescriptionMediaTypeKey;
extern const CFStringRef kDADiskDescriptionMediaUUIDKey;
extern const CFStringRef kDADiskDescriptionMediaWholeKey;
extern const CFStringRef kDADiskDescriptionMediaWritableKey;

extern const CFStringRef kDADiskDescriptionDeviceGUIDKey;
extern const CFStringRef kDADiskDescriptionDeviceInternalKey;
extern const CFStringRef kDADiskDescriptionDeviceModelKey;
extern const CFStringRef kDADiskDescriptionDevicePathKey;
extern const CFStringRef kDADiskDescriptionDeviceProtocolKey;
extern const CFStringRef kDADiskDescriptionDeviceRevisionKey;
extern const CFStringRef kDADiskDescriptionDeviceUnitKey;
extern const CFStringRef kDADiskDescriptionDeviceVendorKey;

extern const CFStringRef kDADiskDescriptionBusNameKey;
extern const CFStringRef kDADiskDescriptionBusPathKey;
# 81 "/System/Library/Frameworks/DiskArbitration.framework/Headers/DADisk.h" 3
typedef struct __DADisk * DADiskRef;






extern CFTypeID DADiskGetTypeID( void );
# 103 "/System/Library/Frameworks/DiskArbitration.framework/Headers/DADisk.h" 3
extern DADiskRef DADiskCreateFromBSDName( CFAllocatorRef allocator, DASessionRef session, const char * name );
# 118 "/System/Library/Frameworks/DiskArbitration.framework/Headers/DADisk.h" 3
extern DADiskRef DADiskCreateFromIOMedia( CFAllocatorRef allocator, DASessionRef session, io_service_t media );
# 129 "/System/Library/Frameworks/DiskArbitration.framework/Headers/DADisk.h" 3
extern const char * DADiskGetBSDName( DADiskRef disk );
# 142 "/System/Library/Frameworks/DiskArbitration.framework/Headers/DADisk.h" 3
extern io_service_t DADiskCopyIOMedia( DADiskRef disk );
# 160 "/System/Library/Frameworks/DiskArbitration.framework/Headers/DADisk.h" 3
extern CFDictionaryRef DADiskCopyDescription( DADiskRef disk );
# 173 "/System/Library/Frameworks/DiskArbitration.framework/Headers/DADisk.h" 3
extern DADiskRef DADiskCopyWholeDisk( DADiskRef disk );




}
# 63 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 2 3
# 71 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern "C" {


#pragma pack(push, 2)




struct HFSUniStr255 {
  UInt16 length;
  UniChar unicode[255];
};
typedef struct HFSUniStr255 HFSUniStr255;
typedef const HFSUniStr255 * ConstHFSUniStr255Param;
# 97 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
enum {
  fsCurPerm = 0x00,
  fsRdPerm = 0x01,
  fsWrPerm = 0x02,
  fsRdWrPerm = 0x03,
  fsRdWrShPerm = 0x04
};
# 115 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
enum {
  fsRdAccessPerm = 0x01,
  fsWrAccessPerm = 0x02,
  fsRdDenyPerm = 0x10,
  fsWrDenyPerm = 0x20
};

enum {
  fsRtParID = 1,
  fsRtDirID = 2
};

enum {
  fsAtMark = 0,
  fsFromStart = 1,
  fsFromLEOF = 2,
  fsFromMark = 3
};

enum {

  kFSAllowConcurrentAsyncIOBit = 3,
  kFSAllowConcurrentAsyncIOMask = 0x0008,
  kFSPleaseCacheBit = 4,
  kFSPleaseCacheMask = 0x0010,
  kFSNoCacheBit = 5,
  kFSNoCacheMask = 0x0020,
  kFSRdVerifyBit = 6,
  kFSRdVerifyMask = 0x0040,
  kFSForceReadBit = 6,
  kFSForceReadMask = 0x0040,
  kFSNewLineBit = 7,
  kFSNewLineMask = 0x0080,
  kFSNewLineCharMask = 0xFF00
};


enum {

  fsSBPartialName = 0x01,
  fsSBFullName = 0x02,
  fsSBFlAttrib = 0x04,
  fsSBFlFndrInfo = 0x08,
  fsSBFlLgLen = 0x20,
  fsSBFlPyLen = 0x40,
  fsSBFlRLgLen = 0x80,
  fsSBFlRPyLen = 0x0100,
  fsSBFlCrDat = 0x0200,
  fsSBFlMdDat = 0x0400,
  fsSBFlBkDat = 0x0800,
  fsSBFlXFndrInfo = 0x1000,
  fsSBFlParID = 0x2000,
  fsSBNegate = 0x4000,
  fsSBDrUsrWds = 0x08,
  fsSBDrNmFls = 0x10,
  fsSBDrCrDat = 0x0200,
  fsSBDrMdDat = 0x0400,
  fsSBDrBkDat = 0x0800,
  fsSBDrFndrInfo = 0x1000,
  fsSBDrParID = 0x2000,
  fsSBNodeID = 0x8000,
  fsSBAttributeModDate = 0x00010000,
  fsSBAccessDate = 0x00020000,
  fsSBPermissions = 0x00040000,
  fsSBSkipPackageContents = 0x00080000,
  fsSBSkipHiddenItems = 0x00100000,
  fsSBUserID = 0x00200000,
  fsSBGroupID = 0x00400000
};

enum {

  fsSBPartialNameBit = 0,
  fsSBFullNameBit = 1,
  fsSBFlAttribBit = 2,
  fsSBFlFndrInfoBit = 3,
  fsSBFlLgLenBit = 5,
  fsSBFlPyLenBit = 6,
  fsSBFlRLgLenBit = 7,
  fsSBFlRPyLenBit = 8,
  fsSBFlCrDatBit = 9,
  fsSBFlMdDatBit = 10,
  fsSBFlBkDatBit = 11,
  fsSBFlXFndrInfoBit = 12,
  fsSBFlParIDBit = 13,
  fsSBNegateBit = 14,
  fsSBDrUsrWdsBit = 3,
  fsSBDrNmFlsBit = 4,
  fsSBDrCrDatBit = 9,
  fsSBDrMdDatBit = 10,
  fsSBDrBkDatBit = 11,
  fsSBDrFndrInfoBit = 12,
  fsSBDrParIDBit = 13,
  fsSBNodeIDBit = 15,
  fsSBAttributeModDateBit = 16,
  fsSBAccessDateBit = 17,
  fsSBPermissionsBit = 18,
  fsSBSkipPackageContentsBit = 19,
  fsSBSkipHiddenItemsBit = 20,
  fsSBUserIDBit = 21,
  fsSBGroupIDBit = 22
};

enum {

  bLimitFCBs = 31,
  bLocalWList = 30,
  bNoMiniFndr = 29,
  bNoVNEdit = 28,
  bNoLclSync = 27,
  bTrshOffLine = 26,
  bNoSwitchTo = 25,
  bNoDeskItems = 20,
  bNoBootBlks = 19,
  bAccessCntl = 18,
  bNoSysDir = 17,
  bHasExtFSVol = 16,
  bHasOpenDeny = 15,
  bHasCopyFile = 14,
  bHasMoveRename = 13,
  bHasDesktopMgr = 12,
  bHasShortName = 11,
  bHasFolderLock = 10,
  bHasPersonalAccessPrivileges = 9,
  bHasUserGroupList = 8,
  bHasCatSearch = 7,
  bHasFileIDs = 6,
  bHasBTreeMgr = 5,
  bHasBlankAccessPrivileges = 4,
  bSupportsAsyncRequests = 3,
  bSupportsTrashVolumeCache = 2
};

enum {

  bHasDirectIO = 1
};

enum {

  bIsEjectable = 0,
  bSupportsHFSPlusAPIs = 1,
  bSupportsFSCatalogSearch = 2,
  bSupportsFSExchangeObjects = 3,
  bSupports2TBFiles = 4,
  bSupportsLongNames = 5,
  bSupportsMultiScriptNames = 6,
  bSupportsNamedForks = 7,
  bSupportsSubtreeIterators = 8,
  bL2PCanMapFileBlocks = 9,
  bParentModDateChanges = 10,
  bAncestorModDateChanges = 11,
  bSupportsSymbolicLinks = 13,
  bIsAutoMounted = 14,
  bAllowCDiDataHandler = 17,
  bSupportsExclusiveLocks = 18,
  bSupportsJournaling = 19,
  bNoVolumeSizes = 20,
  bIsOnInternalBus = 21,
  bIsCaseSensitive = 22,
  bIsCasePreserving = 23,
  bDoNotDisplay = 24,
  bIsRemovable = 25,
  bNoRootTimes = 26,
  bIsOnExternalBus = 27,
  bSupportsExtendedFileSecurity = 28
};






enum {

  kWidePosOffsetBit = 8,
  kUseWidePositioning = (1 << kWidePosOffsetBit),
  kMaximumBlocksIn4GB = 0x007FFFFF
};

enum {

  fsUnixPriv = 1
};

enum {

  kNoUserAuthentication = 1,
  kPassword = 2,
  kEncryptPassword = 3,
  kTwoWayEncryptPassword = 6
};



enum {
  knoUser = 0,
  kadministratorUser = 1
};

enum {
  knoGroup = 0
};


typedef SInt16 FSVolumeRefNum;

typedef int FSIORefNum;




enum {
  kFSInvalidVolumeRefNum = 0
};

struct FSRef {
  UInt8 hidden[80];
};
typedef struct FSRef FSRef;
typedef FSRef * FSRefPtr;
typedef struct __FSFileSecurity* FSFileSecurityRef;

struct CatPositionRec {
  SInt32 initialize;
  SInt16 priv[6];
};
typedef struct CatPositionRec CatPositionRec;

struct FSSpec {
  UInt8 hidden[70];
};
typedef struct FSSpec FSSpec;
# 357 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
typedef FSSpec * FSSpecPtr;
typedef FSSpecPtr * FSSpecHandle;

typedef FSSpecPtr FSSpecArrayPtr;




typedef const FSSpec * ConstFSSpecPtr;
typedef union ParamBlockRec ParamBlockRec;

typedef void * ParmBlkPtr;




typedef void ( * IOCompletionProcPtr)(ParmBlkPtr paramBlock);
typedef IOCompletionProcPtr IOCompletionUPP;
# 1067 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
struct FSPermissionInfo {
  UInt32 userID;
  UInt32 groupID;
  UInt8 reserved1;
  UInt8 userAccess;
  UInt16 mode;
  FSFileSecurityRef fileSec;
};
typedef struct FSPermissionInfo FSPermissionInfo;


typedef UInt32 FSCatalogInfoBitmap;
enum {
  kFSCatInfoNone = 0x00000000,
  kFSCatInfoTextEncoding = 0x00000001,
  kFSCatInfoNodeFlags = 0x00000002,
  kFSCatInfoVolume = 0x00000004,
  kFSCatInfoParentDirID = 0x00000008,
  kFSCatInfoNodeID = 0x00000010,
  kFSCatInfoCreateDate = 0x00000020,
  kFSCatInfoContentMod = 0x00000040,
  kFSCatInfoAttrMod = 0x00000080,
  kFSCatInfoAccessDate = 0x00000100,
  kFSCatInfoBackupDate = 0x00000200,
  kFSCatInfoPermissions = 0x00000400,
  kFSCatInfoFinderInfo = 0x00000800,
  kFSCatInfoFinderXInfo = 0x00001000,
  kFSCatInfoValence = 0x00002000,
  kFSCatInfoDataSizes = 0x00004000,
  kFSCatInfoRsrcSizes = 0x00008000,
  kFSCatInfoSharingFlags = 0x00010000,
  kFSCatInfoUserPrivs = 0x00020000,
  kFSCatInfoUserAccess = 0x00080000,
  kFSCatInfoSetOwnership = 0x00100000,
  kFSCatInfoFSFileSecurityRef = 0x00400000,
  kFSCatInfoAllDates = 0x000003E0,
  kFSCatInfoGettableInfo = 0x0003FFFF,
  kFSCatInfoSettableInfo = 0x00001FE3,
  kFSCatInfoReserved = (int)0xFFFC0000
};


enum {
  kFSNodeLockedBit = 0,
  kFSNodeLockedMask = 0x0001,
  kFSNodeResOpenBit = 2,
  kFSNodeResOpenMask = 0x0004,
  kFSNodeDataOpenBit = 3,
  kFSNodeDataOpenMask = 0x0008,
  kFSNodeIsDirectoryBit = 4,
  kFSNodeIsDirectoryMask = 0x0010,
  kFSNodeCopyProtectBit = 6,
  kFSNodeCopyProtectMask = 0x0040,
  kFSNodeForkOpenBit = 7,
  kFSNodeForkOpenMask = 0x0080,
  kFSNodeHardLinkBit = 8,
  kFSNodeHardLinkMask = 0x00000100
};


enum {
  kFSNodeInSharedBit = 2,
  kFSNodeInSharedMask = 0x0004,
  kFSNodeIsMountedBit = 3,
  kFSNodeIsMountedMask = 0x0008,
  kFSNodeIsSharePointBit = 5,
  kFSNodeIsSharePointMask = 0x0020
};
# 1148 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
struct FSCatalogInfo {





  UInt16 nodeFlags;




  FSVolumeRefNum volume;





  UInt32 parentDirID;




  UInt32 nodeID;





  UInt8 sharingFlags;
  UInt8 userPrivileges;
  UInt8 reserved1;




  UInt8 reserved2;




  UTCDateTime createDate;





  UTCDateTime contentModDate;





  UTCDateTime attributeModDate;





  UTCDateTime accessDate;





  UTCDateTime backupDate;





  FSPermissionInfo permissions;





  UInt8 finderInfo[16];





  UInt8 extFinderInfo[16];






  UInt64 dataLogicalSize;





  UInt64 dataPhysicalSize;





  UInt64 rsrcLogicalSize;





  UInt64 rsrcPhysicalSize;





  UInt32 valence;





  TextEncoding textEncodingHint;
};
typedef struct FSCatalogInfo FSCatalogInfo;
# 1300 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
typedef FSCatalogInfo * FSCatalogInfoPtr;
struct FSRefParam {
  QElemPtr qLink;
  SInt16 qType;
  SInt16 ioTrap;
  Ptr ioCmdAddr;
  IOCompletionUPP ioCompletion;
  volatile OSErr ioResult;
  ConstStringPtr ioNamePtr;
  FSVolumeRefNum ioVRefNum;

  SInt16 reserved1;
  UInt8 reserved2;
  UInt8 reserved3;

  const FSRef * ref;
  FSCatalogInfoBitmap whichInfo;
  FSCatalogInfo * catInfo;
  UniCharCount nameLength;
  const UniChar * name;
  UInt32 ioDirID;
  FSSpecPtr spec;
  FSRef * parentRef;
  FSRef * newRef;
  TextEncoding textEncodingHint;
  HFSUniStr255 * outName;
};
typedef struct FSRefParam FSRefParam;
typedef FSRefParam * FSRefParamPtr;

struct FSRefForkIOParam {
  QElemPtr qLink;
  SInt16 qType;
  SInt16 ioTrap;
  Ptr ioCmdAddr;
  IOCompletionUPP ioCompletion;
  volatile OSErr ioResult;
  const FSRef * parentRef;
  UniCharCount nameLength;
  const UniChar * name;
  FSCatalogInfoBitmap whichInfo;
  const FSCatalogInfo * catInfo;
  UniCharCount forkNameLength;
  const UniChar * forkName;
  SInt8 permissions;
  UInt8 reserved1;
  FSIORefNum forkRefNum;
  FSRef * newRef;
};
typedef struct FSRefForkIOParam FSRefForkIOParam;
typedef FSRefForkIOParam * FSRefForkIOParamPtr;
typedef struct OpaqueFSIterator* FSIterator;
enum {
  kFSIterateFlat = 0,
  kFSIterateSubtree = 1,
  kFSIterateDelete = 2,
  kFSIterateReserved = (int)0xFFFFFFFC
};

typedef OptionBits FSIteratorFlags;
struct FSSearchParams {
  Duration searchTime;
  OptionBits searchBits;
  UniCharCount searchNameLength;
  const UniChar * searchName;
  FSCatalogInfo * searchInfo1;
  FSCatalogInfo * searchInfo2;
};
typedef struct FSSearchParams FSSearchParams;
typedef FSSearchParams * FSSearchParamsPtr;
struct FSCatalogBulkParam {
  QElemPtr qLink;
  SInt16 qType;
  SInt16 ioTrap;
  Ptr ioCmdAddr;
  IOCompletionUPP ioCompletion;
  volatile OSErr ioResult;
  Boolean containerChanged;
  UInt8 reserved;

  FSIteratorFlags iteratorFlags;
  FSIterator iterator;
  const FSRef * container;
  ItemCount maximumItems;
  ItemCount actualItems;
  FSCatalogInfoBitmap whichInfo;
  FSCatalogInfo * catalogInfo;
  FSRef * refs;
  FSSpecPtr specs;
  HFSUniStr255 * names;
  const FSSearchParams * searchParams;
};
typedef struct FSCatalogBulkParam FSCatalogBulkParam;
typedef FSCatalogBulkParam * FSCatalogBulkParamPtr;
typedef UInt16 FSAllocationFlags;
enum {
  kFSAllocDefaultFlags = 0x0000,
  kFSAllocAllOrNothingMask = 0x0001,
  kFSAllocContiguousMask = 0x0002,
  kFSAllocNoRoundUpMask = 0x0004,
  kFSAllocReservedMask = 0xFFF8
};

struct FSForkIOParam {
  QElemPtr qLink;
  SInt16 qType;
  SInt16 ioTrap;
  Ptr ioCmdAddr;
  IOCompletionUPP ioCompletion;
  volatile OSErr ioResult;
  void * reserved1;
  SInt16 reserved2;
  FSIORefNum forkRefNum;
  UInt8 reserved3;
  SInt8 permissions;
  const FSRef * ref;


  Ptr buffer;
  UInt32 requestCount;
  UInt32 actualCount;
  UInt16 positionMode;
  SInt64 positionOffset;

  FSAllocationFlags allocationFlags;
  UInt64 allocationAmount;

  UniCharCount forkNameLength;
  const UniChar * forkName;

  CatPositionRec forkIterator;
  HFSUniStr255 * outForkName;
};
typedef struct FSForkIOParam FSForkIOParam;
typedef FSForkIOParam * FSForkIOParamPtr;
typedef UInt8 FSForkInfoFlags;
struct FSForkInfo {
  FSForkInfoFlags flags;
  SInt8 permissions;
  FSVolumeRefNum volume;
  UInt32 reserved2;
  UInt32 nodeID;
  UInt32 forkID;
  UInt64 currentPosition;
  UInt64 logicalEOF;
  UInt64 physicalEOF;
  UInt64 process;
};
typedef struct FSForkInfo FSForkInfo;
typedef FSForkInfo * FSForkInfoPtr;
struct FSForkCBInfoParam {
  QElemPtr qLink;
  SInt16 qType;
  SInt16 ioTrap;
  Ptr ioCmdAddr;
  IOCompletionUPP ioCompletion;
  volatile OSErr ioResult;
  FSIORefNum desiredRefNum;
  FSVolumeRefNum volumeRefNum;
  FSIORefNum iterator;
  FSVolumeRefNum actualRefNum;

  FSRef * ref;
  FSForkInfo * forkInfo;
  HFSUniStr255 * forkName;
};
typedef struct FSForkCBInfoParam FSForkCBInfoParam;
typedef FSForkCBInfoParam * FSForkCBInfoParamPtr;

struct FSRangeLockParam {
  QElemPtr qLink;
  SInt16 qType;
  SInt16 ioTrap;
  Ptr ioCmdAddr;
  IOCompletionUPP ioCompletion;
  volatile OSErr ioResult;
  FSIORefNum forkRefNum;
  UInt64 requestCount;
  UInt16 positionMode;
  SInt64 positionOffset;
  UInt64 rangeStart;

};
typedef struct FSRangeLockParam FSRangeLockParam;
typedef FSRangeLockParam * FSRangeLockParamPtr;
typedef UInt32 FSVolumeInfoBitmap;
enum {
  kFSVolInfoNone = 0x0000,
  kFSVolInfoCreateDate = 0x0001,
  kFSVolInfoModDate = 0x0002,
  kFSVolInfoBackupDate = 0x0004,
  kFSVolInfoCheckedDate = 0x0008,
  kFSVolInfoFileCount = 0x0010,
  kFSVolInfoDirCount = 0x0020,
  kFSVolInfoSizes = 0x0040,
  kFSVolInfoBlocks = 0x0080,
  kFSVolInfoNextAlloc = 0x0100,
  kFSVolInfoRsrcClump = 0x0200,
  kFSVolInfoDataClump = 0x0400,
  kFSVolInfoNextID = 0x0800,
  kFSVolInfoFinderInfo = 0x1000,
  kFSVolInfoFlags = 0x2000,
  kFSVolInfoFSInfo = 0x4000,
  kFSVolInfoDriveInfo = 0x8000,
  kFSVolInfoGettableInfo = 0xFFFF,
  kFSVolInfoSettableInfo = 0x3004
};


enum {
  kFSVolFlagDefaultVolumeBit = 5,
  kFSVolFlagDefaultVolumeMask = 0x0020,
  kFSVolFlagFilesOpenBit = 6,
  kFSVolFlagFilesOpenMask = 0x0040,
  kFSVolFlagHardwareLockedBit = 7,
  kFSVolFlagHardwareLockedMask = 0x0080,
  kFSVolFlagJournalingActiveBit = 14,
  kFSVolFlagJournalingActiveMask = 0x4000,
  kFSVolFlagSoftwareLockedBit = 15,
  kFSVolFlagSoftwareLockedMask = 0x8000
};


struct FSVolumeInfo {

  UTCDateTime createDate;
  UTCDateTime modifyDate;
  UTCDateTime backupDate;
  UTCDateTime checkedDate;


  UInt32 fileCount;
  UInt32 folderCount;


  UInt64 totalBytes;
  UInt64 freeBytes;


  UInt32 blockSize;
  UInt32 totalBlocks;
  UInt32 freeBlocks;
  UInt32 nextAllocation;
  UInt32 rsrcClumpSize;
  UInt32 dataClumpSize;
  UInt32 nextCatalogID;
  UInt8 finderInfo[32];


  UInt16 flags;
  UInt16 filesystemID;
  UInt16 signature;
  UInt16 driveNumber;
  FSIORefNum driverRefNum;
};
typedef struct FSVolumeInfo FSVolumeInfo;
typedef FSVolumeInfo * FSVolumeInfoPtr;
struct FSVolumeInfoParam {
  QElemPtr qLink;
  SInt16 qType;
  SInt16 ioTrap;
  Ptr ioCmdAddr;
  IOCompletionUPP ioCompletion;
  volatile OSErr ioResult;
  StringPtr ioNamePtr;
  FSVolumeRefNum ioVRefNum;

  UInt32 volumeIndex;
  FSVolumeInfoBitmap whichInfo;
  FSVolumeInfo * volumeInfo;
  HFSUniStr255 * volumeName;
  FSRef * ref;
};
typedef struct FSVolumeInfoParam FSVolumeInfoParam;
typedef FSVolumeInfoParam * FSVolumeInfoParamPtr;
struct GetVolParmsInfoBuffer {
  SInt16 vMVersion;
  SInt32 vMAttrib;
  Handle vMLocalHand;
  SInt32 vMServerAdr;

  SInt32 vMVolumeGrade;
  SInt16 vMForeignPrivID;

  SInt32 vMExtendedAttributes;

  void * vMDeviceID;

  UniCharCount vMMaxNameLength;

};
typedef struct GetVolParmsInfoBuffer GetVolParmsInfoBuffer;






typedef OSType VolumeType;
enum {

  AppleShareMediaType = 'afpm'
};




struct VolMountInfoHeader {
  SInt16 length;
  VolumeType media;
};
typedef struct VolMountInfoHeader VolMountInfoHeader;
typedef VolMountInfoHeader * VolMountInfoPtr;




struct VolumeMountInfoHeader {
  SInt16 length;
  VolumeType media;
  SInt16 flags;
};
typedef struct VolumeMountInfoHeader VolumeMountInfoHeader;
typedef VolumeMountInfoHeader * VolumeMountInfoHeaderPtr;

enum {
  volMountNoLoginMsgFlagBit = 0,
  volMountNoLoginMsgFlagMask = 0x0001,
  volMountExtendedFlagsBit = 7,
  volMountExtendedFlagsMask = 0x0080,
  volMountInteractBit = 15,
  volMountInteractMask = 0x8000,
  volMountChangedBit = 14,
  volMountChangedMask = 0x4000,
  volMountFSReservedMask = 0x00FF,
  volMountSysReservedMask = 0xFF00
};



struct AFPVolMountInfo {
  SInt16 length;
  VolumeType media;
  SInt16 flags;
  SInt8 nbpInterval;
  SInt8 nbpCount;
  SInt16 uamType;
  SInt16 zoneNameOffset;
  SInt16 serverNameOffset;
  SInt16 volNameOffset;
  SInt16 userNameOffset;
  SInt16 userPasswordOffset;
  SInt16 volPasswordOffset;
  char AFPData[144];
};
typedef struct AFPVolMountInfo AFPVolMountInfo;
typedef AFPVolMountInfo * AFPVolMountInfoPtr;



struct AFPXVolMountInfo {
  SInt16 length;
  VolumeType media;
  SInt16 flags;
  SInt8 nbpInterval;
  SInt8 nbpCount;
  SInt16 uamType;
  SInt16 zoneNameOffset;
  SInt16 serverNameOffset;
  SInt16 volNameOffset;
  SInt16 userNameOffset;
  SInt16 userPasswordOffset;
  SInt16 volPasswordOffset;
  SInt16 extendedFlags;
  SInt16 uamNameOffset;
  SInt16 alternateAddressOffset;
  char AFPData[176];
};
typedef struct AFPXVolMountInfo AFPXVolMountInfo;
typedef AFPXVolMountInfo * AFPXVolMountInfoPtr;
enum {
  kAFPExtendedFlagsAlternateAddressMask = 1
};


enum {

  kAFPTagTypeIP = 0x01,
  kAFPTagTypeIPPort = 0x02,
  kAFPTagTypeDDP = 0x03,
  kAFPTagTypeDNS = 0x04
};


enum {

  kAFPTagLengthIP = 0x06,
  kAFPTagLengthIPPort = 0x08,
  kAFPTagLengthDDP = 0x06
};

struct AFPTagData {
  UInt8 fLength;
  UInt8 fType;
  UInt8 fData[1];
};
typedef struct AFPTagData AFPTagData;
struct AFPAlternateAddress {

  UInt8 fVersion;
  UInt8 fAddressCount;
  UInt8 fAddressList[1];
};
typedef struct AFPAlternateAddress AFPAlternateAddress;
enum {
  kLargeIconSize = 256,
  kLarge4BitIconSize = 512,
  kLarge8BitIconSize = 1024,
  kSmallIconSize = 64,
  kSmall4BitIconSize = 128,
  kSmall8BitIconSize = 256
};
# 1731 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern IOCompletionUPP
NewIOCompletionUPP(IOCompletionProcPtr userRoutine) ;
# 1742 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern void
DisposeIOCompletionUPP(IOCompletionUPP userUPP) ;
# 1753 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern void
InvokeIOCompletionUPP(
  ParmBlkPtr paramBlock,
  IOCompletionUPP userUPP) ;



    inline IOCompletionUPP NewIOCompletionUPP(IOCompletionProcPtr userRoutine) { return userRoutine; }
    inline void DisposeIOCompletionUPP(IOCompletionUPP) { }
    inline void InvokeIOCompletionUPP(ParmBlkPtr paramBlock, IOCompletionUPP userUPP) { (*userUPP)(paramBlock); }
# 1794 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr FSMakeFSRefUnicode(const FSRef *parentRef, UniCharCount nameLength, const UniChar *name, TextEncoding textEncodingHint, FSRef *newRef) ;
# 1808 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr PBMakeFSRefUnicodeSync(FSRefParam * paramBlock) ;
# 1822 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern void PBMakeFSRefUnicodeAsync(FSRefParam * paramBlock) ;
# 1847 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr FSCompareFSRefs(const FSRef *ref1, const FSRef *ref2) ;
# 1861 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr PBCompareFSRefsSync(FSRefParam * paramBlock) ;
# 1875 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern void PBCompareFSRefsAsync(FSRefParam * paramBlock) ;
# 1904 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr FSCreateFileUnicode(const FSRef *parentRef, UniCharCount nameLength, const UniChar *name, FSCatalogInfoBitmap whichInfo, const FSCatalogInfo *catalogInfo, FSRef *newRef, FSSpecPtr newSpec) ;
# 1918 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr PBCreateFileUnicodeSync(FSRefParam * paramBlock) ;
# 1932 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern void PBCreateFileUnicodeAsync(FSRefParam * paramBlock) ;
# 1962 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr FSCreateDirectoryUnicode(const FSRef *parentRef, UniCharCount nameLength, const UniChar *name, FSCatalogInfoBitmap whichInfo, const FSCatalogInfo *catalogInfo, FSRef *newRef, FSSpecPtr newSpec, UInt32 *newDirID) ;
# 1976 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr PBCreateDirectoryUnicodeSync(FSRefParam * paramBlock) ;
# 1990 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern void PBCreateDirectoryUnicodeAsync(FSRefParam * paramBlock) ;
# 2012 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr FSDeleteObject(const FSRef * ref) ;
# 2026 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr PBDeleteObjectSync(FSRefParam * paramBlock) ;
# 2040 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern void PBDeleteObjectAsync(FSRefParam * paramBlock) ;
# 2063 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr FSUnlinkObject(const FSRef * ref) ;
# 2077 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr PBUnlinkObjectSync(FSRefParam * paramBlock) ;
# 2091 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern void PBUnlinkObjectAsync(FSRefParam * paramBlock) ;
# 2120 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr FSMoveObject(const FSRef *ref, const FSRef *destDirectory, FSRef *newRef) ;
# 2134 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr PBMoveObjectSync(FSRefParam * paramBlock) ;
# 2148 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern void PBMoveObjectAsync(FSRefParam * paramBlock) ;
# 2171 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr FSExchangeObjects(const FSRef *ref, const FSRef *destRef) ;
# 2185 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr PBExchangeObjectsSync(FSRefParam * paramBlock) ;
# 2199 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern void PBExchangeObjectsAsync(FSRefParam * paramBlock) ;
# 2320 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
enum {





  kFSReplaceObjectDefaultOptions = 0,






  kFSReplaceObjectReplaceMetadata = 0x01,







  kFSReplaceObjectSaveOriginalAsABackup = 0x02,




  kFSReplaceObjectReplacePermissionInfo = 0x04,




  kFSReplaceObjectPreservePermissionInfo = 0x08,
# 2363 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
  kFSReplaceObjectDoNotCheckObjectWriteAccess = 0x10
};
# 2413 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSReplaceObject(const FSRef *originalObject, const FSRef *replacementObject, CFStringRef newName, CFStringRef temporaryName, const FSRef *temporaryDirectory, OptionBits flags, FSRef *resultObject) ;
# 2461 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSPathReplaceObject(const char *originalObjectPath, const char *replacementObjectPath, CFStringRef newName, CFStringRef temporaryName, const char *temporaryDirectoryPath, OptionBits flags) ;
# 2493 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSGetTemporaryDirectoryForReplaceObject(const FSRef *originalObject, FSRef *temporaryDirectory, OptionBits flags) ;
# 2529 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSPathGetTemporaryDirectoryForReplaceObject(const char *originalObjectPath, char *temporaryDirectoryPath, UInt32 maxPathSize, OptionBits flags) ;
# 2560 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr FSRenameUnicode(const FSRef *ref, UniCharCount nameLength, const UniChar *name, TextEncoding textEncodingHint, FSRef *newRef) ;
# 2574 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr PBRenameUnicodeSync(FSRefParam * paramBlock) ;
# 2588 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern void PBRenameUnicodeAsync(FSRefParam * paramBlock) ;
# 2617 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr FSGetCatalogInfo(const FSRef *ref, FSCatalogInfoBitmap whichInfo, FSCatalogInfo *catalogInfo, HFSUniStr255 *outName, FSSpecPtr fsSpec, FSRef *parentRef) ;
# 2631 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr PBGetCatalogInfoSync(FSRefParam * paramBlock) ;
# 2645 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern void PBGetCatalogInfoAsync(FSRefParam * paramBlock) ;
# 2687 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr FSSetCatalogInfo(const FSRef *ref, FSCatalogInfoBitmap whichInfo, const FSCatalogInfo *catalogInfo) ;
# 2709 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr PBSetCatalogInfoSync(FSRefParam * paramBlock) ;
# 2731 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern void PBSetCatalogInfoAsync(FSRefParam * paramBlock) ;
# 2758 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr FSOpenIterator(const FSRef *container, FSIteratorFlags iteratorFlags, FSIterator *iterator) ;
# 2772 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr PBOpenIteratorSync(FSCatalogBulkParam * paramBlock) ;
# 2786 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern void PBOpenIteratorAsync(FSCatalogBulkParam * paramBlock) ;
# 2808 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr FSCloseIterator(FSIterator iterator) ;
# 2822 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr PBCloseIteratorSync(FSCatalogBulkParam * paramBlock) ;
# 2836 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern void PBCloseIteratorAsync(FSCatalogBulkParam * paramBlock) ;
# 2869 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr FSGetCatalogInfoBulk(FSIterator iterator, ItemCount maximumObjects, ItemCount *actualObjects, Boolean *containerChanged, FSCatalogInfoBitmap whichInfo, FSCatalogInfo *catalogInfos, FSRef *refs, FSSpecPtr specs, HFSUniStr255 *names) ;
# 2883 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr PBGetCatalogInfoBulkSync(FSCatalogBulkParam * paramBlock) ;
# 2897 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern void PBGetCatalogInfoBulkAsync(FSCatalogBulkParam * paramBlock) ;
# 2933 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr FSCatalogSearch(FSIterator iterator, const FSSearchParams *searchCriteria, ItemCount maximumObjects, ItemCount *actualObjects, Boolean *containerChanged, FSCatalogInfoBitmap whichInfo, FSCatalogInfo *catalogInfos, FSRef *refs, FSSpecPtr specs, HFSUniStr255 *names) ;
# 2947 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr PBCatalogSearchSync(FSCatalogBulkParam * paramBlock) ;
# 2961 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern void PBCatalogSearchAsync(FSCatalogBulkParam * paramBlock) ;
# 2993 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSCreateFileAndOpenForkUnicode(const FSRef *parentRef, UniCharCount nameLength, const UniChar *name, FSCatalogInfoBitmap whichInfo, const FSCatalogInfo *catalogInfo, UniCharCount forkNameLength, const UniChar *forkName, SInt8 permissions, FSIORefNum *forkRefNum, FSRef *newRef) ;
# 3007 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus PBCreateFileAndOpenForkUnicodeSync(FSRefForkIOParamPtr paramBlock) ;
# 3021 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern void PBCreateFileAndOpenForkUnicodeAsync(FSRefForkIOParamPtr paramBlock) ;
# 3044 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr FSCreateFork(const FSRef *ref, UniCharCount forkNameLength, const UniChar *forkName) ;
# 3058 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr PBCreateForkSync(FSForkIOParam * paramBlock) ;
# 3072 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern void PBCreateForkAsync(FSForkIOParam * paramBlock) ;
# 3096 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr FSDeleteFork(const FSRef *ref, UniCharCount forkNameLength, const UniChar *forkName) ;
# 3110 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr PBDeleteForkSync(FSForkIOParam * paramBlock) ;
# 3124 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern void PBDeleteForkAsync(FSForkIOParam * paramBlock) ;
# 3152 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr FSIterateForks(const FSRef *ref, CatPositionRec *forkIterator, HFSUniStr255 *forkName, SInt64 *forkSize, UInt64 *forkPhysicalSize) ;
# 3166 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr PBIterateForksSync(FSForkIOParam * paramBlock) ;
# 3180 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern void PBIterateForksAsync(FSForkIOParam * paramBlock) ;
# 3209 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr FSOpenFork(const FSRef *ref, UniCharCount forkNameLength, const UniChar *forkName, SInt8 permissions, FSIORefNum *forkRefNum) ;
# 3223 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr PBOpenForkSync(FSForkIOParam * paramBlock) ;
# 3237 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern void PBOpenForkAsync(FSForkIOParam * paramBlock) ;
# 3265 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr FSReadFork(FSIORefNum forkRefNum, UInt16 positionMode, SInt64 positionOffset, ByteCount requestCount, void *buffer, ByteCount *actualCount) ;
# 3279 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr PBReadForkSync(FSForkIOParam * paramBlock) ;
# 3293 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern void PBReadForkAsync(FSForkIOParam * paramBlock) ;
# 3321 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr FSWriteFork(FSIORefNum forkRefNum, UInt16 positionMode, SInt64 positionOffset, ByteCount requestCount, const void *buffer, ByteCount *actualCount) ;
# 3335 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr PBWriteForkSync(FSForkIOParam * paramBlock) ;
# 3349 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern void PBWriteForkAsync(FSForkIOParam * paramBlock) ;
# 3373 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr FSGetForkPosition(FSIORefNum forkRefNum, SInt64 *position) ;
# 3387 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr PBGetForkPositionSync(FSForkIOParam * paramBlock) ;
# 3401 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern void PBGetForkPositionAsync(FSForkIOParam * paramBlock) ;
# 3426 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr FSSetForkPosition(FSIORefNum forkRefNum, UInt16 positionMode, SInt64 positionOffset) ;
# 3440 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr PBSetForkPositionSync(FSForkIOParam * paramBlock) ;
# 3454 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern void PBSetForkPositionAsync(FSForkIOParam * paramBlock) ;
# 3477 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr FSGetForkSize(FSIORefNum forkRefNum, SInt64 *forkSize) ;
# 3491 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr PBGetForkSizeSync(FSForkIOParam * paramBlock) ;
# 3505 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern void PBGetForkSizeAsync(FSForkIOParam * paramBlock) ;
# 3530 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr FSSetForkSize(FSIORefNum forkRefNum, UInt16 positionMode, SInt64 positionOffset) ;
# 3544 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr PBSetForkSizeSync(FSForkIOParam * paramBlock) ;
# 3558 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern void PBSetForkSizeAsync(FSForkIOParam * paramBlock) ;
# 3598 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr FSAllocateFork(FSIORefNum forkRefNum, FSAllocationFlags flags, UInt16 positionMode, SInt64 positionOffset, UInt64 requestCount, UInt64 *actualCount) ;
# 3612 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr PBAllocateForkSync(FSForkIOParam * paramBlock) ;
# 3626 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern void PBAllocateForkAsync(FSForkIOParam * paramBlock) ;
# 3649 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr FSFlushFork(FSIORefNum forkRefNum) ;
# 3663 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr PBFlushForkSync(FSForkIOParam * paramBlock) ;
# 3677 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern void PBFlushForkAsync(FSForkIOParam * paramBlock) ;
# 3700 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr FSCloseFork(FSIORefNum forkRefNum) ;
# 3714 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr PBCloseForkSync(FSForkIOParam * paramBlock) ;
# 3728 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern void PBCloseForkAsync(FSForkIOParam * paramBlock) ;
# 3766 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr FSGetForkCBInfo(FSIORefNum desiredRefNum, FSVolumeRefNum volume, short *iterator, FSIORefNum *actualRefNum, FSForkInfo *forkInfo, FSRef *ref, HFSUniStr255 *outForkName) ;
# 3780 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr PBGetForkCBInfoSync(FSForkCBInfoParam * paramBlock) ;
# 3794 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern void PBGetForkCBInfoAsync(FSForkCBInfoParam * paramBlock) ;
# 3820 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSLockRange(FSIORefNum forkRefNum, UInt16 positionMode, SInt64 positionOffset, UInt64 requestCount, UInt64 *rangeStart) ;
# 3834 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus PBXLockRangeSync(FSRangeLockParamPtr paramBlock) ;
# 3848 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus PBXLockRangeAsync(FSRangeLockParamPtr paramBlock) ;
# 3874 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSUnlockRange(FSIORefNum forkRefNum, UInt16 positionMode, SInt64 positionOffset, UInt64 requestCount, UInt64 *rangeStart) ;
# 3888 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus PBXUnlockRangeSync(FSRangeLockParamPtr paramBlock) ;
# 3902 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus PBXUnlockRangeAsync(FSRangeLockParamPtr paramBlock) ;
# 3933 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr FSGetVolumeInfo(FSVolumeRefNum volume, ItemCount volumeIndex, FSVolumeRefNum *actualVolume, FSVolumeInfoBitmap whichInfo, FSVolumeInfo *info, HFSUniStr255 *volumeName, FSRef *rootDirectory) ;
# 3947 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr PBGetVolumeInfoSync(FSVolumeInfoParam * paramBlock) ;
# 3961 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern void PBGetVolumeInfoAsync(FSVolumeInfoParam * paramBlock) ;
# 3988 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr FSSetVolumeInfo(FSVolumeRefNum volume, FSVolumeInfoBitmap whichInfo, const FSVolumeInfo *info) ;
# 4002 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr PBSetVolumeInfoSync(FSVolumeInfoParam * paramBlock) ;
# 4016 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern void PBSetVolumeInfoAsync(FSVolumeInfoParam * paramBlock) ;
# 4034 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr FSGetDataForkName(HFSUniStr255 * dataForkName) ;
# 4053 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSErr FSGetResourceForkName(HFSUniStr255 * resourceForkName) ;
# 4083 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSRefMakePath(const FSRef *ref, UInt8 *path, UInt32 pathBufferSize) ;
# 4112 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSPathMakeRef(const UInt8 *path, FSRef *ref, Boolean *isDirectory) ;
# 4122 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
enum {
  kFSPathMakeRefDefaultOptions = 0,
  kFSPathMakeRefDoNotFollowLeafSymlink = 0x01
};
# 4157 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSPathMakeRefWithOptions(const UInt8 *path, OptionBits options, FSRef *ref, Boolean *isDirectory) ;
# 4181 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern Boolean FSIsFSRefValid(const FSRef * ref) ;
# 4194 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
typedef UInt32 FNMessage;
enum {
  kFNDirectoryModifiedMessage = 1
};
# 4235 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FNNotify(const FSRef *ref, FNMessage message, OptionBits flags) ;
# 4264 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FNNotifyByPath(const UInt8 *path, FNMessage message, OptionBits flags) ;
# 4292 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FNNotifyAll(FNMessage message, OptionBits flags) ;
# 4307 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
typedef struct OpaqueFNSubscriptionRef* FNSubscriptionRef;





enum {







  kFNNoImplicitAllSubscription = (1 << 0),







  kFNNotifyInBackground = (1 << 1)
};
# 4354 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
typedef void ( * FNSubscriptionProcPtr)(FNMessage message, OptionBits flags, void *refcon, FNSubscriptionRef subscription);
typedef FNSubscriptionProcPtr FNSubscriptionUPP;
# 4364 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern FNSubscriptionUPP
NewFNSubscriptionUPP(FNSubscriptionProcPtr userRoutine) ;
# 4375 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern void
DisposeFNSubscriptionUPP(FNSubscriptionUPP userUPP) ;
# 4386 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern void
InvokeFNSubscriptionUPP(
  FNMessage message,
  OptionBits flags,
  void * refcon,
  FNSubscriptionRef subscription,
  FNSubscriptionUPP userUPP) ;



    inline FNSubscriptionUPP NewFNSubscriptionUPP(FNSubscriptionProcPtr userRoutine) { return userRoutine; }
    inline void DisposeFNSubscriptionUPP(FNSubscriptionUPP) { }
    inline void InvokeFNSubscriptionUPP(FNMessage message, OptionBits flags, void * refcon, FNSubscriptionRef subscription, FNSubscriptionUPP userUPP) { (*userUPP)(message, flags, refcon, subscription); }
# 4438 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FNSubscribe(const FSRef *directoryRef, FNSubscriptionUPP callback, void *refcon, OptionBits flags, FNSubscriptionRef *subscription) ;
# 4473 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FNSubscribeByPath(const UInt8 *directoryPath, FNSubscriptionUPP callback, void *refcon, OptionBits flags, FNSubscriptionRef *subscription) ;
# 4496 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FNUnsubscribe(FNSubscriptionRef subscription) ;
# 4526 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FNGetDirectoryForSubscription(FNSubscriptionRef subscription, FSRef *ref) ;




enum {
  kAsyncMountInProgress = 1,
  kAsyncMountComplete = 2,
  kAsyncUnmountInProgress = 3,
  kAsyncUnmountComplete = 4,
  kAsyncEjectInProgress = 5,
  kAsyncEjectComplete = 6
};


typedef UInt32 FSMountStatus;
typedef UInt32 FSEjectStatus;
typedef UInt32 FSUnmountStatus;
typedef struct OpaqueFSVolumeOperation* FSVolumeOperation;
typedef void ( * FSVolumeMountProcPtr)(FSVolumeOperation volumeOp, void *clientData, OSStatus err, FSVolumeRefNum mountedVolumeRefNum);
typedef void ( * FSVolumeUnmountProcPtr)(FSVolumeOperation volumeOp, void *clientData, OSStatus err, FSVolumeRefNum volumeRefNum, pid_t dissenter);
typedef void ( * FSVolumeEjectProcPtr)(FSVolumeOperation volumeOp, void *clientData, OSStatus err, FSVolumeRefNum volumeRefNum, pid_t dissenter);
typedef FSVolumeMountProcPtr FSVolumeMountUPP;
typedef FSVolumeUnmountProcPtr FSVolumeUnmountUPP;
typedef FSVolumeEjectProcPtr FSVolumeEjectUPP;
# 4559 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern FSVolumeMountUPP
NewFSVolumeMountUPP(FSVolumeMountProcPtr userRoutine) ;
# 4570 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern FSVolumeUnmountUPP
NewFSVolumeUnmountUPP(FSVolumeUnmountProcPtr userRoutine) ;
# 4581 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern FSVolumeEjectUPP
NewFSVolumeEjectUPP(FSVolumeEjectProcPtr userRoutine) ;
# 4592 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern void
DisposeFSVolumeMountUPP(FSVolumeMountUPP userUPP) ;
# 4603 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern void
DisposeFSVolumeUnmountUPP(FSVolumeUnmountUPP userUPP) ;
# 4614 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern void
DisposeFSVolumeEjectUPP(FSVolumeEjectUPP userUPP) ;
# 4625 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern void
InvokeFSVolumeMountUPP(
  FSVolumeOperation volumeOp,
  void * clientData,
  OSStatus err,
  FSVolumeRefNum mountedVolumeRefNum,
  FSVolumeMountUPP userUPP) ;
# 4641 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern void
InvokeFSVolumeUnmountUPP(
  FSVolumeOperation volumeOp,
  void * clientData,
  OSStatus err,
  FSVolumeRefNum volumeRefNum,
  pid_t dissenter,
  FSVolumeUnmountUPP userUPP) ;
# 4658 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern void
InvokeFSVolumeEjectUPP(
  FSVolumeOperation volumeOp,
  void * clientData,
  OSStatus err,
  FSVolumeRefNum volumeRefNum,
  pid_t dissenter,
  FSVolumeEjectUPP userUPP) ;



    inline FSVolumeMountUPP NewFSVolumeMountUPP(FSVolumeMountProcPtr userRoutine) { return userRoutine; }
    inline FSVolumeUnmountUPP NewFSVolumeUnmountUPP(FSVolumeUnmountProcPtr userRoutine) { return userRoutine; }
    inline FSVolumeEjectUPP NewFSVolumeEjectUPP(FSVolumeEjectProcPtr userRoutine) { return userRoutine; }
    inline void DisposeFSVolumeMountUPP(FSVolumeMountUPP) { }
    inline void DisposeFSVolumeUnmountUPP(FSVolumeUnmountUPP) { }
    inline void DisposeFSVolumeEjectUPP(FSVolumeEjectUPP) { }
    inline void InvokeFSVolumeMountUPP(FSVolumeOperation volumeOp, void * clientData, OSStatus err, FSVolumeRefNum mountedVolumeRefNum, FSVolumeMountUPP userUPP) { (*userUPP)(volumeOp, clientData, err, mountedVolumeRefNum); }
    inline void InvokeFSVolumeUnmountUPP(FSVolumeOperation volumeOp, void * clientData, OSStatus err, FSVolumeRefNum volumeRefNum, pid_t dissenter, FSVolumeUnmountUPP userUPP) { (*userUPP)(volumeOp, clientData, err, volumeRefNum, dissenter); }
    inline void InvokeFSVolumeEjectUPP(FSVolumeOperation volumeOp, void * clientData, OSStatus err, FSVolumeRefNum volumeRefNum, pid_t dissenter, FSVolumeEjectUPP userUPP) { (*userUPP)(volumeOp, clientData, err, volumeRefNum, dissenter); }
# 4697 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
enum {





  kFSMountServerMarkDoNotDisplay = (1 << 0),





  kFSMountServerMountOnMountDir = (1 << 2)
};
# 4719 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
enum {






  kFSMountServerMountWithoutNotification = (1 << 1)
};






enum {
# 4744 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
  kFSEjectVolumeForceEject = (1 << 0)
};






enum {
# 4762 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
  kFSUnmountVolumeForceUnmount = (1 << 0)
};
# 4787 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSCreateVolumeOperation(FSVolumeOperation * volumeOp) ;
# 4810 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSDisposeVolumeOperation(FSVolumeOperation volumeOp) ;
# 4843 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSMountLocalVolumeSync(CFStringRef diskID, CFURLRef mountDir, FSVolumeRefNum *mountedVolumeRefNum, OptionBits flags) ;
# 4891 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSMountLocalVolumeAsync(CFStringRef diskID, CFURLRef mountDir, FSVolumeOperation volumeOp, void *clientData, OptionBits flags, FSVolumeMountUPP callback, CFRunLoopRef runloop, CFStringRef runloopMode) ;
# 4933 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSMountServerVolumeSync(CFURLRef url, CFURLRef mountDir, CFStringRef user, CFStringRef password, FSVolumeRefNum *mountedVolumeRefNum, OptionBits flags) ;
# 4990 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSMountServerVolumeAsync(CFURLRef url, CFURLRef mountDir, CFStringRef user, CFStringRef password, FSVolumeOperation volumeOp, void *clientData, OptionBits flags, FSVolumeMountUPP callback, CFRunLoopRef runloop, CFStringRef runloopMode) ;
# 5033 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSGetAsyncMountStatus(FSVolumeOperation volumeOp, FSMountStatus *status, OSStatus *volumeOpStatus, FSVolumeRefNum *mountedVolumeRefNum, void **clientData) ;
# 5066 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSUnmountVolumeSync(FSVolumeRefNum vRefNum, OptionBits flags, pid_t *dissenter) ;
# 5110 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSUnmountVolumeAsync(FSVolumeRefNum vRefNum, OptionBits flags, FSVolumeOperation volumeOp, void *clientData, FSVolumeUnmountUPP callback, CFRunLoopRef runloop, CFStringRef runloopMode) ;
# 5152 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSGetAsyncUnmountStatus(FSVolumeOperation volumeOp, FSUnmountStatus *status, OSStatus *volumeOpStatus, FSVolumeRefNum *volumeRefNum, pid_t *dissenter, void **clientData) ;
# 5176 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSCancelVolumeOperation(FSVolumeOperation volumeOp) ;
# 5209 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSEjectVolumeSync(FSVolumeRefNum vRefNum, OptionBits flags, pid_t *dissenter) ;
# 5253 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSEjectVolumeAsync(FSVolumeRefNum vRefNum, OptionBits flags, FSVolumeOperation volumeOp, void *clientData, FSVolumeEjectUPP callback, CFRunLoopRef runloop, CFStringRef runloopMode) ;
# 5295 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSGetAsyncEjectStatus(FSVolumeOperation volumeOp, FSEjectStatus *status, OSStatus *volumeOpStatus, FSVolumeRefNum *volumeRefNum, pid_t *dissenter, void **clientData) ;
# 5322 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSCopyDiskIDForVolume(FSVolumeRefNum vRefNum, CFStringRef *diskID) ;
# 5348 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSCopyURLForVolume(FSVolumeRefNum vRefNum, CFURLRef *url) ;
# 5373 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSGetVolumeForDiskID(CFStringRef diskID, FSVolumeRefNum *vRefNum) ;
# 5400 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSCopyDADiskForVolume(FSVolumeRefNum vRefNum, DADiskRef *disk) ;
# 5426 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSGetVolumeForDADisk(DADiskRef disk, FSVolumeRefNum *vRefNum) ;




typedef struct __FSFileOperation* FSFileOperationRef;
typedef UInt32 FSFileOperationStage;
# 5441 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
struct FSFileOperationClientContext {






  CFIndex version;





  void * info;
# 5463 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
  CFAllocatorRetainCallBack retain;





  CFAllocatorReleaseCallBack release;







  CFAllocatorCopyDescriptionCallBack copyDescription;
};
typedef struct FSFileOperationClientContext FSFileOperationClientContext;
# 5516 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
typedef void ( * FSFileOperationStatusProcPtr)(FSFileOperationRef fileOp, const FSRef *currentItem, FSFileOperationStage stage, OSStatus error, CFDictionaryRef statusDictionary, void *info);
# 5555 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
typedef void ( * FSPathFileOperationStatusProcPtr)(FSFileOperationRef fileOp, const char *currentItem, FSFileOperationStage stage, OSStatus error, CFDictionaryRef statusDictionary, void *info);
# 5564 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
enum {





  kFSFileOperationDefaultOptions = 0,





  kFSFileOperationOverwrite = 0x01,





  kFSFileOperationSkipSourcePermissionErrors = 0x02,





  kFSFileOperationDoNotMoveAcrossVolumes = 0x04,






  kFSFileOperationSkipPreflight = 0x08
};
# 5607 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
enum {




  kFSOperationStageUndefined = 0,





  kFSOperationStagePreflighting = 1,




  kFSOperationStageRunning = 2,




  kFSOperationStageComplete = 3
};
# 5647 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern const CFStringRef kFSOperationTotalBytesKey ;
# 5663 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern const CFStringRef kFSOperationBytesCompleteKey ;
# 5679 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern const CFStringRef kFSOperationBytesRemainingKey ;
# 5695 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern const CFStringRef kFSOperationTotalObjectsKey ;
# 5711 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern const CFStringRef kFSOperationObjectsCompleteKey ;
# 5727 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern const CFStringRef kFSOperationObjectsRemainingKey ;
# 5745 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern const CFStringRef kFSOperationTotalUserVisibleObjectsKey ;
# 5763 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern const CFStringRef kFSOperationUserVisibleObjectsCompleteKey ;
# 5781 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern const CFStringRef kFSOperationUserVisibleObjectsRemainingKey ;
# 5795 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern const CFStringRef kFSOperationThroughputKey ;
# 5831 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSCopyObjectSync(const FSRef *source, const FSRef *destDir, CFStringRef destName, FSRef *target, OptionBits options) ;
# 5874 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSMoveObjectSync(const FSRef *source, const FSRef *destDir, CFStringRef destName, FSRef *target, OptionBits options) ;
# 5908 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSMoveObjectToTrashSync(const FSRef *source, FSRef *target, OptionBits options) ;
# 5947 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSPathCopyObjectSync(const char *sourcePath, const char *destDirPath, CFStringRef destName, char **targetPath, OptionBits options) ;
# 5991 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSPathMoveObjectSync(const char *sourcePath, const char *destDirPath, CFStringRef destName, char **targetPath, OptionBits options) ;
# 6026 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSPathMoveObjectToTrashSync(const char *sourcePath, char **targetPath, OptionBits options) ;
# 6046 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern CFTypeID FSFileOperationGetTypeID(void) ;
# 6073 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern FSFileOperationRef FSFileOperationCreate(CFAllocatorRef alloc) ;
# 6105 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSFileOperationScheduleWithRunLoop(FSFileOperationRef fileOp, CFRunLoopRef runLoop, CFStringRef runLoopMode) ;
# 6136 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSFileOperationUnscheduleFromRunLoop(FSFileOperationRef fileOp, CFRunLoopRef runLoop, CFStringRef runLoopMode) ;
# 6189 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSCopyObjectAsync(FSFileOperationRef fileOp, const FSRef *source, const FSRef *destDir, CFStringRef destName, OptionBits flags, FSFileOperationStatusProcPtr callback, CFTimeInterval statusChangeInterval, FSFileOperationClientContext *clientContext) ;
# 6245 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSMoveObjectAsync(FSFileOperationRef fileOp, const FSRef *source, const FSRef *destDir, CFStringRef destName, OptionBits flags, FSFileOperationStatusProcPtr callback, CFTimeInterval statusChangeInterval, FSFileOperationClientContext *clientContext) ;
# 6294 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSMoveObjectToTrashAsync(FSFileOperationRef fileOp, const FSRef *source, OptionBits flags, FSFileOperationStatusProcPtr callback, CFTimeInterval statusChangeInterval, FSFileOperationClientContext *clientContext) ;
# 6347 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSPathCopyObjectAsync(FSFileOperationRef fileOp, const char *sourcePath, const char *destDirPath, CFStringRef destName, OptionBits flags, FSPathFileOperationStatusProcPtr callback, CFTimeInterval statusChangeInterval, FSFileOperationClientContext *clientContext) ;
# 6403 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSPathMoveObjectAsync(FSFileOperationRef fileOp, const char *sourcePath, const char *destDirPath, CFStringRef destName, OptionBits flags, FSPathFileOperationStatusProcPtr callback, CFTimeInterval statusChangeInterval, FSFileOperationClientContext *clientContext) ;
# 6453 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSPathMoveObjectToTrashAsync(FSFileOperationRef fileOp, const char *sourcePath, OptionBits flags, FSPathFileOperationStatusProcPtr callback, CFTimeInterval statusChangeInterval, FSFileOperationClientContext *clientContext) ;
# 6476 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSFileOperationCancel(FSFileOperationRef fileOp) ;
# 6520 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSFileOperationCopyStatus(FSFileOperationRef fileOp, FSRef *currentItem, FSFileOperationStage *stage, OSStatus *error, CFDictionaryRef *statusDictionary, void **info) ;
# 6565 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSPathFileOperationCopyStatus(FSFileOperationRef fileOp, char **currentItem, FSFileOperationStage *stage, OSStatus *error, CFDictionaryRef *statusDictionary, void **info) ;
# 6594 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern CFStringRef FSCreateStringFromHFSUniStr(CFAllocatorRef alloc, const HFSUniStr255 *uniStr) ;
# 6620 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSGetHFSUniStrFromString(CFStringRef theString, HFSUniStr255 *uniStr) ;
# 6642 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern CFTypeID FSFileSecurityGetTypeID(void) ;
# 6669 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern FSFileSecurityRef FSFileSecurityCreate(CFAllocatorRef alloc) ;
# 6683 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern FSFileSecurityRef FSFileSecurityCreateWithFSPermissionInfo(CFAllocatorRef alloc, const FSPermissionInfo *permissions) ;
# 6697 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern FSFileSecurityRef FSFileSecurityRefCreateCopy(CFAllocatorRef alloc, FSFileSecurityRef fileSec) ;
# 6728 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSFileSecurityGetOwnerUUID(FSFileSecurityRef fileSec, CFUUIDBytes *owner) ;
# 6755 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSFileSecuritySetOwnerUUID(FSFileSecurityRef fileSec, const CFUUIDBytes *owner) ;
# 6784 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSFileSecurityGetGroupUUID(FSFileSecurityRef fileSec, CFUUIDBytes *group) ;
# 6811 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSFileSecuritySetGroupUUID(FSFileSecurityRef fileSec, const CFUUIDBytes *group) ;
# 6842 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSFileSecurityCopyAccessControlList(FSFileSecurityRef fileSec, acl_t *accessControlList) ;
# 6872 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSFileSecuritySetAccessControlList(FSFileSecurityRef fileSec, acl_t accessControlList) ;
# 6901 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSFileSecurityGetOwner(FSFileSecurityRef fileSec, UInt32 *owner) ;
# 6927 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSFileSecuritySetOwner(FSFileSecurityRef fileSec, UInt32 owner) ;
# 6955 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSFileSecurityGetGroup(FSFileSecurityRef fileSec, UInt32 *group) ;
# 6981 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSFileSecuritySetGroup(FSFileSecurityRef fileSec, UInt32 group) ;
# 7009 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSFileSecurityGetMode(FSFileSecurityRef fileSec, UInt16 *mode) ;
# 7035 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSFileSecuritySetMode(FSFileSecurityRef fileSec, UInt16 mode) ;



enum {

  pleaseCacheBit = 4,
  pleaseCacheMask = 0x0010,
  noCacheBit = 5,
  noCacheMask = 0x0020,
  rdVerifyBit = 6,
  rdVerifyMask = 0x0040,
  rdVerify = 64,
  forceReadBit = 6,
  forceReadMask = 0x0040,
  newLineBit = 7,
  newLineMask = 0x0080,
  newLineCharMask = 0xFF00
};



enum {
  kOwnerID2Name = 1,
  kGroupID2Name = 2,
  kOwnerName2ID = 3,
  kGroupName2ID = 4,
  kReturnNextUser = 1,
  kReturnNextGroup = 2,
  kReturnNextUG = 3
};


enum {
  kVCBFlagsIdleFlushBit = 3,
  kVCBFlagsIdleFlushMask = 0x0008,
  kVCBFlagsHFSPlusAPIsBit = 4,
  kVCBFlagsHFSPlusAPIsMask = 0x0010,
  kVCBFlagsHardwareGoneBit = 5,
  kVCBFlagsHardwareGoneMask = 0x0020,
  kVCBFlagsVolumeDirtyBit = 15,
  kVCBFlagsVolumeDirtyMask = 0x8000
};


enum {
  kioVAtrbDefaultVolumeBit = 5,
  kioVAtrbDefaultVolumeMask = 0x0020,
  kioVAtrbFilesOpenBit = 6,
  kioVAtrbFilesOpenMask = 0x0040,
  kioVAtrbHardwareLockedBit = 7,
  kioVAtrbHardwareLockedMask = 0x0080,
  kioVAtrbSoftwareLockedBit = 15,
  kioVAtrbSoftwareLockedMask = 0x8000
};


enum {

  kioFlAttribLockedBit = 0,
  kioFlAttribLockedMask = 0x01,
  kioFlAttribResOpenBit = 2,
  kioFlAttribResOpenMask = 0x04,
  kioFlAttribDataOpenBit = 3,
  kioFlAttribDataOpenMask = 0x08,
  kioFlAttribDirBit = 4,
  kioFlAttribDirMask = 0x10,
  ioDirFlg = 4,
  ioDirMask = 0x10,
  kioFlAttribCopyProtBit = 6,
  kioFlAttribCopyProtMask = 0x40,
  kioFlAttribFileOpenBit = 7,
  kioFlAttribFileOpenMask = 0x80,
  kioFlAttribInSharedBit = 2,
  kioFlAttribInSharedMask = 0x04,
  kioFlAttribMountedBit = 3,
  kioFlAttribMountedMask = 0x08,
  kioFlAttribSharePointBit = 5,
  kioFlAttribSharePointMask = 0x20
};





enum {
  kioFCBWriteBit = 8,
  kioFCBWriteMask = 0x0100,
  kioFCBResourceBit = 9,
  kioFCBResourceMask = 0x0200,
  kioFCBWriteLockedBit = 10,
  kioFCBWriteLockedMask = 0x0400,
  kioFCBLargeFileBit = 11,
  kioFCBLargeFileMask = 0x0800,
  kioFCBSharedWriteBit = 12,
  kioFCBSharedWriteMask = 0x1000,
  kioFCBFileLockedBit = 13,
  kioFCBFileLockedMask = 0x2000,
  kioFCBOwnClumpBit = 14,
  kioFCBOwnClumpMask = 0x4000,
  kioFCBModifiedBit = 15,
  kioFCBModifiedMask = 0x8000
};




enum {
  kForkInfoFlagsWriteBit = (kioFCBWriteBit - 8),
  kForkInfoFlagsWriteMask = (1 << kForkInfoFlagsWriteBit),
  kForkInfoFlagsResourceBit = (kioFCBResourceBit - 8),
  kForkInfoFlagsResourceMask = (1 << kForkInfoFlagsResourceBit),
  kForkInfoFlagsWriteLockedBit = (kioFCBWriteLockedBit - 8),
  kForkInfoFlagsWriteLockedMask = (1 << kForkInfoFlagsWriteLockedBit),
  kForkInfoFlagsLargeFileBit = (kioFCBLargeFileBit - 8),
  kForkInfoFlagsLargeFileMask = (1 << kForkInfoFlagsLargeFileBit),
  kForkInfoFlagsSharedWriteBit = (kioFCBSharedWriteBit - 8),
  kForkInfoFlagsSharedWriteMask = (1 << kForkInfoFlagsSharedWriteBit),
  kForkInfoFlagsFileLockedBit = (kioFCBFileLockedBit - 8),
  kForkInfoFlagsFileLockedMask = (1 << kForkInfoFlagsFileLockedBit),
  kForkInfoFlagsOwnClumpBit = (kioFCBOwnClumpBit - 8),
  kForkInfoFlagsOwnClumpMask = (1 << kForkInfoFlagsOwnClumpBit),
  kForkInfoFlagsModifiedBit = (kioFCBModifiedBit - 8),
  kForkInfoFlagsModifiedMask = (1 << kForkInfoFlagsModifiedBit)
};



enum {
  kioACUserNoSeeFolderBit = 0,
  kioACUserNoSeeFolderMask = 0x01,
  kioACUserNoSeeFilesBit = 1,
  kioACUserNoSeeFilesMask = 0x02,
  kioACUserNoMakeChangesBit = 2,
  kioACUserNoMakeChangesMask = 0x04,
  kioACUserNotOwnerBit = 7,
  kioACUserNotOwnerMask = 0x80
};


enum {
  kioACAccessOwnerBit = 31,
  kioACAccessOwnerMask = (int)0x80000000,
  kioACAccessBlankAccessBit = 28,
  kioACAccessBlankAccessMask = 0x10000000,
  kioACAccessUserWriteBit = 26,
  kioACAccessUserWriteMask = 0x04000000,
  kioACAccessUserReadBit = 25,
  kioACAccessUserReadMask = 0x02000000,
  kioACAccessUserSearchBit = 24,
  kioACAccessUserSearchMask = 0x01000000,
  kioACAccessEveryoneWriteBit = 18,
  kioACAccessEveryoneWriteMask = 0x00040000,
  kioACAccessEveryoneReadBit = 17,
  kioACAccessEveryoneReadMask = 0x00020000,
  kioACAccessEveryoneSearchBit = 16,
  kioACAccessEveryoneSearchMask = 0x00010000,
  kioACAccessGroupWriteBit = 10,
  kioACAccessGroupWriteMask = 0x00000400,
  kioACAccessGroupReadBit = 9,
  kioACAccessGroupReadMask = 0x00000200,
  kioACAccessGroupSearchBit = 8,
  kioACAccessGroupSearchMask = 0x00000100,
  kioACAccessOwnerWriteBit = 2,
  kioACAccessOwnerWriteMask = 0x00000004,
  kioACAccessOwnerReadBit = 1,
  kioACAccessOwnerReadMask = 0x00000002,
  kioACAccessOwnerSearchBit = 0,
  kioACAccessOwnerSearchMask = 0x00000001,
  kfullPrivileges = 0x00070007,
  kownerPrivileges = 0x00000007
};
# 7236 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSGetVolumeParms(FSVolumeRefNum volume, GetVolParmsInfoBuffer *buffer, ByteCount bufferSize) ;
# 7263 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSGetVolumeMountInfoSize(FSVolumeRefNum volume, ByteCount *size) ;
# 7297 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSGetVolumeMountInfo(FSVolumeRefNum volume, BytePtr buffer, ByteCount bufferSize, ByteCount *actualSize) ;
# 7323 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSVolumeMount(BytePtr buffer, FSVolumeRefNum *mountedVolume) ;
# 7338 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSFlushVolume(FSVolumeRefNum vRefNum) ;
# 7352 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus PBFlushVolumeSync(FSRefParamPtr paramBlock) ;
# 7366 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus PBFlushVolumeAsync(FSRefParamPtr paramBlock) ;
# 7393 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus PBFSCopyFileSync(FSRefParamPtr paramBlock) ;
# 7407 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus PBFSCopyFileAsync(FSRefParamPtr paramBlock) ;
# 7437 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus FSResolveNodeID(FSVolumeRefNum volume, UInt32 nodeID, FSRefPtr newRef) ;
# 7458 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus PBFSResolveNodeIDSync(FSRefParamPtr paramBlock) ;
# 7472 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
extern OSStatus PBFSResolveNodeIDAsync(FSRefParamPtr paramBlock) ;
# 10493 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Files.h" 3
#pragma pack(pop)


}
# 33 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 1 3
# 40 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern "C" {


typedef SInt16 ResID;
typedef SInt16 ResAttributes;
typedef SInt16 ResFileAttributes;
typedef SInt16 ResourceCount;
typedef SInt16 ResourceIndex;
typedef FSIORefNum ResFileRefNum;

enum {
  resSysRefBit = 7,
  resSysHeapBit = 6,
  resPurgeableBit = 5,
  resLockedBit = 4,
  resProtectedBit = 3,
  resPreloadBit = 2,
  resChangedBit = 1
};


enum {
  resSysHeap = 64,
  resPurgeable = 32,
  resLocked = 16,
  resProtected = 8,
  resPreload = 4,
  resChanged = 2
};


enum {
  mapReadOnlyBit = 7,
  mapCompactBit = 6,
  mapChangedBit = 5
};


enum {
  mapReadOnly = 128,
  mapCompact = 64,
  mapChanged = 32
};


enum {
  kResFileNotOpened = -1,
  kSystemResFile = 0
};


typedef void ( * ResErrProcPtr)(OSErr thErr);
typedef ResErrProcPtr ResErrUPP;
# 101 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern ResErrUPP
NewResErrUPP(ResErrProcPtr userRoutine) ;
# 112 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern void
DisposeResErrUPP(ResErrUPP userUPP) ;
# 123 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern void
InvokeResErrUPP(
  OSErr thErr,
  ResErrUPP userUPP) ;



    inline ResErrUPP NewResErrUPP(ResErrProcPtr userRoutine) { return userRoutine; }
    inline void DisposeResErrUPP(ResErrUPP) { }
    inline void InvokeResErrUPP(OSErr thErr, ResErrUPP userUPP) { (*userUPP)(thErr); }
# 141 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
typedef OSErr ( * ResourceEndianFilterPtr)(Handle theResource, Boolean currentlyNativeEndian);
# 153 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern void
CloseResFile(ResFileRefNum refNum) ;
# 168 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern OSErr
ResError(void) ;
# 183 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern ResFileRefNum
CurResFile(void) ;
# 198 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern ResFileRefNum
HomeResFile(Handle theResource) ;
# 213 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern void
UseResFile(ResFileRefNum refNum) ;
# 228 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern ResourceCount
CountTypes(void) ;
# 243 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern ResourceCount
Count1Types(void) ;
# 258 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern void
GetIndType(
  ResType * theType,
  ResourceIndex itemIndex) ;
# 275 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern void
Get1IndType(
  ResType * theType,
  ResourceIndex itemIndex) ;
# 292 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern void
SetResLoad(Boolean load) ;
# 307 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern ResourceCount
CountResources(ResType theType) ;
# 322 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern ResourceCount
Count1Resources(ResType theType) ;
# 337 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern Handle
GetIndResource(
  ResType theType,
  ResourceIndex itemIndex) ;
# 354 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern Handle
Get1IndResource(
  ResType theType,
  ResourceIndex itemIndex) ;
# 371 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern Handle
GetResource(
  ResType theType,
  ResID theID) ;
# 388 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern Handle
Get1Resource(
  ResType theType,
  ResID theID) ;
# 405 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern Handle
GetNamedResource(
  ResType theType,
  ConstStr255Param name) ;
# 422 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern Handle
Get1NamedResource(
  ResType theType,
  ConstStr255Param name) ;
# 442 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern void
LoadResource(Handle theResource) ;
# 457 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern void
ReleaseResource(Handle theResource) ;
# 472 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern void
DetachResource(Handle theResource) ;
# 487 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern ResID
UniqueID(ResType theType) ;
# 502 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern ResID
Unique1ID(ResType theType) ;
# 517 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern ResAttributes
GetResAttrs(Handle theResource) ;
# 532 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern void
GetResInfo(
  Handle theResource,
  ResID * theID,
  ResType * theType,
  Str255 name) ;
# 551 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern void
SetResInfo(
  Handle theResource,
  ResID theID,
  ConstStr255Param name) ;
# 569 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern void
AddResource(
  Handle theData,
  ResType theType,
  ResID theID,
  ConstStr255Param name) ;
# 588 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern long
GetResourceSizeOnDisk(Handle theResource) ;
# 603 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern long
GetMaxResourceSize(Handle theResource) ;
# 618 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern void
SetResAttrs(
  Handle theResource,
  ResAttributes attrs) ;
# 635 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern void
ChangedResource(Handle theResource) ;
# 650 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern void
RemoveResource(Handle theResource) ;
# 665 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern void
UpdateResFile(ResFileRefNum refNum) ;
# 680 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern void
WriteResource(Handle theResource) ;
# 695 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern void
SetResPurge(Boolean install) ;
# 710 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern ResFileAttributes
GetResFileAttrs(ResFileRefNum refNum) ;
# 725 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern void
SetResFileAttrs(
  ResFileRefNum refNum,
  ResFileAttributes attrs) ;
# 742 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern void
ReadPartialResource(
  Handle theResource,
  long offset,
  void * buffer,
  long count) ;
# 761 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern void
WritePartialResource(
  Handle theResource,
  long offset,
  const void * buffer,
  long count) ;
# 780 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern void
SetResourceSize(
  Handle theResource,
  long newSize) ;
# 797 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern Handle
GetNextFOND(Handle fondHandle) ;
# 820 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
typedef SInt16 RsrcChainLocation;
enum {
  kRsrcChainBelowSystemMap = 0,
  kRsrcChainBelowApplicationMap = 1,
  kRsrcChainAboveApplicationMap = 2,
  kRsrcChainAboveAllMaps = 4
};
# 844 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern OSErr
InsertResourceFile(
  ResFileRefNum refNum,
  RsrcChainLocation where) ;
# 865 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern OSErr
DetachResourceFile(ResFileRefNum refNum) ;
# 884 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern OSErr
GetTopResourceFile(ResFileRefNum * refNum) ;
# 905 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern OSErr
GetNextResourceFile(
  ResFileRefNum curRefNum,
  ResFileRefNum * nextRefNum) ;
# 922 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern ResFileRefNum
FSOpenResFile(
  const FSRef * ref,
  SInt8 permission) ;
# 939 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern void
FSCreateResFile(
  const FSRef * parentRef,
  UniCharCount nameLength,
  const UniChar * name,
  FSCatalogInfoBitmap whichInfo,
  const FSCatalogInfo * catalogInfo,
  FSRef * newRef,
  FSSpecPtr newSpec) ;
# 968 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern Boolean
FSResourceFileAlreadyOpen(
  const FSRef * resourceFileRef,
  Boolean * inChain,
  ResFileRefNum * refNum) ;
# 996 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern OSErr
FSOpenOrphanResFile(
  const FSRef * ref,
  SignedByte permission,
  ResFileRefNum * refNum) ;
# 1054 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern OSErr
FSCreateResourceFile(
  const FSRef * parentRef,
  UniCharCount nameLength,
  const UniChar * name,
  FSCatalogInfoBitmap whichInfo,
  const FSCatalogInfo * catalogInfo,
  UniCharCount forkNameLength,
  const UniChar * forkName,
  FSRef * newRef,
  FSSpecPtr newSpec) ;
# 1103 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern OSErr
FSCreateResourceFork(
  const FSRef * ref,
  UniCharCount forkNameLength,
  const UniChar * forkName,
  UInt32 flags) ;
# 1147 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
extern OSErr
FSOpenResourceFile(
  const FSRef * ref,
  UniCharCount forkNameLength,
  const UniChar * forkName,
  SInt8 permissions,
  ResFileRefNum * refNum) ;
# 1307 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Resources.h" 3
}
# 37 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 2 3
# 48 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern "C" {


#pragma pack(push, 2)

enum {
  kAppleManufacturer = 'appl',
  kComponentResourceType = 'thng',
  kComponentAliasResourceType = 'thga'
};

enum {
  kAnyComponentType = 0,
  kAnyComponentSubType = 0,
  kAnyComponentManufacturer = 0,
  kAnyComponentFlagsMask = 0
};

enum {
  cmpThreadSafe = 1L << 28,
  cmpIsMissing = 1L << 29,
  cmpWantsRegisterMessage = 1L << 31
};

enum {
  kComponentOpenSelect = -1,
  kComponentCloseSelect = -2,
  kComponentCanDoSelect = -3,
  kComponentVersionSelect = -4,
  kComponentRegisterSelect = -5,
  kComponentTargetSelect = -6,
  kComponentUnregisterSelect = -7,
  kComponentGetMPWorkFunctionSelect = -8,
  kComponentExecuteWiredActionSelect = -9,
  kComponentGetPublicResourceSelect = -10
};


enum {
  componentDoAutoVersion = (1 << 0),
  componentWantsUnregister = (1 << 1),
  componentAutoVersionIncludeFlags = (1 << 2),
  componentHasMultiplePlatforms = (1 << 3),
  componentLoadResident = (1 << 4)
};




enum {
  defaultComponentIdentical = 0,
  defaultComponentAnyFlags = 1,
  defaultComponentAnyManufacturer = 2,
  defaultComponentAnySubType = 4,
  defaultComponentAnyFlagsAnyManufacturer = (defaultComponentAnyFlags + defaultComponentAnyManufacturer),
  defaultComponentAnyFlagsAnyManufacturerAnySubType = (defaultComponentAnyFlags + defaultComponentAnyManufacturer + defaultComponentAnySubType)
};


enum {
  registerComponentGlobal = 1,
  registerComponentNoDuplicates = 2,
  registerComponentAfterExisting = 4,
  registerComponentAliasesOnly = 8
};


struct ComponentDescription {
  OSType componentType;
  OSType componentSubType;
  OSType componentManufacturer;
  UInt32 componentFlags;
  UInt32 componentFlagsMask;
};
typedef struct ComponentDescription ComponentDescription;

struct ResourceSpec {
  OSType resType;
  SInt16 resID;
};
typedef struct ResourceSpec ResourceSpec;
struct ComponentResource {
  ComponentDescription cd;
  ResourceSpec component;
  ResourceSpec componentName;
  ResourceSpec componentInfo;
  ResourceSpec componentIcon;
};
typedef struct ComponentResource ComponentResource;
typedef ComponentResource * ComponentResourcePtr;
typedef ComponentResourcePtr * ComponentResourceHandle;
struct ComponentPlatformInfo {
  SInt32 componentFlags;
  ResourceSpec component;
  SInt16 platformType;
};
typedef struct ComponentPlatformInfo ComponentPlatformInfo;
struct ComponentResourceExtension {
  SInt32 componentVersion;
  SInt32 componentRegisterFlags;
  SInt16 componentIconFamily;
};
typedef struct ComponentResourceExtension ComponentResourceExtension;
struct ComponentPlatformInfoArray {
  SInt32 count;
  ComponentPlatformInfo platformArray[1];
};
typedef struct ComponentPlatformInfoArray ComponentPlatformInfoArray;
struct ExtComponentResource {
  ComponentDescription cd;
  ResourceSpec component;
  ResourceSpec componentName;
  ResourceSpec componentInfo;
  ResourceSpec componentIcon;
  SInt32 componentVersion;
  SInt32 componentRegisterFlags;
  SInt16 componentIconFamily;
  SInt32 count;
  ComponentPlatformInfo platformArray[1];
};
typedef struct ExtComponentResource ExtComponentResource;
typedef ExtComponentResource * ExtComponentResourcePtr;
typedef ExtComponentResourcePtr * ExtComponentResourceHandle;
struct ComponentAliasResource {
  ComponentResource cr;
  ComponentDescription aliasCD;
};
typedef struct ComponentAliasResource ComponentAliasResource;

struct ComponentParameters {
  UInt8 flags;
  UInt8 paramSize;
  SInt16 what;


  UInt32 padding;


  long params[1];
};
typedef struct ComponentParameters ComponentParameters;
struct ComponentRecord {
  long data[1];
};
typedef struct ComponentRecord ComponentRecord;
typedef ComponentRecord * Component;
struct ComponentInstanceRecord {
  long data[1];
};
typedef struct ComponentInstanceRecord ComponentInstanceRecord;
typedef ComponentInstanceRecord * ComponentInstance;
struct RegisteredComponentRecord {
  long data[1];
};
typedef struct RegisteredComponentRecord RegisteredComponentRecord;
typedef RegisteredComponentRecord * RegisteredComponentRecordPtr;
struct RegisteredComponentInstanceRecord {
  long data[1];
};
typedef struct RegisteredComponentInstanceRecord RegisteredComponentInstanceRecord;
typedef RegisteredComponentInstanceRecord * RegisteredComponentInstanceRecordPtr;
typedef SInt32 ComponentResult;
enum {
  platform68k = 1,
  platformPowerPC = 2,
  platformInterpreted = 3,
  platformWin32 = 4,
  platformPowerPCNativeEntryPoint = 5,
  platformIA32NativeEntryPoint = 6,
  platformPowerPC64NativeEntryPoint = 7,
  platformX86_64NativeEntryPoint = 8
};

enum {
  platformIRIXmips = 1000,
  platformSunOSsparc = 1100,
  platformSunOSintel = 1101,
  platformLinuxppc = 1200,
  platformLinuxintel = 1201,
  platformAIXppc = 1300,
  platformNeXTIntel = 1400,
  platformNeXTppc = 1401,
  platformNeXTsparc = 1402,
  platformNeXT68k = 1403,
  platformMacOSx86 = 1500
};

enum {
  mpWorkFlagDoWork = (1 << 0),
  mpWorkFlagDoCompletion = (1 << 1),
  mpWorkFlagCopyWorkBlock = (1 << 2),
  mpWorkFlagDontBlock = (1 << 3),
  mpWorkFlagGetProcessorCount = (1 << 4),
  mpWorkFlagGetIsRunning = (1 << 6)
};

enum {
  cmpAliasNoFlags = 0,
  cmpAliasOnlyThisFile = 1
};

typedef UInt32 CSComponentsThreadMode;
enum {
  kCSAcceptAllComponentsMode = 0,
  kCSAcceptThreadSafeComponentsOnlyMode = 1
};
# 287 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern void
CSSetComponentsThreadMode(CSComponentsThreadMode mode) ;
# 310 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern CSComponentsThreadMode
CSGetComponentsThreadMode(void) ;


struct ComponentMPWorkFunctionHeaderRecord {
  UInt32 headerSize;
  UInt32 recordSize;
  UInt32 workFlags;
  UInt16 processorCount;
  UInt8 unused;
  UInt8 isRunning;
};
typedef struct ComponentMPWorkFunctionHeaderRecord ComponentMPWorkFunctionHeaderRecord;
typedef ComponentMPWorkFunctionHeaderRecord * ComponentMPWorkFunctionHeaderRecordPtr;
typedef ComponentResult ( * ComponentMPWorkFunctionProcPtr)(void *globalRefCon, ComponentMPWorkFunctionHeaderRecordPtr header);
typedef ComponentResult ( * ComponentRoutineProcPtr)(ComponentParameters *cp, Handle componentStorage);
typedef OSErr ( * GetMissingComponentResourceProcPtr)(Component c, OSType resType, SInt16 resID, void *refCon, Handle *resource);
typedef ComponentMPWorkFunctionProcPtr ComponentMPWorkFunctionUPP;
typedef ComponentRoutineProcPtr ComponentRoutineUPP;
typedef GetMissingComponentResourceProcPtr GetMissingComponentResourceUPP;





typedef UniversalProcPtr ComponentFunctionUPP;
# 352 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern ComponentFunctionUPP
NewComponentFunctionUPP(
  ProcPtr userRoutine,
  ProcInfoType procInfo) ;
# 374 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern void
DisposeComponentFunctionUPP(ComponentFunctionUPP userUPP) ;
# 418 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern Component
RegisterComponent(
  ComponentDescription * cd,
  ComponentRoutineUPP componentEntryPoint,
  SInt16 global,
  Handle componentName,
  Handle componentInfo,
  Handle componentIcon) ;
# 440 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern Component
RegisterComponentResource(
  ComponentResourceHandle cr,
  SInt16 global) ;
# 458 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern OSErr
UnregisterComponent(Component aComponent) ;
# 474 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern Component
FindNextComponent(
  Component aComponent,
  ComponentDescription * looking) ;
# 492 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern long
CountComponents(ComponentDescription * looking) ;
# 508 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern OSErr
GetComponentInfo(
  Component aComponent,
  ComponentDescription * cd,
  Handle componentName,
  Handle componentInfo,
  Handle componentIcon) ;
# 529 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern SInt32
GetComponentListModSeed(void) ;
# 545 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern SInt32
GetComponentTypeModSeed(OSType componentType) ;
# 564 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern OSErr
OpenAComponent(
  Component aComponent,
  ComponentInstance * ci) ;
# 582 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern ComponentInstance
OpenComponent(Component aComponent) ;
# 598 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern OSErr
CloseComponent(ComponentInstance aComponentInstance) ;
# 614 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern OSErr
GetComponentInstanceError(ComponentInstance aComponentInstance) ;
# 633 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern Component
ResolveComponentAlias(Component aComponent) ;
# 652 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern OSErr
GetComponentPublicResource(
  Component aComponent,
  OSType resourceType,
  SInt16 resourceID,
  Handle * theResource) ;
# 671 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern OSErr
GetComponentPublicResourceList(
  OSType resourceType,
  SInt16 resourceID,
  SInt32 flags,
  ComponentDescription * cd,
  GetMissingComponentResourceUPP missingProc,
  void * refCon,
  void * atomContainerPtr) ;
# 693 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern OSErr
GetComponentPublicIndString(
  Component aComponent,
  Str255 theString,
  SInt16 strListID,
  SInt16 index) ;
# 721 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern void
SetComponentInstanceError(
  ComponentInstance aComponentInstance,
  OSErr theError) ;
# 739 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern long
GetComponentRefcon(Component aComponent) ;
# 755 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern void
SetComponentRefcon(
  Component aComponent,
  long theRefcon) ;
# 773 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern ResFileRefNum
OpenComponentResFile(Component aComponent) ;
# 789 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern OSErr
OpenAComponentResFile(
  Component aComponent,
  ResFileRefNum * resRef) ;
# 807 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern OSErr
CloseComponentResFile(ResFileRefNum refnum) ;
# 824 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern OSErr
GetComponentResource(
  Component aComponent,
  OSType resType,
  SInt16 resID,
  Handle * theResource) ;
# 844 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern OSErr
GetComponentIndString(
  Component aComponent,
  Str255 theString,
  SInt16 strListID,
  SInt16 index) ;
# 867 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern Handle
GetComponentInstanceStorage(ComponentInstance aComponentInstance) ;
# 883 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern void
SetComponentInstanceStorage(
  ComponentInstance aComponentInstance,
  Handle theStorage) ;
# 901 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern long
CountComponentInstances(Component aComponent) ;
# 917 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern ComponentResult
CallComponentFunction(
  ComponentParameters * params,
  ComponentFunctionUPP func) ;
# 935 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern ComponentResult
CallComponentFunctionWithStorage(
  Handle storage,
  ComponentParameters * params,
  ComponentFunctionUPP func) ;
# 953 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern ComponentResult
CallComponentFunctionWithStorageProcInfo(
  Handle storage,
  ComponentParameters * params,
  ProcPtr func,
  ProcInfoType funcProcInfo) ;
# 973 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern ComponentResult
DelegateComponentCall(
  ComponentParameters * originalParams,
  ComponentInstance ci) ;
# 991 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern OSErr
SetDefaultComponent(
  Component aComponent,
  SInt16 flags) ;
# 1009 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern ComponentInstance
OpenDefaultComponent(
  OSType componentType,
  OSType componentSubType) ;
# 1027 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern OSErr
OpenADefaultComponent(
  OSType componentType,
  OSType componentSubType,
  ComponentInstance * ci) ;
# 1046 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern Component
CaptureComponent(
  Component capturedComponent,
  Component capturingComponent) ;
# 1064 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern OSErr
UncaptureComponent(Component aComponent) ;
# 1080 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern SInt32
RegisterComponentResourceFile(
  SInt16 resRefNum,
  SInt16 global) ;
# 1168 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern OSErr
RegisterComponentFileRef(
  const FSRef * ref,
  SInt16 global) ;
# 1185 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern OSErr
RegisterComponentFileRefEntries(
  const FSRef * ref,
  SInt16 global,
  const ComponentDescription * toRegister,
  UInt32 registerCount) ;
# 1269 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern ComponentResult
CallComponentOpen(
  ComponentInstance ci,
  ComponentInstance self) ;
# 1287 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern ComponentResult
CallComponentClose(
  ComponentInstance ci,
  ComponentInstance self) ;
# 1305 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern ComponentResult
CallComponentCanDo(
  ComponentInstance ci,
  SInt16 ftnNumber) ;
# 1323 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern ComponentResult
CallComponentVersion(ComponentInstance ci) ;
# 1339 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern ComponentResult
CallComponentRegister(ComponentInstance ci) ;
# 1355 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern ComponentResult
CallComponentTarget(
  ComponentInstance ci,
  ComponentInstance target) ;
# 1373 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern ComponentResult
CallComponentUnregister(ComponentInstance ci) ;
# 1389 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern ComponentResult
CallComponentGetMPWorkFunction(
  ComponentInstance ci,
  ComponentMPWorkFunctionUPP * workFunction,
  void ** refCon) ;
# 1407 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern ComponentResult
CallComponentGetPublicResource(
  ComponentInstance ci,
  OSType resourceType,
  SInt16 resourceID,
  Handle * resource) ;
# 1431 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern ComponentResult
CallComponentDispatch(ComponentParameters * cp) ;
# 1445 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern ComponentMPWorkFunctionUPP
NewComponentMPWorkFunctionUPP(ComponentMPWorkFunctionProcPtr userRoutine) ;
# 1456 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern ComponentRoutineUPP
NewComponentRoutineUPP(ComponentRoutineProcPtr userRoutine) ;
# 1467 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern GetMissingComponentResourceUPP
NewGetMissingComponentResourceUPP(GetMissingComponentResourceProcPtr userRoutine) ;
# 1478 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern void
DisposeComponentMPWorkFunctionUPP(ComponentMPWorkFunctionUPP userUPP) ;
# 1489 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern void
DisposeComponentRoutineUPP(ComponentRoutineUPP userUPP) ;
# 1500 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern void
DisposeGetMissingComponentResourceUPP(GetMissingComponentResourceUPP userUPP) ;
# 1511 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern ComponentResult
InvokeComponentMPWorkFunctionUPP(
  void * globalRefCon,
  ComponentMPWorkFunctionHeaderRecordPtr header,
  ComponentMPWorkFunctionUPP userUPP) ;
# 1525 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern ComponentResult
InvokeComponentRoutineUPP(
  ComponentParameters * cp,
  Handle componentStorage,
  ComponentRoutineUPP userUPP) ;
# 1539 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
extern OSErr
InvokeGetMissingComponentResourceUPP(
  Component c,
  OSType resType,
  SInt16 resID,
  void * refCon,
  Handle * resource,
  GetMissingComponentResourceUPP userUPP) ;



    inline ComponentMPWorkFunctionUPP NewComponentMPWorkFunctionUPP(ComponentMPWorkFunctionProcPtr userRoutine) { return userRoutine; }
    inline ComponentRoutineUPP NewComponentRoutineUPP(ComponentRoutineProcPtr userRoutine) { return userRoutine; }
    inline GetMissingComponentResourceUPP NewGetMissingComponentResourceUPP(GetMissingComponentResourceProcPtr userRoutine) { return userRoutine; }
    inline void DisposeComponentMPWorkFunctionUPP(ComponentMPWorkFunctionUPP) { }
    inline void DisposeComponentRoutineUPP(ComponentRoutineUPP) { }
    inline void DisposeGetMissingComponentResourceUPP(GetMissingComponentResourceUPP) { }
    inline ComponentResult InvokeComponentMPWorkFunctionUPP(void * globalRefCon, ComponentMPWorkFunctionHeaderRecordPtr header, ComponentMPWorkFunctionUPP userUPP) { return (*userUPP)(globalRefCon, header); }
    inline ComponentResult InvokeComponentRoutineUPP(ComponentParameters * cp, Handle componentStorage, ComponentRoutineUPP userUPP) { return (*userUPP)(cp, componentStorage); }
    inline OSErr InvokeGetMissingComponentResourceUPP(Component c, OSType resType, SInt16 resID, void * refCon, Handle * resource, GetMissingComponentResourceUPP userUPP) { return (*userUPP)(c, resType, resID, refCon, resource); }
# 1575 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Components.h" 3
enum {
    uppComponentFunctionImplementedProcInfo = 0x000002F0,
    uppGetComponentVersionProcInfo = 0x000000F0,
    uppComponentSetTargetProcInfo = 0x000003F0,
    uppCallComponentOpenProcInfo = 0x000003F0,
    uppCallComponentCloseProcInfo = 0x000003F0,
    uppCallComponentCanDoProcInfo = 0x000002F0,
    uppCallComponentVersionProcInfo = 0x000000F0,
    uppCallComponentRegisterProcInfo = 0x000000F0,
    uppCallComponentTargetProcInfo = 0x000003F0,
    uppCallComponentUnregisterProcInfo = 0x000000F0,
    uppCallComponentGetMPWorkFunctionProcInfo = 0x00000FF0,
    uppCallComponentGetPublicResourceProcInfo = 0x00003BF0
};







#pragma pack(pop)


}
# 86 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CarbonCore.h" 2 3
# 101 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CarbonCore.h" 3
# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CodeFragments.h" 1 3
# 41 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CodeFragments.h" 3
# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 1 3
# 42 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern "C" {


#pragma options align=power
# 202 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
enum {
  MPLibrary_MajorVersion = 2,
  MPLibrary_MinorVersion = 3,
  MPLibrary_Release = 1,
  MPLibrary_DevelopmentRevision = 1
};



typedef struct OpaqueMPProcessID* MPProcessID;
typedef struct OpaqueMPTaskID* MPTaskID;
typedef struct OpaqueMPQueueID* MPQueueID;
typedef struct OpaqueMPSemaphoreID* MPSemaphoreID;
typedef struct OpaqueMPCriticalRegionID* MPCriticalRegionID;
typedef struct OpaqueMPTimerID* MPTimerID;
typedef struct OpaqueMPEventID* MPEventID;
typedef struct OpaqueMPAddressSpaceID* MPAddressSpaceID;
typedef struct OpaqueMPNotificationID* MPNotificationID;
typedef struct OpaqueMPCoherenceID* MPCoherenceID;
typedef struct OpaqueMPCpuID* MPCpuID;
typedef struct OpaqueMPAreaID* MPAreaID;
typedef struct OpaqueMPConsoleID* MPConsoleID;
typedef struct OpaqueMPOpaqueID* MPOpaqueID;
enum {

  kOpaqueAnyID = 0,
  kOpaqueProcessID = 1,
  kOpaqueTaskID = 2,
  kOpaqueTimerID = 3,
  kOpaqueQueueID = 4,
  kOpaqueSemaphoreID = 5,
  kOpaqueCriticalRegionID = 6,
  kOpaqueCpuID = 7,
  kOpaqueAddressSpaceID = 8,
  kOpaqueEventID = 9,
  kOpaqueCoherenceID = 10,
  kOpaqueAreaID = 11,
  kOpaqueNotificationID = 12,
  kOpaqueConsoleID = 13
};

typedef UInt32 MPOpaqueIDClass;

enum {
  kMPNoID = 0
};


typedef OptionBits MPTaskOptions;
typedef ItemCount TaskStorageIndex;
typedef LogicalAddress TaskStorageValue;
typedef ItemCount MPSemaphoreCount;
typedef UInt32 MPTaskWeight;
typedef UInt32 MPEventFlags;
typedef UInt32 MPExceptionKind;
typedef UInt32 MPTaskStateKind;
typedef UInt32 MPPageSizeClass;

enum {
  kDurationImmediate = 0,
  kDurationForever = 0x7FFFFFFF,
  kDurationMillisecond = 1,
  kDurationMicrosecond = -1
};
# 288 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern ItemCount
MPProcessors(void) ;
# 305 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern ItemCount
MPProcessorsScheduled(void) ;
# 320 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
enum {

  kMPCreateTaskSuspendedMask = 1L << 0,
  kMPCreateTaskTakesAllExceptionsMask = 1L << 1,
  kMPCreateTaskNotDebuggableMask = 1L << 2,
  kMPCreateTaskValidOptionsMask = kMPCreateTaskSuspendedMask | kMPCreateTaskTakesAllExceptionsMask | kMPCreateTaskNotDebuggableMask
};







typedef OSStatus ( * TaskProc)(void * parameter);
# 347 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern OSStatus
MPCreateTask(
  TaskProc entryPoint,
  void * parameter,
  ByteCount stackSize,
  MPQueueID notifyQueue,
  void * terminationParameter1,
  void * terminationParameter2,
  MPTaskOptions options,
  MPTaskID * task) ;
# 372 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern OSStatus
MPTerminateTask(
  MPTaskID task,
  OSStatus terminationStatus) ;
# 391 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern OSStatus
MPSetTaskWeight(
  MPTaskID task,
  MPTaskWeight weight) ;
# 410 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern Boolean
MPTaskIsPreemptive(MPTaskID taskID) ;
# 427 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern void
MPExit(OSStatus status) ;
# 444 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern void
MPYield(void) ;
# 461 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern MPTaskID
MPCurrentTaskID(void) ;
# 478 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern OSStatus
MPSetTaskType(
  MPTaskID task,
  OSType taskType) ;
# 506 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern OSStatus
MPAllocateTaskStorageIndex(TaskStorageIndex * taskIndex) ;
# 523 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern OSStatus
MPDeallocateTaskStorageIndex(TaskStorageIndex taskIndex) ;
# 540 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern OSStatus
MPSetTaskStorageValue(
  TaskStorageIndex taskIndex,
  TaskStorageValue value) ;
# 559 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern TaskStorageValue
MPGetTaskStorageValue(TaskStorageIndex taskIndex) ;
# 584 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern OSStatus
MPCreateQueue(MPQueueID * queue) ;
# 601 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern OSStatus
MPDeleteQueue(MPQueueID queue) ;
# 618 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern OSStatus
MPNotifyQueue(
  MPQueueID queue,
  void * param1,
  void * param2,
  void * param3) ;
# 639 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern OSStatus
MPWaitOnQueue(
  MPQueueID queue,
  void ** param1,
  void ** param2,
  void ** param3,
  Duration timeout) ;
# 661 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern OSStatus
MPSetQueueReserve(
  MPQueueID queue,
  ItemCount count) ;
# 683 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern OSStatus
MPCreateSemaphore(
  MPSemaphoreCount maximumValue,
  MPSemaphoreCount initialValue,
  MPSemaphoreID * semaphore) ;
# 703 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern OSStatus
MPDeleteSemaphore(MPSemaphoreID semaphore) ;
# 720 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern OSStatus
MPSignalSemaphore(MPSemaphoreID semaphore) ;
# 737 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern OSStatus
MPWaitOnSemaphore(
  MPSemaphoreID semaphore,
  Duration timeout) ;
# 762 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern OSStatus
MPCreateCriticalRegion(MPCriticalRegionID * criticalRegion) ;
# 779 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern OSStatus
MPDeleteCriticalRegion(MPCriticalRegionID criticalRegion) ;
# 796 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern OSStatus
MPEnterCriticalRegion(
  MPCriticalRegionID criticalRegion,
  Duration timeout) ;
# 815 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern OSStatus
MPExitCriticalRegion(MPCriticalRegionID criticalRegion) ;
# 834 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern OSStatus
MPCreateEvent(MPEventID * event) ;
# 850 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern OSStatus
MPDeleteEvent(MPEventID event) ;
# 867 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern OSStatus
MPSetEvent(
  MPEventID event,
  MPEventFlags flags) ;
# 885 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern OSStatus
MPWaitForEvent(
  MPEventID event,
  MPEventFlags * flags,
  Duration timeout) ;
# 912 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern OSStatus
MPCreateNotification(MPNotificationID * notificationID) ;
# 929 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern OSStatus
MPDeleteNotification(MPNotificationID notificationID) ;
# 946 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern OSStatus
MPModifyNotification(
  MPNotificationID notificationID,
  MPOpaqueID anID,
  void * notifyParam1,
  void * notifyParam2,
  void * notifyParam3) ;
# 968 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern OSStatus
MPModifyNotificationParameters(
  MPNotificationID notificationID,
  MPOpaqueIDClass kind,
  void * notifyParam1,
  void * notifyParam2,
  void * notifyParam3) ;
# 990 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern OSStatus
MPCauseNotification(MPNotificationID notificationID) ;
# 1010 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
enum {

  kMPPreserveTimerIDMask = 1L << 0,
  kMPTimeIsDeltaMask = 1L << 1,
  kMPTimeIsDurationMask = 1L << 2
};
# 1030 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern OSStatus
MPDelayUntil(AbsoluteTime * expirationTime) ;
# 1059 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern OSStatus
MPCreateTimer(MPTimerID * timerID) ;
# 1076 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern OSStatus
MPDeleteTimer(MPTimerID timerID) ;
# 1093 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern OSStatus
MPSetTimerNotify(
  MPTimerID timerID,
  MPOpaqueID anID,
  void * notifyParam1,
  void * notifyParam2,
  void * notifyParam3) ;
# 1115 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern OSStatus
MPArmTimer(
  MPTimerID timerID,
  AbsoluteTime * expirationTime,
  OptionBits options) ;
# 1135 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern OSStatus
MPCancelTimer(
  MPTimerID timerID,
  AbsoluteTime * timeRemaining) ;
# 1150 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
enum {

  kMPMaxAllocSize = 1024L * 1024 * 1024
};

enum {

  kMPAllocateDefaultAligned = 0,
  kMPAllocate8ByteAligned = 3,
  kMPAllocate16ByteAligned = 4,
  kMPAllocate32ByteAligned = 5,
  kMPAllocate1024ByteAligned = 10,
  kMPAllocate4096ByteAligned = 12,
  kMPAllocateMaxAlignment = 16,
  kMPAllocateAltiVecAligned = kMPAllocate16ByteAligned,
  kMPAllocateVMXAligned = kMPAllocateAltiVecAligned,
  kMPAllocateVMPageAligned = 254,
  kMPAllocateInterlockAligned = 255
};



enum {

  kMPAllocateClearMask = 0x0001,
  kMPAllocateGloballyMask = 0x0002,
  kMPAllocateResidentMask = 0x0004,
  kMPAllocateNoGrowthMask = 0x0010,
  kMPAllocateNoCreateMask = 0x0020
};
# 1197 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern LogicalAddress
MPAllocateAligned(
  ByteCount size,
  UInt8 alignment,
  OptionBits options) ;
# 1217 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern LogicalAddress
MPAllocate(ByteCount size) ;
# 1234 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern void
MPFree(LogicalAddress object) ;
# 1251 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern ByteCount
MPGetAllocatedBlockSize(LogicalAddress object) ;
# 1271 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern void
MPBlockCopy(
  LogicalAddress source,
  LogicalAddress destination,
  ByteCount size) ;
# 1291 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern void
MPBlockClear(
  LogicalAddress address,
  ByteCount size) ;
# 1367 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
enum {

  kMPTaskStateRegisters = 0,
  kMPTaskStateFPU = 1,
  kMPTaskStateVectors = 2,
  kMPTaskStateMachine = 3,
  kMPTaskState32BitMemoryException = 4,
  kMPTaskStateTaskInfo = 5
};



enum {

  kMPTaskPropagate = 0,
  kMPTaskResumeStep = 1,
  kMPTaskResumeBranch = 2,
  kMPTaskResumeMask = 0x0000,
  kMPTaskPropagateMask = 1 << kMPTaskPropagate,
  kMPTaskResumeStepMask = 1 << kMPTaskResumeStep,
  kMPTaskResumeBranchMask = 1 << kMPTaskResumeBranch
};



enum {

  kMPTaskBlocked = 0,
  kMPTaskReady = 1,
  kMPTaskRunning = 2
};

enum {

  kMPTaskInfoVersion = 3
};


struct MPTaskInfoVersion2 {
  PBVersion version;

  OSType name;

  OSType queueName;
  UInt16 runState;
  UInt16 lastCPU;
  UInt32 weight;

  MPProcessID processID;

  AbsoluteTime cpuTime;
  AbsoluteTime schedTime;
  AbsoluteTime creationTime;

  ItemCount codePageFaults;
  ItemCount dataPageFaults;
  ItemCount preemptions;

  MPCpuID cpuID;
};
typedef struct MPTaskInfoVersion2 MPTaskInfoVersion2;
struct MPTaskInfo {
  PBVersion version;

  OSType name;

  OSType queueName;
  UInt16 runState;
  UInt16 lastCPU;
  UInt32 weight;

  MPProcessID processID;

  AbsoluteTime cpuTime;
  AbsoluteTime schedTime;
  AbsoluteTime creationTime;

  ItemCount codePageFaults;
  ItemCount dataPageFaults;
  ItemCount preemptions;

  MPCpuID cpuID;
  MPOpaqueID blockedObject;
  MPAddressSpaceID spaceID;

  LogicalAddress stackBase;
  LogicalAddress stackLimit;
  LogicalAddress stackCurr;
};
typedef struct MPTaskInfo MPTaskInfo;
# 1480 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern OSStatus
MPSetExceptionHandler(
  MPTaskID task,
  MPQueueID exceptionQ) ;
# 1499 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern OSStatus
MPDisposeTaskException(
  MPTaskID task,
  OptionBits action) ;
# 1518 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern OSStatus
MPExtractTaskState(
  MPTaskID task,
  MPTaskStateKind kind,
  void * info) ;
# 1538 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern OSStatus
MPSetTaskState(
  MPTaskID task,
  MPTaskStateKind kind,
  void * info) ;
# 1558 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern OSStatus
MPThrowException(
  MPTaskID task,
  MPExceptionKind kind) ;






typedef UInt32 MPDebuggerLevel;
enum {
  kMPLowLevelDebugger = 0x00000000,
  kMPMidLevelDebugger = 0x10000000,
  kMPHighLevelDebugger = 0x20000000
};
# 1588 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern OSStatus
MPRegisterDebugger(
  MPQueueID queue,
  MPDebuggerLevel level) ;
# 1607 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern OSStatus
MPUnregisterDebugger(MPQueueID queue) ;
# 1621 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
typedef void * ( * MPRemoteProcedure)(void * parameter);

typedef UInt8 MPRemoteContext;
enum {
  kMPAnyRemoteContext = 0,
  kMPOwningProcessRemoteContext = 1,
  kMPInterruptRemoteContext = 2,
  kMPAsyncInterruptRemoteContext = 3
};
# 1691 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern void *
MPRemoteCall(
  MPRemoteProcedure remoteProc,
  void * parameter,
  MPRemoteContext context) ;
# 1751 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern void *
MPRemoteCallCFM(
  MPRemoteProcedure remoteProc,
  void * parameter,
  MPRemoteContext context) ;
# 1833 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern Boolean
_MPIsFullyInitialized(void) ;


typedef Boolean ( * MPIsFullyInitializedProc)(void);
# 1856 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern void
_MPLibraryVersion(
  const char ** versionCString,
  UInt32 * major,
  UInt32 * minor,
  UInt32 * release,
  UInt32 * revision) ;
# 1926 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
extern Boolean
_MPLibraryIsCompatible(
  const char * versionCString,
  UInt32 major,
  UInt32 minor,
  UInt32 release,
  UInt32 revision) ;
# 2013 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Multiprocessing.h" 3
#pragma options align=reset


}
# 42 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CodeFragments.h" 2 3
# 54 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CodeFragments.h" 3
extern "C" {


#pragma pack(push, 2)
# 640 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CodeFragments.h" 3
#pragma pack(pop)


}
# 102 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CarbonCore.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Aliases.h" 1 3
# 36 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Aliases.h" 3
extern "C" {


#pragma pack(push, 2)

typedef UInt32 FSAliasInfoBitmap;
enum {
  kFSAliasInfoNone = 0x00000000,
  kFSAliasInfoVolumeCreateDate = 0x00000001,
  kFSAliasInfoTargetCreateDate = 0x00000002,
  kFSAliasInfoFinderInfo = 0x00000004,
  kFSAliasInfoIsDirectory = 0x00000008,
  kFSAliasInfoIDs = 0x00000010,
  kFSAliasInfoFSInfo = 0x00000020,
  kFSAliasInfoVolumeFlags = 0x00000040
};

enum {
  rAliasType = 'alis'
};

enum {

  kARMMountVol = 0x00000001,
  kARMNoUI = 0x00000002,
  kARMMultVols = 0x00000008,
  kARMSearch = 0x00000100,
  kARMSearchMore = 0x00000200,
  kARMSearchRelFirst = 0x00000400,
  kARMTryFileIDFirst = 0x00000800
};

enum {

  asiZoneName = -3,
  asiServerName = -2,
  asiVolumeName = -1,
  asiAliasName = 0,
  asiParentName = 1
};


enum {
  kResolveAliasFileNoUI = 0x00000001,
  kResolveAliasTryFileIDFirst = 0x00000002
};
# 90 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Aliases.h" 3
struct AliasRecord {
  UInt8 hidden[6];
};
typedef struct AliasRecord AliasRecord;
# 102 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Aliases.h" 3
typedef AliasRecord * AliasPtr;
typedef AliasPtr * AliasHandle;

struct FSAliasInfo {
  UTCDateTime volumeCreateDate;
  UTCDateTime targetCreateDate;
  OSType fileType;
  OSType fileCreator;
  UInt32 parentDirID;
  UInt32 nodeID;
  UInt16 filesystemID;
  UInt16 signature;
  Boolean volumeIsBootVolume;
  Boolean volumeIsAutomounted;
  Boolean volumeIsEjectable;
  Boolean volumeHasPersistentFileIDs;
  Boolean isDirectory;
};
typedef struct FSAliasInfo FSAliasInfo;
typedef FSAliasInfo * FSAliasInfoPtr;

typedef short AliasInfoType;
# 178 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Aliases.h" 3
typedef Boolean ( * FSAliasFilterProcPtr)(const FSRef *ref, Boolean *quitFlag, Ptr myDataPtr);
# 190 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Aliases.h" 3
extern OSErr
FSNewAlias(
  const FSRef * fromFile,
  const FSRef * target,
  AliasHandle * inAlias) ;
# 208 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Aliases.h" 3
extern OSErr
FSNewAliasMinimal(
  const FSRef * target,
  AliasHandle * inAlias) ;
# 225 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Aliases.h" 3
extern OSErr
FSIsAliasFile(
  const FSRef * fileRef,
  Boolean * aliasFileFlag,
  Boolean * folderFlag) ;
# 244 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Aliases.h" 3
extern OSErr
FSResolveAliasWithMountFlags(
  const FSRef * fromFile,
  AliasHandle inAlias,
  FSRef * target,
  Boolean * wasChanged,
  unsigned long mountFlags) ;
# 265 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Aliases.h" 3
extern OSErr
FSResolveAlias(
  const FSRef * fromFile,
  AliasHandle alias,
  FSRef * target,
  Boolean * wasChanged) ;
# 285 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Aliases.h" 3
extern OSErr
FSResolveAliasFileWithMountFlags(
  FSRef * theRef,
  Boolean resolveAliasChains,
  Boolean * targetIsFolder,
  Boolean * wasAliased,
  unsigned long mountFlags) ;
# 306 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Aliases.h" 3
extern OSErr
FSResolveAliasFile(
  FSRef * theRef,
  Boolean resolveAliasChains,
  Boolean * targetIsFolder,
  Boolean * wasAliased) ;
# 326 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Aliases.h" 3
extern OSErr
FSFollowFinderAlias(
  FSRef * fromFile,
  AliasHandle alias,
  Boolean logon,
  FSRef * target,
  Boolean * wasChanged) ;
# 346 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Aliases.h" 3
extern OSErr
FSUpdateAlias(
  const FSRef * fromFile,
  const FSRef * target,
  AliasHandle alias,
  Boolean * wasChanged) ;
# 395 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Aliases.h" 3
extern OSErr
FSNewAliasUnicode(
  const FSRef * fromFile,
  const FSRef * targetParentRef,
  UniCharCount targetNameLength,
  const UniChar * targetName,
  AliasHandle * inAlias,
  Boolean * isDirectory) ;
# 441 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Aliases.h" 3
extern OSErr
FSNewAliasMinimalUnicode(
  const FSRef * targetParentRef,
  UniCharCount targetNameLength,
  const UniChar * targetName,
  AliasHandle * inAlias,
  Boolean * isDirectory) ;
# 487 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Aliases.h" 3
extern OSStatus
FSNewAliasFromPath(
  const char * fromFilePath,
  const char * targetPath,
  OptionBits flags,
  AliasHandle * inAlias,
  Boolean * isDirectory) ;
# 511 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Aliases.h" 3
extern OSStatus
FSMatchAliasBulk(
  const FSRef * fromFile,
  unsigned long rulesMask,
  AliasHandle inAlias,
  short * aliasCount,
  FSRef * aliasList,
  Boolean * needsUpdate,
  FSAliasFilterProcPtr aliasFilter,
  void * yourDataPtr) ;
# 563 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Aliases.h" 3
extern OSStatus
FSCopyAliasInfo(
  AliasHandle inAlias,
  HFSUniStr255 * targetName,
  HFSUniStr255 * volumeName,
  CFStringRef * pathString,
  FSAliasInfoBitmap * whichInfo,
  FSAliasInfo * info) ;
# 598 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Aliases.h" 3
extern Size
GetAliasSize(AliasHandle alias) ;
# 625 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Aliases.h" 3
extern OSType
GetAliasUserType(AliasHandle alias) ;
# 652 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Aliases.h" 3
extern void
SetAliasUserType(
  AliasHandle alias,
  OSType userType) ;
# 681 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Aliases.h" 3
extern Size
GetAliasSizeFromPtr(const AliasRecord * alias) ;
# 708 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Aliases.h" 3
extern OSType
GetAliasUserTypeFromPtr(const AliasRecord * alias) ;
# 735 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Aliases.h" 3
extern void
SetAliasUserTypeWithPtr(
  AliasPtr alias,
  OSType userType) ;
# 1204 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Aliases.h" 3
#pragma pack(pop)


}
# 106 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CarbonCore.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacLocales.h" 1 3
# 36 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacLocales.h" 3
extern "C" {


#pragma pack(push, 2)
# 48 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacLocales.h" 3
typedef struct OpaqueLocaleRef* LocaleRef;
typedef UInt32 LocalePartMask;
enum {

  kLocaleLanguageMask = 1L << 0,
  kLocaleLanguageVariantMask = 1L << 1,
  kLocaleScriptMask = 1L << 2,
  kLocaleScriptVariantMask = 1L << 3,
  kLocaleRegionMask = 1L << 4,
  kLocaleRegionVariantMask = 1L << 5,
  kLocaleAllPartsMask = 0x0000003F
};

typedef FourCharCode LocaleOperationClass;

typedef FourCharCode LocaleOperationVariant;
struct LocaleAndVariant {
  LocaleRef locale;
  LocaleOperationVariant opVariant;
};
typedef struct LocaleAndVariant LocaleAndVariant;

typedef UInt32 LocaleNameMask;
enum {

  kLocaleNameMask = 1L << 0,
  kLocaleOperationVariantNameMask = 1L << 1,
  kLocaleAndVariantNameMask = 0x00000003
};
# 94 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacLocales.h" 3
extern OSStatus
LocaleRefFromLangOrRegionCode(
  LangCode lang,
  RegionCode region,
  LocaleRef * locale) ;
# 109 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacLocales.h" 3
extern OSStatus
LocaleRefFromLocaleString(
  const char localeString[],
  LocaleRef * locale) ;
# 123 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacLocales.h" 3
extern OSStatus
LocaleRefGetPartString(
  LocaleRef locale,
  LocalePartMask partMask,
  ByteCount maxStringLen,
  char partString[]) ;
# 167 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacLocales.h" 3
extern OSStatus
LocaleStringToLangAndRegionCodes(
  const char localeString[],
  LangCode * lang,
  RegionCode * region) ;
# 185 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacLocales.h" 3
extern OSStatus
LocaleOperationCountLocales(
  LocaleOperationClass opClass,
  ItemCount * localeCount) ;
# 199 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacLocales.h" 3
extern OSStatus
LocaleOperationGetLocales(
  LocaleOperationClass opClass,
  ItemCount maxLocaleCount,
  ItemCount * actualLocaleCount,
  LocaleAndVariant localeVariantList[]) ;
# 217 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacLocales.h" 3
extern OSStatus
LocaleGetName(
  LocaleRef locale,
  LocaleOperationVariant opVariant,
  LocaleNameMask nameMask,
  LocaleRef displayLocale,
  UniCharCount maxNameLen,
  UniCharCount * actualNameLen,
  UniChar displayName[]) ;
# 236 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacLocales.h" 3
extern OSStatus
LocaleCountNames(
  LocaleRef locale,
  LocaleOperationVariant opVariant,
  LocaleNameMask nameMask,
  ItemCount * nameCount) ;
# 252 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacLocales.h" 3
extern OSStatus
LocaleGetIndName(
  LocaleRef locale,
  LocaleOperationVariant opVariant,
  LocaleNameMask nameMask,
  ItemCount nameIndex,
  UniCharCount maxNameLen,
  UniCharCount * actualNameLen,
  UniChar displayName[],
  LocaleRef * displayLocale) ;
# 302 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacLocales.h" 3
extern OSStatus
LocaleOperationGetName(
  LocaleOperationClass opClass,
  LocaleRef displayLocale,
  UniCharCount maxNameLen,
  UniCharCount * actualNameLen,
  UniChar displayName[]) ;
# 319 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacLocales.h" 3
extern OSStatus
LocaleOperationCountNames(
  LocaleOperationClass opClass,
  ItemCount * nameCount) ;
# 333 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MacLocales.h" 3
extern OSStatus
LocaleOperationGetIndName(
  LocaleOperationClass opClass,
  ItemCount nameIndex,
  UniCharCount maxNameLen,
  UniCharCount * actualNameLen,
  UniChar displayName[],
  LocaleRef * displayLocale) ;



#pragma pack(pop)


}
# 110 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CarbonCore.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Debugging.h" 1 3
# 39 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Debugging.h" 3
extern "C" {
# 219 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Debugging.h" 3
# 1 "/usr/include/AssertMacros.h" 1 3 4
# 220 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Debugging.h" 2 3
# 301 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Debugging.h" 3
enum {
  kBlessedBusErrorBait = 0x68F168F1
};
# 353 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Debugging.h" 3
extern void
DebugAssert(
  OSType componentSignature,
  UInt32 options,
  const char * assertionString,
  const char * exceptionLabelString,
  const char * errorString,
  const char * fileName,
  long lineNumber,
  void * value) ;





enum {
  k68kInterruptLevelMask = 0x00000007,
  kInVBLTaskMask = 0x00000010,
  kInDeferredTaskMask = 0x00000020,
  kInSecondaryIntHandlerMask = 0x00000040,
  kInNestedInterruptMask = 0x00000080
};
# 397 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Debugging.h" 3
extern UInt32
TaskLevel(void) ;





enum {
  kComponentDebugOption = 0
};

enum {
  kGetDebugOption = 1,
  kSetDebugOption = 2
};
# 438 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Debugging.h" 3
typedef void ( * DebugComponentCallbackProcPtr)(SInt32 optionSelectorNum, UInt32 command, Boolean *optionSetting);
typedef DebugComponentCallbackProcPtr DebugComponentCallbackUPP;
# 470 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Debugging.h" 3
extern OSStatus
NewDebugComponent(
  OSType componentSignature,
  ConstStr255Param componentName,
  DebugComponentCallbackUPP componentCallback) ;
# 508 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Debugging.h" 3
extern OSStatus
NewDebugOption(
  OSType componentSignature,
  SInt32 optionSelectorNum,
  ConstStr255Param optionName) ;
# 539 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Debugging.h" 3
extern OSStatus
DisposeDebugComponent(OSType componentSignature) ;
# 574 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Debugging.h" 3
extern OSStatus
GetDebugComponentInfo(
  UInt32 itemIndex,
  OSType * componentSignature,
  Str255 componentName) ;
# 621 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Debugging.h" 3
extern OSStatus
GetDebugOptionInfo(
  UInt32 itemIndex,
  OSType componentSignature,
  SInt32 * optionSelectorNum,
  Str255 optionName,
  Boolean * optionSetting) ;
# 659 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Debugging.h" 3
extern OSStatus
SetDebugOptionValue(
  OSType componentSignature,
  SInt32 optionSelectorNum,
  Boolean newOptionSetting) ;
# 708 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Debugging.h" 3
typedef void ( * DebugAssertOutputHandlerProcPtr)(OSType componentSignature, UInt32 options, const char *assertionString, const char *exceptionLabelString, const char *errorString, const char *fileName, long lineNumber, void *value, ConstStr255Param outputMsg);
typedef DebugAssertOutputHandlerProcPtr DebugAssertOutputHandlerUPP;
# 729 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Debugging.h" 3
extern void
InstallDebugAssertOutputHandler(DebugAssertOutputHandlerUPP handler) ;
# 813 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Debugging.h" 3
extern const char *
GetMacOSStatusErrorString(OSStatus err) ;
# 854 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Debugging.h" 3
extern const char *
GetMacOSStatusCommentString(OSStatus err) ;
# 871 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Debugging.h" 3
extern DebugComponentCallbackUPP
NewDebugComponentCallbackUPP(DebugComponentCallbackProcPtr userRoutine) ;
# 882 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Debugging.h" 3
extern DebugAssertOutputHandlerUPP
NewDebugAssertOutputHandlerUPP(DebugAssertOutputHandlerProcPtr userRoutine) ;
# 893 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Debugging.h" 3
extern void
DisposeDebugComponentCallbackUPP(DebugComponentCallbackUPP userUPP) ;
# 904 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Debugging.h" 3
extern void
DisposeDebugAssertOutputHandlerUPP(DebugAssertOutputHandlerUPP userUPP) ;
# 915 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Debugging.h" 3
extern void
InvokeDebugComponentCallbackUPP(
  SInt32 optionSelectorNum,
  UInt32 command,
  Boolean * optionSetting,
  DebugComponentCallbackUPP userUPP) ;
# 930 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Debugging.h" 3
extern void
InvokeDebugAssertOutputHandlerUPP(
  OSType componentSignature,
  UInt32 options,
  const char * assertionString,
  const char * exceptionLabelString,
  const char * errorString,
  const char * fileName,
  long lineNumber,
  void * value,
  ConstStr255Param outputMsg,
  DebugAssertOutputHandlerUPP userUPP) ;



    inline DebugComponentCallbackUPP NewDebugComponentCallbackUPP(DebugComponentCallbackProcPtr userRoutine) { return userRoutine; }
    inline DebugAssertOutputHandlerUPP NewDebugAssertOutputHandlerUPP(DebugAssertOutputHandlerProcPtr userRoutine) { return userRoutine; }
    inline void DisposeDebugComponentCallbackUPP(DebugComponentCallbackUPP) { }
    inline void DisposeDebugAssertOutputHandlerUPP(DebugAssertOutputHandlerUPP) { }
    inline void InvokeDebugComponentCallbackUPP(SInt32 optionSelectorNum, UInt32 command, Boolean * optionSetting, DebugComponentCallbackUPP userUPP) { (*userUPP)(optionSelectorNum, command, optionSetting); }
    inline void InvokeDebugAssertOutputHandlerUPP(OSType componentSignature, UInt32 options, const char * assertionString, const char * exceptionLabelString, const char * errorString, const char * fileName, long lineNumber, void * value, ConstStr255Param outputMsg, DebugAssertOutputHandlerUPP userUPP) { (*userUPP)(componentSignature, options, assertionString, exceptionLabelString, errorString, fileName, lineNumber, value, outputMsg); }
# 963 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Debugging.h" 3
}
# 114 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CarbonCore.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/PLStringFuncs.h" 1 3
# 32 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/PLStringFuncs.h" 3
extern "C" {
# 75 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/PLStringFuncs.h" 3
extern short
PLstrcmp(
  ConstStr255Param str1,
  ConstStr255Param str2) __attribute__((deprecated));
# 127 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/PLStringFuncs.h" 3
extern short
PLstrncmp(
  ConstStr255Param str1,
  ConstStr255Param str2,
  short num) __attribute__((deprecated));
# 170 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/PLStringFuncs.h" 3
extern StringPtr
PLstrcpy(
  StringPtr dest,
  ConstStr255Param source) __attribute__((deprecated));
# 219 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/PLStringFuncs.h" 3
extern StringPtr
PLstrncpy(
  StringPtr dest,
  ConstStr255Param source,
  short num) __attribute__((deprecated));
# 266 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/PLStringFuncs.h" 3
extern StringPtr
PLstrcat(
  StringPtr str,
  ConstStr255Param append) __attribute__((deprecated));
# 316 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/PLStringFuncs.h" 3
extern StringPtr
PLstrncat(
  StringPtr str1,
  ConstStr255Param append,
  short num) __attribute__((deprecated));
# 359 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/PLStringFuncs.h" 3
extern Ptr
PLstrchr(
  ConstStr255Param str1,
  short ch1) __attribute__((deprecated));
# 401 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/PLStringFuncs.h" 3
extern Ptr
PLstrrchr(
  ConstStr255Param str1,
  short ch1) __attribute__((deprecated));
# 445 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/PLStringFuncs.h" 3
extern Ptr
PLstrpbrk(
  ConstStr255Param str1,
  ConstStr255Param charSet) __attribute__((deprecated));
# 491 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/PLStringFuncs.h" 3
extern short
PLstrspn(
  ConstStr255Param str1,
  ConstStr255Param charSet) __attribute__((deprecated));
# 535 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/PLStringFuncs.h" 3
extern Ptr
PLstrstr(
  ConstStr255Param str1,
  ConstStr255Param searchStr) __attribute__((deprecated));
# 572 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/PLStringFuncs.h" 3
extern short
PLstrlen(ConstStr255Param str) __attribute__((deprecated));
# 615 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/PLStringFuncs.h" 3
extern short
PLpos(
  ConstStr255Param str1,
  ConstStr255Param searchStr) __attribute__((deprecated));





}
# 118 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CarbonCore.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DriverSynchronization.h" 1 3
# 36 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DriverSynchronization.h" 3
extern "C" {
# 77 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DriverSynchronization.h" 3
extern Boolean
CompareAndSwap(
  UInt32 oldValue,
  UInt32 newValue,
  UInt32 * address) ;
# 127 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DriverSynchronization.h" 3
extern Boolean
TestAndClear(
  UInt32 bit,
  UInt8 * address) ;
# 166 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DriverSynchronization.h" 3
extern Boolean
TestAndSet(
  UInt32 bit,
  UInt8 * address) ;
# 201 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DriverSynchronization.h" 3
extern SInt8
IncrementAtomic8(SInt8 * address) ;
# 234 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DriverSynchronization.h" 3
extern SInt8
DecrementAtomic8(SInt8 * address) ;
# 270 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DriverSynchronization.h" 3
extern SInt8
AddAtomic8(
  SInt32 amount,
  SInt8 * address) ;
# 309 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DriverSynchronization.h" 3
extern UInt8
BitAndAtomic8(
  UInt32 mask,
  UInt8 * address) ;
# 348 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DriverSynchronization.h" 3
extern UInt8
BitOrAtomic8(
  UInt32 mask,
  UInt8 * address) ;
# 387 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DriverSynchronization.h" 3
extern UInt8
BitXorAtomic8(
  UInt32 mask,
  UInt8 * address) ;
# 422 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DriverSynchronization.h" 3
extern SInt16
IncrementAtomic16(SInt16 * address) ;
# 455 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DriverSynchronization.h" 3
extern SInt16
DecrementAtomic16(SInt16 * address) ;
# 491 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DriverSynchronization.h" 3
extern SInt16
AddAtomic16(
  SInt32 amount,
  SInt16 * address) ;
# 530 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DriverSynchronization.h" 3
extern UInt16
BitAndAtomic16(
  UInt32 mask,
  UInt16 * address) ;
# 569 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DriverSynchronization.h" 3
extern UInt16
BitOrAtomic16(
  UInt32 mask,
  UInt16 * address) ;
# 608 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DriverSynchronization.h" 3
extern UInt16
BitXorAtomic16(
  UInt32 mask,
  UInt16 * address) ;
# 643 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DriverSynchronization.h" 3
extern SInt32
IncrementAtomic(SInt32 * address) ;
# 676 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DriverSynchronization.h" 3
extern SInt32
DecrementAtomic(SInt32 * address) ;
# 712 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DriverSynchronization.h" 3
extern SInt32
AddAtomic(
  SInt32 amount,
  SInt32 * address) ;
# 751 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DriverSynchronization.h" 3
extern UInt32
BitAndAtomic(
  UInt32 mask,
  UInt32 * address) ;
# 790 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DriverSynchronization.h" 3
extern UInt32
BitOrAtomic(
  UInt32 mask,
  UInt32 * address) ;
# 829 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DriverSynchronization.h" 3
extern UInt32
BitXorAtomic(
  UInt32 mask,
  UInt32 * address) ;




}
# 122 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CarbonCore.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DriverServices.h" 1 3
# 32 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DriverServices.h" 3
# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MachineExceptions.h" 1 3
# 29 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MachineExceptions.h" 3
# 1 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/xmmintrin.h" 1 3 4
# 40 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/xmmintrin.h" 3 4
# 1 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/mmintrin.h" 1 3 4
# 41 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/mmintrin.h" 3 4
typedef long long __m64 __attribute__ ((__vector_size__ (8), __may_alias__));


typedef int __v2si __attribute__ ((__vector_size__ (8)));
typedef short __v4hi __attribute__ ((__vector_size__ (8)));
typedef char __v8qi __attribute__ ((__vector_size__ (8)));
# 64 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/mmintrin.h" 3 4
static inline void __attribute__((__always_inline__, __nodebug__))

_mm_empty (void)
{
  __builtin_ia32_emms ();
}


static inline void __attribute__((__always_inline__, __nodebug__))

_m_empty (void)
{
  _mm_empty ();
}



static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_cvtsi32_si64 (int __i)
{
  return (__m64) __builtin_ia32_vec_init_v2si (__i, 0);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_from_int (int __i)
{
  return _mm_cvtsi32_si64 (__i);
}






static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_from_int64 (long long __i)
{
  return (__m64) __i;
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_cvtsi64_m64 (long long __i)
{
  return (__m64) __i;
}



static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_cvtsi64x_si64 (long long __i)
{
  return (__m64) __i;
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_set_pi64x (long long __i)
{
  return (__m64) __i;
}




static inline int __attribute__((__always_inline__, __nodebug__))

_mm_cvtsi64_si32 (__m64 __i)
{
  return __builtin_ia32_vec_ext_v2si ((__v2si)__i, 0);
}


static inline int __attribute__((__always_inline__, __nodebug__))

_m_to_int (__m64 __i)
{
  return _mm_cvtsi64_si32 (__i);
}






static inline long long __attribute__((__always_inline__, __nodebug__))

_m_to_int64 (__m64 __i)
{
  return (long long)__i;
}


static inline long long __attribute__((__always_inline__, __nodebug__))

_mm_cvtm64_si64 (__m64 __i)
{
  return (long long)__i;
}



static inline long long __attribute__((__always_inline__, __nodebug__))

_mm_cvtsi64_si64x (__m64 __i)
{
  return (long long)__i;
}






static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_packs_pi16 (__m64 __m1, __m64 __m2)
{
  return (__m64) __builtin_ia32_packsswb ((__v4hi)__m1, (__v4hi)__m2);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_packsswb (__m64 __m1, __m64 __m2)
{
  return _mm_packs_pi16 (__m1, __m2);
}





static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_packs_pi32 (__m64 __m1, __m64 __m2)
{
  return (__m64) __builtin_ia32_packssdw ((__v2si)__m1, (__v2si)__m2);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_packssdw (__m64 __m1, __m64 __m2)
{
  return _mm_packs_pi32 (__m1, __m2);
}





static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_packs_pu16 (__m64 __m1, __m64 __m2)
{
  return (__m64) __builtin_ia32_packuswb ((__v4hi)__m1, (__v4hi)__m2);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_packuswb (__m64 __m1, __m64 __m2)
{
  return _mm_packs_pu16 (__m1, __m2);
}




static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_unpackhi_pi8 (__m64 __m1, __m64 __m2)
{
  return (__m64) __builtin_ia32_punpckhbw ((__v8qi)__m1, (__v8qi)__m2);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_punpckhbw (__m64 __m1, __m64 __m2)
{
  return _mm_unpackhi_pi8 (__m1, __m2);
}




static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_unpackhi_pi16 (__m64 __m1, __m64 __m2)
{
  return (__m64) __builtin_ia32_punpckhwd ((__v4hi)__m1, (__v4hi)__m2);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_punpckhwd (__m64 __m1, __m64 __m2)
{
  return _mm_unpackhi_pi16 (__m1, __m2);
}




static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_unpackhi_pi32 (__m64 __m1, __m64 __m2)
{
  return (__m64) __builtin_ia32_punpckhdq ((__v2si)__m1, (__v2si)__m2);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_punpckhdq (__m64 __m1, __m64 __m2)
{
  return _mm_unpackhi_pi32 (__m1, __m2);
}




static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_unpacklo_pi8 (__m64 __m1, __m64 __m2)
{
  return (__m64) __builtin_ia32_punpcklbw ((__v8qi)__m1, (__v8qi)__m2);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_punpcklbw (__m64 __m1, __m64 __m2)
{
  return _mm_unpacklo_pi8 (__m1, __m2);
}




static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_unpacklo_pi16 (__m64 __m1, __m64 __m2)
{
  return (__m64) __builtin_ia32_punpcklwd ((__v4hi)__m1, (__v4hi)__m2);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_punpcklwd (__m64 __m1, __m64 __m2)
{
  return _mm_unpacklo_pi16 (__m1, __m2);
}




static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_unpacklo_pi32 (__m64 __m1, __m64 __m2)
{
  return (__m64) __builtin_ia32_punpckldq ((__v2si)__m1, (__v2si)__m2);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_punpckldq (__m64 __m1, __m64 __m2)
{
  return _mm_unpacklo_pi32 (__m1, __m2);
}



static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_add_pi8 (__m64 __m1, __m64 __m2)
{
  return (__m64) __builtin_ia32_paddb ((__v8qi)__m1, (__v8qi)__m2);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_paddb (__m64 __m1, __m64 __m2)
{
  return _mm_add_pi8 (__m1, __m2);
}



static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_add_pi16 (__m64 __m1, __m64 __m2)
{
  return (__m64) __builtin_ia32_paddw ((__v4hi)__m1, (__v4hi)__m2);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_paddw (__m64 __m1, __m64 __m2)
{
  return _mm_add_pi16 (__m1, __m2);
}



static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_add_pi32 (__m64 __m1, __m64 __m2)
{
  return (__m64) __builtin_ia32_paddd ((__v2si)__m1, (__v2si)__m2);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_paddd (__m64 __m1, __m64 __m2)
{
  return _mm_add_pi32 (__m1, __m2);
}




static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_add_si64 (__m64 __m1, __m64 __m2)
{

  return (__m64) __builtin_ia32_paddq (__m1, __m2);
}





static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_adds_pi8 (__m64 __m1, __m64 __m2)
{
  return (__m64) __builtin_ia32_paddsb ((__v8qi)__m1, (__v8qi)__m2);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_paddsb (__m64 __m1, __m64 __m2)
{
  return _mm_adds_pi8 (__m1, __m2);
}




static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_adds_pi16 (__m64 __m1, __m64 __m2)
{
  return (__m64) __builtin_ia32_paddsw ((__v4hi)__m1, (__v4hi)__m2);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_paddsw (__m64 __m1, __m64 __m2)
{
  return _mm_adds_pi16 (__m1, __m2);
}




static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_adds_pu8 (__m64 __m1, __m64 __m2)
{
  return (__m64) __builtin_ia32_paddusb ((__v8qi)__m1, (__v8qi)__m2);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_paddusb (__m64 __m1, __m64 __m2)
{
  return _mm_adds_pu8 (__m1, __m2);
}




static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_adds_pu16 (__m64 __m1, __m64 __m2)
{
  return (__m64) __builtin_ia32_paddusw ((__v4hi)__m1, (__v4hi)__m2);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_paddusw (__m64 __m1, __m64 __m2)
{
  return _mm_adds_pu16 (__m1, __m2);
}



static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_sub_pi8 (__m64 __m1, __m64 __m2)
{
  return (__m64) __builtin_ia32_psubb ((__v8qi)__m1, (__v8qi)__m2);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_psubb (__m64 __m1, __m64 __m2)
{
  return _mm_sub_pi8 (__m1, __m2);
}



static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_sub_pi16 (__m64 __m1, __m64 __m2)
{
  return (__m64) __builtin_ia32_psubw ((__v4hi)__m1, (__v4hi)__m2);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_psubw (__m64 __m1, __m64 __m2)
{
  return _mm_sub_pi16 (__m1, __m2);
}



static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_sub_pi32 (__m64 __m1, __m64 __m2)
{
  return (__m64) __builtin_ia32_psubd ((__v2si)__m1, (__v2si)__m2);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_psubd (__m64 __m1, __m64 __m2)
{
  return _mm_sub_pi32 (__m1, __m2);
}




static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_sub_si64 (__m64 __m1, __m64 __m2)
{

  return (__m64) __builtin_ia32_psubq (__m1, __m2);
}





static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_subs_pi8 (__m64 __m1, __m64 __m2)
{
  return (__m64) __builtin_ia32_psubsb ((__v8qi)__m1, (__v8qi)__m2);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_psubsb (__m64 __m1, __m64 __m2)
{
  return _mm_subs_pi8 (__m1, __m2);
}




static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_subs_pi16 (__m64 __m1, __m64 __m2)
{
  return (__m64) __builtin_ia32_psubsw ((__v4hi)__m1, (__v4hi)__m2);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_psubsw (__m64 __m1, __m64 __m2)
{
  return _mm_subs_pi16 (__m1, __m2);
}




static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_subs_pu8 (__m64 __m1, __m64 __m2)
{
  return (__m64) __builtin_ia32_psubusb ((__v8qi)__m1, (__v8qi)__m2);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_psubusb (__m64 __m1, __m64 __m2)
{
  return _mm_subs_pu8 (__m1, __m2);
}




static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_subs_pu16 (__m64 __m1, __m64 __m2)
{
  return (__m64) __builtin_ia32_psubusw ((__v4hi)__m1, (__v4hi)__m2);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_psubusw (__m64 __m1, __m64 __m2)
{
  return _mm_subs_pu16 (__m1, __m2);
}





static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_madd_pi16 (__m64 __m1, __m64 __m2)
{
  return (__m64) __builtin_ia32_pmaddwd ((__v4hi)__m1, (__v4hi)__m2);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_pmaddwd (__m64 __m1, __m64 __m2)
{
  return _mm_madd_pi16 (__m1, __m2);
}




static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_mulhi_pi16 (__m64 __m1, __m64 __m2)
{
  return (__m64) __builtin_ia32_pmulhw ((__v4hi)__m1, (__v4hi)__m2);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_pmulhw (__m64 __m1, __m64 __m2)
{
  return _mm_mulhi_pi16 (__m1, __m2);
}




static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_mullo_pi16 (__m64 __m1, __m64 __m2)
{
  return (__m64) __builtin_ia32_pmullw ((__v4hi)__m1, (__v4hi)__m2);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_pmullw (__m64 __m1, __m64 __m2)
{
  return _mm_mullo_pi16 (__m1, __m2);
}



static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_sll_pi16 (__m64 __m, __m64 __count)
{

  return (__m64) __builtin_ia32_psllw ((__v4hi)__m, __count);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_psllw (__m64 __m, __m64 __count)
{
  return _mm_sll_pi16 (__m, __count);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_slli_pi16 (__m64 __m, int __count)
{

  return (__m64) __builtin_ia32_psllwi ((__v4hi)__m, __count);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_psllwi (__m64 __m, int __count)
{
  return _mm_slli_pi16 (__m, __count);
}



static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_sll_pi32 (__m64 __m, __m64 __count)
{

  return (__m64) __builtin_ia32_pslld ((__v2si)__m, __count);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_pslld (__m64 __m, __m64 __count)
{
  return _mm_sll_pi32 (__m, __count);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_slli_pi32 (__m64 __m, int __count)
{

  return (__m64) __builtin_ia32_pslldi ((__v2si)__m, __count);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_pslldi (__m64 __m, int __count)
{
  return _mm_slli_pi32 (__m, __count);
}



static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_sll_si64 (__m64 __m, __m64 __count)
{

  return (__m64) __builtin_ia32_psllq (__m, __count);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_psllq (__m64 __m, __m64 __count)
{
  return _mm_sll_si64 (__m, __count);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_slli_si64 (__m64 __m, int __count)
{

  return (__m64) __builtin_ia32_psllqi (__m, __count);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_psllqi (__m64 __m, int __count)
{
  return _mm_slli_si64 (__m, __count);
}



static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_sra_pi16 (__m64 __m, __m64 __count)
{

  return (__m64) __builtin_ia32_psraw ((__v4hi)__m, __count);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_psraw (__m64 __m, __m64 __count)
{
  return _mm_sra_pi16 (__m, __count);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_srai_pi16 (__m64 __m, int __count)
{

  return (__m64) __builtin_ia32_psrawi ((__v4hi)__m, __count);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_psrawi (__m64 __m, int __count)
{
  return _mm_srai_pi16 (__m, __count);
}



static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_sra_pi32 (__m64 __m, __m64 __count)
{

  return (__m64) __builtin_ia32_psrad ((__v2si)__m, __count);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_psrad (__m64 __m, __m64 __count)
{
  return _mm_sra_pi32 (__m, __count);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_srai_pi32 (__m64 __m, int __count)
{

  return (__m64) __builtin_ia32_psradi ((__v2si)__m, __count);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_psradi (__m64 __m, int __count)
{
  return _mm_srai_pi32 (__m, __count);
}



static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_srl_pi16 (__m64 __m, __m64 __count)
{

  return (__m64) __builtin_ia32_psrlw ((__v4hi)__m, __count);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_psrlw (__m64 __m, __m64 __count)
{
  return _mm_srl_pi16 (__m, __count);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_srli_pi16 (__m64 __m, int __count)
{

  return (__m64) __builtin_ia32_psrlwi ((__v4hi)__m, __count);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_psrlwi (__m64 __m, int __count)
{
  return _mm_srli_pi16 (__m, __count);
}



static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_srl_pi32 (__m64 __m, __m64 __count)
{

  return (__m64) __builtin_ia32_psrld ((__v2si)__m, __count);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_psrld (__m64 __m, __m64 __count)
{
  return _mm_srl_pi32 (__m, __count);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_srli_pi32 (__m64 __m, int __count)
{

  return (__m64) __builtin_ia32_psrldi ((__v2si)__m, __count);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_psrldi (__m64 __m, int __count)
{
  return _mm_srli_pi32 (__m, __count);
}



static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_srl_si64 (__m64 __m, __m64 __count)
{

  return (__m64) __builtin_ia32_psrlq (__m, __count);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_psrlq (__m64 __m, __m64 __count)
{
  return _mm_srl_si64 (__m, __count);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_srli_si64 (__m64 __m, int __count)
{

  return (__m64) __builtin_ia32_psrlqi (__m, __count);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_psrlqi (__m64 __m, int __count)
{
  return _mm_srli_si64 (__m, __count);
}



static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_and_si64 (__m64 __m1, __m64 __m2)
{
  return __builtin_ia32_pand (__m1, __m2);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_pand (__m64 __m1, __m64 __m2)
{
  return _mm_and_si64 (__m1, __m2);
}




static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_andnot_si64 (__m64 __m1, __m64 __m2)
{
  return __builtin_ia32_pandn (__m1, __m2);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_pandn (__m64 __m1, __m64 __m2)
{
  return _mm_andnot_si64 (__m1, __m2);
}



static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_or_si64 (__m64 __m1, __m64 __m2)
{
  return __builtin_ia32_por (__m1, __m2);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_por (__m64 __m1, __m64 __m2)
{
  return _mm_or_si64 (__m1, __m2);
}



static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_xor_si64 (__m64 __m1, __m64 __m2)
{
  return __builtin_ia32_pxor (__m1, __m2);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_pxor (__m64 __m1, __m64 __m2)
{
  return _mm_xor_si64 (__m1, __m2);
}




static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_cmpeq_pi8 (__m64 __m1, __m64 __m2)
{
  return (__m64) __builtin_ia32_pcmpeqb ((__v8qi)__m1, (__v8qi)__m2);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_pcmpeqb (__m64 __m1, __m64 __m2)
{
  return _mm_cmpeq_pi8 (__m1, __m2);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_cmpgt_pi8 (__m64 __m1, __m64 __m2)
{
  return (__m64) __builtin_ia32_pcmpgtb ((__v8qi)__m1, (__v8qi)__m2);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_pcmpgtb (__m64 __m1, __m64 __m2)
{
  return _mm_cmpgt_pi8 (__m1, __m2);
}




static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_cmpeq_pi16 (__m64 __m1, __m64 __m2)
{
  return (__m64) __builtin_ia32_pcmpeqw ((__v4hi)__m1, (__v4hi)__m2);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_pcmpeqw (__m64 __m1, __m64 __m2)
{
  return _mm_cmpeq_pi16 (__m1, __m2);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_cmpgt_pi16 (__m64 __m1, __m64 __m2)
{
  return (__m64) __builtin_ia32_pcmpgtw ((__v4hi)__m1, (__v4hi)__m2);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_pcmpgtw (__m64 __m1, __m64 __m2)
{
  return _mm_cmpgt_pi16 (__m1, __m2);
}




static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_cmpeq_pi32 (__m64 __m1, __m64 __m2)
{
  return (__m64) __builtin_ia32_pcmpeqd ((__v2si)__m1, (__v2si)__m2);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_pcmpeqd (__m64 __m1, __m64 __m2)
{
  return _mm_cmpeq_pi32 (__m1, __m2);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_cmpgt_pi32 (__m64 __m1, __m64 __m2)
{
  return (__m64) __builtin_ia32_pcmpgtd ((__v2si)__m1, (__v2si)__m2);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_pcmpgtd (__m64 __m1, __m64 __m2)
{
  return _mm_cmpgt_pi32 (__m1, __m2);
}



static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_setzero_si64 (void)
{
  return (__m64)0LL;
}



static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_set_pi32 (int __i1, int __i0)
{
  return (__m64) __builtin_ia32_vec_init_v2si (__i0, __i1);
}



static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_set_pi16 (short __w3, short __w2, short __w1, short __w0)
{
  return (__m64) __builtin_ia32_vec_init_v4hi (__w0, __w1, __w2, __w3);
}



static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_set_pi8 (char __b7, char __b6, char __b5, char __b4,
      char __b3, char __b2, char __b1, char __b0)
{
  return (__m64) __builtin_ia32_vec_init_v8qi (__b0, __b1, __b2, __b3,
            __b4, __b5, __b6, __b7);
}



static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_setr_pi32 (int __i0, int __i1)
{
  return _mm_set_pi32 (__i1, __i0);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_setr_pi16 (short __w0, short __w1, short __w2, short __w3)
{
  return _mm_set_pi16 (__w3, __w2, __w1, __w0);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_setr_pi8 (char __b0, char __b1, char __b2, char __b3,
       char __b4, char __b5, char __b6, char __b7)
{
  return _mm_set_pi8 (__b7, __b6, __b5, __b4, __b3, __b2, __b1, __b0);
}



static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_set1_pi32 (int __i)
{
  return _mm_set_pi32 (__i, __i);
}



static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_set1_pi16 (short __w)
{
  return _mm_set_pi16 (__w, __w, __w, __w);
}



static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_set1_pi8 (char __b)
{
  return _mm_set_pi8 (__b, __b, __b, __b, __b, __b, __b, __b);
}
# 41 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/xmmintrin.h" 2 3 4




# 1 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/mm_malloc.h" 1 3 4
# 31 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/mm_malloc.h" 3 4
# 1 "/usr/include/errno.h" 1 3 4
# 32 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/mm_malloc.h" 2 3 4

static __inline__ void*
_mm_malloc (size_t size, size_t align)
{
  void * malloc_ptr;
  void * aligned_ptr;


  if (align & (align - 1))
    {
      (*__error()) = 22;
      return ((void*) 0);
    }

  if (size == 0)
    return ((void *) 0);





    if (align < 2 * sizeof (void *))
      align = 2 * sizeof (void *);

  malloc_ptr = malloc (size + align);
  if (!malloc_ptr)
    return ((void *) 0);


  aligned_ptr = (void *) (((size_t) malloc_ptr + align)
     & ~((size_t) (align) - 1));


  ((void **) aligned_ptr) [-1] = malloc_ptr;

  return aligned_ptr;
}

static __inline__ void
_mm_free (void * aligned_ptr)
{
  if (aligned_ptr)
    free (((void **) aligned_ptr) [-1]);
}
# 46 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/xmmintrin.h" 2 3 4





typedef float __m128 __attribute__ ((__vector_size__ (16), __may_alias__));


typedef float __v4sf __attribute__ ((__vector_size__ (16)));






enum _mm_hint
{
  _MM_HINT_T0 = 3,
  _MM_HINT_T1 = 2,
  _MM_HINT_T2 = 1,
  _MM_HINT_NTA = 0
};
# 112 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/xmmintrin.h" 3 4
static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_setzero_ps (void)
{
  return __extension__ (__m128){ 0.0f, 0.0f, 0.0f, 0.0f };
}






static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_add_ss (__m128 __A, __m128 __B)
{
  return (__m128) __builtin_ia32_addss ((__v4sf)__A, (__v4sf)__B);
}


static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_sub_ss (__m128 __A, __m128 __B)
{
  return (__m128) __builtin_ia32_subss ((__v4sf)__A, (__v4sf)__B);
}


static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_mul_ss (__m128 __A, __m128 __B)
{
  return (__m128) __builtin_ia32_mulss ((__v4sf)__A, (__v4sf)__B);
}


static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_div_ss (__m128 __A, __m128 __B)
{
  return (__m128) __builtin_ia32_divss ((__v4sf)__A, (__v4sf)__B);
}


static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_sqrt_ss (__m128 __A)
{
  return (__m128) __builtin_ia32_sqrtss ((__v4sf)__A);
}


static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_rcp_ss (__m128 __A)
{
  return (__m128) __builtin_ia32_rcpss ((__v4sf)__A);
}


static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_rsqrt_ss (__m128 __A)
{
  return (__m128) __builtin_ia32_rsqrtss ((__v4sf)__A);
}


static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_min_ss (__m128 __A, __m128 __B)
{
  return (__m128) __builtin_ia32_minss ((__v4sf)__A, (__v4sf)__B);
}


static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_max_ss (__m128 __A, __m128 __B)
{
  return (__m128) __builtin_ia32_maxss ((__v4sf)__A, (__v4sf)__B);
}




static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_add_ps (__m128 __A, __m128 __B)
{
  return (__m128) __builtin_ia32_addps ((__v4sf)__A, (__v4sf)__B);
}


static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_sub_ps (__m128 __A, __m128 __B)
{
  return (__m128) __builtin_ia32_subps ((__v4sf)__A, (__v4sf)__B);
}


static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_mul_ps (__m128 __A, __m128 __B)
{
  return (__m128) __builtin_ia32_mulps ((__v4sf)__A, (__v4sf)__B);
}


static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_div_ps (__m128 __A, __m128 __B)
{
  return (__m128) __builtin_ia32_divps ((__v4sf)__A, (__v4sf)__B);
}


static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_sqrt_ps (__m128 __A)
{
  return (__m128) __builtin_ia32_sqrtps ((__v4sf)__A);
}


static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_rcp_ps (__m128 __A)
{
  return (__m128) __builtin_ia32_rcpps ((__v4sf)__A);
}


static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_rsqrt_ps (__m128 __A)
{
  return (__m128) __builtin_ia32_rsqrtps ((__v4sf)__A);
}


static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_min_ps (__m128 __A, __m128 __B)
{
  return (__m128) __builtin_ia32_minps ((__v4sf)__A, (__v4sf)__B);
}


static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_max_ps (__m128 __A, __m128 __B)
{
  return (__m128) __builtin_ia32_maxps ((__v4sf)__A, (__v4sf)__B);
}




static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_and_ps (__m128 __A, __m128 __B)
{
  return __builtin_ia32_andps (__A, __B);
}


static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_andnot_ps (__m128 __A, __m128 __B)
{
  return __builtin_ia32_andnps (__A, __B);
}


static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_or_ps (__m128 __A, __m128 __B)
{
  return __builtin_ia32_orps (__A, __B);
}


static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_xor_ps (__m128 __A, __m128 __B)
{
  return __builtin_ia32_xorps (__A, __B);
}






static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_cmpeq_ss (__m128 __A, __m128 __B)
{
  return (__m128) __builtin_ia32_cmpeqss ((__v4sf)__A, (__v4sf)__B);
}


static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_cmplt_ss (__m128 __A, __m128 __B)
{
  return (__m128) __builtin_ia32_cmpltss ((__v4sf)__A, (__v4sf)__B);
}


static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_cmple_ss (__m128 __A, __m128 __B)
{
  return (__m128) __builtin_ia32_cmpless ((__v4sf)__A, (__v4sf)__B);
}


static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_cmpgt_ss (__m128 __A, __m128 __B)
{
  return (__m128) __builtin_ia32_movss ((__v4sf) __A,
     (__v4sf)
     __builtin_ia32_cmpltss ((__v4sf) __B,
        (__v4sf)
        __A));
}


static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_cmpge_ss (__m128 __A, __m128 __B)
{
  return (__m128) __builtin_ia32_movss ((__v4sf) __A,
     (__v4sf)
     __builtin_ia32_cmpless ((__v4sf) __B,
        (__v4sf)
        __A));
}


static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_cmpneq_ss (__m128 __A, __m128 __B)
{
  return (__m128) __builtin_ia32_cmpneqss ((__v4sf)__A, (__v4sf)__B);
}


static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_cmpnlt_ss (__m128 __A, __m128 __B)
{
  return (__m128) __builtin_ia32_cmpnltss ((__v4sf)__A, (__v4sf)__B);
}


static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_cmpnle_ss (__m128 __A, __m128 __B)
{
  return (__m128) __builtin_ia32_cmpnless ((__v4sf)__A, (__v4sf)__B);
}


static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_cmpngt_ss (__m128 __A, __m128 __B)
{
  return (__m128) __builtin_ia32_movss ((__v4sf) __A,
     (__v4sf)
     __builtin_ia32_cmpnltss ((__v4sf) __B,
         (__v4sf)
         __A));
}


static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_cmpnge_ss (__m128 __A, __m128 __B)
{
  return (__m128) __builtin_ia32_movss ((__v4sf) __A,
     (__v4sf)
     __builtin_ia32_cmpnless ((__v4sf) __B,
         (__v4sf)
         __A));
}


static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_cmpord_ss (__m128 __A, __m128 __B)
{
  return (__m128) __builtin_ia32_cmpordss ((__v4sf)__A, (__v4sf)__B);
}


static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_cmpunord_ss (__m128 __A, __m128 __B)
{
  return (__m128) __builtin_ia32_cmpunordss ((__v4sf)__A, (__v4sf)__B);
}






static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_cmpeq_ps (__m128 __A, __m128 __B)
{
  return (__m128) __builtin_ia32_cmpeqps ((__v4sf)__A, (__v4sf)__B);
}


static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_cmplt_ps (__m128 __A, __m128 __B)
{
  return (__m128) __builtin_ia32_cmpltps ((__v4sf)__A, (__v4sf)__B);
}


static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_cmple_ps (__m128 __A, __m128 __B)
{
  return (__m128) __builtin_ia32_cmpleps ((__v4sf)__A, (__v4sf)__B);
}


static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_cmpgt_ps (__m128 __A, __m128 __B)
{
  return (__m128) __builtin_ia32_cmpgtps ((__v4sf)__A, (__v4sf)__B);
}


static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_cmpge_ps (__m128 __A, __m128 __B)
{
  return (__m128) __builtin_ia32_cmpgeps ((__v4sf)__A, (__v4sf)__B);
}


static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_cmpneq_ps (__m128 __A, __m128 __B)
{
  return (__m128) __builtin_ia32_cmpneqps ((__v4sf)__A, (__v4sf)__B);
}


static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_cmpnlt_ps (__m128 __A, __m128 __B)
{
  return (__m128) __builtin_ia32_cmpnltps ((__v4sf)__A, (__v4sf)__B);
}


static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_cmpnle_ps (__m128 __A, __m128 __B)
{
  return (__m128) __builtin_ia32_cmpnleps ((__v4sf)__A, (__v4sf)__B);
}


static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_cmpngt_ps (__m128 __A, __m128 __B)
{
  return (__m128) __builtin_ia32_cmpngtps ((__v4sf)__A, (__v4sf)__B);
}


static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_cmpnge_ps (__m128 __A, __m128 __B)
{
  return (__m128) __builtin_ia32_cmpngeps ((__v4sf)__A, (__v4sf)__B);
}


static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_cmpord_ps (__m128 __A, __m128 __B)
{
  return (__m128) __builtin_ia32_cmpordps ((__v4sf)__A, (__v4sf)__B);
}


static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_cmpunord_ps (__m128 __A, __m128 __B)
{
  return (__m128) __builtin_ia32_cmpunordps ((__v4sf)__A, (__v4sf)__B);
}





static inline int __attribute__((__always_inline__, __nodebug__))

_mm_comieq_ss (__m128 __A, __m128 __B)
{
  return __builtin_ia32_comieq ((__v4sf)__A, (__v4sf)__B);
}


static inline int __attribute__((__always_inline__, __nodebug__))

_mm_comilt_ss (__m128 __A, __m128 __B)
{
  return __builtin_ia32_comilt ((__v4sf)__A, (__v4sf)__B);
}


static inline int __attribute__((__always_inline__, __nodebug__))

_mm_comile_ss (__m128 __A, __m128 __B)
{
  return __builtin_ia32_comile ((__v4sf)__A, (__v4sf)__B);
}


static inline int __attribute__((__always_inline__, __nodebug__))

_mm_comigt_ss (__m128 __A, __m128 __B)
{
  return __builtin_ia32_comigt ((__v4sf)__A, (__v4sf)__B);
}


static inline int __attribute__((__always_inline__, __nodebug__))

_mm_comige_ss (__m128 __A, __m128 __B)
{
  return __builtin_ia32_comige ((__v4sf)__A, (__v4sf)__B);
}


static inline int __attribute__((__always_inline__, __nodebug__))

_mm_comineq_ss (__m128 __A, __m128 __B)
{
  return __builtin_ia32_comineq ((__v4sf)__A, (__v4sf)__B);
}


static inline int __attribute__((__always_inline__, __nodebug__))

_mm_ucomieq_ss (__m128 __A, __m128 __B)
{
  return __builtin_ia32_ucomieq ((__v4sf)__A, (__v4sf)__B);
}


static inline int __attribute__((__always_inline__, __nodebug__))

_mm_ucomilt_ss (__m128 __A, __m128 __B)
{
  return __builtin_ia32_ucomilt ((__v4sf)__A, (__v4sf)__B);
}


static inline int __attribute__((__always_inline__, __nodebug__))

_mm_ucomile_ss (__m128 __A, __m128 __B)
{
  return __builtin_ia32_ucomile ((__v4sf)__A, (__v4sf)__B);
}


static inline int __attribute__((__always_inline__, __nodebug__))

_mm_ucomigt_ss (__m128 __A, __m128 __B)
{
  return __builtin_ia32_ucomigt ((__v4sf)__A, (__v4sf)__B);
}


static inline int __attribute__((__always_inline__, __nodebug__))

_mm_ucomige_ss (__m128 __A, __m128 __B)
{
  return __builtin_ia32_ucomige ((__v4sf)__A, (__v4sf)__B);
}


static inline int __attribute__((__always_inline__, __nodebug__))

_mm_ucomineq_ss (__m128 __A, __m128 __B)
{
  return __builtin_ia32_ucomineq ((__v4sf)__A, (__v4sf)__B);
}




static inline int __attribute__((__always_inline__, __nodebug__))

_mm_cvtss_si32 (__m128 __A)
{
  return __builtin_ia32_cvtss2si ((__v4sf) __A);
}


static inline int __attribute__((__always_inline__, __nodebug__))

_mm_cvt_ss2si (__m128 __A)
{
  return _mm_cvtss_si32 (__A);
}







static inline long long __attribute__((__always_inline__, __nodebug__))

_mm_cvtss_si64 (__m128 __A)
{
  return __builtin_ia32_cvtss2si64 ((__v4sf) __A);
}



static inline long long __attribute__((__always_inline__, __nodebug__))

_mm_cvtss_si64x (__m128 __A)
{
  return __builtin_ia32_cvtss2si64 ((__v4sf) __A);
}





static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_cvtps_pi32 (__m128 __A)
{
  return (__m64) __builtin_ia32_cvtps2pi ((__v4sf) __A);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_cvt_ps2pi (__m128 __A)
{
  return _mm_cvtps_pi32 (__A);
}



static inline int __attribute__((__always_inline__, __nodebug__))

_mm_cvttss_si32 (__m128 __A)
{
  return __builtin_ia32_cvttss2si ((__v4sf) __A);
}


static inline int __attribute__((__always_inline__, __nodebug__))

_mm_cvtt_ss2si (__m128 __A)
{
  return _mm_cvttss_si32 (__A);
}






static inline long long __attribute__((__always_inline__, __nodebug__))

_mm_cvttss_si64 (__m128 __A)
{
  return __builtin_ia32_cvttss2si64 ((__v4sf) __A);
}



static inline long long __attribute__((__always_inline__, __nodebug__))

_mm_cvttss_si64x (__m128 __A)
{
  return __builtin_ia32_cvttss2si64 ((__v4sf) __A);
}





static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_cvttps_pi32 (__m128 __A)
{
  return (__m64) __builtin_ia32_cvttps2pi ((__v4sf) __A);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_cvtt_ps2pi (__m128 __A)
{
  return _mm_cvttps_pi32 (__A);
}



static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_cvtsi32_ss (__m128 __A, int __B)
{
  return (__m128) __builtin_ia32_cvtsi2ss ((__v4sf) __A, __B);
}


static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_cvt_si2ss (__m128 __A, int __B)
{
  return _mm_cvtsi32_ss (__A, __B);
}






static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_cvtsi64_ss (__m128 __A, long long __B)
{
  return (__m128) __builtin_ia32_cvtsi642ss ((__v4sf) __A, __B);
}



static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_cvtsi64x_ss (__m128 __A, long long __B)
{
  return (__m128) __builtin_ia32_cvtsi642ss ((__v4sf) __A, __B);
}





static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_cvtpi32_ps (__m128 __A, __m64 __B)
{
  return (__m128) __builtin_ia32_cvtpi2ps ((__v4sf) __A, (__v2si)__B);
}


static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_cvt_pi2ps (__m128 __A, __m64 __B)
{
  return _mm_cvtpi32_ps (__A, __B);
}



static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_cvtpi16_ps (__m64 __A)
{
  __v4hi __sign;
  __v2si __hisi, __losi;
  __v4sf __r;




  __sign = __builtin_ia32_pcmpgtw ((__v4hi)0LL, (__v4hi)__A);


  __hisi = (__v2si) __builtin_ia32_punpckhwd ((__v4hi)__A, __sign);
  __losi = (__v2si) __builtin_ia32_punpcklwd ((__v4hi)__A, __sign);


  __r = (__v4sf) _mm_setzero_ps ();
  __r = __builtin_ia32_cvtpi2ps (__r, __hisi);
  __r = __builtin_ia32_movlhps (__r, __r);
  __r = __builtin_ia32_cvtpi2ps (__r, __losi);

  return (__m128) __r;
}



static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_cvtpu16_ps (__m64 __A)
{
  __v2si __hisi, __losi;
  __v4sf __r;


  __hisi = (__v2si) __builtin_ia32_punpckhwd ((__v4hi)__A, (__v4hi)0LL);
  __losi = (__v2si) __builtin_ia32_punpcklwd ((__v4hi)__A, (__v4hi)0LL);


  __r = (__v4sf) _mm_setzero_ps ();
  __r = __builtin_ia32_cvtpi2ps (__r, __hisi);
  __r = __builtin_ia32_movlhps (__r, __r);
  __r = __builtin_ia32_cvtpi2ps (__r, __losi);

  return (__m128) __r;
}



static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_cvtpi8_ps (__m64 __A)
{
  __v8qi __sign;




  __sign = __builtin_ia32_pcmpgtb ((__v8qi)0LL, (__v8qi)__A);


  __A = (__m64) __builtin_ia32_punpcklbw ((__v8qi)__A, __sign);

  return _mm_cvtpi16_ps(__A);
}



static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_cvtpu8_ps(__m64 __A)
{
  __A = (__m64) __builtin_ia32_punpcklbw ((__v8qi)__A, (__v8qi)0LL);
  return _mm_cvtpu16_ps(__A);
}



static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_cvtpi32x2_ps(__m64 __A, __m64 __B)
{
  __v4sf __zero = (__v4sf) _mm_setzero_ps ();
  __v4sf __sfa = __builtin_ia32_cvtpi2ps (__zero, (__v2si)__A);
  __v4sf __sfb = __builtin_ia32_cvtpi2ps (__zero, (__v2si)__B);
  return (__m128) __builtin_ia32_movlhps (__sfa, __sfb);
}



static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_cvtps_pi16(__m128 __A)
{
  __v4sf __hisf = (__v4sf)__A;
  __v4sf __losf = __builtin_ia32_movhlps (__hisf, __hisf);
  __v2si __hisi = __builtin_ia32_cvtps2pi (__hisf);
  __v2si __losi = __builtin_ia32_cvtps2pi (__losf);
  return (__m64) __builtin_ia32_packssdw (__hisi, __losi);
}



static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_cvtps_pi8(__m128 __A)
{
  __v4hi __tmp = (__v4hi) _mm_cvtps_pi16 (__A);
  return (__m64) __builtin_ia32_packsswb (__tmp, (__v4hi)0LL);
}
# 922 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/xmmintrin.h" 3 4
static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_unpackhi_ps (__m128 __A, __m128 __B)
{
  return (__m128) __builtin_ia32_unpckhps ((__v4sf)__A, (__v4sf)__B);
}



static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_unpacklo_ps (__m128 __A, __m128 __B)
{
  return (__m128) __builtin_ia32_unpcklps ((__v4sf)__A, (__v4sf)__B);
}




static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_loadh_pi (__m128 __A, __m64 const *__P)
{
  return (__m128) __builtin_ia32_loadhps ((__v4sf)__A, (__v2si *)__P);
}



static inline void __attribute__((__always_inline__, __nodebug__))

_mm_storeh_pi (__m64 *__P, __m128 __A)
{
  __builtin_ia32_storehps ((__v2si *)__P, (__v4sf)__A);
}



static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_movehl_ps (__m128 __A, __m128 __B)
{
  return (__m128) __builtin_ia32_movhlps ((__v4sf)__A, (__v4sf)__B);
}



static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_movelh_ps (__m128 __A, __m128 __B)
{
  return (__m128) __builtin_ia32_movlhps ((__v4sf)__A, (__v4sf)__B);
}




static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_loadl_pi (__m128 __A, __m64 const *__P)
{
  return (__m128) __builtin_ia32_loadlps ((__v4sf)__A, (__v2si *)__P);
}



static inline void __attribute__((__always_inline__, __nodebug__))

_mm_storel_pi (__m64 *__P, __m128 __A)
{
  __builtin_ia32_storelps ((__v2si *)__P, (__v4sf)__A);
}



static inline int __attribute__((__always_inline__, __nodebug__))

_mm_movemask_ps (__m128 __A)
{
  return __builtin_ia32_movmskps ((__v4sf)__A);
}



static inline unsigned int __attribute__((__always_inline__, __nodebug__))

_mm_getcsr (void)
{
  return __builtin_ia32_stmxcsr ();
}



static inline unsigned int __attribute__((__always_inline__, __nodebug__))

_MM_GET_EXCEPTION_STATE (void)
{
  return _mm_getcsr() & 0x003f;
}


static inline unsigned int __attribute__((__always_inline__, __nodebug__))

_MM_GET_EXCEPTION_MASK (void)
{
  return _mm_getcsr() & 0x1f80;
}


static inline unsigned int __attribute__((__always_inline__, __nodebug__))

_MM_GET_ROUNDING_MODE (void)
{
  return _mm_getcsr() & 0x6000;
}


static inline unsigned int __attribute__((__always_inline__, __nodebug__))

_MM_GET_FLUSH_ZERO_MODE (void)
{
  return _mm_getcsr() & 0x8000;
}



static inline void __attribute__((__always_inline__, __nodebug__))

_mm_setcsr (unsigned int __I)
{
  __builtin_ia32_ldmxcsr (__I);
}



static inline void __attribute__((__always_inline__, __nodebug__))

_MM_SET_EXCEPTION_STATE(unsigned int __mask)
{
  _mm_setcsr((_mm_getcsr() & ~0x003f) | __mask);
}


static inline void __attribute__((__always_inline__, __nodebug__))

_MM_SET_EXCEPTION_MASK (unsigned int __mask)
{
  _mm_setcsr((_mm_getcsr() & ~0x1f80) | __mask);
}


static inline void __attribute__((__always_inline__, __nodebug__))

_MM_SET_ROUNDING_MODE (unsigned int __mode)
{
  _mm_setcsr((_mm_getcsr() & ~0x6000) | __mode);
}


static inline void __attribute__((__always_inline__, __nodebug__))

_MM_SET_FLUSH_ZERO_MODE (unsigned int __mode)
{
  _mm_setcsr((_mm_getcsr() & ~0x8000) | __mode);
}



static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_set_ss (float __F)
{
  return __extension__ (__m128)(__v4sf){ __F, 0, 0, 0 };
}



static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_set1_ps (float __F)
{
  return __extension__ (__m128)(__v4sf){ __F, __F, __F, __F };
}


static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_set_ps1 (float __F)
{
  return _mm_set1_ps (__F);
}



static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_load_ss (float const *__P)
{
  return _mm_set_ss (*__P);
}



static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_load1_ps (float const *__P)
{
  return _mm_set1_ps (*__P);
}


static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_load_ps1 (float const *__P)
{
  return _mm_load1_ps (__P);
}



static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_load_ps (float const *__P)
{
  return (__m128) *(__v4sf *)__P;
}



static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_loadu_ps (float const *__P)
{
  return (__m128) __builtin_ia32_loadups (__P);
}



static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_loadr_ps (float const *__P)
{
  __v4sf __tmp = *(__v4sf *)__P;
  return (__m128) __builtin_ia32_shufps (__tmp, __tmp, (((0) << 6) | ((1) << 4) | ((2) << 2) | (3)));
}



static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_set_ps (const float __Z, const float __Y, const float __X, const float __W)
{
  return __extension__ (__m128)(__v4sf){ __W, __X, __Y, __Z };
}



static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_setr_ps (float __Z, float __Y, float __X, float __W)
{
  return __extension__ (__m128)(__v4sf){ __Z, __Y, __X, __W };
}



static inline void __attribute__((__always_inline__, __nodebug__))

_mm_store_ss (float *__P, __m128 __A)
{
  *__P = __builtin_ia32_vec_ext_v4sf ((__v4sf)__A, 0);
}


static inline float __attribute__((__always_inline__, __nodebug__))

_mm_cvtss_f32 (__m128 __A)
{
  return __builtin_ia32_vec_ext_v4sf ((__v4sf)__A, 0);
}



static inline void __attribute__((__always_inline__, __nodebug__))

_mm_store_ps (float *__P, __m128 __A)
{
  *(__v4sf *)__P = (__v4sf)__A;
}



static inline void __attribute__((__always_inline__, __nodebug__))

_mm_storeu_ps (float *__P, __m128 __A)
{
  __builtin_ia32_storeups (__P, (__v4sf)__A);
}



static inline void __attribute__((__always_inline__, __nodebug__))

_mm_store1_ps (float *__P, __m128 __A)
{
  __v4sf __va = (__v4sf)__A;
  __v4sf __tmp = __builtin_ia32_shufps (__va, __va, (((0) << 6) | ((0) << 4) | ((0) << 2) | (0)));
  _mm_storeu_ps (__P, __tmp);
}


static inline void __attribute__((__always_inline__, __nodebug__))

_mm_store_ps1 (float *__P, __m128 __A)
{
  _mm_store1_ps (__P, __A);
}



static inline void __attribute__((__always_inline__, __nodebug__))

_mm_storer_ps (float *__P, __m128 __A)
{
  __v4sf __va = (__v4sf)__A;
  __v4sf __tmp = __builtin_ia32_shufps (__va, __va, (((0) << 6) | ((1) << 4) | ((2) << 2) | (3)));
  _mm_store_ps (__P, __tmp);
}



static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_move_ss (__m128 __A, __m128 __B)
{
  return (__m128) __builtin_ia32_movss ((__v4sf)__A, (__v4sf)__B);
}
# 1307 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/xmmintrin.h" 3 4
static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_max_pi16 (__m64 __A, __m64 __B)
{
  return (__m64) __builtin_ia32_pmaxsw ((__v4hi)__A, (__v4hi)__B);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_pmaxsw (__m64 __A, __m64 __B)
{
  return _mm_max_pi16 (__A, __B);
}



static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_max_pu8 (__m64 __A, __m64 __B)
{
  return (__m64) __builtin_ia32_pmaxub ((__v8qi)__A, (__v8qi)__B);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_pmaxub (__m64 __A, __m64 __B)
{
  return _mm_max_pu8 (__A, __B);
}



static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_min_pi16 (__m64 __A, __m64 __B)
{
  return (__m64) __builtin_ia32_pminsw ((__v4hi)__A, (__v4hi)__B);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_pminsw (__m64 __A, __m64 __B)
{
  return _mm_min_pi16 (__A, __B);
}



static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_min_pu8 (__m64 __A, __m64 __B)
{
  return (__m64) __builtin_ia32_pminub ((__v8qi)__A, (__v8qi)__B);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_pminub (__m64 __A, __m64 __B)
{
  return _mm_min_pu8 (__A, __B);
}



static inline int __attribute__((__always_inline__, __nodebug__))

_mm_movemask_pi8 (__m64 __A)
{
  return __builtin_ia32_pmovmskb ((__v8qi)__A);
}


static inline int __attribute__((__always_inline__, __nodebug__))

_m_pmovmskb (__m64 __A)
{
  return _mm_movemask_pi8 (__A);
}




static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_mulhi_pu16 (__m64 __A, __m64 __B)
{
  return (__m64) __builtin_ia32_pmulhuw ((__v4hi)__A, (__v4hi)__B);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_pmulhuw (__m64 __A, __m64 __B)
{
  return _mm_mulhi_pu16 (__A, __B);
}
# 1436 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/xmmintrin.h" 3 4
static inline void __attribute__((__always_inline__, __nodebug__))

_mm_maskmove_si64 (__m64 __A, __m64 __N, char *__P)
{
  __builtin_ia32_maskmovq ((__v8qi)__A, (__v8qi)__N, __P);
}


static inline void __attribute__((__always_inline__, __nodebug__))

_m_maskmovq (__m64 __A, __m64 __N, char *__P)
{
  _mm_maskmove_si64 (__A, __N, __P);
}



static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_avg_pu8 (__m64 __A, __m64 __B)
{
  return (__m64) __builtin_ia32_pavgb ((__v8qi)__A, (__v8qi)__B);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_pavgb (__m64 __A, __m64 __B)
{
  return _mm_avg_pu8 (__A, __B);
}



static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_avg_pu16 (__m64 __A, __m64 __B)
{
  return (__m64) __builtin_ia32_pavgw ((__v4hi)__A, (__v4hi)__B);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_pavgw (__m64 __A, __m64 __B)
{
  return _mm_avg_pu16 (__A, __B);
}





static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_sad_pu8 (__m64 __A, __m64 __B)
{
  return (__m64) __builtin_ia32_psadbw ((__v8qi)__A, (__v8qi)__B);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_m_psadbw (__m64 __A, __m64 __B)
{
  return _mm_sad_pu8 (__A, __B);
}
# 1521 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/xmmintrin.h" 3 4
static inline void __attribute__((__always_inline__, __nodebug__))

_mm_stream_pi (__m64 *__P, __m64 __A)
{

  __builtin_ia32_movntq (__P, __A);
}



static inline void __attribute__((__always_inline__, __nodebug__))

_mm_stream_ps (float *__P, __m128 __A)
{
  __builtin_ia32_movntps (__P, (__v4sf)__A);
}




static inline void __attribute__((__always_inline__, __nodebug__))

_mm_sfence (void)
{
  __builtin_ia32_sfence ();
}





static inline void __attribute__((__always_inline__, __nodebug__))

_mm_pause (void)
{
  __asm__ __volatile__ ("rep; nop" : : );
}
# 1579 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/xmmintrin.h" 3 4
# 1 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/emmintrin.h" 1 3 4
# 35 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/emmintrin.h" 3 4
# 1 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/xmmintrin.h" 1 3 4
# 36 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/emmintrin.h" 2 3 4


typedef double __v2df __attribute__ ((__vector_size__ (16)));
typedef long long __v2di __attribute__ ((__vector_size__ (16)));
typedef int __v4si __attribute__ ((__vector_size__ (16)));
typedef short __v8hi __attribute__ ((__vector_size__ (16)));
typedef char __v16qi __attribute__ ((__vector_size__ (16)));



typedef long long __m128i __attribute__ ((__vector_size__ (16), __may_alias__));
typedef double __m128d __attribute__ ((__vector_size__ (16), __may_alias__));
# 69 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/emmintrin.h" 3 4
static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_set_sd (double __F)
{
  return __extension__ (__m128d){ __F, 0 };
}



static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_set1_pd (double __F)
{
  return __extension__ (__m128d){ __F, __F };
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_set_pd1 (double __F)
{
  return _mm_set1_pd (__F);
}



static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_set_pd (double __W, double __X)
{
  return __extension__ (__m128d){ __X, __W };
}



static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_setr_pd (double __W, double __X)
{
  return __extension__ (__m128d){ __W, __X };
}



static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_setzero_pd (void)
{
  return __extension__ (__m128d){ 0.0, 0.0 };
}



static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_move_sd (__m128d __A, __m128d __B)
{
  return (__m128d) __builtin_ia32_movsd ((__v2df)__A, (__v2df)__B);
}



static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_load_pd (double const *__P)
{
  return *(__m128d *)__P;
}



static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_loadu_pd (double const *__P)
{
  return __builtin_ia32_loadupd (__P);
}



static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_load1_pd (double const *__P)
{
  return _mm_set1_pd (*__P);
}



static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_load_sd (double const *__P)
{
  return _mm_set_sd (*__P);
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_load_pd1 (double const *__P)
{
  return _mm_load1_pd (__P);
}



static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_loadr_pd (double const *__P)
{
  __m128d __tmp = _mm_load_pd (__P);
  return __builtin_ia32_shufpd (__tmp, __tmp, (((0) << 1) | (1)));
}



static inline void __attribute__((__always_inline__, __nodebug__))

_mm_store_pd (double *__P, __m128d __A)
{
  *(__m128d *)__P = __A;
}



static inline void __attribute__((__always_inline__, __nodebug__))

_mm_storeu_pd (double *__P, __m128d __A)
{
  __builtin_ia32_storeupd (__P, __A);
}



static inline void __attribute__((__always_inline__, __nodebug__))

_mm_store_sd (double *__P, __m128d __A)
{
  *__P = __builtin_ia32_vec_ext_v2df (__A, 0);
}


static inline double __attribute__((__always_inline__, __nodebug__))

_mm_cvtsd_f64 (__m128d __A)
{
  return __builtin_ia32_vec_ext_v2df (__A, 0);
}


static inline void __attribute__((__always_inline__, __nodebug__))

_mm_storel_pd (double *__P, __m128d __A)
{
  _mm_store_sd (__P, __A);
}



static inline void __attribute__((__always_inline__, __nodebug__))

_mm_storeh_pd (double *__P, __m128d __A)
{
  *__P = __builtin_ia32_vec_ext_v2df (__A, 1);
}




static inline void __attribute__((__always_inline__, __nodebug__))

_mm_store1_pd (double *__P, __m128d __A)
{
  _mm_store_pd (__P, __builtin_ia32_shufpd (__A, __A, (((0) << 1) | (0))));
}


static inline void __attribute__((__always_inline__, __nodebug__))

_mm_store_pd1 (double *__P, __m128d __A)
{
  _mm_store1_pd (__P, __A);
}



static inline void __attribute__((__always_inline__, __nodebug__))

_mm_storer_pd (double *__P, __m128d __A)
{
  _mm_store_pd (__P, __builtin_ia32_shufpd (__A, __A, (((0) << 1) | (1))));
}


static inline int __attribute__((__always_inline__, __nodebug__))

_mm_cvtsi128_si32 (__m128i __A)
{
  return __builtin_ia32_vec_ext_v4si ((__v4si)__A, 0);
}




static inline long long __attribute__((__always_inline__, __nodebug__))

_mm_cvtsi128_si64 (__m128i __A)
{
  return __builtin_ia32_vec_ext_v2di ((__v2di)__A, 0);
}



static inline long long __attribute__((__always_inline__, __nodebug__))

_mm_cvtsi128_si64x (__m128i __A)
{
  return __builtin_ia32_vec_ext_v2di ((__v2di)__A, 0);
}



static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_add_pd (__m128d __A, __m128d __B)
{
  return (__m128d)__builtin_ia32_addpd ((__v2df)__A, (__v2df)__B);
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_add_sd (__m128d __A, __m128d __B)
{
  return (__m128d)__builtin_ia32_addsd ((__v2df)__A, (__v2df)__B);
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_sub_pd (__m128d __A, __m128d __B)
{
  return (__m128d)__builtin_ia32_subpd ((__v2df)__A, (__v2df)__B);
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_sub_sd (__m128d __A, __m128d __B)
{
  return (__m128d)__builtin_ia32_subsd ((__v2df)__A, (__v2df)__B);
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_mul_pd (__m128d __A, __m128d __B)
{
  return (__m128d)__builtin_ia32_mulpd ((__v2df)__A, (__v2df)__B);
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_mul_sd (__m128d __A, __m128d __B)
{
  return (__m128d)__builtin_ia32_mulsd ((__v2df)__A, (__v2df)__B);
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_div_pd (__m128d __A, __m128d __B)
{
  return (__m128d)__builtin_ia32_divpd ((__v2df)__A, (__v2df)__B);
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_div_sd (__m128d __A, __m128d __B)
{
  return (__m128d)__builtin_ia32_divsd ((__v2df)__A, (__v2df)__B);
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_sqrt_pd (__m128d __A)
{
  return (__m128d)__builtin_ia32_sqrtpd ((__v2df)__A);
}



static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_sqrt_sd (__m128d __A, __m128d __B)
{
  __v2df __tmp = __builtin_ia32_movsd ((__v2df)__A, (__v2df)__B);
  return (__m128d)__builtin_ia32_sqrtsd ((__v2df)__tmp);
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_min_pd (__m128d __A, __m128d __B)
{
  return (__m128d)__builtin_ia32_minpd ((__v2df)__A, (__v2df)__B);
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_min_sd (__m128d __A, __m128d __B)
{
  return (__m128d)__builtin_ia32_minsd ((__v2df)__A, (__v2df)__B);
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_max_pd (__m128d __A, __m128d __B)
{
  return (__m128d)__builtin_ia32_maxpd ((__v2df)__A, (__v2df)__B);
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_max_sd (__m128d __A, __m128d __B)
{
  return (__m128d)__builtin_ia32_maxsd ((__v2df)__A, (__v2df)__B);
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_and_pd (__m128d __A, __m128d __B)
{
  return (__m128d)__builtin_ia32_andpd ((__v2df)__A, (__v2df)__B);
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_andnot_pd (__m128d __A, __m128d __B)
{
  return (__m128d)__builtin_ia32_andnpd ((__v2df)__A, (__v2df)__B);
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_or_pd (__m128d __A, __m128d __B)
{
  return (__m128d)__builtin_ia32_orpd ((__v2df)__A, (__v2df)__B);
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_xor_pd (__m128d __A, __m128d __B)
{
  return (__m128d)__builtin_ia32_xorpd ((__v2df)__A, (__v2df)__B);
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_cmpeq_pd (__m128d __A, __m128d __B)
{
  return (__m128d)__builtin_ia32_cmpeqpd ((__v2df)__A, (__v2df)__B);
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_cmplt_pd (__m128d __A, __m128d __B)
{
  return (__m128d)__builtin_ia32_cmpltpd ((__v2df)__A, (__v2df)__B);
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_cmple_pd (__m128d __A, __m128d __B)
{
  return (__m128d)__builtin_ia32_cmplepd ((__v2df)__A, (__v2df)__B);
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_cmpgt_pd (__m128d __A, __m128d __B)
{
  return (__m128d)__builtin_ia32_cmpgtpd ((__v2df)__A, (__v2df)__B);
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_cmpge_pd (__m128d __A, __m128d __B)
{
  return (__m128d)__builtin_ia32_cmpgepd ((__v2df)__A, (__v2df)__B);
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_cmpneq_pd (__m128d __A, __m128d __B)
{
  return (__m128d)__builtin_ia32_cmpneqpd ((__v2df)__A, (__v2df)__B);
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_cmpnlt_pd (__m128d __A, __m128d __B)
{
  return (__m128d)__builtin_ia32_cmpnltpd ((__v2df)__A, (__v2df)__B);
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_cmpnle_pd (__m128d __A, __m128d __B)
{
  return (__m128d)__builtin_ia32_cmpnlepd ((__v2df)__A, (__v2df)__B);
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_cmpngt_pd (__m128d __A, __m128d __B)
{
  return (__m128d)__builtin_ia32_cmpngtpd ((__v2df)__A, (__v2df)__B);
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_cmpnge_pd (__m128d __A, __m128d __B)
{
  return (__m128d)__builtin_ia32_cmpngepd ((__v2df)__A, (__v2df)__B);
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_cmpord_pd (__m128d __A, __m128d __B)
{
  return (__m128d)__builtin_ia32_cmpordpd ((__v2df)__A, (__v2df)__B);
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_cmpunord_pd (__m128d __A, __m128d __B)
{
  return (__m128d)__builtin_ia32_cmpunordpd ((__v2df)__A, (__v2df)__B);
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_cmpeq_sd (__m128d __A, __m128d __B)
{
  return (__m128d)__builtin_ia32_cmpeqsd ((__v2df)__A, (__v2df)__B);
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_cmplt_sd (__m128d __A, __m128d __B)
{
  return (__m128d)__builtin_ia32_cmpltsd ((__v2df)__A, (__v2df)__B);
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_cmple_sd (__m128d __A, __m128d __B)
{
  return (__m128d)__builtin_ia32_cmplesd ((__v2df)__A, (__v2df)__B);
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_cmpgt_sd (__m128d __A, __m128d __B)
{
  return (__m128d) __builtin_ia32_movsd ((__v2df) __A,
      (__v2df)
      __builtin_ia32_cmpltsd ((__v2df) __B,
         (__v2df)
         __A));
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_cmpge_sd (__m128d __A, __m128d __B)
{
  return (__m128d) __builtin_ia32_movsd ((__v2df) __A,
      (__v2df)
      __builtin_ia32_cmplesd ((__v2df) __B,
         (__v2df)
         __A));
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_cmpneq_sd (__m128d __A, __m128d __B)
{
  return (__m128d)__builtin_ia32_cmpneqsd ((__v2df)__A, (__v2df)__B);
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_cmpnlt_sd (__m128d __A, __m128d __B)
{
  return (__m128d)__builtin_ia32_cmpnltsd ((__v2df)__A, (__v2df)__B);
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_cmpnle_sd (__m128d __A, __m128d __B)
{
  return (__m128d)__builtin_ia32_cmpnlesd ((__v2df)__A, (__v2df)__B);
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_cmpngt_sd (__m128d __A, __m128d __B)
{
  return (__m128d) __builtin_ia32_movsd ((__v2df) __A,
      (__v2df)
      __builtin_ia32_cmpnltsd ((__v2df) __B,
          (__v2df)
          __A));
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_cmpnge_sd (__m128d __A, __m128d __B)
{
  return (__m128d) __builtin_ia32_movsd ((__v2df) __A,
      (__v2df)
      __builtin_ia32_cmpnlesd ((__v2df) __B,
          (__v2df)
          __A));
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_cmpord_sd (__m128d __A, __m128d __B)
{
  return (__m128d)__builtin_ia32_cmpordsd ((__v2df)__A, (__v2df)__B);
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_cmpunord_sd (__m128d __A, __m128d __B)
{
  return (__m128d)__builtin_ia32_cmpunordsd ((__v2df)__A, (__v2df)__B);
}


static inline int __attribute__((__always_inline__, __nodebug__))

_mm_comieq_sd (__m128d __A, __m128d __B)
{
  return __builtin_ia32_comisdeq ((__v2df)__A, (__v2df)__B);
}


static inline int __attribute__((__always_inline__, __nodebug__))

_mm_comilt_sd (__m128d __A, __m128d __B)
{
  return __builtin_ia32_comisdlt ((__v2df)__A, (__v2df)__B);
}


static inline int __attribute__((__always_inline__, __nodebug__))

_mm_comile_sd (__m128d __A, __m128d __B)
{
  return __builtin_ia32_comisdle ((__v2df)__A, (__v2df)__B);
}


static inline int __attribute__((__always_inline__, __nodebug__))

_mm_comigt_sd (__m128d __A, __m128d __B)
{
  return __builtin_ia32_comisdgt ((__v2df)__A, (__v2df)__B);
}


static inline int __attribute__((__always_inline__, __nodebug__))

_mm_comige_sd (__m128d __A, __m128d __B)
{
  return __builtin_ia32_comisdge ((__v2df)__A, (__v2df)__B);
}


static inline int __attribute__((__always_inline__, __nodebug__))

_mm_comineq_sd (__m128d __A, __m128d __B)
{
  return __builtin_ia32_comisdneq ((__v2df)__A, (__v2df)__B);
}


static inline int __attribute__((__always_inline__, __nodebug__))

_mm_ucomieq_sd (__m128d __A, __m128d __B)
{
  return __builtin_ia32_ucomisdeq ((__v2df)__A, (__v2df)__B);
}


static inline int __attribute__((__always_inline__, __nodebug__))

_mm_ucomilt_sd (__m128d __A, __m128d __B)
{
  return __builtin_ia32_ucomisdlt ((__v2df)__A, (__v2df)__B);
}


static inline int __attribute__((__always_inline__, __nodebug__))

_mm_ucomile_sd (__m128d __A, __m128d __B)
{
  return __builtin_ia32_ucomisdle ((__v2df)__A, (__v2df)__B);
}


static inline int __attribute__((__always_inline__, __nodebug__))

_mm_ucomigt_sd (__m128d __A, __m128d __B)
{
  return __builtin_ia32_ucomisdgt ((__v2df)__A, (__v2df)__B);
}


static inline int __attribute__((__always_inline__, __nodebug__))

_mm_ucomige_sd (__m128d __A, __m128d __B)
{
  return __builtin_ia32_ucomisdge ((__v2df)__A, (__v2df)__B);
}


static inline int __attribute__((__always_inline__, __nodebug__))

_mm_ucomineq_sd (__m128d __A, __m128d __B)
{
  return __builtin_ia32_ucomisdneq ((__v2df)__A, (__v2df)__B);
}




static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_set_epi64x (long long __q1, long long __q0)
{
  return __extension__ (__m128i)(__v2di){ __q0, __q1 };
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_set_epi64 (__m64 __q1, __m64 __q0)
{
  return _mm_set_epi64x ((long long)__q1, (long long)__q0);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_set_epi32 (int __q3, int __q2, int __q1, int __q0)
{
  return __extension__ (__m128i)(__v4si){ __q0, __q1, __q2, __q3 };
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_set_epi16 (short __q7, short __q6, short __q5, short __q4,
        short __q3, short __q2, short __q1, short __q0)
{
  return __extension__ (__m128i)(__v8hi){
    __q0, __q1, __q2, __q3, __q4, __q5, __q6, __q7 };
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_set_epi8 (char __q15, char __q14, char __q13, char __q12,
       char __q11, char __q10, char __q09, char __q08,
       char __q07, char __q06, char __q05, char __q04,
       char __q03, char __q02, char __q01, char __q00)
{
  return __extension__ (__m128i)(__v16qi){
    __q00, __q01, __q02, __q03, __q04, __q05, __q06, __q07,
    __q08, __q09, __q10, __q11, __q12, __q13, __q14, __q15
  };
}
# 798 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/emmintrin.h" 3 4
static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_setr_epi64 (__m64 __q0, __m64 __q1)
{
  return _mm_set_epi64 (__q1, __q0);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_setr_epi32 (int __q0, int __q1, int __q2, int __q3)
{
  return _mm_set_epi32 (__q3, __q2, __q1, __q0);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_setr_epi16 (short __q0, short __q1, short __q2, short __q3,
         short __q4, short __q5, short __q6, short __q7)
{
  return _mm_set_epi16 (__q7, __q6, __q5, __q4, __q3, __q2, __q1, __q0);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_setr_epi8 (char __q00, char __q01, char __q02, char __q03,
        char __q04, char __q05, char __q06, char __q07,
        char __q08, char __q09, char __q10, char __q11,
        char __q12, char __q13, char __q14, char __q15)
{
  return _mm_set_epi8 (__q15, __q14, __q13, __q12, __q11, __q10, __q09, __q08,
         __q07, __q06, __q05, __q04, __q03, __q02, __q01, __q00);
}




static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_load_si128 (__m128i const *__P)
{
  return *__P;
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_loadu_si128 (__m128i const *__P)
{
  return (__m128i) __builtin_ia32_loaddqu ((char const *)__P);
}



static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_loadl_epi64 (__m128i const *__P)
{
  return (__m128i)__builtin_ia32_loadlv4si ((__v2si *)__P);
}



static inline void __attribute__((__always_inline__, __nodebug__))

_mm_store_si128 (__m128i *__P, __m128i __B)
{
  *__P = __B;
}


static inline void __attribute__((__always_inline__, __nodebug__))

_mm_storeu_si128 (__m128i *__P, __m128i __B)
{
  __builtin_ia32_storedqu ((char *)__P, (__v16qi)__B);
}



static inline void __attribute__((__always_inline__, __nodebug__))

_mm_storel_epi64 (__m128i *__P, __m128i __B)
{
  __builtin_ia32_storelv4si ((__v2si *)__P, __B);
}



static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_movepi64_pi64 (__m128i __B)
{
  return (__m64) __builtin_ia32_vec_ext_v2di ((__v2di)__B, 0);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_movpi64_epi64 (__m64 __A)
{
  return _mm_set_epi64 ((__m64)0LL, __A);
}



static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_move_epi64 (__m128i __A)
{
  return (__m128i)__builtin_ia32_movqv4si ((__v4si)__A) ;
}




static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_setzero_si128 (void)
{
  return __extension__ (__m128i)(__v4si){ 0, 0, 0, 0 };
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_cvtepi32_pd (__m128i __A)
{
  return (__m128d)__builtin_ia32_cvtdq2pd ((__v4si) __A);
}


static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_cvtepi32_ps (__m128i __A)
{
  return (__m128)__builtin_ia32_cvtdq2ps ((__v4si) __A);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_cvtpd_epi32 (__m128d __A)
{
  return (__m128i)__builtin_ia32_cvtpd2dq ((__v2df) __A);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_cvtpd_pi32 (__m128d __A)
{
  return (__m64)__builtin_ia32_cvtpd2pi ((__v2df) __A);
}


static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_cvtpd_ps (__m128d __A)
{
  return (__m128)__builtin_ia32_cvtpd2ps ((__v2df) __A);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_cvttpd_epi32 (__m128d __A)
{
  return (__m128i)__builtin_ia32_cvttpd2dq ((__v2df) __A);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_cvttpd_pi32 (__m128d __A)
{
  return (__m64)__builtin_ia32_cvttpd2pi ((__v2df) __A);
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_cvtpi32_pd (__m64 __A)
{
  return (__m128d)__builtin_ia32_cvtpi2pd ((__v2si) __A);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_cvtps_epi32 (__m128 __A)
{
  return (__m128i)__builtin_ia32_cvtps2dq ((__v4sf) __A);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_cvttps_epi32 (__m128 __A)
{
  return (__m128i)__builtin_ia32_cvttps2dq ((__v4sf) __A);
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_cvtps_pd (__m128 __A)
{
  return (__m128d)__builtin_ia32_cvtps2pd ((__v4sf) __A);
}


static inline int __attribute__((__always_inline__, __nodebug__))

_mm_cvtsd_si32 (__m128d __A)
{
  return __builtin_ia32_cvtsd2si ((__v2df) __A);
}




static inline long long __attribute__((__always_inline__, __nodebug__))

_mm_cvtsd_si64 (__m128d __A)
{
  return __builtin_ia32_cvtsd2si64 ((__v2df) __A);
}



static inline long long __attribute__((__always_inline__, __nodebug__))

_mm_cvtsd_si64x (__m128d __A)
{
  return __builtin_ia32_cvtsd2si64 ((__v2df) __A);
}



static inline int __attribute__((__always_inline__, __nodebug__))

_mm_cvttsd_si32 (__m128d __A)
{
  return __builtin_ia32_cvttsd2si ((__v2df) __A);
}




static inline long long __attribute__((__always_inline__, __nodebug__))

_mm_cvttsd_si64 (__m128d __A)
{
  return __builtin_ia32_cvttsd2si64 ((__v2df) __A);
}



static inline long long __attribute__((__always_inline__, __nodebug__))

_mm_cvttsd_si64x (__m128d __A)
{
  return __builtin_ia32_cvttsd2si64 ((__v2df) __A);
}



static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_cvtsd_ss (__m128 __A, __m128d __B)
{
  return (__m128)__builtin_ia32_cvtsd2ss ((__v4sf) __A, (__v2df) __B);
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_cvtsi32_sd (__m128d __A, int __B)
{
  return (__m128d)__builtin_ia32_cvtsi2sd ((__v2df) __A, __B);
}




static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_cvtsi64_sd (__m128d __A, long long __B)
{
  return (__m128d)__builtin_ia32_cvtsi642sd ((__v2df) __A, __B);
}



static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_cvtsi64x_sd (__m128d __A, long long __B)
{
  return (__m128d)__builtin_ia32_cvtsi642sd ((__v2df) __A, __B);
}



static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_cvtss_sd (__m128d __A, __m128 __B)
{
  return (__m128d)__builtin_ia32_cvtss2sd ((__v2df) __A, (__v4sf)__B);
}





static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_unpackhi_pd (__m128d __A, __m128d __B)
{
  return (__m128d)__builtin_ia32_unpckhpd ((__v2df)__A, (__v2df)__B);
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_unpacklo_pd (__m128d __A, __m128d __B)
{
  return (__m128d)__builtin_ia32_unpcklpd ((__v2df)__A, (__v2df)__B);
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_loadh_pd (__m128d __A, double const *__B)
{
  return (__m128d)__builtin_ia32_loadhpd ((__v2df)__A, __B);
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_loadl_pd (__m128d __A, double const *__B)
{
  return (__m128d)__builtin_ia32_loadlpd ((__v2df)__A, __B);
}


static inline int __attribute__((__always_inline__, __nodebug__))

_mm_movemask_pd (__m128d __A)
{
  return __builtin_ia32_movmskpd ((__v2df)__A);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_packs_epi16 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_packsswb128 ((__v8hi)__A, (__v8hi)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_packs_epi32 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_packssdw128 ((__v4si)__A, (__v4si)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_packus_epi16 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_packuswb128 ((__v8hi)__A, (__v8hi)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_unpackhi_epi8 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_punpckhbw128 ((__v16qi)__A, (__v16qi)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_unpackhi_epi16 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_punpckhwd128 ((__v8hi)__A, (__v8hi)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_unpackhi_epi32 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_punpckhdq128 ((__v4si)__A, (__v4si)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_unpackhi_epi64 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_punpckhqdq128 ((__v2di)__A, (__v2di)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_unpacklo_epi8 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_punpcklbw128 ((__v16qi)__A, (__v16qi)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_unpacklo_epi16 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_punpcklwd128 ((__v8hi)__A, (__v8hi)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_unpacklo_epi32 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_punpckldq128 ((__v4si)__A, (__v4si)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_unpacklo_epi64 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_punpcklqdq128 ((__v2di)__A, (__v2di)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_add_epi8 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_paddb128 ((__v16qi)__A, (__v16qi)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_add_epi16 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_paddw128 ((__v8hi)__A, (__v8hi)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_add_epi32 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_paddd128 ((__v4si)__A, (__v4si)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_add_epi64 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_paddq128 ((__v2di)__A, (__v2di)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_adds_epi8 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_paddsb128 ((__v16qi)__A, (__v16qi)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_adds_epi16 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_paddsw128 ((__v8hi)__A, (__v8hi)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_adds_epu8 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_paddusb128 ((__v16qi)__A, (__v16qi)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_adds_epu16 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_paddusw128 ((__v8hi)__A, (__v8hi)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_sub_epi8 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_psubb128 ((__v16qi)__A, (__v16qi)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_sub_epi16 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_psubw128 ((__v8hi)__A, (__v8hi)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_sub_epi32 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_psubd128 ((__v4si)__A, (__v4si)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_sub_epi64 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_psubq128 ((__v2di)__A, (__v2di)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_subs_epi8 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_psubsb128 ((__v16qi)__A, (__v16qi)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_subs_epi16 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_psubsw128 ((__v8hi)__A, (__v8hi)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_subs_epu8 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_psubusb128 ((__v16qi)__A, (__v16qi)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_subs_epu16 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_psubusw128 ((__v8hi)__A, (__v8hi)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_madd_epi16 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_pmaddwd128 ((__v8hi)__A, (__v8hi)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_mulhi_epi16 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_pmulhw128 ((__v8hi)__A, (__v8hi)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_mullo_epi16 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_pmullw128 ((__v8hi)__A, (__v8hi)__B);
}


static inline __m64 __attribute__((__always_inline__, __nodebug__))

_mm_mul_su32 (__m64 __A, __m64 __B)
{
  return (__m64)__builtin_ia32_pmuludq ((__v2si)__A, (__v2si)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_mul_epu32 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_pmuludq128 ((__v4si)__A, (__v4si)__B);
}
# 1519 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/emmintrin.h" 3 4
static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_sll_epi16 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_psllw128((__v8hi)__A, (__v8hi)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_sll_epi32 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_pslld128((__v4si)__A, (__v4si)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_sll_epi64 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_psllq128((__v2di)__A, (__v2di)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_sra_epi16 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_psraw128 ((__v8hi)__A, (__v8hi)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_sra_epi32 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_psrad128 ((__v4si)__A, (__v4si)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_srl_epi16 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_psrlw128 ((__v8hi)__A, (__v8hi)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_srl_epi32 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_psrld128 ((__v4si)__A, (__v4si)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_srl_epi64 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_psrlq128 ((__v2di)__A, (__v2di)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_and_si128 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_pand128 ((__v2di)__A, (__v2di)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_andnot_si128 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_pandn128 ((__v2di)__A, (__v2di)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_or_si128 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_por128 ((__v2di)__A, (__v2di)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_xor_si128 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_pxor128 ((__v2di)__A, (__v2di)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_cmpeq_epi8 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_pcmpeqb128 ((__v16qi)__A, (__v16qi)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_cmpeq_epi16 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_pcmpeqw128 ((__v8hi)__A, (__v8hi)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_cmpeq_epi32 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_pcmpeqd128 ((__v4si)__A, (__v4si)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_cmplt_epi8 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_pcmpgtb128 ((__v16qi)__B, (__v16qi)__A);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_cmplt_epi16 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_pcmpgtw128 ((__v8hi)__B, (__v8hi)__A);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_cmplt_epi32 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_pcmpgtd128 ((__v4si)__B, (__v4si)__A);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_cmpgt_epi8 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_pcmpgtb128 ((__v16qi)__A, (__v16qi)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_cmpgt_epi16 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_pcmpgtw128 ((__v8hi)__A, (__v8hi)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_cmpgt_epi32 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_pcmpgtd128 ((__v4si)__A, (__v4si)__B);
}
# 1710 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/emmintrin.h" 3 4
static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_max_epi16 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_pmaxsw128 ((__v8hi)__A, (__v8hi)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_max_epu8 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_pmaxub128 ((__v16qi)__A, (__v16qi)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_min_epi16 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_pminsw128 ((__v8hi)__A, (__v8hi)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_min_epu8 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_pminub128 ((__v16qi)__A, (__v16qi)__B);
}


static inline int __attribute__((__always_inline__, __nodebug__))

_mm_movemask_epi8 (__m128i __A)
{
  return __builtin_ia32_pmovmskb128 ((__v16qi)__A);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_mulhi_epu16 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_pmulhuw128 ((__v8hi)__A, (__v8hi)__B);
}
# 1764 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/emmintrin.h" 3 4
static inline void __attribute__((__always_inline__, __nodebug__))

_mm_maskmoveu_si128 (__m128i __A, __m128i __B, char *__C)
{
  __builtin_ia32_maskmovdqu ((__v16qi)__A, (__v16qi)__B, __C);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_avg_epu8 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_pavgb128 ((__v16qi)__A, (__v16qi)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_avg_epu16 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_pavgw128 ((__v8hi)__A, (__v8hi)__B);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_sad_epu8 (__m128i __A, __m128i __B)
{
  return (__m128i)__builtin_ia32_psadbw128 ((__v16qi)__A, (__v16qi)__B);
}


static inline void __attribute__((__always_inline__, __nodebug__))

_mm_stream_si32 (int *__A, int __B)
{
  __builtin_ia32_movnti (__A, __B);
}


static inline void __attribute__((__always_inline__, __nodebug__))

_mm_stream_si128 (__m128i *__A, __m128i __B)
{
  __builtin_ia32_movntdq ((__v2di *)__A, (__v2di)__B);
}


static inline void __attribute__((__always_inline__, __nodebug__))

_mm_stream_pd (double *__A, __m128d __B)
{
  __builtin_ia32_movntpd (__A, (__v2df)__B);
}


static inline void __attribute__((__always_inline__, __nodebug__))

_mm_clflush (void const *__A)
{
  __builtin_ia32_clflush (__A);
}


static inline void __attribute__((__always_inline__, __nodebug__))

_mm_lfence (void)
{
  __builtin_ia32_lfence ();
}


static inline void __attribute__((__always_inline__, __nodebug__))

_mm_mfence (void)
{
  __builtin_ia32_mfence ();
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_cvtsi32_si128 (int __A)
{
  return _mm_set_epi32 (0, 0, 0, __A);
}




static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_cvtsi64_si128 (long long __A)
{
  return _mm_set_epi64x (0, __A);
}



static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_cvtsi64x_si128 (long long __A)
{
  return _mm_set_epi64x (0, __A);
}





static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_castpd_ps(__m128d __A)
{
  return (__m128) __A;
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_castpd_si128(__m128d __A)
{
  return (__m128i) __A;
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_castps_pd(__m128 __A)
{
  return (__m128d) __A;
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_castps_si128(__m128 __A)
{
  return (__m128i) __A;
}


static inline __m128 __attribute__((__always_inline__, __nodebug__))

_mm_castsi128_ps(__m128i __A)
{
  return (__m128) __A;
}


static inline __m128d __attribute__((__always_inline__, __nodebug__))

_mm_castsi128_pd(__m128i __A)
{
  return (__m128d) __A;
}






static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_set1_epi64x (long long __A)
{
  return _mm_set_epi64x (__A, __A);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_set1_epi64 (__m64 __A)
{
  return _mm_set_epi64 (__A, __A);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_set1_epi32 (int __A)
{
  return _mm_set_epi32 (__A, __A, __A, __A);
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_set1_epi16 (short __A)
{
  __m128i temp, temp2, temp3;
  temp = _mm_cvtsi32_si128((int)__A);
  temp2 = _mm_unpacklo_epi16(temp, temp);
  temp3 = ((__m128i)__builtin_ia32_pshufd ((__v4si)(temp2), 0));
  return temp3;
}


static inline __m128i __attribute__((__always_inline__, __nodebug__))

_mm_set1_epi8 (char __A)
{
    __m128i temp, temp2, temp3, temp4;
    temp = _mm_cvtsi32_si128 ((int)__A);
    temp2 = _mm_unpacklo_epi8 (temp, temp);
    temp3 = _mm_unpacklo_epi8 (temp2, temp2);
    temp4 = ((__m128i)__builtin_ia32_pshufd ((__v4si)(temp3), 0));
    return temp4;
}
# 1580 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/xmmintrin.h" 2 3 4
# 30 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MachineExceptions.h" 2 3
# 40 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MachineExceptions.h" 3
extern "C" {


#pragma options align=power


typedef struct OpaqueAreaID* AreaID;
# 58 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MachineExceptions.h" 3
struct MachineInformationPowerPC {
  UnsignedWide CTR;
  UnsignedWide LR;
  UnsignedWide PC;
  unsigned long CRRegister;
  unsigned long XER;
  unsigned long MSR;
  unsigned long MQ;
  unsigned long ExceptKind;
  unsigned long DSISR;
  UnsignedWide DAR;
  UnsignedWide Reserved;
};
typedef struct MachineInformationPowerPC MachineInformationPowerPC;
struct RegisterInformationPowerPC {
  UnsignedWide R0;
  UnsignedWide R1;
  UnsignedWide R2;
  UnsignedWide R3;
  UnsignedWide R4;
  UnsignedWide R5;
  UnsignedWide R6;
  UnsignedWide R7;
  UnsignedWide R8;
  UnsignedWide R9;
  UnsignedWide R10;
  UnsignedWide R11;
  UnsignedWide R12;
  UnsignedWide R13;
  UnsignedWide R14;
  UnsignedWide R15;
  UnsignedWide R16;
  UnsignedWide R17;
  UnsignedWide R18;
  UnsignedWide R19;
  UnsignedWide R20;
  UnsignedWide R21;
  UnsignedWide R22;
  UnsignedWide R23;
  UnsignedWide R24;
  UnsignedWide R25;
  UnsignedWide R26;
  UnsignedWide R27;
  UnsignedWide R28;
  UnsignedWide R29;
  UnsignedWide R30;
  UnsignedWide R31;
};
typedef struct RegisterInformationPowerPC RegisterInformationPowerPC;
struct FPUInformationPowerPC {
  UnsignedWide Registers[32];
  unsigned long FPSCR;
  unsigned long Reserved;
};
typedef struct FPUInformationPowerPC FPUInformationPowerPC;
union Vector128 {



  unsigned long l[4];
  unsigned short s[8];
  unsigned char c[16];
};
typedef union Vector128 Vector128;
struct VectorInformationPowerPC {
  Vector128 Registers[32];
  Vector128 VSCR;
  UInt32 VRsave;
};
typedef struct VectorInformationPowerPC VectorInformationPowerPC;

enum {
  kWriteReference = 0,
  kReadReference = 1,
  kFetchReference = 2,
  writeReference = kWriteReference,
  readReference = kReadReference,
  fetchReference = kFetchReference
};


typedef unsigned long MemoryReferenceKind;
struct MemoryExceptionInformation {
  AreaID theArea;
  LogicalAddress theAddress;
  OSStatus theError;
  MemoryReferenceKind theReference;
};
typedef struct MemoryExceptionInformation MemoryExceptionInformation;
enum {
  kUnknownException = 0,
  kIllegalInstructionException = 1,
  kTrapException = 2,
  kAccessException = 3,
  kUnmappedMemoryException = 4,
  kExcludedMemoryException = 5,
  kReadOnlyMemoryException = 6,
  kUnresolvablePageFaultException = 7,
  kPrivilegeViolationException = 8,
  kTraceException = 9,
  kInstructionBreakpointException = 10,
  kDataBreakpointException = 11,
  kIntegerException = 12,
  kFloatingPointException = 13,
  kStackOverflowException = 14,
  kTaskTerminationException = 15,
  kTaskCreationException = 16,
  kDataAlignmentException = 17
};
# 192 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MachineExceptions.h" 3
typedef unsigned long ExceptionKind;
union ExceptionInfo {
  MemoryExceptionInformation * memoryInfo;
};
typedef union ExceptionInfo ExceptionInfo;
struct ExceptionInformationPowerPC {
  ExceptionKind theKind;
  MachineInformationPowerPC * machineState;
  RegisterInformationPowerPC * registerImage;
  FPUInformationPowerPC * FPUImage;
  ExceptionInfo info;
  VectorInformationPowerPC * vectorImage;
};
typedef struct ExceptionInformationPowerPC ExceptionInformationPowerPC;
# 215 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MachineExceptions.h" 3
union Vector128Intel {
  __m128 s;
  __m128i si;
  __m128d sd;
  unsigned char c[16];
};
typedef union Vector128Intel Vector128Intel;
# 284 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MachineExceptions.h" 3
struct MachineInformationIntel64 {
  unsigned long CS;
  unsigned long FS;
  unsigned long GS;
  unsigned long RFLAGS;
  unsigned long RIP;
  unsigned long ExceptTrap;
  unsigned long ExceptErr;
  unsigned long ExceptAddr;
};
typedef struct MachineInformationIntel64 MachineInformationIntel64;
struct RegisterInformationIntel64 {
  unsigned long RAX;
  unsigned long RBX;
  unsigned long RCX;
  unsigned long RDX;
  unsigned long RDI;
  unsigned long RSI;
  unsigned long RBP;
  unsigned long RSP;
  unsigned long R8;
  unsigned long R9;
  unsigned long R10;
  unsigned long R11;
  unsigned long R12;
  unsigned long R13;
  unsigned long R14;
  unsigned long R15;
};
typedef struct RegisterInformationIntel64 RegisterInformationIntel64;

typedef unsigned char FPRegIntel[10];
struct FPUInformationIntel64 {
  FPRegIntel Registers[8];
  unsigned short Control;
  unsigned short Status;
  unsigned short Tag;
  unsigned short Opcode;
  unsigned int IP;
  unsigned int DP;
  unsigned int DS;
};
typedef struct FPUInformationIntel64 FPUInformationIntel64;
struct VectorInformationIntel64 {
  Vector128Intel Registers[16];
};
typedef struct VectorInformationIntel64 VectorInformationIntel64;

typedef MachineInformationIntel64 MachineInformation;
typedef RegisterInformationIntel64 RegisterInformation;
typedef FPUInformationIntel64 FPUInformation;
typedef VectorInformationIntel64 VectorInformation;



struct ExceptionInformation {
  ExceptionKind theKind;
  MachineInformation * machineState;
  RegisterInformation * registerImage;
  FPUInformation * FPUImage;
  ExceptionInfo info;
  VectorInformation * vectorImage;
};
typedef struct ExceptionInformation ExceptionInformation;
# 356 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MachineExceptions.h" 3
typedef OSStatus ( * ExceptionHandlerProcPtr)(ExceptionInformation * theException);
typedef ExceptionHandlerProcPtr ExceptionHandlerUPP;
# 366 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MachineExceptions.h" 3
extern ExceptionHandlerUPP
NewExceptionHandlerUPP(ExceptionHandlerProcPtr userRoutine) ;
# 377 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MachineExceptions.h" 3
extern void
DisposeExceptionHandlerUPP(ExceptionHandlerUPP userUPP) ;
# 388 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MachineExceptions.h" 3
extern OSStatus
InvokeExceptionHandlerUPP(
  ExceptionInformation * theException,
  ExceptionHandlerUPP userUPP) ;



    inline ExceptionHandlerUPP NewExceptionHandlerUPP(ExceptionHandlerProcPtr userRoutine) { return userRoutine; }
    inline void DisposeExceptionHandlerUPP(ExceptionHandlerUPP) { }
    inline OSStatus InvokeExceptionHandlerUPP(ExceptionInformation * theException, ExceptionHandlerUPP userUPP) { return (*userUPP)(theException); }
# 413 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MachineExceptions.h" 3
typedef ExceptionHandlerUPP ExceptionHandlerTPP;
typedef ExceptionHandlerTPP ExceptionHandler;
# 424 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MachineExceptions.h" 3
extern ExceptionHandlerTPP InstallExceptionHandler(ExceptionHandlerTPP theHandler) ;




#pragma options align=reset


}
# 33 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DriverServices.h" 2 3
# 48 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DriverServices.h" 3
extern "C" {


#pragma options align=power


enum {
  durationMicrosecond = -1L,
  durationMillisecond = 1,
  durationSecond = 1000,
  durationMinute = 60000,
  durationHour = 3600000,
  durationDay = 86400000,
  durationNoWait = 0,
  durationForever = 0x7FFFFFFF
};


typedef UnsignedWide Nanoseconds;
# 75 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DriverServices.h" 3
extern AbsoluteTime
UpTime(void) ;
# 98 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DriverServices.h" 3
extern Nanoseconds
AbsoluteToNanoseconds(AbsoluteTime absoluteTime) ;
# 110 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DriverServices.h" 3
extern Duration
AbsoluteToDuration(AbsoluteTime absoluteTime) ;
# 122 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DriverServices.h" 3
extern AbsoluteTime
NanosecondsToAbsolute(Nanoseconds nanoseconds) ;
# 134 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DriverServices.h" 3
extern AbsoluteTime
DurationToAbsolute(Duration duration) ;
# 146 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DriverServices.h" 3
extern AbsoluteTime
AddAbsoluteToAbsolute(
  AbsoluteTime absoluteTime1,
  AbsoluteTime absoluteTime2) ;
# 160 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DriverServices.h" 3
extern AbsoluteTime
SubAbsoluteFromAbsolute(
  AbsoluteTime leftAbsoluteTime,
  AbsoluteTime rightAbsoluteTime) ;
# 174 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DriverServices.h" 3
extern AbsoluteTime
AddNanosecondsToAbsolute(
  Nanoseconds nanoseconds,
  AbsoluteTime absoluteTime) ;
# 188 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DriverServices.h" 3
extern AbsoluteTime
AddDurationToAbsolute(
  Duration duration,
  AbsoluteTime absoluteTime) ;
# 202 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DriverServices.h" 3
extern AbsoluteTime
SubNanosecondsFromAbsolute(
  Nanoseconds nanoseconds,
  AbsoluteTime absoluteTime) ;
# 216 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DriverServices.h" 3
extern AbsoluteTime
SubDurationFromAbsolute(
  Duration duration,
  AbsoluteTime absoluteTime) ;
# 230 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DriverServices.h" 3
extern Nanoseconds
AbsoluteDeltaToNanoseconds(
  AbsoluteTime leftAbsoluteTime,
  AbsoluteTime rightAbsoluteTime) ;
# 244 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DriverServices.h" 3
extern Duration
AbsoluteDeltaToDuration(
  AbsoluteTime leftAbsoluteTime,
  AbsoluteTime rightAbsoluteTime) ;
# 258 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DriverServices.h" 3
extern Nanoseconds
DurationToNanoseconds(Duration theDuration) ;
# 270 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/DriverServices.h" 3
extern Duration
NanosecondsToDuration(Nanoseconds theNanoseconds) ;





#pragma options align=reset


}
# 126 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CarbonCore.h" 2 3







# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/NumberFormatting.h" 1 3
# 41 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/NumberFormatting.h" 3
extern "C" {


#pragma pack(push, 2)
# 62 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/NumberFormatting.h" 3
struct NumFormatString {
  UInt8 fLength;
  UInt8 fVersion;
  char data[254];
};
typedef struct NumFormatString NumFormatString;
typedef NumFormatString NumFormatStringRec;
typedef short FormatStatus;
enum {
  fVNumber = 0
};

typedef SInt8 FormatClass;
enum {
  fPositive = 0,
  fNegative = 1,
  fZero = 2
};

typedef SInt8 FormatResultType;
enum {
  fFormatOK = 0,
  fBestGuess = 1,
  fOutOfSynch = 2,
  fSpuriousChars = 3,
  fMissingDelimiter = 4,
  fExtraDecimal = 5,
  fMissingLiteral = 6,
  fExtraExp = 7,
  fFormatOverflow = 8,
  fFormStrIsNAN = 9,
  fBadPartsTable = 10,
  fExtraPercent = 11,
  fExtraSeparator = 12,
  fEmptyFormatString = 13
};

struct FVector {
  short start;
  short length;
};
typedef struct FVector FVector;

typedef FVector TripleInt[3];
# 124 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/NumberFormatting.h" 3
extern void
numtostring(
  long theNum,
  char * theString) ;
# 282 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/NumberFormatting.h" 3
#pragma pack(pop)


}
# 134 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CarbonCore.h" 2 3







# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/StringCompare.h" 1 3
# 43 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/StringCompare.h" 3
extern "C" {
# 77 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/StringCompare.h" 3
enum {

  systemCurLang = -2,
  systemDefLang = -3,
  currentCurLang = -4,
  currentDefLang = -5,
  scriptCurLang = -6,
  scriptDefLang = -7
};


enum {
  iuSystemCurLang = systemCurLang,
  iuSystemDefLang = systemDefLang,
  iuCurrentCurLang = currentCurLang,
  iuCurrentDefLang = currentDefLang,
  iuScriptCurLang = scriptCurLang,
  iuScriptDefLang = scriptDefLang
};
# 602 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/StringCompare.h" 3
}
# 142 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CarbonCore.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextUtils.h" 1 3
# 44 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextUtils.h" 3
extern "C" {


#pragma pack(push, 2)
# 130 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextUtils.h" 3
extern long
Munger(
  Handle h,
  long offset,
  const void * ptr1,
  long len1,
  const void * ptr2,
  long len2) __attribute__((deprecated));
# 729 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextUtils.h" 3
#pragma pack(pop)


}
# 146 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CarbonCore.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/ToolUtils.h" 1 3
# 31 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/ToolUtils.h" 3
extern "C" {


#pragma pack(push, 2)
# 78 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/ToolUtils.h" 3
extern Boolean
BitTst(
  const void * bytePtr,
  long bitNum) ;
# 92 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/ToolUtils.h" 3
extern void
BitSet(
  void * bytePtr,
  long bitNum) ;
# 106 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/ToolUtils.h" 3
extern void
BitClr(
  void * bytePtr,
  long bitNum) ;
# 120 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/ToolUtils.h" 3
extern long
BitAnd(
  long value1,
  long value2) ;
# 134 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/ToolUtils.h" 3
extern long
BitOr(
  long value1,
  long value2) ;
# 148 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/ToolUtils.h" 3
extern long
BitXor(
  long value1,
  long value2) ;
# 162 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/ToolUtils.h" 3
extern long
BitNot(long value) ;
# 174 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/ToolUtils.h" 3
extern long
BitShift(
  long value,
  short count) ;






#pragma pack(pop)


}
# 150 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CarbonCore.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeUtilities.h" 1 3
# 49 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeUtilities.h" 3
extern "C" {


#pragma pack(push, 2)
# 79 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeUtilities.h" 3
typedef UInt16 UCKeyOutput;
typedef UInt16 UCKeyCharSeq;
enum {
  kUCKeyOutputStateIndexMask = 0x4000,
  kUCKeyOutputSequenceIndexMask = 0x8000,
  kUCKeyOutputTestForIndexMask = 0xC000,
  kUCKeyOutputGetIndexMask = 0x3FFF
};
# 101 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeUtilities.h" 3
struct UCKeyStateRecord {
  UCKeyCharSeq stateZeroCharData;
  UInt16 stateZeroNextState;
  UInt16 stateEntryCount;
  UInt16 stateEntryFormat;


  UInt32 stateEntryData[1];
};
typedef struct UCKeyStateRecord UCKeyStateRecord;




enum {
  kUCKeyStateEntryTerminalFormat = 0x0001,
  kUCKeyStateEntryRangeFormat = 0x0002
};






struct UCKeyStateEntryTerminal {
  UInt16 curState;
  UCKeyCharSeq charData;
};
typedef struct UCKeyStateEntryTerminal UCKeyStateEntryTerminal;







struct UCKeyStateEntryRange {
  UInt16 curStateStart;
  UInt8 curStateRange;
  UInt8 deltaMultiplier;
  UCKeyCharSeq charData;
  UInt16 nextState;
};
typedef struct UCKeyStateEntryRange UCKeyStateEntryRange;
# 157 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeUtilities.h" 3
struct UCKeyboardTypeHeader {
  UInt32 keyboardTypeFirst;
  UInt32 keyboardTypeLast;
  UInt32 keyModifiersToTableNumOffset;
  UInt32 keyToCharTableIndexOffset;
  UInt32 keyStateRecordsIndexOffset;
  UInt32 keyStateTerminatorsOffset;
  UInt32 keySequenceDataIndexOffset;
};
typedef struct UCKeyboardTypeHeader UCKeyboardTypeHeader;
struct UCKeyboardLayout {

  UInt16 keyLayoutHeaderFormat;
  UInt16 keyLayoutDataVersion;
  UInt32 keyLayoutFeatureInfoOffset;
  UInt32 keyboardTypeCount;
  UCKeyboardTypeHeader keyboardTypeList[1];
};
typedef struct UCKeyboardLayout UCKeyboardLayout;

struct UCKeyLayoutFeatureInfo {
  UInt16 keyLayoutFeatureInfoFormat;
  UInt16 reserved;
  UInt32 maxOutputStringLength;
};
typedef struct UCKeyLayoutFeatureInfo UCKeyLayoutFeatureInfo;

struct UCKeyModifiersToTableNum {
  UInt16 keyModifiersToTableNumFormat;
  UInt16 defaultTableNum;
  UInt32 modifiersCount;
  UInt8 tableNum[1];


};
typedef struct UCKeyModifiersToTableNum UCKeyModifiersToTableNum;

struct UCKeyToCharTableIndex {
  UInt16 keyToCharTableIndexFormat;
  UInt16 keyToCharTableSize;
  UInt32 keyToCharTableCount;
  UInt32 keyToCharTableOffsets[1];






};
typedef struct UCKeyToCharTableIndex UCKeyToCharTableIndex;

struct UCKeyStateRecordsIndex {
  UInt16 keyStateRecordsIndexFormat;
  UInt16 keyStateRecordCount;
  UInt32 keyStateRecordOffsets[1];




};
typedef struct UCKeyStateRecordsIndex UCKeyStateRecordsIndex;

struct UCKeyStateTerminators {
  UInt16 keyStateTerminatorsFormat;
  UInt16 keyStateTerminatorCount;
  UCKeyCharSeq keyStateTerminators[1];



};
typedef struct UCKeyStateTerminators UCKeyStateTerminators;

struct UCKeySequenceDataIndex {
  UInt16 keySequenceDataIndexFormat;
  UInt16 charSequenceCount;
  UInt16 charSequenceOffsets[1];





};
typedef struct UCKeySequenceDataIndex UCKeySequenceDataIndex;



enum {
  kUCKeyLayoutHeaderFormat = 0x1002,
  kUCKeyLayoutFeatureInfoFormat = 0x2001,
  kUCKeyModifiersToTableNumFormat = 0x3001,
  kUCKeyToCharTableIndexFormat = 0x4001,
  kUCKeyStateRecordsIndexFormat = 0x5001,
  kUCKeyStateTerminatorsFormat = 0x6001,
  kUCKeySequenceDataIndexFormat = 0x7001
};
# 260 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeUtilities.h" 3
enum {
  kUCKeyActionDown = 0,
  kUCKeyActionUp = 1,
  kUCKeyActionAutoKey = 2,
  kUCKeyActionDisplay = 3
};







enum {
  kUCKeyTranslateNoDeadKeysBit = 0
};

enum {
  kUCKeyTranslateNoDeadKeysMask = 1L << kUCKeyTranslateNoDeadKeysBit
};
# 288 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeUtilities.h" 3
enum {
  kUnicodeCollationClass = 'ucol'
};

typedef struct OpaqueCollatorRef* CollatorRef;
typedef UInt32 UCCollateOptions;
enum {

  kUCCollateComposeInsensitiveMask = 1L << 1,
  kUCCollateWidthInsensitiveMask = 1L << 2,
  kUCCollateCaseInsensitiveMask = 1L << 3,
  kUCCollateDiacritInsensitiveMask = 1L << 4,
  kUCCollatePunctuationSignificantMask = 1L << 15,
  kUCCollateDigitsOverrideMask = 1L << 16,
  kUCCollateDigitsAsNumberMask = 1L << 17
};

enum {
  kUCCollateStandardOptions = kUCCollateComposeInsensitiveMask | kUCCollateWidthInsensitiveMask
};





enum {
  kUCCollateTypeHFSExtended = 1
};


enum {
  kUCCollateTypeSourceMask = 0x000000FF,
  kUCCollateTypeShiftBits = 24
};

enum {
  kUCCollateTypeMask = kUCCollateTypeSourceMask << kUCCollateTypeShiftBits
};


typedef UInt32 UCCollationValue;
# 340 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeUtilities.h" 3
typedef struct OpaqueUCTypeSelectRef* UCTypeSelectRef;




typedef SInt32 UCTypeSelectCompareResult;




typedef UInt16 UCTSWalkDirection;
enum {
  kUCTSDirectionNext = 0,
  kUCTSDirectionPrevious = 1
};
# 372 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeUtilities.h" 3
typedef UInt16 UCTypeSelectOptions;
enum {
  kUCTSOptionsNoneMask = 0,
  kUCTSOptionsReleaseStringMask = 1,
  kUCTSOptionsDataIsOrderedMask = 2
};






typedef Boolean ( * IndexToUCStringProcPtr)(UInt32 index, void *listDataPtr, void *refcon, CFStringRef *outString, UCTypeSelectOptions *tsOptions);

typedef IndexToUCStringProcPtr IndexToUCStringUPP;
# 395 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeUtilities.h" 3
extern IndexToUCStringUPP
NewIndexToUCStringUPP(IndexToUCStringProcPtr userRoutine) ;
# 406 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeUtilities.h" 3
extern void
DisposeIndexToUCStringUPP(IndexToUCStringUPP userUPP) ;
# 417 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeUtilities.h" 3
extern Boolean
InvokeIndexToUCStringUPP(
  UInt32 index,
  void * listDataPtr,
  void * refcon,
  CFStringRef * outString,
  UCTypeSelectOptions * tsOptions,
  IndexToUCStringUPP userUPP) ;



    inline IndexToUCStringUPP NewIndexToUCStringUPP(IndexToUCStringProcPtr userRoutine) { return userRoutine; }
    inline void DisposeIndexToUCStringUPP(IndexToUCStringUPP) { }
    inline Boolean InvokeIndexToUCStringUPP(UInt32 index, void * listDataPtr, void * refcon, CFStringRef * outString, UCTypeSelectOptions * tsOptions, IndexToUCStringUPP userUPP) { return (*userUPP)(index, listDataPtr, refcon, outString, tsOptions); }
# 442 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeUtilities.h" 3
enum {
  kUCTypeSelectMaxListSize = (UInt32)0xFFFFFFFF
};
# 454 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeUtilities.h" 3
enum {
  kUnicodeTextBreakClass = 'ubrk'
};

typedef struct OpaqueTextBreakLocatorRef* TextBreakLocatorRef;







typedef UInt32 UCTextBreakType;
enum {






  kUCTextBreakCharMask = 1L << 0,
# 485 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeUtilities.h" 3
  kUCTextBreakClusterMask = 1L << 2,






  kUCTextBreakWordMask = 1L << 4,
  kUCTextBreakLineMask = 1L << 6,






  kUCTextBreakParagraphMask = 1L << 8
};

typedef UInt32 UCTextBreakOptions;
enum {
  kUCTextBreakLeadingEdgeMask = 1L << 0,
  kUCTextBreakGoBackwardsMask = 1L << 1,
  kUCTextBreakIterateMask = 1L << 2
};
# 525 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeUtilities.h" 3
extern OSStatus
UCKeyTranslate(
  const UCKeyboardLayout * keyLayoutPtr,
  UInt16 virtualKeyCode,
  UInt16 keyAction,
  UInt32 modifierKeyState,
  UInt32 keyboardType,
  OptionBits keyTranslateOptions,
  UInt32 * deadKeyState,
  UniCharCount maxStringLength,
  UniCharCount * actualStringLength,
  UniChar unicodeString[]) ;
# 549 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeUtilities.h" 3
extern OSStatus
UCCreateCollator(
  LocaleRef locale,
  LocaleOperationVariant opVariant,
  UCCollateOptions options,
  CollatorRef * collatorRef) ;
# 565 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeUtilities.h" 3
extern OSStatus
UCGetCollationKey(
  CollatorRef collatorRef,
  const UniChar * textPtr,
  UniCharCount textLength,
  ItemCount maxKeySize,
  ItemCount * actualKeySize,
  UCCollationValue collationKey[]) ;
# 583 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeUtilities.h" 3
extern OSStatus
UCCompareCollationKeys(
  const UCCollationValue * key1Ptr,
  ItemCount key1Length,
  const UCCollationValue * key2Ptr,
  ItemCount key2Length,
  Boolean * equivalent,
  SInt32 * order) ;
# 601 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeUtilities.h" 3
extern OSStatus
UCCompareText(
  CollatorRef collatorRef,
  const UniChar * text1Ptr,
  UniCharCount text1Length,
  const UniChar * text2Ptr,
  UniCharCount text2Length,
  Boolean * equivalent,
  SInt32 * order) ;
# 620 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeUtilities.h" 3
extern OSStatus
UCDisposeCollator(CollatorRef * collatorRef) ;
# 634 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeUtilities.h" 3
extern OSStatus
UCCompareTextDefault(
  UCCollateOptions options,
  const UniChar * text1Ptr,
  UniCharCount text1Length,
  const UniChar * text2Ptr,
  UniCharCount text2Length,
  Boolean * equivalent,
  SInt32 * order) ;
# 656 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeUtilities.h" 3
extern OSStatus
UCCompareTextNoLocale(
  UCCollateOptions options,
  const UniChar * text1Ptr,
  UniCharCount text1Length,
  const UniChar * text2Ptr,
  UniCharCount text2Length,
  Boolean * equivalent,
  SInt32 * order) ;
# 703 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeUtilities.h" 3
extern OSStatus
UCCreateTextBreakLocator(
  LocaleRef locale,
  LocaleOperationVariant opVariant,
  UCTextBreakType breakTypes,
  TextBreakLocatorRef * breakRef) __attribute__((deprecated));
# 724 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeUtilities.h" 3
extern OSStatus
UCFindTextBreak(
  TextBreakLocatorRef breakRef,
  UCTextBreakType breakType,
  UCTextBreakOptions options,
  const UniChar * textPtr,
  UniCharCount textLength,
  UniCharArrayOffset startOffset,
  UniCharArrayOffset * breakOffset) __attribute__((deprecated));
# 748 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeUtilities.h" 3
extern OSStatus
UCDisposeTextBreakLocator(TextBreakLocatorRef * breakRef) __attribute__((deprecated));
# 793 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeUtilities.h" 3
extern OSStatus
UCTypeSelectCreateSelector(
  LocaleRef locale,
  LocaleOperationVariant opVariant,
  UCCollateOptions options,
  UCTypeSelectRef * newSelector) ;
# 822 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeUtilities.h" 3
extern OSStatus
UCTypeSelectFlushSelectorData(UCTypeSelectRef ref) ;
# 849 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeUtilities.h" 3
extern OSStatus
UCTypeSelectReleaseSelector(UCTypeSelectRef * ref) ;
# 887 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeUtilities.h" 3
extern Boolean
UCTypeSelectWouldResetBuffer(
  UCTypeSelectRef inRef,
  CFStringRef inText,
  double inEventTime) ;
# 939 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeUtilities.h" 3
extern OSStatus
UCTypeSelectAddKeyToSelector(
  UCTypeSelectRef inRef,
  CFStringRef inText,
  double inEventTime,
  Boolean * updateFlag) ;
# 987 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeUtilities.h" 3
extern OSStatus
UCTypeSelectCompare(
  UCTypeSelectRef ref,
  CFStringRef inText,
  UCTypeSelectCompareResult * result) ;
# 1053 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeUtilities.h" 3
extern OSStatus
UCTypeSelectFindItem(
  UCTypeSelectRef ref,
  UInt32 listSize,
  void * listDataPtr,
  void * refcon,
  IndexToUCStringUPP userUPP,
  UInt32 * closestItem) ;
# 1148 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeUtilities.h" 3
extern OSStatus
UCTypeSelectWalkList(
  UCTypeSelectRef ref,
  CFStringRef currSelect,
  UCTSWalkDirection direction,
  UInt32 listSize,
  void * listDataPtr,
  void * refcon,
  IndexToUCStringUPP userUPP,
  UInt32 * closestItem) ;



#pragma pack(pop)


}
# 154 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CarbonCore.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/fp.h" 1 3
# 52 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/fp.h" 3
extern "C" {


#pragma pack(push, 2)
# 1197 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/fp.h" 3
extern const double_t pi ;
# 1226 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/fp.h" 3
extern double compound(double rate, double periods) ;
# 1237 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/fp.h" 3
extern double annuity(double rate, double periods) ;
# 1258 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/fp.h" 3
extern double_t randomx(double_t * x) ;
# 1267 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/fp.h" 3
typedef short relop;
enum {
  GREATERTHAN = 0,
  LESSTHAN = 1,
  EQUALTO = 2,
  UNORDERED = 3
};
# 1284 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/fp.h" 3
extern relop relation(double_t x, double_t y) ;
# 1322 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/fp.h" 3
struct decimal {
    char sgn;
    char unused;
    short exp;
    struct {
        unsigned char length;
        unsigned char text[36];
        unsigned char unused;
    } sig;
};
typedef struct decimal decimal;

struct decform {
    char style;
    char unused;
    short digits;
};
typedef struct decform decform;
# 1348 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/fp.h" 3
extern void num2dec(const decform *f, double_t x, decimal *d) ;
# 1359 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/fp.h" 3
extern double_t dec2num(const decimal * d) ;
# 1370 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/fp.h" 3
extern void dec2str(const decform *f, const decimal *d, char *s) ;
# 1381 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/fp.h" 3
extern void str2dec(const char *s, short *ix, decimal *d, short *vp) ;
# 1392 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/fp.h" 3
extern float dec2f(const decimal * d) ;
# 1403 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/fp.h" 3
extern short dec2s(const decimal * d) ;
# 1414 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/fp.h" 3
extern long dec2l(const decimal * d) ;
# 2315 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/fp.h" 3
extern relop relationl(long double x, long double y);
# 2334 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/fp.h" 3
extern void num2decl(const decform *f, long double x, decimal *d);
# 2353 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/fp.h" 3
extern long double dec2numl(const decimal * d);
# 2380 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/fp.h" 3
extern double x80tod(const extended80 * x80) ;
# 2391 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/fp.h" 3
extern void dtox80(const double *x, extended80 *x80) ;
# 2410 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/fp.h" 3
extern void x80told(const extended80 *x80, long double *x);
# 2429 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/fp.h" 3
extern void ldtox80(const long double *x, extended80 *x80);
# 2442 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/fp.h" 3
#pragma pack(pop)


}
# 158 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CarbonCore.h" 2 3


# 1 "/usr/include/fenv.h" 1 3 4
# 26 "/usr/include/fenv.h" 3 4
#pragma GCC fenv





# 1 "/usr/include/architecture/i386/fenv.h" 1 3 4
# 39 "/usr/include/architecture/i386/fenv.h" 3 4
#pragma GCC fenv



extern "C" {
# 87 "/usr/include/architecture/i386/fenv.h" 3 4
typedef struct {
    unsigned short __control;
    unsigned short __status;
    unsigned int __mxcsr;
    char __reserved[8];
} fenv_t;

typedef unsigned short fexcept_t;
# 111 "/usr/include/architecture/i386/fenv.h" 3 4
extern const fenv_t _FE_DFL_ENV;
# 133 "/usr/include/architecture/i386/fenv.h" 3 4
extern const fenv_t _FE_DFL_DISABLE_SSE_DENORMS_ENV;
# 147 "/usr/include/architecture/i386/fenv.h" 3 4
extern int feclearexcept(int );
# 157 "/usr/include/architecture/i386/fenv.h" 3 4
extern int fegetexceptflag(fexcept_t * , int );
# 166 "/usr/include/architecture/i386/fenv.h" 3 4
extern int feraiseexcept(int );
# 179 "/usr/include/architecture/i386/fenv.h" 3 4
extern int fesetexceptflag(const fexcept_t * , int );
# 194 "/usr/include/architecture/i386/fenv.h" 3 4
extern int fetestexcept(int );
# 208 "/usr/include/architecture/i386/fenv.h" 3 4
extern int fegetround(void);
# 219 "/usr/include/architecture/i386/fenv.h" 3 4
extern int fesetround(int );
# 231 "/usr/include/architecture/i386/fenv.h" 3 4
extern int fegetenv(fenv_t * );
# 241 "/usr/include/architecture/i386/fenv.h" 3 4
extern int feholdexcept(fenv_t * );
# 266 "/usr/include/architecture/i386/fenv.h" 3 4
extern int fesetenv(const fenv_t * );
# 279 "/usr/include/architecture/i386/fenv.h" 3 4
extern int feupdateenv(const fenv_t * );



}
# 33 "/usr/include/fenv.h" 2 3 4
# 161 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CarbonCore.h" 2 3

# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextEncodingConverter.h" 1 3
# 40 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextEncodingConverter.h" 3
extern "C" {


#pragma pack(push, 2)

typedef OSType TECPluginSignature;
typedef UInt32 TECPluginVersion;

enum {
  kTECSignature = 'encv',
  kTECUnicodePluginSignature = 'puni',
  kTECJapanesePluginSignature = 'pjpn',
  kTECChinesePluginSignature = 'pzho',
  kTECKoreanPluginSignature = 'pkor'
};



typedef struct OpaqueTECObjectRef* TECObjectRef;
typedef struct OpaqueTECSnifferObjectRef* TECSnifferObjectRef;
typedef OSType TECPluginSig;
struct TECConversionInfo {
  TextEncoding sourceEncoding;
  TextEncoding destinationEncoding;
  UInt16 reserved1;
  UInt16 reserved2;
};
typedef struct TECConversionInfo TECConversionInfo;
# 76 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextEncodingConverter.h" 3
typedef UInt32 TECInternetNameUsageMask;
enum {






  kTECInternetNameDefaultUsageMask = 0,





  kTECInternetNameStrictUsageMask = 1,
# 99 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextEncodingConverter.h" 3
  kTECInternetNameTolerantUsageMask = 2
};


enum {
  kTEC_MIBEnumDontCare = -1
};


enum {
  kTECDisableFallbacksBit = 16,
  kTECDisableLooseMappingsBit = 17
};

enum {
  kTECDisableFallbacksMask = 1L << kTECDisableFallbacksBit,
  kTECDisableLooseMappingsMask = 1L << kTECDisableLooseMappingsBit
};
# 128 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextEncodingConverter.h" 3
extern OSStatus
TECCountAvailableTextEncodings(ItemCount * numberEncodings) ;
# 141 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextEncodingConverter.h" 3
extern OSStatus
TECGetAvailableTextEncodings(
  TextEncoding availableEncodings[],
  ItemCount maxAvailableEncodings,
  ItemCount * actualAvailableEncodings) ;
# 157 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextEncodingConverter.h" 3
extern OSStatus
TECCountDirectTextEncodingConversions(ItemCount * numberOfEncodings) ;
# 170 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextEncodingConverter.h" 3
extern OSStatus
TECGetDirectTextEncodingConversions(
  TECConversionInfo availableConversions[],
  ItemCount maxAvailableConversions,
  ItemCount * actualAvailableConversions) ;
# 186 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextEncodingConverter.h" 3
extern OSStatus
TECCountDestinationTextEncodings(
  TextEncoding inputEncoding,
  ItemCount * numberOfEncodings) ;
# 201 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextEncodingConverter.h" 3
extern OSStatus
TECGetDestinationTextEncodings(
  TextEncoding inputEncoding,
  TextEncoding destinationEncodings[],
  ItemCount maxDestinationEncodings,
  ItemCount * actualDestinationEncodings) ;
# 218 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextEncodingConverter.h" 3
extern OSStatus
TECGetTextEncodingInternetName(
  TextEncoding textEncoding,
  Str255 encodingName) ;
# 232 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextEncodingConverter.h" 3
extern OSStatus
TECGetTextEncodingFromInternetName(
  TextEncoding * textEncoding,
  ConstStr255Param encodingName) ;
# 247 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextEncodingConverter.h" 3
extern OSStatus
TECCreateConverter(
  TECObjectRef * newEncodingConverter,
  TextEncoding inputEncoding,
  TextEncoding outputEncoding) ;
# 262 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextEncodingConverter.h" 3
extern OSStatus
TECCreateConverterFromPath(
  TECObjectRef * newEncodingConverter,
  const TextEncoding inPath[],
  ItemCount inEncodings) ;
# 277 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextEncodingConverter.h" 3
extern OSStatus
TECDisposeConverter(TECObjectRef newEncodingConverter) ;
# 290 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextEncodingConverter.h" 3
extern OSStatus
TECClearConverterContextInfo(TECObjectRef encodingConverter) ;
# 302 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextEncodingConverter.h" 3
extern OSStatus
TECConvertText(
  TECObjectRef encodingConverter,
  ConstTextPtr inputBuffer,
  ByteCount inputBufferLength,
  ByteCount * actualInputLength,
  TextPtr outputBuffer,
  ByteCount outputBufferLength,
  ByteCount * actualOutputLength) ;
# 321 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextEncodingConverter.h" 3
extern OSStatus
TECFlushText(
  TECObjectRef encodingConverter,
  TextPtr outputBuffer,
  ByteCount outputBufferLength,
  ByteCount * actualOutputLength) ;
# 338 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextEncodingConverter.h" 3
extern OSStatus
TECCountSubTextEncodings(
  TextEncoding inputEncoding,
  ItemCount * numberOfEncodings) ;
# 352 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextEncodingConverter.h" 3
extern OSStatus
TECGetSubTextEncodings(
  TextEncoding inputEncoding,
  TextEncoding subEncodings[],
  ItemCount maxSubEncodings,
  ItemCount * actualSubEncodings) ;
# 381 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextEncodingConverter.h" 3
extern OSStatus
TECGetEncodingList(
  TECObjectRef encodingConverter,
  ItemCount * numEncodings,
  Handle * encodingList) ;
# 396 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextEncodingConverter.h" 3
extern OSStatus
TECCreateOneToManyConverter(
  TECObjectRef * newEncodingConverter,
  TextEncoding inputEncoding,
  ItemCount numOutputEncodings,
  const TextEncoding outputEncodings[]) ;
# 412 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextEncodingConverter.h" 3
extern OSStatus
TECConvertTextToMultipleEncodings(
  TECObjectRef encodingConverter,
  ConstTextPtr inputBuffer,
  ByteCount inputBufferLength,
  ByteCount * actualInputLength,
  TextPtr outputBuffer,
  ByteCount outputBufferLength,
  ByteCount * actualOutputLength,
  TextEncodingRun outEncodingsBuffer[],
  ItemCount maxOutEncodingRuns,
  ItemCount * actualOutEncodingRuns) ;
# 434 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextEncodingConverter.h" 3
extern OSStatus
TECFlushMultipleEncodings(
  TECObjectRef encodingConverter,
  TextPtr outputBuffer,
  ByteCount outputBufferLength,
  ByteCount * actualOutputLength,
  TextEncodingRun outEncodingsBuffer[],
  ItemCount maxOutEncodingRuns,
  ItemCount * actualOutEncodingRuns) ;
# 454 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextEncodingConverter.h" 3
extern OSStatus
TECCountWebTextEncodings(
  RegionCode locale,
  ItemCount * numberEncodings) ;
# 468 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextEncodingConverter.h" 3
extern OSStatus
TECGetWebTextEncodings(
  RegionCode locale,
  TextEncoding availableEncodings[],
  ItemCount maxAvailableEncodings,
  ItemCount * actualAvailableEncodings) ;
# 484 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextEncodingConverter.h" 3
extern OSStatus
TECCountMailTextEncodings(
  RegionCode locale,
  ItemCount * numberEncodings) ;
# 498 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextEncodingConverter.h" 3
extern OSStatus
TECGetMailTextEncodings(
  RegionCode locale,
  TextEncoding availableEncodings[],
  ItemCount maxAvailableEncodings,
  ItemCount * actualAvailableEncodings) ;
# 515 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextEncodingConverter.h" 3
extern OSStatus
TECCountAvailableSniffers(ItemCount * numberOfEncodings) ;
# 527 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextEncodingConverter.h" 3
extern OSStatus
TECGetAvailableSniffers(
  TextEncoding availableSniffers[],
  ItemCount maxAvailableSniffers,
  ItemCount * actualAvailableSniffers) ;
# 542 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextEncodingConverter.h" 3
extern OSStatus
TECCreateSniffer(
  TECSnifferObjectRef * encodingSniffer,
  const TextEncoding testEncodings[],
  ItemCount numTextEncodings) ;
# 557 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextEncodingConverter.h" 3
extern OSStatus
TECSniffTextEncoding(
  TECSnifferObjectRef encodingSniffer,
  ConstTextPtr inputBuffer,
  ByteCount inputBufferLength,
  TextEncoding testEncodings[],
  ItemCount numTextEncodings,
  ItemCount numErrsArray[],
  ItemCount maxErrs,
  ItemCount numFeaturesArray[],
  ItemCount maxFeatures) ;
# 578 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextEncodingConverter.h" 3
extern OSStatus
TECDisposeSniffer(TECSnifferObjectRef encodingSniffer) ;
# 590 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextEncodingConverter.h" 3
extern OSStatus
TECClearSnifferContextInfo(TECSnifferObjectRef encodingSniffer) ;
# 636 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextEncodingConverter.h" 3
extern OSStatus
TECSetBasicOptions(
  TECObjectRef encodingConverter,
  OptionBits controlFlags) ;
# 687 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextEncodingConverter.h" 3
extern OSStatus
TECCopyTextEncodingInternetNameAndMIB(
  TextEncoding textEncoding,
  TECInternetNameUsageMask usage,
  CFStringRef * encodingNamePtr,
  SInt32 * mibEnumPtr) ;
# 721 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextEncodingConverter.h" 3
extern OSStatus
TECGetTextEncodingFromInternetNameOrMIB(
  TextEncoding * textEncodingPtr,
  TECInternetNameUsageMask usage,
  CFStringRef encodingName,
  SInt32 mibEnum) ;






#pragma pack(pop)


}
# 163 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CarbonCore.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeConverter.h" 1 3
# 40 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeConverter.h" 3
extern "C" {


#pragma pack(push, 2)


typedef struct OpaqueTextToUnicodeInfo* TextToUnicodeInfo;
typedef struct OpaqueUnicodeToTextInfo* UnicodeToTextInfo;
typedef struct OpaqueUnicodeToTextRunInfo* UnicodeToTextRunInfo;
typedef const TextToUnicodeInfo ConstTextToUnicodeInfo;
typedef const UnicodeToTextInfo ConstUnicodeToTextInfo;

typedef SInt32 UnicodeMapVersion;
enum {
  kUnicodeUseLatestMapping = -1,
  kUnicodeUseHFSPlusMapping = 4
};


struct UnicodeMapping {
  TextEncoding unicodeEncoding;
  TextEncoding otherEncoding;
  UnicodeMapVersion mappingVersion;
};
typedef struct UnicodeMapping UnicodeMapping;
typedef UnicodeMapping * UnicodeMappingPtr;
typedef const UnicodeMapping * ConstUnicodeMappingPtr;

enum {
  kUnicodeUseFallbacksBit = 0,
  kUnicodeKeepInfoBit = 1,
  kUnicodeDirectionalityBits = 2,
  kUnicodeVerticalFormBit = 4,
  kUnicodeLooseMappingsBit = 5,
  kUnicodeStringUnterminatedBit = 6,
  kUnicodeTextRunBit = 7,
  kUnicodeKeepSameEncodingBit = 8,
  kUnicodeForceASCIIRangeBit = 9,
  kUnicodeNoHalfwidthCharsBit = 10,
  kUnicodeTextRunHeuristicsBit = 11,
  kUnicodeMapLineFeedToReturnBit = 12,





  kUnicodeUseExternalEncodingFormBit = 13
};

enum {
  kUnicodeUseFallbacksMask = 1L << kUnicodeUseFallbacksBit,
  kUnicodeKeepInfoMask = 1L << kUnicodeKeepInfoBit,
  kUnicodeDirectionalityMask = 3L << kUnicodeDirectionalityBits,
  kUnicodeVerticalFormMask = 1L << kUnicodeVerticalFormBit,
  kUnicodeLooseMappingsMask = 1L << kUnicodeLooseMappingsBit,
  kUnicodeStringUnterminatedMask = 1L << kUnicodeStringUnterminatedBit,
  kUnicodeTextRunMask = 1L << kUnicodeTextRunBit,
  kUnicodeKeepSameEncodingMask = 1L << kUnicodeKeepSameEncodingBit,
  kUnicodeForceASCIIRangeMask = 1L << kUnicodeForceASCIIRangeBit,
  kUnicodeNoHalfwidthCharsMask = 1L << kUnicodeNoHalfwidthCharsBit,
  kUnicodeTextRunHeuristicsMask = 1L << kUnicodeTextRunHeuristicsBit,
  kUnicodeMapLineFeedToReturnMask = 1L << kUnicodeMapLineFeedToReturnBit,





  kUnicodeUseExternalEncodingFormMask = 1L << kUnicodeUseExternalEncodingFormBit
};


enum {
  kUnicodeDefaultDirection = 0,
  kUnicodeLeftToRight = 1,
  kUnicodeRightToLeft = 2
};


enum {
  kUnicodeDefaultDirectionMask = kUnicodeDefaultDirection << kUnicodeDirectionalityBits,
  kUnicodeLeftToRightMask = kUnicodeLeftToRight << kUnicodeDirectionalityBits,
  kUnicodeRightToLeftMask = kUnicodeRightToLeft << kUnicodeDirectionalityBits
};
# 146 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeConverter.h" 3
enum {
  kUnicodeMatchUnicodeBaseBit = 0,
  kUnicodeMatchUnicodeVariantBit = 1,
  kUnicodeMatchUnicodeFormatBit = 2,
  kUnicodeMatchOtherBaseBit = 3,
  kUnicodeMatchOtherVariantBit = 4,
  kUnicodeMatchOtherFormatBit = 5
};

enum {
  kUnicodeMatchUnicodeBaseMask = 1L << kUnicodeMatchUnicodeBaseBit,
  kUnicodeMatchUnicodeVariantMask = 1L << kUnicodeMatchUnicodeVariantBit,
  kUnicodeMatchUnicodeFormatMask = 1L << kUnicodeMatchUnicodeFormatBit,
  kUnicodeMatchOtherBaseMask = 1L << kUnicodeMatchOtherBaseBit,
  kUnicodeMatchOtherVariantMask = 1L << kUnicodeMatchOtherVariantBit,
  kUnicodeMatchOtherFormatMask = 1L << kUnicodeMatchOtherFormatBit
};


enum {
  kUnicodeFallbackSequencingBits = 0
};

enum {
  kUnicodeFallbackSequencingMask = 3L << kUnicodeFallbackSequencingBits,
  kUnicodeFallbackInterruptSafeMask = 1L << 2
};


enum {
  kUnicodeFallbackDefaultOnly = 0,
  kUnicodeFallbackCustomOnly = 1,
  kUnicodeFallbackDefaultFirst = 2,
  kUnicodeFallbackCustomFirst = 3
};



typedef OSStatus ( * UnicodeToTextFallbackProcPtr)(UniChar *iSrcUniStr, ByteCount iSrcUniStrLen, ByteCount *oSrcConvLen, TextPtr oDestStr, ByteCount iDestStrLen, ByteCount *oDestConvLen, LogicalAddress iInfoPtr, ConstUnicodeMappingPtr iUnicodeMappingPtr);
typedef UnicodeToTextFallbackProcPtr UnicodeToTextFallbackUPP;
# 194 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeConverter.h" 3
extern UnicodeToTextFallbackUPP
NewUnicodeToTextFallbackUPP(UnicodeToTextFallbackProcPtr userRoutine) ;
# 205 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeConverter.h" 3
extern void
DisposeUnicodeToTextFallbackUPP(UnicodeToTextFallbackUPP userUPP) ;
# 216 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeConverter.h" 3
extern OSStatus
InvokeUnicodeToTextFallbackUPP(
  UniChar * iSrcUniStr,
  ByteCount iSrcUniStrLen,
  ByteCount * oSrcConvLen,
  TextPtr oDestStr,
  ByteCount iDestStrLen,
  ByteCount * oDestConvLen,
  LogicalAddress iInfoPtr,
  ConstUnicodeMappingPtr iUnicodeMappingPtr,
  UnicodeToTextFallbackUPP userUPP) ;



    inline UnicodeToTextFallbackUPP NewUnicodeToTextFallbackUPP(UnicodeToTextFallbackProcPtr userRoutine) { return userRoutine; }
    inline void DisposeUnicodeToTextFallbackUPP(UnicodeToTextFallbackUPP) { }
    inline OSStatus InvokeUnicodeToTextFallbackUPP(UniChar * iSrcUniStr, ByteCount iSrcUniStrLen, ByteCount * oSrcConvLen, TextPtr oDestStr, ByteCount iDestStrLen, ByteCount * oDestConvLen, LogicalAddress iInfoPtr, ConstUnicodeMappingPtr iUnicodeMappingPtr, UnicodeToTextFallbackUPP userUPP) { return (*userUPP)(iSrcUniStr, iSrcUniStrLen, oSrcConvLen, oDestStr, iDestStrLen, oDestConvLen, iInfoPtr, iUnicodeMappingPtr); }
# 249 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeConverter.h" 3
extern OSStatus
CreateTextToUnicodeInfo(
  ConstUnicodeMappingPtr iUnicodeMapping,
  TextToUnicodeInfo * oTextToUnicodeInfo) ;
# 263 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeConverter.h" 3
extern OSStatus
CreateTextToUnicodeInfoByEncoding(
  TextEncoding iEncoding,
  TextToUnicodeInfo * oTextToUnicodeInfo) ;
# 277 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeConverter.h" 3
extern OSStatus
CreateUnicodeToTextInfo(
  ConstUnicodeMappingPtr iUnicodeMapping,
  UnicodeToTextInfo * oUnicodeToTextInfo) ;
# 291 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeConverter.h" 3
extern OSStatus
CreateUnicodeToTextInfoByEncoding(
  TextEncoding iEncoding,
  UnicodeToTextInfo * oUnicodeToTextInfo) ;
# 305 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeConverter.h" 3
extern OSStatus
CreateUnicodeToTextRunInfo(
  ItemCount iNumberOfMappings,
  const UnicodeMapping iUnicodeMappings[],
  UnicodeToTextRunInfo * oUnicodeToTextInfo) ;
# 320 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeConverter.h" 3
extern OSStatus
CreateUnicodeToTextRunInfoByEncoding(
  ItemCount iNumberOfEncodings,
  const TextEncoding iEncodings[],
  UnicodeToTextRunInfo * oUnicodeToTextInfo) ;
# 335 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeConverter.h" 3
extern OSStatus
CreateUnicodeToTextRunInfoByScriptCode(
  ItemCount iNumberOfScriptCodes,
  const ScriptCode iScripts[],
  UnicodeToTextRunInfo * oUnicodeToTextInfo) ;
# 351 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeConverter.h" 3
extern OSStatus
ChangeTextToUnicodeInfo(
  TextToUnicodeInfo ioTextToUnicodeInfo,
  ConstUnicodeMappingPtr iUnicodeMapping) ;
# 366 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeConverter.h" 3
extern OSStatus
ChangeUnicodeToTextInfo(
  UnicodeToTextInfo ioUnicodeToTextInfo,
  ConstUnicodeMappingPtr iUnicodeMapping) ;
# 381 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeConverter.h" 3
extern OSStatus
DisposeTextToUnicodeInfo(TextToUnicodeInfo * ioTextToUnicodeInfo) ;
# 393 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeConverter.h" 3
extern OSStatus
DisposeUnicodeToTextInfo(UnicodeToTextInfo * ioUnicodeToTextInfo) ;
# 405 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeConverter.h" 3
extern OSStatus
DisposeUnicodeToTextRunInfo(UnicodeToTextRunInfo * ioUnicodeToTextRunInfo) ;
# 417 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeConverter.h" 3
extern OSStatus
ConvertFromTextToUnicode(
  TextToUnicodeInfo iTextToUnicodeInfo,
  ByteCount iSourceLen,
  ConstLogicalAddress iSourceStr,
  OptionBits iControlFlags,
  ItemCount iOffsetCount,
  const ByteOffset iOffsetArray[],
  ItemCount * oOffsetCount,
  ByteOffset oOffsetArray[],
  ByteCount iOutputBufLen,
  ByteCount * oSourceRead,
  ByteCount * oUnicodeLen,
  UniChar oUnicodeStr[]) ;
# 441 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeConverter.h" 3
extern OSStatus
ConvertFromUnicodeToText(
  UnicodeToTextInfo iUnicodeToTextInfo,
  ByteCount iUnicodeLen,
  const UniChar iUnicodeStr[],
  OptionBits iControlFlags,
  ItemCount iOffsetCount,
  const ByteOffset iOffsetArray[],
  ItemCount * oOffsetCount,
  ByteOffset oOffsetArray[],
  ByteCount iOutputBufLen,
  ByteCount * oInputRead,
  ByteCount * oOutputLen,
  LogicalAddress oOutputStr) ;
# 465 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeConverter.h" 3
extern OSStatus
ConvertFromUnicodeToTextRun(
  UnicodeToTextRunInfo iUnicodeToTextInfo,
  ByteCount iUnicodeLen,
  const UniChar iUnicodeStr[],
  OptionBits iControlFlags,
  ItemCount iOffsetCount,
  const ByteOffset iOffsetArray[],
  ItemCount * oOffsetCount,
  ByteOffset oOffsetArray[],
  ByteCount iOutputBufLen,
  ByteCount * oInputRead,
  ByteCount * oOutputLen,
  LogicalAddress oOutputStr,
  ItemCount iEncodingRunBufLen,
  ItemCount * oEncodingRunOutLen,
  TextEncodingRun oEncodingRuns[]) ;
# 492 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeConverter.h" 3
extern OSStatus
ConvertFromUnicodeToScriptCodeRun(
  UnicodeToTextRunInfo iUnicodeToTextInfo,
  ByteCount iUnicodeLen,
  const UniChar iUnicodeStr[],
  OptionBits iControlFlags,
  ItemCount iOffsetCount,
  const ByteOffset iOffsetArray[],
  ItemCount * oOffsetCount,
  ByteOffset oOffsetArray[],
  ByteCount iOutputBufLen,
  ByteCount * oInputRead,
  ByteCount * oOutputLen,
  LogicalAddress oOutputStr,
  ItemCount iScriptRunBufLen,
  ItemCount * oScriptRunOutLen,
  ScriptCodeRun oScriptCodeRuns[]) ;
# 520 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeConverter.h" 3
extern OSStatus
TruncateForTextToUnicode(
  ConstTextToUnicodeInfo iTextToUnicodeInfo,
  ByteCount iSourceLen,
  ConstLogicalAddress iSourceStr,
  ByteCount iMaxLen,
  ByteCount * oTruncatedLen) ;
# 538 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeConverter.h" 3
extern OSStatus
TruncateForUnicodeToText(
  ConstUnicodeToTextInfo iUnicodeToTextInfo,
  ByteCount iSourceLen,
  const UniChar iSourceStr[],
  OptionBits iControlFlags,
  ByteCount iMaxLen,
  ByteCount * oTruncatedLen) ;
# 557 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeConverter.h" 3
extern OSStatus
ConvertFromPStringToUnicode(
  TextToUnicodeInfo iTextToUnicodeInfo,
  ConstStr255Param iPascalStr,
  ByteCount iOutputBufLen,
  ByteCount * oUnicodeLen,
  UniChar oUnicodeStr[]) ;
# 575 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeConverter.h" 3
extern OSStatus
ConvertFromUnicodeToPString(
  UnicodeToTextInfo iUnicodeToTextInfo,
  ByteCount iUnicodeLen,
  const UniChar iUnicodeStr[],
  Str255 oPascalStr) ;
# 592 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeConverter.h" 3
extern OSStatus
CountUnicodeMappings(
  OptionBits iFilter,
  ConstUnicodeMappingPtr iFindMapping,
  ItemCount * oActualCount) ;
# 608 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeConverter.h" 3
extern OSStatus
QueryUnicodeMappings(
  OptionBits iFilter,
  ConstUnicodeMappingPtr iFindMapping,
  ItemCount iMaxCount,
  ItemCount * oActualCount,
  UnicodeMapping oReturnedMappings[]) ;
# 626 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeConverter.h" 3
extern OSStatus
SetFallbackUnicodeToText(
  UnicodeToTextInfo iUnicodeToTextInfo,
  UnicodeToTextFallbackUPP iFallback,
  OptionBits iControlFlags,
  LogicalAddress iInfoPtr) ;
# 643 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeConverter.h" 3
extern OSStatus
SetFallbackUnicodeToTextRun(
  UnicodeToTextRunInfo iUnicodeToTextRunInfo,
  UnicodeToTextFallbackUPP iFallback,
  OptionBits iControlFlags,
  LogicalAddress iInfoPtr) ;
# 660 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeConverter.h" 3
extern OSStatus
ResetTextToUnicodeInfo(TextToUnicodeInfo ioTextToUnicodeInfo) ;
# 673 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeConverter.h" 3
extern OSStatus
ResetUnicodeToTextInfo(UnicodeToTextInfo ioUnicodeToTextInfo) ;
# 686 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/UnicodeConverter.h" 3
extern OSStatus
ResetUnicodeToTextRunInfo(UnicodeToTextRunInfo ioUnicodeToTextRunInfo) ;




#pragma pack(pop)


}
# 167 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CarbonCore.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Threads.h" 1 3
# 40 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Threads.h" 3
extern "C" {


#pragma pack(push, 2)


typedef UInt16 ThreadState;
enum {
  kReadyThreadState = 0,
  kStoppedThreadState = 1,
  kRunningThreadState = 2
};




typedef void * ThreadTaskRef;

typedef UInt32 ThreadStyle;
enum {
  kCooperativeThread = 1L << 0,
  kPreemptiveThread = 1L << 1
};


typedef unsigned long ThreadID;
enum {
  kNoThreadID = 0,
  kCurrentThreadID = 1,
  kApplicationThreadID = 2
};


typedef UInt32 ThreadOptions;
enum {
  kNewSuspend = (1 << 0),
  kUsePremadeThread = (1 << 1),
  kCreateIfNeeded = (1 << 2),
  kFPUNotNeeded = (1 << 3),
  kExactMatchThread = (1 << 4)
};


struct SchedulerInfoRec {
  UInt32 InfoRecSize;
  ThreadID CurrentThreadID;
  ThreadID SuggestedThreadID;
  ThreadID InterruptedCoopThreadID;
};
typedef struct SchedulerInfoRec SchedulerInfoRec;
typedef SchedulerInfoRec * SchedulerInfoRecPtr;






typedef void * voidPtr;

typedef voidPtr ( * ThreadEntryProcPtr)(void * threadParam);

typedef ThreadID ( * ThreadSchedulerProcPtr)(SchedulerInfoRecPtr schedulerInfo);

typedef void ( * ThreadSwitchProcPtr)(ThreadID threadBeingSwitched, void *switchProcParam);

typedef void ( * ThreadTerminationProcPtr)(ThreadID threadTerminated, void *terminationProcParam);

typedef void ( * DebuggerNewThreadProcPtr)(ThreadID threadCreated);

typedef void ( * DebuggerDisposeThreadProcPtr)(ThreadID threadDeleted);

typedef ThreadID ( * DebuggerThreadSchedulerProcPtr)(SchedulerInfoRecPtr schedulerInfo);
typedef ThreadEntryProcPtr ThreadEntryUPP;
typedef ThreadSchedulerProcPtr ThreadSchedulerUPP;
typedef ThreadSwitchProcPtr ThreadSwitchUPP;
typedef ThreadTerminationProcPtr ThreadTerminationUPP;
typedef DebuggerNewThreadProcPtr DebuggerNewThreadUPP;
typedef DebuggerDisposeThreadProcPtr DebuggerDisposeThreadUPP;
typedef DebuggerThreadSchedulerProcPtr DebuggerThreadSchedulerUPP;
# 127 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Threads.h" 3
extern ThreadEntryUPP
NewThreadEntryUPP(ThreadEntryProcPtr userRoutine) ;
# 138 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Threads.h" 3
extern ThreadSchedulerUPP
NewThreadSchedulerUPP(ThreadSchedulerProcPtr userRoutine) ;
# 149 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Threads.h" 3
extern ThreadSwitchUPP
NewThreadSwitchUPP(ThreadSwitchProcPtr userRoutine) ;
# 160 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Threads.h" 3
extern ThreadTerminationUPP
NewThreadTerminationUPP(ThreadTerminationProcPtr userRoutine) ;
# 171 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Threads.h" 3
extern DebuggerNewThreadUPP
NewDebuggerNewThreadUPP(DebuggerNewThreadProcPtr userRoutine) ;
# 182 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Threads.h" 3
extern DebuggerDisposeThreadUPP
NewDebuggerDisposeThreadUPP(DebuggerDisposeThreadProcPtr userRoutine) ;
# 193 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Threads.h" 3
extern DebuggerThreadSchedulerUPP
NewDebuggerThreadSchedulerUPP(DebuggerThreadSchedulerProcPtr userRoutine) ;
# 204 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Threads.h" 3
extern void
DisposeThreadEntryUPP(ThreadEntryUPP userUPP) ;
# 215 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Threads.h" 3
extern void
DisposeThreadSchedulerUPP(ThreadSchedulerUPP userUPP) ;
# 226 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Threads.h" 3
extern void
DisposeThreadSwitchUPP(ThreadSwitchUPP userUPP) ;
# 237 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Threads.h" 3
extern void
DisposeThreadTerminationUPP(ThreadTerminationUPP userUPP) ;
# 248 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Threads.h" 3
extern void
DisposeDebuggerNewThreadUPP(DebuggerNewThreadUPP userUPP) ;
# 259 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Threads.h" 3
extern void
DisposeDebuggerDisposeThreadUPP(DebuggerDisposeThreadUPP userUPP) ;
# 270 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Threads.h" 3
extern void
DisposeDebuggerThreadSchedulerUPP(DebuggerThreadSchedulerUPP userUPP) ;
# 281 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Threads.h" 3
extern voidPtr
InvokeThreadEntryUPP(
  void * threadParam,
  ThreadEntryUPP userUPP) ;
# 294 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Threads.h" 3
extern ThreadID
InvokeThreadSchedulerUPP(
  SchedulerInfoRecPtr schedulerInfo,
  ThreadSchedulerUPP userUPP) ;
# 307 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Threads.h" 3
extern void
InvokeThreadSwitchUPP(
  ThreadID threadBeingSwitched,
  void * switchProcParam,
  ThreadSwitchUPP userUPP) ;
# 321 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Threads.h" 3
extern void
InvokeThreadTerminationUPP(
  ThreadID threadTerminated,
  void * terminationProcParam,
  ThreadTerminationUPP userUPP) ;
# 335 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Threads.h" 3
extern void
InvokeDebuggerNewThreadUPP(
  ThreadID threadCreated,
  DebuggerNewThreadUPP userUPP) ;
# 348 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Threads.h" 3
extern void
InvokeDebuggerDisposeThreadUPP(
  ThreadID threadDeleted,
  DebuggerDisposeThreadUPP userUPP) ;
# 361 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Threads.h" 3
extern ThreadID
InvokeDebuggerThreadSchedulerUPP(
  SchedulerInfoRecPtr schedulerInfo,
  DebuggerThreadSchedulerUPP userUPP) ;



    inline ThreadEntryUPP NewThreadEntryUPP(ThreadEntryProcPtr userRoutine) { return userRoutine; }
    inline ThreadSchedulerUPP NewThreadSchedulerUPP(ThreadSchedulerProcPtr userRoutine) { return userRoutine; }
    inline ThreadSwitchUPP NewThreadSwitchUPP(ThreadSwitchProcPtr userRoutine) { return userRoutine; }
    inline ThreadTerminationUPP NewThreadTerminationUPP(ThreadTerminationProcPtr userRoutine) { return userRoutine; }
    inline DebuggerNewThreadUPP NewDebuggerNewThreadUPP(DebuggerNewThreadProcPtr userRoutine) { return userRoutine; }
    inline DebuggerDisposeThreadUPP NewDebuggerDisposeThreadUPP(DebuggerDisposeThreadProcPtr userRoutine) { return userRoutine; }
    inline DebuggerThreadSchedulerUPP NewDebuggerThreadSchedulerUPP(DebuggerThreadSchedulerProcPtr userRoutine) { return userRoutine; }
    inline void DisposeThreadEntryUPP(ThreadEntryUPP) { }
    inline void DisposeThreadSchedulerUPP(ThreadSchedulerUPP) { }
    inline void DisposeThreadSwitchUPP(ThreadSwitchUPP) { }
    inline void DisposeThreadTerminationUPP(ThreadTerminationUPP) { }
    inline void DisposeDebuggerNewThreadUPP(DebuggerNewThreadUPP) { }
    inline void DisposeDebuggerDisposeThreadUPP(DebuggerDisposeThreadUPP) { }
    inline void DisposeDebuggerThreadSchedulerUPP(DebuggerThreadSchedulerUPP) { }
    inline voidPtr InvokeThreadEntryUPP(void * threadParam, ThreadEntryUPP userUPP) { return (*userUPP)(threadParam); }
    inline ThreadID InvokeThreadSchedulerUPP(SchedulerInfoRecPtr schedulerInfo, ThreadSchedulerUPP userUPP) { return (*userUPP)(schedulerInfo); }
    inline void InvokeThreadSwitchUPP(ThreadID threadBeingSwitched, void * switchProcParam, ThreadSwitchUPP userUPP) { (*userUPP)(threadBeingSwitched, switchProcParam); }
    inline void InvokeThreadTerminationUPP(ThreadID threadTerminated, void * terminationProcParam, ThreadTerminationUPP userUPP) { (*userUPP)(threadTerminated, terminationProcParam); }
    inline void InvokeDebuggerNewThreadUPP(ThreadID threadCreated, DebuggerNewThreadUPP userUPP) { (*userUPP)(threadCreated); }
    inline void InvokeDebuggerDisposeThreadUPP(ThreadID threadDeleted, DebuggerDisposeThreadUPP userUPP) { (*userUPP)(threadDeleted); }
    inline ThreadID InvokeDebuggerThreadSchedulerUPP(SchedulerInfoRecPtr schedulerInfo, DebuggerThreadSchedulerUPP userUPP) { return (*userUPP)(schedulerInfo); }
# 424 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Threads.h" 3
typedef ThreadEntryUPP ThreadEntryTPP;
typedef ThreadSchedulerUPP ThreadSchedulerTPP;
typedef ThreadSwitchUPP ThreadSwitchTPP;
typedef ThreadTerminationUPP ThreadTerminationTPP;
typedef DebuggerNewThreadUPP DebuggerNewThreadTPP;
typedef DebuggerDisposeThreadUPP DebuggerDisposeThreadTPP;
typedef DebuggerThreadSchedulerUPP DebuggerThreadSchedulerTPP;
# 439 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Threads.h" 3
extern OSErr
NewThread(
  ThreadStyle threadStyle,
  ThreadEntryTPP threadEntry,
  void * threadParam,
  Size stackSize,
  ThreadOptions options,
  void ** threadResult,
  ThreadID * threadMade) ;
# 458 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Threads.h" 3
extern OSErr
SetThreadScheduler(ThreadSchedulerTPP threadScheduler) ;
# 470 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Threads.h" 3
extern OSErr
SetThreadSwitcher(
  ThreadID thread,
  ThreadSwitchTPP threadSwitcher,
  void * switchProcParam,
  Boolean inOrOut) ;
# 486 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Threads.h" 3
extern OSErr
SetThreadTerminator(
  ThreadID thread,
  ThreadTerminationTPP threadTerminator,
  void * terminationProcParam) ;
# 501 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Threads.h" 3
extern OSErr
SetDebuggerNotificationProcs(
  DebuggerNewThreadTPP notifyNewThread,
  DebuggerDisposeThreadTPP notifyDisposeThread,
  DebuggerThreadSchedulerTPP notifyThreadScheduler) ;
# 516 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Threads.h" 3
extern OSErr
CreateThreadPool(
  ThreadStyle threadStyle,
  SInt16 numToCreate,
  Size stackSize) ;
# 531 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Threads.h" 3
extern OSErr
GetDefaultThreadStackSize(
  ThreadStyle threadStyle,
  Size * stackSize) ;
# 545 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Threads.h" 3
extern OSErr
ThreadCurrentStackSpace(
  ThreadID thread,
  ByteCount * freeStack) ;
# 559 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Threads.h" 3
extern OSErr
DisposeThread(
  ThreadID threadToDump,
  void * threadResult,
  Boolean recycleThread) ;
# 574 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Threads.h" 3
extern OSErr
YieldToThread(ThreadID suggestedThread) ;
# 586 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Threads.h" 3
extern OSErr
YieldToAnyThread(void) ;
# 601 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Threads.h" 3
extern OSErr
GetCurrentThread(ThreadID * currentThreadID) ;
# 613 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Threads.h" 3
extern OSErr
GetThreadState(
  ThreadID threadToGet,
  ThreadState * threadState) ;
# 627 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Threads.h" 3
extern OSErr
SetThreadState(
  ThreadID threadToSet,
  ThreadState newState,
  ThreadID suggestedThread) ;
# 642 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Threads.h" 3
extern OSErr
SetThreadStateEndCritical(
  ThreadID threadToSet,
  ThreadState newState,
  ThreadID suggestedThread) ;
# 657 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Threads.h" 3
extern OSErr
ThreadBeginCritical(void) ;
# 669 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Threads.h" 3
extern OSErr
ThreadEndCritical(void) ;
# 681 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Threads.h" 3
extern OSErr
GetThreadCurrentTaskRef(ThreadTaskRef * threadTRef) ;
# 693 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Threads.h" 3
extern OSErr
GetThreadStateGivenTaskRef(
  ThreadTaskRef threadTRef,
  ThreadID threadToGet,
  ThreadState * threadState) ;
# 708 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Threads.h" 3
extern OSErr
SetThreadReadyGivenTaskRef(
  ThreadTaskRef threadTRef,
  ThreadID threadToSet) ;
# 749 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Threads.h" 3
#pragma pack(pop)


}
# 171 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CarbonCore.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Folders.h" 1 3
# 40 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Folders.h" 3
extern "C" {


#pragma pack(push, 2)
# 69 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Folders.h" 3
enum {
  kOnSystemDisk = -32768L,
  kOnAppropriateDisk = -32767,


  kSystemDomain = -32766,
  kLocalDomain = -32765,
  kNetworkDomain = -32764,
  kUserDomain = -32763,
  kClassicDomain = -32762,
  kFolderManagerLastDomain = -32760
};





enum {
  kLastDomainConstant = -32760
};

enum {
  kCreateFolder = true,
  kDontCreateFolder = false
};
# 177 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Folders.h" 3
extern OSErr
FindFolder(
  FSVolumeRefNum vRefNum,
  OSType folderType,
  Boolean createFolder,
  FSVolumeRefNum * foundVRefNum,
  SInt32 * foundDirID) ;
# 219 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Folders.h" 3
extern OSErr
ReleaseFolder(
  FSVolumeRefNum vRefNum,
  OSType folderType) __attribute__((deprecated));
# 291 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Folders.h" 3
extern OSErr
FSFindFolder(
  FSVolumeRefNum vRefNum,
  OSType folderType,
  Boolean createFolder,
  FSRef * foundRef) ;
# 305 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Folders.h" 3
enum {
  kDesktopFolderType = 'desk',
  kTrashFolderType = 'trsh',
  kWhereToEmptyTrashFolderType = 'empt',
  kFontsFolderType = 'font',
  kPreferencesFolderType = 'pref',
  kSystemPreferencesFolderType = 'sprf',
  kTemporaryFolderType = 'temp',
# 329 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Folders.h" 3
  kChewableItemsFolderType = 'flnt',
  kTemporaryItemsInCacheDataFolderType = 'vtmp',
  kApplicationsFolderType = 'apps',
  kVolumeRootFolderType = 'root',
  kDomainTopLevelFolderType = 'dtop',
  kDomainLibraryFolderType = 'dlib',
  kUsersFolderType = 'usrs',
  kCurrentUserFolderType = 'cusr',
  kSharedUserDataFolderType = 'sdat'
};





enum {
  kDocumentsFolderType = 'docs',
  kPictureDocumentsFolderType = 'pdoc',
  kMovieDocumentsFolderType = 'mdoc',
  kMusicDocumentsFolderType = 0xB5646F63 ,
  kInternetSitesFolderType = 'site',
  kPublicFolderType = 'pubb'
};

enum {
  kSharedLibrariesFolderType = 0xC46C6962 ,
  kVoicesFolderType = 'fvoc',
  kUtilitiesFolderType = 0x757469C4 ,
  kThemesFolderType = 'thme',
  kFavoritesFolderType = 'favs',
  kInternetSearchSitesFolderType = 'issf',
  kInstallerLogsFolderType = 'ilgf',
  kScriptsFolderType = 0x736372C4 ,
  kFolderActionsFolderType = 'fasf',
  kSpeakableItemsFolderType = 'spki',
  kKeychainFolderType = 'kchn'
};



enum {
  kColorSyncFolderType = 'sync',
  kColorSyncCMMFolderType = 'ccmm',
  kColorSyncScriptingFolderType = 'cscr',
  kPrintersFolderType = 'impr',
  kSpeechFolderType = 'spch',
  kCarbonLibraryFolderType = 'carb',
  kDocumentationFolderType = 'info',
  kISSDownloadsFolderType = 'issd',
  kUserSpecificTmpFolderType = 'utmp',
  kCachedDataFolderType = 'cach',
  kFrameworksFolderType = 'fram',
  kPrivateFrameworksFolderType = 'pfrm',
  kClassicDesktopFolderType = 'sdsk',
  kSystemSoundsFolderType = 'ssnd',
  kComponentsFolderType = 'cmpd',
  kQuickTimeComponentsFolderType = 'wcmp',
  kCoreServicesFolderType = 'csrv',
  kAudioSupportFolderType = 'adio',
  kAudioPresetsFolderType = 'apst',
  kAudioSoundsFolderType = 'asnd',
  kAudioSoundBanksFolderType = 'bank',
  kAudioAlertSoundsFolderType = 'alrt',
  kAudioPlugInsFolderType = 'aplg',
  kAudioComponentsFolderType = 'acmp',
  kKernelExtensionsFolderType = 'kext',
  kDirectoryServicesFolderType = 'dsrv',
  kDirectoryServicesPlugInsFolderType = 'dplg',
  kInstallerReceiptsFolderType = 'rcpt',
  kFileSystemSupportFolderType = 'fsys',
  kAppleShareSupportFolderType = 'shar',
  kAppleShareAuthenticationFolderType = 'auth',
  kMIDIDriversFolderType = 'midi',
  kKeyboardLayoutsFolderType = 'klay',
  kIndexFilesFolderType = 'indx',
  kFindByContentIndexesFolderType = 'fbcx',
  kManagedItemsFolderType = 'mang',
  kBootTimeStartupItemsFolderType = 'empz',
  kAutomatorWorkflowsFolderType = 'flow',
  kAutosaveInformationFolderType = 'asav',
  kSpotlightSavedSearchesFolderType = 'spot',

  kSpotlightImportersFolderType = 'simp',
  kSpotlightMetadataCacheFolderType = 'scch',
  kInputManagersFolderType = 'inpt',
  kInputMethodsFolderType = 'inpf',
  kLibraryAssistantsFolderType = 'astl',
  kAudioDigidesignFolderType = 'adig',
  kAudioVSTFolderType = 'avst',
  kColorPickersFolderType = 'cpkr',
  kCompositionsFolderType = 'cmps',
  kFontCollectionsFolderType = 'fncl',
  kiMovieFolderType = 'imov',
  kiMoviePlugInsFolderType = 'impi',
  kiMovieSoundEffectsFolderType = 'imse',
  kDownloadsFolderType = 'down'
};

enum {
  kColorSyncProfilesFolderType = 'prof',
  kApplicationSupportFolderType = 'asup',
  kTextEncodingsFolderType = 0xC4746578 ,
  kPrinterDescriptionFolderType = 'ppdf',
  kPrinterDriverFolderType = 0xC4707264 ,
  kScriptingAdditionsFolderType = 0xC4736372
};

enum {
  kClassicPreferencesFolderType = 'cprf'
};

enum {
  kQuickLookFolderType = 'qlck'
};

enum {

  kSystemFolderType = 'macs',
  kSystemDesktopFolderType = 'sdsk',
  kSystemTrashFolderType = 'strs',
  kPrintMonitorDocsFolderType = 'prnt',
  kALMModulesFolderType = 'walk',
  kALMPreferencesFolderType = 'trip',
  kALMLocationsFolderType = 'fall',
  kAppleExtrasFolderType = 0x616578C4 ,
  kContextualMenuItemsFolderType = 'cmnu',
  kMacOSReadMesFolderType = 0x6D6F72C4 ,
  kStartupFolderType = 'strt',
  kShutdownFolderType = 'shdf',
  kAppleMenuFolderType = 'amnu',
  kControlPanelFolderType = 'ctrl',
  kSystemControlPanelFolderType = 'sctl',
  kExtensionFolderType = 'extn',
  kExtensionDisabledFolderType = 'extD',
  kControlPanelDisabledFolderType = 'ctrD',
  kSystemExtensionDisabledFolderType = 'macD',
  kStartupItemsDisabledFolderType = 'strD',
  kShutdownItemsDisabledFolderType = 'shdD',
  kAssistantsFolderType = 0x617374C4 ,
  kStationeryFolderType = 'odst',
  kOpenDocFolderType = 'odod',
  kOpenDocShellPlugInsFolderType = 'odsp',
  kEditorsFolderType = 'oded',
  kOpenDocEditorsFolderType = 0xC46F6466 ,
  kOpenDocLibrariesFolderType = 'odlb',
  kGenEditorsFolderType = 0xC4656469 ,
  kHelpFolderType = 0xC4686C70 ,
  kInternetPlugInFolderType = 0xC46E6574 ,
  kModemScriptsFolderType = 0xC46D6F64 ,
  kControlStripModulesFolderType = 'sdev',
  kInternetFolderType = 0x696E74C4 ,
  kAppearanceFolderType = 'appr',
  kSoundSetsFolderType = 'snds',
  kDesktopPicturesFolderType = 0x647470C4 ,
  kFindSupportFolderType = 'fnds',
  kRecentApplicationsFolderType = 'rapp',
  kRecentDocumentsFolderType = 'rdoc',
  kRecentServersFolderType = 'rsvr',
  kLauncherItemsFolderType = 'laun',
  kQuickTimeExtensionsFolderType = 'qtex',
  kDisplayExtensionsFolderType = 'dspl',
  kMultiprocessingFolderType = 'mpxf',
  kPrintingPlugInsFolderType = 'pplg',
  kAppleshareAutomountServerAliasesFolderType = 0x737276C4 ,
  kVolumeSettingsFolderType = 'vsfd',
  kPreMacOS91ApplicationsFolderType = 0x8C707073 ,
  kPreMacOS91InstallerLogsFolderType = 0x946C6766 ,
  kPreMacOS91AssistantsFolderType = 0x8C7374C4 ,
  kPreMacOS91UtilitiesFolderType = 0x9F7469C4 ,
  kPreMacOS91AppleExtrasFolderType = 0x8C6578C4 ,
  kPreMacOS91MacOSReadMesFolderType = 0xB56F72C4 ,
  kPreMacOS91InternetFolderType = 0x946E74C4 ,
  kPreMacOS91AutomountedServersFolderType = 0xA77276C4 ,
  kPreMacOS91StationeryFolderType = 0xBF647374 ,
  kLocalesFolderType = 0xC46C6F63 ,
  kFindByContentPluginsFolderType = 'fbcp',
  kFindByContentFolderType = 'fbcf'
};


enum {
  kMagicTemporaryItemsFolderType = 'mtmp',
  kTemporaryItemsInUserDomainFolderType = 'temq',
  kCurrentUserRemoteFolderLocation = 'rusf',
  kCurrentUserRemoteFolderType = 'rusr'
};





enum {
  kDeveloperDocsFolderType = 'ddoc',
  kDeveloperHelpFolderType = 'devh',
  kDeveloperFolderType = 'devf',
  kDeveloperApplicationsFolderType = 'dapp'
};


enum {
  kCreateFolderAtBoot = 0x00000002,
  kCreateFolderAtBootBit = 1,
  kFolderCreatedInvisible = 0x00000004,
  kFolderCreatedInvisibleBit = 2,
  kFolderCreatedNameLocked = 0x00000008,
  kFolderCreatedNameLockedBit = 3,
  kFolderCreatedAdminPrivs = 0x00000010,
  kFolderCreatedAdminPrivsBit = 4
};

enum {
  kFolderInUserFolder = 0x00000020,
  kFolderInUserFolderBit = 5,
  kFolderTrackedByAlias = 0x00000040,
  kFolderTrackedByAliasBit = 6,
  kFolderInRemoteUserFolderIfAvailable = 0x00000080,
  kFolderInRemoteUserFolderIfAvailableBit = 7,
  kFolderNeverMatchedInIdentifyFolder = 0x00000100,
  kFolderNeverMatchedInIdentifyFolderBit = 8,
  kFolderMustStayOnSameVolume = 0x00000200,
  kFolderMustStayOnSameVolumeBit = 9,
  kFolderManagerFolderInMacOS9FolderIfMacOSXIsInstalledMask = 0x00000400,
  kFolderManagerFolderInMacOS9FolderIfMacOSXIsInstalledBit = 10,
  kFolderInLocalOrRemoteUserFolder = kFolderInUserFolder | kFolderInRemoteUserFolderIfAvailable,
  kFolderManagerNotCreatedOnRemoteVolumesBit = 11,
  kFolderManagerNotCreatedOnRemoteVolumesMask = (1 << kFolderManagerNotCreatedOnRemoteVolumesBit),
  kFolderManagerNewlyCreatedFolderIsLocalizedBit = 12,
  kFolderManagerNewlyCreatedFolderShouldHaveDotLocalizedCreatedWithinMask = (1 << kFolderManagerNewlyCreatedFolderIsLocalizedBit)
};

typedef UInt32 FolderDescFlags;

enum {
  kRelativeFolder = 'relf',
  kRedirectedRelativeFolder = 'rrel',
  kSpecialFolder = 'spcf'
};

typedef OSType FolderClass;

enum {
  kBlessedFolder = 'blsf',
  kRootFolder = 'rotf'
};

enum {
  kCurrentUserFolderLocation = 'cusf'
};


enum {
  kDictionariesFolderType = 'dict',
  kLogsFolderType = 'logs',
  kPreferencePanesFolderType = 'ppan'
};


enum {
  kWidgetsFolderType = 'wdgt',
  kScreenSaversFolderType = 'scrn'
};

typedef OSType FolderType;
typedef OSType FolderLocation;

struct FolderDesc {
  Size descSize;
  FolderType foldType;
  FolderDescFlags flags;
  FolderClass foldClass;
  FolderType foldLocation;
  OSType badgeSignature;
  OSType badgeType;
  UInt32 reserved;
  StrFileName name;
};
typedef struct FolderDesc FolderDesc;
typedef FolderDesc * FolderDescPtr;

typedef UInt32 RoutingFlags;
struct FolderRouting {
  Size descSize;
  OSType fileType;
  FolderType routeFromFolder;
  FolderType routeToFolder;
  RoutingFlags flags;
};
typedef struct FolderRouting FolderRouting;
typedef FolderRouting * FolderRoutingPtr;
# 689 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Folders.h" 3
extern OSErr
AddFolderDescriptor(
  FolderType foldType,
  FolderDescFlags flags,
  FolderClass foldClass,
  FolderLocation foldLocation,
  OSType badgeSignature,
  OSType badgeType,
  ConstStrFileNameParam name,
  Boolean replaceFlag) ;
# 741 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Folders.h" 3
extern OSErr
GetFolderTypes(
  UInt32 requestedTypeCount,
  UInt32 * totalTypeCount,
  FolderType * theTypes) ;
# 769 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Folders.h" 3
extern OSErr
RemoveFolderDescriptor(FolderType foldType) ;
# 815 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Folders.h" 3
extern OSStatus
GetFolderNameUnicode(
  FSVolumeRefNum vRefNum,
  OSType foldType,
  FSVolumeRefNum * foundVRefNum,
  HFSUniStr255 * name) ;
# 862 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Folders.h" 3
extern OSErr
InvalidateFolderDescriptorCache(
  FSVolumeRefNum vRefNum,
  SInt32 dirID) ;
# 907 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Folders.h" 3
extern OSErr
IdentifyFolder(
  FSVolumeRefNum vRefNum,
  SInt32 dirID,
  FolderType * foldType) ;
# 963 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Folders.h" 3
extern OSErr
FSDetermineIfRefIsEnclosedByFolder(
  FSVolumeRefNum domainOrVRefNum,
  OSType folderType,
  const FSRef * inRef,
  Boolean * outResult) ;
# 1025 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Folders.h" 3
extern OSErr
DetermineIfPathIsEnclosedByFolder(
  FSVolumeRefNum domainOrVRefNum,
  OSType folderType,
  const UInt8 * utf8Path,
  Boolean pathIsRealPath,
  Boolean * outResult) ;
# 1571 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Folders.h" 3
typedef OSStatus ( * FolderManagerNotificationProcPtr)(OSType message, void *arg, void *userRefCon);
typedef FolderManagerNotificationProcPtr FolderManagerNotificationUPP;
# 1581 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Folders.h" 3
extern FolderManagerNotificationUPP
NewFolderManagerNotificationUPP(FolderManagerNotificationProcPtr userRoutine) ;
# 1592 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Folders.h" 3
extern void
DisposeFolderManagerNotificationUPP(FolderManagerNotificationUPP userUPP) ;
# 1603 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Folders.h" 3
extern OSStatus
InvokeFolderManagerNotificationUPP(
  OSType message,
  void * arg,
  void * userRefCon,
  FolderManagerNotificationUPP userUPP) ;



    inline FolderManagerNotificationUPP NewFolderManagerNotificationUPP(FolderManagerNotificationProcPtr userRoutine) { return userRoutine; }
    inline void DisposeFolderManagerNotificationUPP(FolderManagerNotificationUPP) { }
    inline OSStatus InvokeFolderManagerNotificationUPP(OSType message, void * arg, void * userRefCon, FolderManagerNotificationUPP userUPP) { return (*userUPP)(message, arg, userRefCon); }
# 1724 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Folders.h" 3
#pragma pack(pop)


}
# 175 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CarbonCore.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Timer.h" 1 3
# 40 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Timer.h" 3
extern "C" {


#pragma pack(push, 2)
# 74 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Timer.h" 3
extern void
Microseconds(UnsignedWide * microTickCount) ;
# 112 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Timer.h" 3
enum {

  kTMTaskActive = (1L << 15)
};

typedef struct TMTask TMTask;
typedef TMTask * TMTaskPtr;
typedef void ( * TimerProcPtr)(TMTaskPtr tmTaskPtr);
typedef TimerProcPtr TimerUPP;
struct TMTask {
  QElemPtr qLink;
  short qType;
  TimerUPP tmAddr;
  long tmCount;
  long tmWakeUp;
  long tmReserved;
};
# 141 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Timer.h" 3
extern void
InsTime(QElemPtr tmTaskPtr) __attribute__((deprecated));
# 156 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Timer.h" 3
extern void
InsXTime(QElemPtr tmTaskPtr) __attribute__((deprecated));
# 171 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Timer.h" 3
extern void
PrimeTime(
  QElemPtr tmTaskPtr,
  long count) __attribute__((deprecated));
# 188 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Timer.h" 3
extern void
RmvTime(QElemPtr tmTaskPtr) __attribute__((deprecated));
# 228 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Timer.h" 3
extern OSErr
InstallTimeTask(QElemPtr tmTaskPtr) __attribute__((deprecated));
# 278 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Timer.h" 3
extern OSErr
InstallXTimeTask(QElemPtr tmTaskPtr) __attribute__((deprecated));
# 341 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Timer.h" 3
extern OSErr
PrimeTimeTask(
  QElemPtr tmTaskPtr,
  long count) __attribute__((deprecated));
# 391 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Timer.h" 3
extern OSErr
RemoveTimeTask(QElemPtr tmTaskPtr) __attribute__((deprecated));
# 404 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Timer.h" 3
extern TimerUPP
NewTimerUPP(TimerProcPtr userRoutine) ;
# 415 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Timer.h" 3
extern void
DisposeTimerUPP(TimerUPP userUPP) ;
# 426 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Timer.h" 3
extern void
InvokeTimerUPP(
  TMTaskPtr tmTaskPtr,
  TimerUPP userUPP) ;



    inline TimerUPP NewTimerUPP(TimerProcPtr userRoutine) { return userRoutine; }
    inline void DisposeTimerUPP(TimerUPP) { }
    inline void InvokeTimerUPP(TMTaskPtr tmTaskPtr, TimerUPP userUPP) { (*userUPP)(tmTaskPtr); }
# 446 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/Timer.h" 3
#pragma pack(pop)


}
# 179 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CarbonCore.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MultiprocessingInfo.h" 1 3
# 45 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MultiprocessingInfo.h" 3
extern "C" {


#pragma options align=power
# 156 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MultiprocessingInfo.h" 3
extern OSStatus
MPGetNextCpuID(
  MPCoherenceID owningCoherenceID,
  MPCpuID * cpuID) ;
# 190 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MultiprocessingInfo.h" 3
extern OSStatus
MPGetNextTaskID(
  MPProcessID owningProcessID,
  MPTaskID * taskID) ;
# 307 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MultiprocessingInfo.h" 3
enum {

  kMPQueueInfoVersion = 1L | (kOpaqueQueueID << 16),
  kMPSemaphoreInfoVersion = 1L | (kOpaqueSemaphoreID << 16),
  kMPEventInfoVersion = 1L | (kOpaqueEventID << 16),
  kMPCriticalRegionInfoVersion = 1L | (kOpaqueCriticalRegionID << 16),
  kMPNotificationInfoVersion = 1L | (kOpaqueNotificationID << 16),
  kMPAddressSpaceInfoVersion = 1L | (kOpaqueAddressSpaceID << 16)
};


struct MPQueueInfo {
  PBVersion version;

  MPProcessID processID;
  OSType queueName;

  ItemCount nWaiting;
  MPTaskID waitingTaskID;

  ItemCount nMessages;
  ItemCount nReserved;

  void * p1;
  void * p2;
  void * p3;
};
typedef struct MPQueueInfo MPQueueInfo;
struct MPSemaphoreInfo {
  PBVersion version;

  MPProcessID processID;
  OSType semaphoreName;

  ItemCount nWaiting;
  MPTaskID waitingTaskID;

  ItemCount maximum;
  ItemCount count;
};
typedef struct MPSemaphoreInfo MPSemaphoreInfo;
struct MPEventInfo {
  PBVersion version;

  MPProcessID processID;
  OSType eventName;

  ItemCount nWaiting;
  MPTaskID waitingTaskID;

  MPEventFlags events;
};
typedef struct MPEventInfo MPEventInfo;
struct MPCriticalRegionInfo {
  PBVersion version;

  MPProcessID processID;
  OSType regionName;

  ItemCount nWaiting;
  MPTaskID waitingTaskID;

  MPTaskID owningTask;
  ItemCount count;
};
typedef struct MPCriticalRegionInfo MPCriticalRegionInfo;
struct MPNotificationInfo {
  PBVersion version;

  MPProcessID processID;
  OSType notificationName;

  MPQueueID queueID;
  void * p1;
  void * p2;
  void * p3;

  MPEventID eventID;
  MPEventFlags events;

  MPSemaphoreID semaphoreID;
};
typedef struct MPNotificationInfo MPNotificationInfo;
struct MPAddressSpaceInfo {
  PBVersion version;

  MPProcessID processID;
  MPCoherenceID groupID;
  ItemCount nTasks;
  UInt32 vsid[16];
};
typedef struct MPAddressSpaceInfo MPAddressSpaceInfo;
# 468 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/MultiprocessingInfo.h" 3
#pragma options align=reset


}
# 183 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CarbonCore.h" 2 3
# 194 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CarbonCore.h" 3
# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/LowMem.h" 1 3
# 49 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/LowMem.h" 3
extern "C" {


#pragma pack(push, 2)
# 262 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/LowMem.h" 3
extern SInt16 LMGetBootDrive(void) ;
# 273 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/LowMem.h" 3
extern void LMSetBootDrive(SInt16 value) ;
# 939 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/LowMem.h" 3
extern SInt16 LMGetApFontID(void) __attribute__((deprecated));
# 954 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/LowMem.h" 3
extern void LMSetApFontID(SInt16 value) __attribute__((deprecated));
# 1012 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/LowMem.h" 3
extern SInt16 LMGetSysMap(void) ;
# 1023 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/LowMem.h" 3
extern void LMSetSysMap(SInt16 value) ;
# 1034 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/LowMem.h" 3
extern UInt8 LMGetResLoad(void) ;
# 1045 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/LowMem.h" 3
extern void LMSetResLoad(UInt8 value) ;
# 1056 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/LowMem.h" 3
extern SInt16 LMGetResErr(void) ;
# 1067 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/LowMem.h" 3
extern void LMSetResErr(SInt16 value) ;
# 1078 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/LowMem.h" 3
extern UInt8 LMGetTmpResLoad(void) ;
# 1089 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/LowMem.h" 3
extern void LMSetTmpResLoad(UInt8 value) ;
# 1101 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/LowMem.h" 3
extern Ptr LMGetIntlSpec(void) ;
# 1112 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/LowMem.h" 3
extern void LMSetIntlSpec(Ptr value) ;
# 1146 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/LowMem.h" 3
extern void LMSetSysFontFam(SInt16 value) __attribute__((deprecated));
# 1161 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/LowMem.h" 3
extern SInt16 LMGetSysFontSize(void) __attribute__((deprecated));
# 1176 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/LowMem.h" 3
extern void LMSetSysFontSize(SInt16 value) ;
# 1416 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/LowMem.h" 3
#pragma pack(pop)


}
# 195 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CarbonCore.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/AVLTree.h" 1 3
# 36 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/AVLTree.h" 3
extern "C" {


#pragma pack(push, 2)
# 48 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/AVLTree.h" 3
typedef UInt16 AVLVisitStage;
enum {




  kAVLPreOrder = 0,





  kAVLInOrder = 1,




  kAVLPostOrder = 2
};
# 75 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/AVLTree.h" 3
typedef UInt16 AVLOrder;
enum {




  kLeftToRight = 0,




  kRightToLeft = 1
};
# 96 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/AVLTree.h" 3
typedef UInt16 AVLNodeType;
enum {
  kAVLIsTree = 0,
  kAVLIsLeftBranch = 1,
  kAVLIsRightBranch = 2,
  kAVLIsLeaf = 3,
  kAVLNullNode = 4
};

enum {
  errItemAlreadyInTree = -960,
  errNotValidTree = -961,
  errItemNotFoundInTree = -962,
  errCanNotInsertWhileWalkProcInProgress = -963,
  errTreeIsLocked = -964
};
# 124 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/AVLTree.h" 3
struct AVLTreeStruct {
  OSType signature;
  unsigned long privateStuff[8];
};
typedef struct AVLTreeStruct AVLTreeStruct;
typedef AVLTreeStruct * AVLTreePtr;
# 166 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/AVLTree.h" 3
typedef SInt32 ( * AVLCompareItemsProcPtr)(AVLTreePtr tree, const void *i1, const void *i2, AVLNodeType nd_typ);
# 192 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/AVLTree.h" 3
typedef ByteCount ( * AVLItemSizeProcPtr)(AVLTreePtr tree, const void *itemPtr);
# 216 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/AVLTree.h" 3
typedef void ( * AVLDisposeItemProcPtr)(AVLTreePtr tree, const void *dataP);
# 269 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/AVLTree.h" 3
typedef OSErr ( * AVLWalkProcPtr)(AVLTreePtr tree, const void *dataPtr, AVLVisitStage visitStage, AVLNodeType node, UInt32 level, SInt32 balance, void *refCon);
typedef AVLCompareItemsProcPtr AVLCompareItemsUPP;
typedef AVLItemSizeProcPtr AVLItemSizeUPP;
typedef AVLDisposeItemProcPtr AVLDisposeItemUPP;
typedef AVLWalkProcPtr AVLWalkUPP;
# 282 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/AVLTree.h" 3
extern AVLCompareItemsUPP
NewAVLCompareItemsUPP(AVLCompareItemsProcPtr userRoutine) __attribute__((deprecated));
# 293 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/AVLTree.h" 3
extern AVLItemSizeUPP
NewAVLItemSizeUPP(AVLItemSizeProcPtr userRoutine) __attribute__((deprecated));
# 304 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/AVLTree.h" 3
extern AVLDisposeItemUPP
NewAVLDisposeItemUPP(AVLDisposeItemProcPtr userRoutine) __attribute__((deprecated));
# 315 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/AVLTree.h" 3
extern AVLWalkUPP
NewAVLWalkUPP(AVLWalkProcPtr userRoutine) __attribute__((deprecated));
# 326 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/AVLTree.h" 3
extern void
DisposeAVLCompareItemsUPP(AVLCompareItemsUPP userUPP) __attribute__((deprecated));
# 337 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/AVLTree.h" 3
extern void
DisposeAVLItemSizeUPP(AVLItemSizeUPP userUPP) __attribute__((deprecated));
# 348 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/AVLTree.h" 3
extern void
DisposeAVLDisposeItemUPP(AVLDisposeItemUPP userUPP) __attribute__((deprecated));
# 359 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/AVLTree.h" 3
extern void
DisposeAVLWalkUPP(AVLWalkUPP userUPP) __attribute__((deprecated));
# 370 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/AVLTree.h" 3
extern SInt32
InvokeAVLCompareItemsUPP(
  AVLTreePtr tree,
  const void * i1,
  const void * i2,
  AVLNodeType nd_typ,
  AVLCompareItemsUPP userUPP) __attribute__((deprecated));
# 386 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/AVLTree.h" 3
extern ByteCount
InvokeAVLItemSizeUPP(
  AVLTreePtr tree,
  const void * itemPtr,
  AVLItemSizeUPP userUPP) __attribute__((deprecated));
# 400 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/AVLTree.h" 3
extern void
InvokeAVLDisposeItemUPP(
  AVLTreePtr tree,
  const void * dataP,
  AVLDisposeItemUPP userUPP) __attribute__((deprecated));
# 414 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/AVLTree.h" 3
extern OSErr
InvokeAVLWalkUPP(
  AVLTreePtr tree,
  const void * dataPtr,
  AVLVisitStage visitStage,
  AVLNodeType node,
  UInt32 level,
  SInt32 balance,
  void * refCon,
  AVLWalkUPP userUPP) __attribute__((deprecated));



    inline AVLCompareItemsUPP NewAVLCompareItemsUPP(AVLCompareItemsProcPtr userRoutine) { return userRoutine; }
    inline AVLItemSizeUPP NewAVLItemSizeUPP(AVLItemSizeProcPtr userRoutine) { return userRoutine; }
    inline AVLDisposeItemUPP NewAVLDisposeItemUPP(AVLDisposeItemProcPtr userRoutine) { return userRoutine; }
    inline AVLWalkUPP NewAVLWalkUPP(AVLWalkProcPtr userRoutine) { return userRoutine; }
    inline void DisposeAVLCompareItemsUPP(AVLCompareItemsUPP) { }
    inline void DisposeAVLItemSizeUPP(AVLItemSizeUPP) { }
    inline void DisposeAVLDisposeItemUPP(AVLDisposeItemUPP) { }
    inline void DisposeAVLWalkUPP(AVLWalkUPP) { }
    inline SInt32 InvokeAVLCompareItemsUPP(AVLTreePtr tree, const void * i1, const void * i2, AVLNodeType nd_typ, AVLCompareItemsUPP userUPP) { return (*userUPP)(tree, i1, i2, nd_typ); }
    inline ByteCount InvokeAVLItemSizeUPP(AVLTreePtr tree, const void * itemPtr, AVLItemSizeUPP userUPP) { return (*userUPP)(tree, itemPtr); }
    inline void InvokeAVLDisposeItemUPP(AVLTreePtr tree, const void * dataP, AVLDisposeItemUPP userUPP) { (*userUPP)(tree, dataP); }
    inline OSErr InvokeAVLWalkUPP(AVLTreePtr tree, const void * dataPtr, AVLVisitStage visitStage, AVLNodeType node, UInt32 level, SInt32 balance, void * refCon, AVLWalkUPP userUPP) { return (*userUPP)(tree, dataPtr, visitStage, node, level, balance, refCon); }
# 896 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/AVLTree.h" 3
#pragma pack(pop)


}
# 199 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CarbonCore.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/PEFBinaryFormat.h" 1 3
# 33 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/PEFBinaryFormat.h" 3
#pragma pack(push, 2)
# 102 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/PEFBinaryFormat.h" 3
struct PEFContainerHeader {
  OSType tag1;
  OSType tag2;
  OSType architecture;
  UInt32 formatVersion;
  UInt32 dateTimeStamp;
  UInt32 oldDefVersion;
  UInt32 oldImpVersion;
  UInt32 currentVersion;
  UInt16 sectionCount;
  UInt16 instSectionCount;
  UInt32 reservedA;
};
typedef struct PEFContainerHeader PEFContainerHeader;
enum {
  kPEFTag1 = 'Joy!',
  kPEFTag2 = 'peff',
  kPEFVersion = 0x00000001
};


enum {
  kPEFFirstSectionHeaderOffset = sizeof(PEFContainerHeader)
};
# 138 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/PEFBinaryFormat.h" 3
struct PEFSectionHeader {
  SInt32 nameOffset;
  UInt32 defaultAddress;
  UInt32 totalLength;
  UInt32 unpackedLength;
  UInt32 containerLength;
  UInt32 containerOffset;
  UInt8 sectionKind;
  UInt8 shareKind;
  UInt8 alignment;
  UInt8 reservedA;
};
typedef struct PEFSectionHeader PEFSectionHeader;
enum {


  kPEFCodeSection = 0,
  kPEFUnpackedDataSection = 1,
  kPEFPackedDataSection = 2,
  kPEFConstantSection = 3,
  kPEFExecDataSection = 6,

  kPEFLoaderSection = 4,
  kPEFDebugSection = 5,
  kPEFExceptionSection = 7,
  kPEFTracebackSection = 8
};


enum {

  kPEFProcessShare = 1,
  kPEFGlobalShare = 4,
  kPEFProtectedShare = 5
};
# 197 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/PEFBinaryFormat.h" 3
enum {

  kPEFPkDataZero = 0,
  kPEFPkDataBlock = 1,
  kPEFPkDataRepeat = 2,
  kPEFPkDataRepeatBlock = 3,
  kPEFPkDataRepeatZero = 4
};


enum {
  kPEFPkDataOpcodeShift = 5,
  kPEFPkDataCount5Mask = 0x1F,
  kPEFPkDataMaxCount5 = 31,
  kPEFPkDataVCountShift = 7,
  kPEFPkDataVCountMask = 0x7F,
  kPEFPkDataVCountEndMask = 0x80
};
# 313 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/PEFBinaryFormat.h" 3
struct PEFLoaderInfoHeader {
  SInt32 mainSection;
  UInt32 mainOffset;
  SInt32 initSection;
  UInt32 initOffset;
  SInt32 termSection;
  UInt32 termOffset;
  UInt32 importedLibraryCount;
  UInt32 totalImportedSymbolCount;
  UInt32 relocSectionCount;
  UInt32 relocInstrOffset;
  UInt32 loaderStringsOffset;
  UInt32 exportHashOffset;
  UInt32 exportHashTablePower;
  UInt32 exportedSymbolCount;
};
typedef struct PEFLoaderInfoHeader PEFLoaderInfoHeader;







struct PEFImportedLibrary {
  UInt32 nameOffset;
  UInt32 oldImpVersion;
  UInt32 currentVersion;
  UInt32 importedSymbolCount;
  UInt32 firstImportedSymbol;
  UInt8 options;
  UInt8 reservedA;
  UInt16 reservedB;
};
typedef struct PEFImportedLibrary PEFImportedLibrary;
enum {

  kPEFWeakImportLibMask = 0x40,
  kPEFInitLibBeforeMask = 0x80
};
# 375 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/PEFBinaryFormat.h" 3
struct PEFImportedSymbol {
  UInt32 classAndName;
};
typedef struct PEFImportedSymbol PEFImportedSymbol;
enum {
  kPEFImpSymClassShift = 24,
  kPEFImpSymNameOffsetMask = 0x00FFFFFF,
  kPEFImpSymMaxNameOffset = 0x00FFFFFF
};







enum {

  kPEFCodeSymbol = 0x00,
  kPEFDataSymbol = 0x01,
  kPEFTVectorSymbol = 0x02,
  kPEFTOCSymbol = 0x03,
  kPEFGlueSymbol = 0x04,
  kPEFUndefinedSymbol = 0x0F,
  kPEFWeakImportSymMask = 0x80
};
# 469 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/PEFBinaryFormat.h" 3
struct PEFExportedSymbolHashSlot {
  UInt32 countAndStart;
};
typedef struct PEFExportedSymbolHashSlot PEFExportedSymbolHashSlot;
enum {
  kPEFHashSlotSymCountShift = 18,
  kPEFHashSlotFirstKeyMask = 0x0003FFFF,
  kPEFHashSlotMaxSymbolCount = 0x00003FFF,
  kPEFHashSlotMaxKeyIndex = 0x0003FFFF
};
# 497 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/PEFBinaryFormat.h" 3
struct PEFSplitHashWord {
  UInt16 nameLength;
  UInt16 hashValue;
};
typedef struct PEFSplitHashWord PEFSplitHashWord;
struct PEFExportedSymbolKey {
  union {
    UInt32 fullHashWord;
    PEFSplitHashWord splitHashWord;
  } u;
};
typedef struct PEFExportedSymbolKey PEFExportedSymbolKey;
enum {
  kPEFHashLengthShift = 16,
  kPEFHashValueMask = 0x0000FFFF,
  kPEFHashMaxLength = 0x0000FFFF
};
# 560 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/PEFBinaryFormat.h" 3
struct PEFExportedSymbol {
  UInt32 classAndName;
  UInt32 symbolValue;
  SInt16 sectionIndex;
};
typedef struct PEFExportedSymbol PEFExportedSymbol;
# 578 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/PEFBinaryFormat.h" 3
enum {
  kPEFExpSymClassShift = 24,
  kPEFExpSymNameOffsetMask = 0x00FFFFFF,
  kPEFExpSymMaxNameOffset = 0x00FFFFFF
};







enum {

  kPEFAbsoluteExport = -2,
  kPEFReexportedImport = -3
};
# 618 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/PEFBinaryFormat.h" 3
typedef UInt16 PEFRelocChunk;
struct PEFLoaderRelocationHeader {
  UInt16 sectionIndex;
  UInt16 reservedA;
  UInt32 relocCount;
  UInt32 firstRelocOffset;
};
typedef struct PEFLoaderRelocationHeader PEFLoaderRelocationHeader;
# 662 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/PEFBinaryFormat.h" 3
enum {
  kPEFRelocBasicOpcodeRange = 128
};
# 675 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/PEFBinaryFormat.h" 3
enum {
  kPEFRelocBySectDWithSkip = 0x00,
  kPEFRelocBySectC = 0x20,
  kPEFRelocBySectD = 0x21,
  kPEFRelocTVector12 = 0x22,
  kPEFRelocTVector8 = 0x23,
  kPEFRelocVTable8 = 0x24,
  kPEFRelocImportRun = 0x25,
  kPEFRelocSmByImport = 0x30,
  kPEFRelocSmSetSectC = 0x31,
  kPEFRelocSmSetSectD = 0x32,
  kPEFRelocSmBySection = 0x33,
  kPEFRelocIncrPosition = 0x40,
  kPEFRelocSmRepeat = 0x48,
  kPEFRelocSetPosition = 0x50,
  kPEFRelocLgByImport = 0x52,
  kPEFRelocLgRepeat = 0x58,
  kPEFRelocLgSetOrBySection = 0x5A,
  kPEFRelocUndefinedOpcode = 0xFF
};
# 704 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/PEFBinaryFormat.h" 3
enum {
  kPEFRelocLgBySectionSubopcode = 0x00,
  kPEFRelocLgSetSectCSubopcode = 0x01,
  kPEFRelocLgSetSectDSubopcode = 0x02
};
# 788 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/PEFBinaryFormat.h" 3
enum {
  kPEFRelocWithSkipMaxSkipCount = 255,
  kPEFRelocWithSkipMaxRelocCount = 63
};
# 822 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/PEFBinaryFormat.h" 3
enum {
  kPEFRelocRunMaxRunLength = 512
};
# 861 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/PEFBinaryFormat.h" 3
enum {
  kPEFRelocSmIndexMaxIndex = 511
};
# 897 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/PEFBinaryFormat.h" 3
enum {
  kPEFRelocIncrPositionMaxOffset = 4096
};
# 927 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/PEFBinaryFormat.h" 3
enum {
  kPEFRelocSmRepeatMaxChunkCount = 16,
  kPEFRelocSmRepeatMaxRepeatCount = 256
};
# 958 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/PEFBinaryFormat.h" 3
enum {
  kPEFRelocSetPosMaxOffset = 0x03FFFFFF
};
# 992 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/PEFBinaryFormat.h" 3
enum {
  kPEFRelocLgByImportMaxIndex = 0x03FFFFFF
};
# 1027 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/PEFBinaryFormat.h" 3
enum {
  kPEFRelocLgRepeatMaxChunkCount = 16,
  kPEFRelocLgRepeatMaxRepeatCount = 0x003FFFFF
};
# 1065 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/PEFBinaryFormat.h" 3
enum {
  kPEFRelocLgSetOrBySectionMaxIndex = 0x003FFFFF
};
# 1147 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/PEFBinaryFormat.h" 3
struct XLibContainerHeader {



  OSType tag1;
  OSType tag2;
  UInt32 currentFormat;
  UInt32 containerStringsOffset;
  UInt32 exportHashOffset;
  UInt32 exportKeyOffset;
  UInt32 exportSymbolOffset;
  UInt32 exportNamesOffset;
  UInt32 exportHashTablePower;
  UInt32 exportedSymbolCount;



  UInt32 fragNameOffset;
  UInt32 fragNameLength;
  UInt32 dylibPathOffset;
  UInt32 dylibPathLength;
  OSType cpuFamily;
  OSType cpuModel;
  UInt32 dateTimeStamp;
  UInt32 currentVersion;
  UInt32 oldDefVersion;
  UInt32 oldImpVersion;

};
typedef struct XLibContainerHeader XLibContainerHeader;
enum {
  kXLibTag1 = (int)0xF04D6163 ,
  kVLibTag2 = 'VLib',
  kBLibTag2 = 'BLib',
  kXLibVersion = 0x00000001
};



typedef PEFExportedSymbolHashSlot XLibExportedSymbolHashSlot;
typedef PEFExportedSymbolKey XLibExportedSymbolKey;
struct XLibExportedSymbol {
  UInt32 classAndName;
  UInt32 bpOffset;
};
typedef struct XLibExportedSymbol XLibExportedSymbol;
# 1579 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/PEFBinaryFormat.h" 3
#pragma pack(pop)
# 203 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CarbonCore.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/HFSVolumes.h" 1 3
# 32 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/HFSVolumes.h" 3
# 1 "/usr/include/hfs/hfs_format.h" 1 3 4
# 45 "/usr/include/hfs/hfs_format.h" 3 4
extern "C" {





enum {
 kHFSSigWord = 0x4244,
 kHFSPlusSigWord = 0x482B,
 kHFSXSigWord = 0x4858,

 kHFSPlusVersion = 0x0004,
 kHFSXVersion = 0x0005,

 kHFSPlusMountVersion = 0x31302E30,
 kHFSJMountVersion = 0x4846534a,
 kFSKMountVersion = 0x46534b21
};
# 120 "/usr/include/hfs/hfs_format.h" 3 4
enum {
 kHardLinkFileType = 0x686C6E6B,
 kHFSPlusCreator = 0x6866732B
};





enum {
      kSymLinkFileType = 0x736C6E6B,
      kSymLinkCreator = 0x72686170
};
# 146 "/usr/include/hfs/hfs_format.h" 3 4
enum {
 kHFSMaxVolumeNameChars = 27,
 kHFSMaxFileNameChars = 31,
 kHFSPlusMaxFileNameChars = 255
};





struct HFSExtentKey {
 u_int8_t keyLength;
 u_int8_t forkType;
 u_int32_t fileID;
 u_int16_t startBlock;
} __attribute__((aligned(2), packed));
typedef struct HFSExtentKey HFSExtentKey;


struct HFSPlusExtentKey {
 u_int16_t keyLength;
 u_int8_t forkType;
 u_int8_t pad;
 u_int32_t fileID;
 u_int32_t startBlock;
} __attribute__((aligned(2), packed));
typedef struct HFSPlusExtentKey HFSPlusExtentKey;


enum {
 kHFSExtentDensity = 3,
 kHFSPlusExtentDensity = 8
};


struct HFSExtentDescriptor {
 u_int16_t startBlock;
 u_int16_t blockCount;
} __attribute__((aligned(2), packed));
typedef struct HFSExtentDescriptor HFSExtentDescriptor;


struct HFSPlusExtentDescriptor {
 u_int32_t startBlock;
 u_int32_t blockCount;
} __attribute__((aligned(2), packed));
typedef struct HFSPlusExtentDescriptor HFSPlusExtentDescriptor;


typedef HFSExtentDescriptor HFSExtentRecord[3];


typedef HFSPlusExtentDescriptor HFSPlusExtentRecord[8];



struct FndrFileInfo {
 u_int32_t fdType;
 u_int32_t fdCreator;
 u_int16_t fdFlags;
 struct {
     int16_t v;
     int16_t h;
 } fdLocation;
 int16_t opaque;
} __attribute__((aligned(2), packed));
typedef struct FndrFileInfo FndrFileInfo;

struct FndrDirInfo {
 struct {
     int16_t top;
     int16_t left;
     int16_t bottom;
     int16_t right;
 } frRect;
 unsigned short frFlags;
 struct {
     u_int16_t v;
     u_int16_t h;
 } frLocation;
 int16_t opaque;
} __attribute__((aligned(2), packed));
typedef struct FndrDirInfo FndrDirInfo;

struct FndrOpaqueInfo {
 int8_t opaque[16];
} __attribute__((aligned(2), packed));
typedef struct FndrOpaqueInfo FndrOpaqueInfo;



struct HFSPlusForkData {
 u_int64_t logicalSize;
 u_int32_t clumpSize;
 u_int32_t totalBlocks;
 HFSPlusExtentRecord extents;
} __attribute__((aligned(2), packed));
typedef struct HFSPlusForkData HFSPlusForkData;







struct HFSPlusBSDInfo {
 u_int32_t ownerID;
 u_int32_t groupID;
 u_int8_t adminFlags;
 u_int8_t ownerFlags;
 u_int16_t fileMode;
 union {
     u_int32_t iNodeNum;
     u_int32_t linkCount;
     u_int32_t rawDevice;
 } special;
} __attribute__((aligned(2), packed));
typedef struct HFSPlusBSDInfo HFSPlusBSDInfo;
# 287 "/usr/include/hfs/hfs_format.h" 3 4
enum {
 kHFSRootParentID = 1,
 kHFSRootFolderID = 2,
 kHFSExtentsFileID = 3,
 kHFSCatalogFileID = 4,
 kHFSBadBlockFileID = 5,
 kHFSAllocationFileID = 6,
 kHFSStartupFileID = 7,
 kHFSAttributesFileID = 8,
 kHFSAttributeDataFileID = 13,

 kHFSRepairCatalogFileID = 14,
 kHFSBogusExtentFileID = 15,
 kHFSFirstUserCatalogNodeID = 16
};


struct HFSCatalogKey {
 u_int8_t keyLength;
 u_int8_t reserved;
 u_int32_t parentID;
 u_int8_t nodeName[kHFSMaxFileNameChars + 1];
} __attribute__((aligned(2), packed));
typedef struct HFSCatalogKey HFSCatalogKey;


struct HFSPlusCatalogKey {
 u_int16_t keyLength;
 u_int32_t parentID;
 HFSUniStr255 nodeName;
} __attribute__((aligned(2), packed));
typedef struct HFSPlusCatalogKey HFSPlusCatalogKey;


enum {

 kHFSFolderRecord = 0x0100,
 kHFSFileRecord = 0x0200,
 kHFSFolderThreadRecord = 0x0300,
 kHFSFileThreadRecord = 0x0400,


 kHFSPlusFolderRecord = 1,
 kHFSPlusFileRecord = 2,
 kHFSPlusFolderThreadRecord = 3,
 kHFSPlusFileThreadRecord = 4
};



enum {
 kHFSFileLockedBit = 0x0000,
 kHFSFileLockedMask = 0x0001,

 kHFSThreadExistsBit = 0x0001,
 kHFSThreadExistsMask = 0x0002,

 kHFSHasAttributesBit = 0x0002,
 kHFSHasAttributesMask = 0x0004,

 kHFSHasSecurityBit = 0x0003,
 kHFSHasSecurityMask = 0x0008,

 kHFSHasFolderCountBit = 0x0004,
 kHFSHasFolderCountMask = 0x0010,

 kHFSHasLinkChainBit = 0x0005,
 kHFSHasLinkChainMask = 0x0020,

 kHFSHasChildLinkBit = 0x0006,
 kHFSHasChildLinkMask = 0x0040
};



struct HFSCatalogFolder {
 int16_t recordType;
 u_int16_t flags;
 u_int16_t valence;
 u_int32_t folderID;
 u_int32_t createDate;
 u_int32_t modifyDate;
 u_int32_t backupDate;
 FndrDirInfo userInfo;
 FndrOpaqueInfo finderInfo;
 u_int32_t reserved[4];
} __attribute__((aligned(2), packed));
typedef struct HFSCatalogFolder HFSCatalogFolder;


struct HFSPlusCatalogFolder {
 int16_t recordType;
 u_int16_t flags;
 u_int32_t valence;
 u_int32_t folderID;
 u_int32_t createDate;
 u_int32_t contentModDate;
 u_int32_t attributeModDate;
 u_int32_t accessDate;
 u_int32_t backupDate;
 HFSPlusBSDInfo bsdInfo;
 FndrDirInfo userInfo;
 FndrOpaqueInfo finderInfo;
 u_int32_t textEncoding;
 u_int32_t folderCount;
} __attribute__((aligned(2), packed));
typedef struct HFSPlusCatalogFolder HFSPlusCatalogFolder;


struct HFSCatalogFile {
 int16_t recordType;
 u_int8_t flags;
 int8_t fileType;
 FndrFileInfo userInfo;
 u_int32_t fileID;
 u_int16_t dataStartBlock;
 int32_t dataLogicalSize;
 int32_t dataPhysicalSize;
 u_int16_t rsrcStartBlock;
 int32_t rsrcLogicalSize;
 int32_t rsrcPhysicalSize;
 u_int32_t createDate;
 u_int32_t modifyDate;
 u_int32_t backupDate;
 FndrOpaqueInfo finderInfo;
 u_int16_t clumpSize;
 HFSExtentRecord dataExtents;
 HFSExtentRecord rsrcExtents;
 u_int32_t reserved;
} __attribute__((aligned(2), packed));
typedef struct HFSCatalogFile HFSCatalogFile;


struct HFSPlusCatalogFile {
 int16_t recordType;
 u_int16_t flags;
 u_int32_t reserved1;
 u_int32_t fileID;
 u_int32_t createDate;
 u_int32_t contentModDate;
 u_int32_t attributeModDate;
 u_int32_t accessDate;
 u_int32_t backupDate;
 HFSPlusBSDInfo bsdInfo;
 FndrFileInfo userInfo;
 FndrOpaqueInfo finderInfo;
 u_int32_t textEncoding;
 u_int32_t reserved2;


 HFSPlusForkData dataFork;
 HFSPlusForkData resourceFork;
} __attribute__((aligned(2), packed));
typedef struct HFSPlusCatalogFile HFSPlusCatalogFile;


struct HFSCatalogThread {
 int16_t recordType;
 int32_t reserved[2];
 u_int32_t parentID;
 u_int8_t nodeName[kHFSMaxFileNameChars + 1];
} __attribute__((aligned(2), packed));
typedef struct HFSCatalogThread HFSCatalogThread;


struct HFSPlusCatalogThread {
 int16_t recordType;
 int16_t reserved;
 u_int32_t parentID;
 HFSUniStr255 nodeName;
} __attribute__((aligned(2), packed));
typedef struct HFSPlusCatalogThread HFSPlusCatalogThread;






enum {
 kHFSPlusAttrInlineData = 0x10,
 kHFSPlusAttrForkData = 0x20,
 kHFSPlusAttrExtents = 0x30
};
# 478 "/usr/include/hfs/hfs_format.h" 3 4
struct HFSPlusAttrForkData {
 u_int32_t recordType;
 u_int32_t reserved;
 HFSPlusForkData theFork;
} __attribute__((aligned(2), packed));
typedef struct HFSPlusAttrForkData HFSPlusAttrForkData;






struct HFSPlusAttrExtents {
 u_int32_t recordType;
 u_int32_t reserved;
 HFSPlusExtentRecord extents;
} __attribute__((aligned(2), packed));
typedef struct HFSPlusAttrExtents HFSPlusAttrExtents;







struct HFSPlusAttrData {
 u_int32_t recordType;
 u_int32_t reserved[2];
 u_int32_t attrSize;
 u_int8_t attrData[2];
} __attribute__((aligned(2), packed));
typedef struct HFSPlusAttrData HFSPlusAttrData;



struct HFSPlusAttrInlineData {
 u_int32_t recordType;
 u_int32_t reserved;
 u_int32_t logicalSize;
 u_int8_t userData[2];
} __attribute__((aligned(2), packed));
typedef struct HFSPlusAttrInlineData HFSPlusAttrInlineData;



union HFSPlusAttrRecord {
 u_int32_t recordType;
 HFSPlusAttrInlineData inlineData;
 HFSPlusAttrData attrData;
 HFSPlusAttrForkData forkData;
 HFSPlusAttrExtents overflowExtents;
};
typedef union HFSPlusAttrRecord HFSPlusAttrRecord;


enum { kHFSMaxAttrNameLen = 127 };
struct HFSPlusAttrKey {
 u_int16_t keyLength;
 u_int16_t pad;
 u_int32_t fileID;
 u_int32_t startBlock;
 u_int16_t attrNameLen;
 u_int16_t attrName[kHFSMaxAttrNameLen];
} __attribute__((aligned(2), packed));
typedef struct HFSPlusAttrKey HFSPlusAttrKey;
# 551 "/usr/include/hfs/hfs_format.h" 3 4
enum {
 kHFSPlusExtentKeyMaximumLength = sizeof(HFSPlusExtentKey) - sizeof(u_int16_t),
 kHFSExtentKeyMaximumLength = sizeof(HFSExtentKey) - sizeof(u_int8_t),
 kHFSPlusCatalogKeyMaximumLength = sizeof(HFSPlusCatalogKey) - sizeof(u_int16_t),
 kHFSPlusCatalogKeyMinimumLength = kHFSPlusCatalogKeyMaximumLength - sizeof(HFSUniStr255) + sizeof(u_int16_t),
 kHFSCatalogKeyMaximumLength = sizeof(HFSCatalogKey) - sizeof(u_int8_t),
 kHFSCatalogKeyMinimumLength = kHFSCatalogKeyMaximumLength - (kHFSMaxFileNameChars + 1) + sizeof(u_int8_t),
 kHFSPlusCatalogMinNodeSize = 4096,
 kHFSPlusExtentMinNodeSize = 512,
 kHFSPlusAttrMinNodeSize = 4096
};


enum {

 kHFSVolumeHardwareLockBit = 7,
 kHFSVolumeUnmountedBit = 8,
 kHFSVolumeSparedBlocksBit = 9,
 kHFSVolumeNoCacheRequiredBit = 10,
 kHFSBootVolumeInconsistentBit = 11,
 kHFSCatalogNodeIDsReusedBit = 12,
 kHFSVolumeJournaledBit = 13,
 kHFSVolumeInconsistentBit = 14,
 kHFSVolumeSoftwareLockBit = 15,




 kHFSUnusedNodeFixBit = 31,

 kHFSVolumeHardwareLockMask = 1 << kHFSVolumeHardwareLockBit,
 kHFSVolumeUnmountedMask = 1 << kHFSVolumeUnmountedBit,
 kHFSVolumeSparedBlocksMask = 1 << kHFSVolumeSparedBlocksBit,
 kHFSVolumeNoCacheRequiredMask = 1 << kHFSVolumeNoCacheRequiredBit,
 kHFSBootVolumeInconsistentMask = 1 << kHFSBootVolumeInconsistentBit,
 kHFSCatalogNodeIDsReusedMask = 1 << kHFSCatalogNodeIDsReusedBit,
 kHFSVolumeJournaledMask = 1 << kHFSVolumeJournaledBit,
 kHFSVolumeInconsistentMask = 1 << kHFSVolumeInconsistentBit,
 kHFSVolumeSoftwareLockMask = 1 << kHFSVolumeSoftwareLockBit,
 kHFSUnusedNodeFixMask = 1 << kHFSUnusedNodeFixBit,
 kHFSMDBAttributesMask = 0x8380
};

enum {
 kHFSUnusedNodesFixDate = 0xc5ef2480
};



struct HFSMasterDirectoryBlock {
 u_int16_t drSigWord;
 u_int32_t drCrDate;
 u_int32_t drLsMod;
 u_int16_t drAtrb;
 u_int16_t drNmFls;
 u_int16_t drVBMSt;
 u_int16_t drAllocPtr;
 u_int16_t drNmAlBlks;
 u_int32_t drAlBlkSiz;
 u_int32_t drClpSiz;
 u_int16_t drAlBlSt;
 u_int32_t drNxtCNID;
 u_int16_t drFreeBks;
 u_int8_t drVN[kHFSMaxVolumeNameChars + 1];
 u_int32_t drVolBkUp;
 u_int16_t drVSeqNum;
 u_int32_t drWrCnt;
 u_int32_t drXTClpSiz;
 u_int32_t drCTClpSiz;
 u_int16_t drNmRtDirs;
 u_int32_t drFilCnt;
 u_int32_t drDirCnt;
 u_int32_t drFndrInfo[8];
 u_int16_t drEmbedSigWord;
 HFSExtentDescriptor drEmbedExtent;
 u_int32_t drXTFlSize;
 HFSExtentRecord drXTExtRec;
 u_int32_t drCTFlSize;
 HFSExtentRecord drCTExtRec;
} __attribute__((aligned(2), packed));
typedef struct HFSMasterDirectoryBlock HFSMasterDirectoryBlock;
# 644 "/usr/include/hfs/hfs_format.h" 3 4
struct HFSPlusVolumeHeader {
 u_int16_t signature;
 u_int16_t version;
 u_int32_t attributes;
 u_int32_t lastMountedVersion;
 u_int32_t journalInfoBlock;

 u_int32_t createDate;
 u_int32_t modifyDate;
 u_int32_t backupDate;
 u_int32_t checkedDate;

 u_int32_t fileCount;
 u_int32_t folderCount;

 u_int32_t blockSize;
 u_int32_t totalBlocks;
 u_int32_t freeBlocks;

 u_int32_t nextAllocation;
 u_int32_t rsrcClumpSize;
 u_int32_t dataClumpSize;
 u_int32_t nextCatalogID;

 u_int32_t writeCount;
 u_int64_t encodingsBitmap;

 u_int8_t finderInfo[32];

 HFSPlusForkData allocationFile;
 HFSPlusForkData extentsFile;
 HFSPlusForkData catalogFile;
 HFSPlusForkData attributesFile;
 HFSPlusForkData startupFile;
} __attribute__((aligned(2), packed));
typedef struct HFSPlusVolumeHeader HFSPlusVolumeHeader;




enum BTreeKeyLimits{
 kMaxKeyLength = 520
};

union BTreeKey{
 u_int8_t length8;
 u_int16_t length16;
 u_int8_t rawData [kMaxKeyLength+2];
};
typedef union BTreeKey BTreeKey;


struct BTNodeDescriptor {
 u_int32_t fLink;
 u_int32_t bLink;
 int8_t kind;
 u_int8_t height;
 u_int16_t numRecords;
 u_int16_t reserved;
} __attribute__((aligned(2), packed));
typedef struct BTNodeDescriptor BTNodeDescriptor;


enum {
 kBTLeafNode = -1,
 kBTIndexNode = 0,
 kBTHeaderNode = 1,
 kBTMapNode = 2
};


struct BTHeaderRec {
 u_int16_t treeDepth;
 u_int32_t rootNode;
 u_int32_t leafRecords;
 u_int32_t firstLeafNode;
 u_int32_t lastLeafNode;
 u_int16_t nodeSize;
 u_int16_t maxKeyLength;
 u_int32_t totalNodes;
 u_int32_t freeNodes;
 u_int16_t reserved1;
 u_int32_t clumpSize;
 u_int8_t btreeType;
 u_int8_t keyCompareType;
 u_int32_t attributes;
 u_int32_t reserved3[16];
} __attribute__((aligned(2), packed));
typedef struct BTHeaderRec BTHeaderRec;


enum {
 kBTBadCloseMask = 0x00000001,
 kBTBigKeysMask = 0x00000002,
 kBTVariableIndexKeysMask = 0x00000004
};



enum {
 kHFSCaseFolding = 0xCF,
 kHFSBinaryCompare = 0xBC
};

# 1 "/usr/include/uuid/uuid.h" 1 3 4
# 42 "/usr/include/uuid/uuid.h" 3 4
typedef __darwin_uuid_t uuid_t;




typedef __darwin_uuid_string_t uuid_string_t;






extern "C" {


void uuid_clear(uuid_t uu);

int uuid_compare(const uuid_t uu1, const uuid_t uu2);

void uuid_copy(uuid_t dst, const uuid_t src);

void uuid_generate(uuid_t out);
void uuid_generate_random(uuid_t out);
void uuid_generate_time(uuid_t out);

int uuid_is_null(const uuid_t uu);

int uuid_parse(const uuid_string_t in, uuid_t uu);

void uuid_unparse(const uuid_t uu, uuid_string_t out);
void uuid_unparse_lower(const uuid_t uu, uuid_string_t out);
void uuid_unparse_upper(const uuid_t uu, uuid_string_t out);


}
# 749 "/usr/include/hfs/hfs_format.h" 2 3 4
# 760 "/usr/include/hfs/hfs_format.h" 3 4
struct JournalInfoBlock {
 u_int32_t flags;
     u_int32_t device_signature[8];
 u_int64_t offset;
 u_int64_t size;
 uuid_string_t ext_jnl_uuid;
 char machine_serial_num[48];
 char reserved[((32*sizeof(u_int32_t)) - sizeof(uuid_string_t) - 48)];
} __attribute__((aligned(2), packed));
typedef struct JournalInfoBlock JournalInfoBlock;

enum {
    kJIJournalInFSMask = 0x00000001,
    kJIJournalOnOtherDeviceMask = 0x00000002,
    kJIJournalNeedInitMask = 0x00000004
};
# 786 "/usr/include/hfs/hfs_format.h" 3 4
}
# 33 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/HFSVolumes.h" 2 3
# 41 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/HFSVolumes.h" 3
typedef UInt32 HFSCatalogNodeID;
# 207 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CarbonCore.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/AIFF.h" 1 3
# 31 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/AIFF.h" 3
#pragma pack(push, 2)

enum {
  AIFFID = 'AIFF',
  AIFCID = 'AIFC',
  FormatVersionID = 'FVER',
  CommonID = 'COMM',
  FORMID = 'FORM',
  SoundDataID = 'SSND',
  MarkerID = 'MARK',
  InstrumentID = 'INST',
  MIDIDataID = 'MIDI',
  AudioRecordingID = 'AESD',
  ApplicationSpecificID = 'APPL',
  CommentID = 'COMT',
  NameID = 'NAME',
  AuthorID = 'AUTH',
  CopyrightID = '(c) ',
  AnnotationID = 'ANNO'
};

enum {
  NoLooping = 0,
  ForwardLooping = 1,
  ForwardBackwardLooping = 2
};


enum {

  AIFCVersion1 = (uint32_t)0xA2805140
};







enum {

  NoneType = 'NONE',
  ACE2Type = 'ACE2',
  ACE8Type = 'ACE8',
  MACE3Type = 'MAC3',
  MACE6Type = 'MAC6'
};
# 86 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/AIFF.h" 3
typedef SInt16 MarkerIdType;
struct ChunkHeader {
  UInt32 ckID;
  SInt32 ckSize;
};
typedef struct ChunkHeader ChunkHeader;
struct ContainerChunk {
  UInt32 ckID;
  SInt32 ckSize;
  UInt32 formType;
};
typedef struct ContainerChunk ContainerChunk;
struct FormatVersionChunk {
  UInt32 ckID;
  SInt32 ckSize;
  UInt32 timestamp;
};
typedef struct FormatVersionChunk FormatVersionChunk;
typedef FormatVersionChunk * FormatVersionChunkPtr;
struct CommonChunk {
  UInt32 ckID;
  SInt32 ckSize;
  SInt16 numChannels;
  UInt32 numSampleFrames;
  SInt16 sampleSize;
  extended80 sampleRate;
};
typedef struct CommonChunk CommonChunk;
typedef CommonChunk * CommonChunkPtr;
struct ExtCommonChunk {
  UInt32 ckID;
  SInt32 ckSize;
  SInt16 numChannels;
  UInt32 numSampleFrames;
  SInt16 sampleSize;
  extended80 sampleRate;
  UInt32 compressionType;
  char compressionName[1];
};
typedef struct ExtCommonChunk ExtCommonChunk;
typedef ExtCommonChunk * ExtCommonChunkPtr;
struct SoundDataChunk {
  UInt32 ckID;
  SInt32 ckSize;
  UInt32 offset;
  UInt32 blockSize;
};
typedef struct SoundDataChunk SoundDataChunk;
typedef SoundDataChunk * SoundDataChunkPtr;
struct Marker {
  MarkerIdType id;
  UInt32 position;
  Str255 markerName;
};
typedef struct Marker Marker;
struct MarkerChunk {
  UInt32 ckID;
  SInt32 ckSize;
  UInt16 numMarkers;
  Marker Markers[1];
};
typedef struct MarkerChunk MarkerChunk;
typedef MarkerChunk * MarkerChunkPtr;
struct AIFFLoop {
  SInt16 playMode;
  MarkerIdType beginLoop;
  MarkerIdType endLoop;
};
typedef struct AIFFLoop AIFFLoop;
struct InstrumentChunk {
  UInt32 ckID;
  SInt32 ckSize;
  UInt8 baseFrequency;
  UInt8 detune;
  UInt8 lowFrequency;
  UInt8 highFrequency;
  UInt8 lowVelocity;
  UInt8 highVelocity;
  SInt16 gain;
  AIFFLoop sustainLoop;
  AIFFLoop releaseLoop;
};
typedef struct InstrumentChunk InstrumentChunk;
typedef InstrumentChunk * InstrumentChunkPtr;
struct MIDIDataChunk {
  UInt32 ckID;
  SInt32 ckSize;
  UInt8 MIDIdata[1];
};
typedef struct MIDIDataChunk MIDIDataChunk;
typedef MIDIDataChunk * MIDIDataChunkPtr;
struct AudioRecordingChunk {
  UInt32 ckID;
  SInt32 ckSize;
  UInt8 AESChannelStatus[24];
};
typedef struct AudioRecordingChunk AudioRecordingChunk;
typedef AudioRecordingChunk * AudioRecordingChunkPtr;
struct ApplicationSpecificChunk {
  UInt32 ckID;
  SInt32 ckSize;
  OSType applicationSignature;
  UInt8 data[1];
};
typedef struct ApplicationSpecificChunk ApplicationSpecificChunk;
typedef ApplicationSpecificChunk * ApplicationSpecificChunkPtr;
struct Comment {
  UInt32 timeStamp;
  MarkerIdType marker;
  UInt16 count;
  char text[1];
};
typedef struct Comment Comment;
struct CommentsChunk {
  UInt32 ckID;
  SInt32 ckSize;
  UInt16 numComments;
  Comment comments[1];
};
typedef struct CommentsChunk CommentsChunk;
typedef CommentsChunk * CommentsChunkPtr;
struct TextChunk {
  UInt32 ckID;
  SInt32 ckSize;
  char text[1];
};
typedef struct TextChunk TextChunk;
typedef TextChunk * TextChunkPtr;

#pragma pack(pop)
# 211 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CarbonCore.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextEncodingPlugin.h" 1 3
# 39 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextEncodingPlugin.h" 3
#pragma pack(push, 2)
# 52 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextEncodingPlugin.h" 3
enum {
  kTECAvailableEncodingsResType = 'cven',
  kTECAvailableSniffersResType = 'cvsf',
  kTECSubTextEncodingsResType = 'cvsb',
  kTECConversionInfoResType = 'cvif',
  kTECMailEncodingsResType = 'cvml',
  kTECWebEncodingsResType = 'cvwb',
  kTECInternetNamesResType = 'cvmm'
};

enum {
  kTECPluginType = 'ecpg',
  kTECPluginCreator = 'encv',
  kTECPluginOneToOne = 'otoo',
  kTECPluginOneToMany = 'otom',
  kTECPluginManyToOne = 'mtoo',
  kTECPluginSniffObj = 'snif'
};

enum {
  verUnspecified = 32767,
  kTECResourceID = 128
};
# 84 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextEncodingPlugin.h" 3
struct TextEncodingRec {
  UInt32 base;
  UInt32 variant;
  UInt32 format;
};
typedef struct TextEncodingRec TextEncodingRec;

struct TECEncodingsListRec {
  UInt32 count;
  TextEncodingRec encodings;
};
typedef struct TECEncodingsListRec TECEncodingsListRec;
typedef TECEncodingsListRec * TECEncodingsListPtr;
typedef TECEncodingsListPtr * TECEncodingsListHandle;

struct TECSubTextEncodingRec {
  UInt32 offset;
  TextEncodingRec searchEncoding;
  UInt32 count;
  TextEncodingRec subEncodings;
};
typedef struct TECSubTextEncodingRec TECSubTextEncodingRec;
struct TECSubTextEncodingsRec {
  UInt32 count;
  TECSubTextEncodingRec subTextEncodingRec;
};
typedef struct TECSubTextEncodingsRec TECSubTextEncodingsRec;
typedef TECSubTextEncodingsRec * TECSubTextEncodingsPtr;
typedef TECSubTextEncodingsPtr * TECSubTextEncodingsHandle;

struct TECEncodingPairRec {
  TextEncodingRec source;
  TextEncodingRec dest;
};
typedef struct TECEncodingPairRec TECEncodingPairRec;
struct TECEncodingPairs {
  TECEncodingPairRec encodingPair;
  UInt32 flags;
  UInt32 speed;
};
typedef struct TECEncodingPairs TECEncodingPairs;
struct TECEncodingPairsRec {
  UInt32 count;
  TECEncodingPairs encodingPairs;
};
typedef struct TECEncodingPairsRec TECEncodingPairsRec;
typedef TECEncodingPairsRec * TECEncodingPairsPtr;
typedef TECEncodingPairsPtr * TECEncodingPairsHandle;

struct TECLocaleListToEncodingListRec {
  UInt32 offset;
  UInt32 count;
  RegionCode locales;

};
typedef struct TECLocaleListToEncodingListRec TECLocaleListToEncodingListRec;
typedef TECLocaleListToEncodingListRec * TECLocaleListToEncodingListPtr;
struct TECLocaleToEncodingsListRec {
  UInt32 count;
  TECLocaleListToEncodingListRec localeListToEncodingList;
};
typedef struct TECLocaleToEncodingsListRec TECLocaleToEncodingsListRec;
typedef TECLocaleToEncodingsListRec * TECLocaleToEncodingsListPtr;
typedef TECLocaleToEncodingsListPtr * TECLocaleToEncodingsListHandle;

struct TECInternetNameRec {
  UInt32 offset;
  TextEncodingRec searchEncoding;
  UInt8 encodingNameLength;
  UInt8 encodingName[1];
};
typedef struct TECInternetNameRec TECInternetNameRec;
struct TECInternetNamesRec {
  UInt32 count;
  TECInternetNameRec InternetNames;
};
typedef struct TECInternetNamesRec TECInternetNamesRec;
typedef TECInternetNamesRec * TECInternetNamesPtr;
typedef TECInternetNamesPtr * TECInternetNamesHandle;

struct TECBufferContextRec {
  ConstTextPtr textInputBuffer;
  ConstTextPtr textInputBufferEnd;
  TextPtr textOutputBuffer;
  TextPtr textOutputBufferEnd;

  ConstTextEncodingRunPtr encodingInputBuffer;
  ConstTextEncodingRunPtr encodingInputBufferEnd;
  TextEncodingRunPtr encodingOutputBuffer;
  TextEncodingRunPtr encodingOutputBufferEnd;
};
typedef struct TECBufferContextRec TECBufferContextRec;
struct TECPluginStateRec {

  UInt8 state1;
  UInt8 state2;
  UInt8 state3;
  UInt8 state4;

  UInt32 longState1;
  UInt32 longState2;
  UInt32 longState3;
  UInt32 longState4;
};
typedef struct TECPluginStateRec TECPluginStateRec;
struct TECConverterContextRec {


  Ptr pluginRec;
  TextEncoding sourceEncoding;
  TextEncoding destEncoding;
  UInt32 reserved1;
  UInt32 reserved2;
  TECBufferContextRec bufferContext;

  URefCon contextRefCon;
  ProcPtr conversionProc;
  ProcPtr flushProc;
  ProcPtr clearContextInfoProc;
  UInt32 options1;
  UInt32 options2;
  TECPluginStateRec pluginState;
};
typedef struct TECConverterContextRec TECConverterContextRec;
struct TECSnifferContextRec {

  Ptr pluginRec;
  TextEncoding encoding;
  ItemCount maxErrors;
  ItemCount maxFeatures;
  ConstTextPtr textInputBuffer;
  ConstTextPtr textInputBufferEnd;
  ItemCount numFeatures;
  ItemCount numErrors;

  URefCon contextRefCon;
  ProcPtr sniffProc;
  ProcPtr clearContextInfoProc;
  TECPluginStateRec pluginState;
};
typedef struct TECSnifferContextRec TECSnifferContextRec;






typedef OSStatus ( * TECPluginNewEncodingConverterPtr)(TECObjectRef *newEncodingConverter, TECConverterContextRec *plugContext, TextEncoding inputEncoding, TextEncoding outputEncoding);
typedef OSStatus ( * TECPluginClearContextInfoPtr)(TECObjectRef encodingConverter, TECConverterContextRec *plugContext);
typedef OSStatus ( * TECPluginConvertTextEncodingPtr)(TECObjectRef encodingConverter, TECConverterContextRec *plugContext);
typedef OSStatus ( * TECPluginFlushConversionPtr)(TECObjectRef encodingConverter, TECConverterContextRec *plugContext);
typedef OSStatus ( * TECPluginDisposeEncodingConverterPtr)(TECObjectRef newEncodingConverter, TECConverterContextRec *plugContext);
typedef OSStatus ( * TECPluginNewEncodingSnifferPtr)(TECSnifferObjectRef *encodingSniffer, TECSnifferContextRec *snifContext, TextEncoding inputEncoding);
typedef OSStatus ( * TECPluginClearSnifferContextInfoPtr)(TECSnifferObjectRef encodingSniffer, TECSnifferContextRec *snifContext);
typedef OSStatus ( * TECPluginSniffTextEncodingPtr)(TECSnifferObjectRef encodingSniffer, TECSnifferContextRec *snifContext);
typedef OSStatus ( * TECPluginDisposeEncodingSnifferPtr)(TECSnifferObjectRef encodingSniffer, TECSnifferContextRec *snifContext);
typedef OSStatus ( * TECPluginGetCountAvailableTextEncodingsPtr)(TextEncoding *availableEncodings, ItemCount maxAvailableEncodings, ItemCount *actualAvailableEncodings);
typedef OSStatus ( * TECPluginGetCountAvailableTextEncodingPairsPtr)(TECConversionInfo *availableEncodings, ItemCount maxAvailableEncodings, ItemCount *actualAvailableEncodings);
typedef OSStatus ( * TECPluginGetCountDestinationTextEncodingsPtr)(TextEncoding inputEncoding, TextEncoding *destinationEncodings, ItemCount maxDestinationEncodings, ItemCount *actualDestinationEncodings);
typedef OSStatus ( * TECPluginGetCountSubTextEncodingsPtr)(TextEncoding inputEncoding, TextEncoding subEncodings[], ItemCount maxSubEncodings, ItemCount *actualSubEncodings);
typedef OSStatus ( * TECPluginGetCountAvailableSniffersPtr)(TextEncoding *availableEncodings, ItemCount maxAvailableEncodings, ItemCount *actualAvailableEncodings);
typedef OSStatus ( * TECPluginGetTextEncodingInternetNamePtr)(TextEncoding textEncoding, Str255 encodingName);
typedef OSStatus ( * TECPluginGetTextEncodingFromInternetNamePtr)(TextEncoding *textEncoding, ConstStr255Param encodingName);
typedef OSStatus ( * TECPluginGetCountWebEncodingsPtr)(TextEncoding *availableEncodings, ItemCount maxAvailableEncodings, ItemCount *actualAvailableEncodings);
typedef OSStatus ( * TECPluginGetCountMailEncodingsPtr)(TextEncoding *availableEncodings, ItemCount maxAvailableEncodings, ItemCount *actualAvailableEncodings);






enum {
  kTECPluginDispatchTableVersion1 = 0x00010000,
  kTECPluginDispatchTableVersion1_1 = 0x00010001,
  kTECPluginDispatchTableVersion1_2 = 0x00010002,
  kTECPluginDispatchTableCurrentVersion = kTECPluginDispatchTableVersion1_2
};

struct TECPluginDispatchTable {

  TECPluginVersion version;
  TECPluginVersion compatibleVersion;
  TECPluginSignature PluginID;

  TECPluginNewEncodingConverterPtr PluginNewEncodingConverter;
  TECPluginClearContextInfoPtr PluginClearContextInfo;
  TECPluginConvertTextEncodingPtr PluginConvertTextEncoding;
  TECPluginFlushConversionPtr PluginFlushConversion;
  TECPluginDisposeEncodingConverterPtr PluginDisposeEncodingConverter;

  TECPluginNewEncodingSnifferPtr PluginNewEncodingSniffer;
  TECPluginClearSnifferContextInfoPtr PluginClearSnifferContextInfo;
  TECPluginSniffTextEncodingPtr PluginSniffTextEncoding;
  TECPluginDisposeEncodingSnifferPtr PluginDisposeEncodingSniffer;

  TECPluginGetCountAvailableTextEncodingsPtr PluginGetCountAvailableTextEncodings;
  TECPluginGetCountAvailableTextEncodingPairsPtr PluginGetCountAvailableTextEncodingPairs;
  TECPluginGetCountDestinationTextEncodingsPtr PluginGetCountDestinationTextEncodings;
  TECPluginGetCountSubTextEncodingsPtr PluginGetCountSubTextEncodings;
  TECPluginGetCountAvailableSniffersPtr PluginGetCountAvailableSniffers;
  TECPluginGetCountWebEncodingsPtr PluginGetCountWebTextEncodings;
  TECPluginGetCountMailEncodingsPtr PluginGetCountMailTextEncodings;

  TECPluginGetTextEncodingInternetNamePtr PluginGetTextEncodingInternetName;
  TECPluginGetTextEncodingFromInternetNamePtr PluginGetTextEncodingFromInternetName;

};
typedef struct TECPluginDispatchTable TECPluginDispatchTable;
# 301 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/TextEncodingPlugin.h" 3
typedef TECPluginDispatchTable * ( * TECPluginGetPluginDispatchTablePtr)(void);






#pragma pack(pop)
# 215 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CarbonCore.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FSEvents.h" 1 3
# 28 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FSEvents.h" 3
# 1 "/usr/include/Block.h" 1 3 4
# 23 "/usr/include/Block.h" 3 4
extern "C" {





extern "C" void *_Block_copy(const void *aBlock);


extern "C" void _Block_release(const void *aBlock);


}
# 29 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FSEvents.h" 2 3
# 40 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FSEvents.h" 3
extern "C" {


#pragma pack(push, 2)
# 196 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FSEvents.h" 3
typedef UInt32 FSEventStreamCreateFlags;
# 205 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FSEvents.h" 3
enum {




  kFSEventStreamCreateFlagNone = 0x00000000,







  kFSEventStreamCreateFlagUseCFTypes = 0x00000001,
# 237 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FSEvents.h" 3
  kFSEventStreamCreateFlagNoDefer = 0x00000002,
# 254 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FSEvents.h" 3
  kFSEventStreamCreateFlagWatchRoot = 0x00000004,
  kFSEventStreamCreateFlagIgnoreSelf = 0x00000008
};
# 265 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FSEvents.h" 3
typedef UInt32 FSEventStreamEventFlags;







enum {





  kFSEventStreamEventFlagNone = 0x00000000,
# 294 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FSEvents.h" 3
  kFSEventStreamEventFlagMustScanSubDirs = 0x00000001,
# 309 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FSEvents.h" 3
  kFSEventStreamEventFlagUserDropped = 0x00000002,
  kFSEventStreamEventFlagKernelDropped = 0x00000004,







  kFSEventStreamEventFlagEventIdsWrapped = 0x00000008,
# 331 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FSEvents.h" 3
  kFSEventStreamEventFlagHistoryDone = 0x00000010,
# 344 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FSEvents.h" 3
  kFSEventStreamEventFlagRootChanged = 0x00000020,
# 359 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FSEvents.h" 3
  kFSEventStreamEventFlagMount = 0x00000040,
# 372 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FSEvents.h" 3
  kFSEventStreamEventFlagUnmount = 0x00000080
};
# 385 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FSEvents.h" 3
typedef UInt64 FSEventStreamEventId;

enum {
    kFSEventStreamEventIdSinceNow = 0xFFFFFFFFFFFFFFFFULL
};
# 398 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FSEvents.h" 3
typedef struct __FSEventStream* FSEventStreamRef;







typedef const struct __FSEventStream* ConstFSEventStreamRef;
# 415 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FSEvents.h" 3
struct FSEventStreamContext {




  CFIndex version;
# 431 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FSEvents.h" 3
  void * info;




  CFAllocatorRetainCallBack retain;





  CFAllocatorReleaseCallBack release;






  CFAllocatorCopyDescriptionCallBack copyDescription;
};
typedef struct FSEventStreamContext FSEventStreamContext;
# 515 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FSEvents.h" 3
typedef void ( * FSEventStreamCallback)(ConstFSEventStreamRef streamRef, void *clientCallBackInfo, size_t numEvents, void *eventPaths, const FSEventStreamEventFlags eventFlags[], const FSEventStreamEventId eventIds[]);
# 580 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FSEvents.h" 3
extern FSEventStreamRef
FSEventStreamCreate(
  CFAllocatorRef allocator,
  FSEventStreamCallback callback,
  FSEventStreamContext * context,
  CFArrayRef pathsToWatch,
  FSEventStreamEventId sinceWhen,
  CFTimeInterval latency,
  FSEventStreamCreateFlags flags) ;
# 663 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FSEvents.h" 3
extern FSEventStreamRef
FSEventStreamCreateRelativeToDevice(
  CFAllocatorRef allocator,
  FSEventStreamCallback callback,
  FSEventStreamContext * context,
  dev_t deviceToWatch,
  CFArrayRef pathsToWatchRelativeToDevice,
  FSEventStreamEventId sinceWhen,
  CFTimeInterval latency,
  FSEventStreamCreateFlags flags) ;
# 700 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FSEvents.h" 3
extern FSEventStreamEventId
FSEventStreamGetLatestEventId(ConstFSEventStreamRef streamRef) ;
# 724 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FSEvents.h" 3
extern dev_t
FSEventStreamGetDeviceBeingWatched(ConstFSEventStreamRef streamRef) ;
# 749 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FSEvents.h" 3
extern CFArrayRef
FSEventStreamCopyPathsBeingWatched(ConstFSEventStreamRef streamRef) ;
# 769 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FSEvents.h" 3
extern FSEventStreamEventId
FSEventsGetCurrentEventId(void) ;
# 805 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FSEvents.h" 3
extern CFUUIDRef
FSEventsCopyUUIDForDevice(dev_t dev) ;
# 842 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FSEvents.h" 3
extern FSEventStreamEventId
FSEventsGetLastEventIdForDeviceBeforeTime(
  dev_t dev,
  CFAbsoluteTime time) ;
# 871 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FSEvents.h" 3
extern Boolean
FSEventsPurgeEventsForDeviceUpToEventId(
  dev_t dev,
  FSEventStreamEventId eventId) ;
# 897 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FSEvents.h" 3
extern void
FSEventStreamRetain(FSEventStreamRef streamRef) ;
# 919 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FSEvents.h" 3
extern void
FSEventStreamRelease(FSEventStreamRef streamRef) ;
# 955 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FSEvents.h" 3
extern void
FSEventStreamScheduleWithRunLoop(
  FSEventStreamRef streamRef,
  CFRunLoopRef runLoop,
  CFStringRef runLoopMode) ;
# 985 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FSEvents.h" 3
extern void
FSEventStreamUnscheduleFromRunLoop(
  FSEventStreamRef streamRef,
  CFRunLoopRef runLoop,
  CFStringRef runLoopMode) ;
# 1026 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FSEvents.h" 3
extern void
FSEventStreamSetDispatchQueue(
  FSEventStreamRef streamRef,
  dispatch_queue_t q) ;
# 1054 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FSEvents.h" 3
extern void
FSEventStreamInvalidate(FSEventStreamRef streamRef) ;
# 1087 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FSEvents.h" 3
extern Boolean
FSEventStreamStart(FSEventStreamRef streamRef) ;
# 1117 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FSEvents.h" 3
extern FSEventStreamEventId
FSEventStreamFlushAsync(FSEventStreamRef streamRef) ;
# 1144 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FSEvents.h" 3
extern void
FSEventStreamFlushSync(FSEventStreamRef streamRef) ;
# 1169 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FSEvents.h" 3
extern void
FSEventStreamStop(FSEventStreamRef streamRef) ;
# 1193 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FSEvents.h" 3
extern void
FSEventStreamShow(ConstFSEventStreamRef streamRef) ;
# 1213 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/FSEvents.h" 3
extern CFStringRef
FSEventStreamCopyDescription(ConstFSEventStreamRef streamRef) ;







#pragma pack(pop)


}
# 219 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/CarbonCore.h" 2 3
# 21 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AE.h" 2 3




# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 1 3
# 31 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern "C" {


#pragma pack(push, 2)


enum {
  typeBoolean = 'bool',
  typeChar = 'TEXT'
};





enum {
  typeStyledUnicodeText = 'sutx',
  typeEncodedString = 'encs',
  typeUnicodeText = 'utxt',
  typeCString = 'cstr',
  typePString = 'pstr'
};




enum {
  typeUTF16ExternalRepresentation = 'ut16',
  typeUTF8Text = 'utf8'
};


enum {
  typeSInt16 = 'shor',
  typeUInt16 = 'ushr',
  typeSInt32 = 'long',
  typeUInt32 = 'magn',
  typeSInt64 = 'comp',
  typeUInt64 = 'ucom',
  typeIEEE32BitFloatingPoint = 'sing',
  typeIEEE64BitFloatingPoint = 'doub',
  type128BitFloatingPoint = 'ldbl',
  typeDecimalStruct = 'decm'
};
# 118 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
enum {
  typeAEList = 'list',
  typeAERecord = 'reco',
  typeAppleEvent = 'aevt',
  typeEventRecord = 'evrc',
  typeTrue = 'true',
  typeFalse = 'fals',
  typeAlias = 'alis',
  typeEnumerated = 'enum',
  typeType = 'type',
  typeAppParameters = 'appa',
  typeProperty = 'prop',
  typeFSRef = 'fsrf',
  typeFileURL = 'furl',
  typeBookmarkData = 'bmrk',
  typeKeyword = 'keyw',
  typeSectionH = 'sect',
  typeWildCard = '****',
  typeApplSignature = 'sign',
  typeQDRectangle = 'qdrt',
  typeFixed = 'fixd',
  typeProcessSerialNumber = 'psn ',
  typeApplicationURL = 'aprl',
  typeNull = 'null'
};
# 156 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
enum {
  typeCFAttributedStringRef = 'cfas',
  typeCFMutableAttributedStringRef = 'cfaa',
  typeCFStringRef = 'cfst',
  typeCFMutableStringRef = 'cfms',
  typeCFArrayRef = 'cfar',
  typeCFMutableArrayRef = 'cfma',
  typeCFDictionaryRef = 'cfdc',
  typeCFMutableDictionaryRef = 'cfmd',
  typeCFNumberRef = 'cfnb',
  typeCFBooleanRef = 'cftf',
  typeCFTypeRef = 'cfty'
};


enum {
  typeKernelProcessID = 'kpid',
  typeMachPort = 'port'
};


enum {
  typeApplicationBundleID = 'bund'
};


enum {
  keyTransactionIDAttr = 'tran',
  keyReturnIDAttr = 'rtid',
  keyEventClassAttr = 'evcl',
  keyEventIDAttr = 'evid',
  keyAddressAttr = 'addr',
  keyOptionalKeywordAttr = 'optk',
  keyTimeoutAttr = 'timo',
  keyInteractLevelAttr = 'inte',
  keyEventSourceAttr = 'esrc',
  keyMissedKeywordAttr = 'miss',
  keyOriginalAddressAttr = 'from',
  keyAcceptTimeoutAttr = 'actm',
  keyReplyRequestedAttr = 'repq',
  keySenderEUIDAttr = 'seid',
  keySenderEGIDAttr = 'sgid',
  keySenderUIDAttr = 'uids',
  keySenderGIDAttr = 'gids',
  keySenderPIDAttr = 'spid'
};


enum {
  kAEDebugPOSTHeader = (1 << 0),
  kAEDebugReplyHeader = (1 << 1),
  kAEDebugXMLRequest = (1 << 2),
  kAEDebugXMLResponse = (1 << 3),
  kAEDebugXMLDebugAll = (int)0xFFFFFFFF
};





enum {
  kSOAP1999Schema = 'ss99',
  kSOAP2001Schema = 'ss01'
};

enum {

  keyUserNameAttr = 'unam',
  keyUserPasswordAttr = 'pass',
  keyDisableAuthenticationAttr = 'auth',


  keyXMLDebuggingAttr = 'xdbg',

  kAERPCClass = 'rpc ',
  kAEXMLRPCScheme = 'RPC2',
  kAESOAPScheme = 'SOAP',
  kAESharedScriptHandler = 'wscp',

  keyRPCMethodName = 'meth',
  keyRPCMethodParam = 'parm',
  keyRPCMethodParamOrder = '/ord',

  keyAEPOSTHeaderData = 'phed',
  keyAEReplyHeaderData = 'rhed',
  keyAEXMLRequestData = 'xreq',
  keyAEXMLReplyData = 'xrep',

  keyAdditionalHTTPHeaders = 'ahed',
  keySOAPAction = 'sact',
  keySOAPMethodNameSpace = 'mspc',
  keySOAPMethodNameSpaceURI = 'mspu',
  keySOAPSchemaVersion = 'ssch'
};
# 266 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
enum {
  keySOAPStructureMetaData = '/smd',
  keySOAPSMDNamespace = 'ssns',
  keySOAPSMDNamespaceURI = 'ssnu',
  keySOAPSMDType = 'sstp'
};






enum {

  kAEUseHTTPProxyAttr = 'xupr',

  kAEHTTPProxyPortAttr = 'xhtp',
  kAEHTTPProxyHostAttr = 'xhth'
};






enum {
  kAESocks4Protocol = 4,
  kAESocks5Protocol = 5
};

enum {
  kAEUseSocksAttr = 'xscs',

  kAESocksProxyAttr = 'xsok',

  kAESocksHostAttr = 'xshs',
  kAESocksPortAttr = 'xshp',
  kAESocksUserAttr = 'xshu',

  kAESocksPasswordAttr = 'xshw'
};



enum {
  kAEDescListFactorNone = 0,
  kAEDescListFactorType = 4,
  kAEDescListFactorTypeAndSize = 8
};


enum {

  kAutoGenerateReturnID = -1,

  kAnyTransactionID = 0
};


typedef ResType DescType;
typedef FourCharCode AEKeyword;

typedef struct OpaqueAEDataStorageType* AEDataStorageType;




typedef AEDataStorageType * AEDataStorage;
struct AEDesc {
  DescType descriptorType;
  AEDataStorage dataHandle;
};
typedef struct AEDesc AEDesc;
typedef AEDesc * AEDescPtr;
struct AEKeyDesc {
  AEKeyword descKey;
  AEDesc descContent;
};
typedef struct AEKeyDesc AEKeyDesc;


typedef AEDesc AEDescList;

typedef AEDescList AERecord;

typedef AEDesc AEAddressDesc;

typedef AERecord AppleEvent;
typedef AppleEvent * AppleEventPtr;
typedef SInt16 AEReturnID;
typedef SInt32 AETransactionID;
typedef FourCharCode AEEventClass;
typedef FourCharCode AEEventID;
typedef SInt8 AEArrayType;
enum {
  kAEDataArray = 0,
  kAEPackedArray = 1,
  kAEDescArray = 3,
  kAEKeyDescArray = 4
};


enum {
  kAEHandleArray = 2
};

union AEArrayData {
  SInt16 kAEDataArray[1];
  char kAEPackedArray[1];
  Handle kAEHandleArray[1];
  AEDesc kAEDescArray[1];
  AEKeyDesc kAEKeyDescArray[1];
};
typedef union AEArrayData AEArrayData;
typedef AEArrayData * AEArrayDataPointer;




typedef SInt16 AESendPriority;
enum {
  kAENormalPriority = 0x00000000,
  kAEHighPriority = 0x00000001
};


typedef SInt32 AESendMode;
enum {
  kAENoReply = 0x00000001,
  kAEQueueReply = 0x00000002,
  kAEWaitReply = 0x00000003,
  kAEDontReconnect = 0x00000080,
  kAEWantReceipt = 0x00000200,
  kAENeverInteract = 0x00000010,
  kAECanInteract = 0x00000020,
  kAEAlwaysInteract = 0x00000030,
  kAECanSwitchLayer = 0x00000040,
  kAEDontRecord = 0x00001000,
  kAEDontExecute = 0x00002000,
  kAEProcessNonReplyEvents = 0x00008000
};



enum {
  kAEDefaultTimeout = -1,
  kNoTimeOut = -2
};





typedef OSErr ( * AECoerceDescProcPtr)(const AEDesc *fromDesc, DescType toType, SRefCon handlerRefcon, AEDesc *toDesc);
typedef OSErr ( * AECoercePtrProcPtr)(DescType typeCode, const void *dataPtr, Size dataSize, DescType toType, SRefCon handlerRefcon, AEDesc *result);
typedef AECoerceDescProcPtr AECoerceDescUPP;
typedef AECoercePtrProcPtr AECoercePtrUPP;
# 431 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern AECoerceDescUPP
NewAECoerceDescUPP(AECoerceDescProcPtr userRoutine) ;
# 442 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern AECoercePtrUPP
NewAECoercePtrUPP(AECoercePtrProcPtr userRoutine) ;
# 453 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern void
DisposeAECoerceDescUPP(AECoerceDescUPP userUPP) ;
# 464 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern void
DisposeAECoercePtrUPP(AECoercePtrUPP userUPP) ;
# 475 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern OSErr
InvokeAECoerceDescUPP(
  const AEDesc * fromDesc,
  DescType toType,
  SRefCon handlerRefcon,
  AEDesc * toDesc,
  AECoerceDescUPP userUPP) ;
# 491 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern OSErr
InvokeAECoercePtrUPP(
  DescType typeCode,
  const void * dataPtr,
  Size dataSize,
  DescType toType,
  SRefCon handlerRefcon,
  AEDesc * result,
  AECoercePtrUPP userUPP) ;



    inline AECoerceDescUPP NewAECoerceDescUPP(AECoerceDescProcPtr userRoutine) { return userRoutine; }
    inline AECoercePtrUPP NewAECoercePtrUPP(AECoercePtrProcPtr userRoutine) { return userRoutine; }
    inline void DisposeAECoerceDescUPP(AECoerceDescUPP) { }
    inline void DisposeAECoercePtrUPP(AECoercePtrUPP) { }
    inline OSErr InvokeAECoerceDescUPP(const AEDesc * fromDesc, DescType toType, SRefCon handlerRefcon, AEDesc * toDesc, AECoerceDescUPP userUPP) { return (*userUPP)(fromDesc, toType, handlerRefcon, toDesc); }
    inline OSErr InvokeAECoercePtrUPP(DescType typeCode, const void * dataPtr, Size dataSize, DescType toType, SRefCon handlerRefcon, AEDesc * result, AECoercePtrUPP userUPP) { return (*userUPP)(typeCode, dataPtr, dataSize, toType, handlerRefcon, result); }
# 523 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
typedef AECoerceDescUPP AECoercionHandlerUPP;
# 589 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern OSErr
AEInstallCoercionHandler(
  DescType fromType,
  DescType toType,
  AECoercionHandlerUPP handler,
  SRefCon handlerRefcon,
  Boolean fromTypeIsDesc,
  Boolean isSysHandler) ;
# 635 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern OSErr
AERemoveCoercionHandler(
  DescType fromType,
  DescType toType,
  AECoercionHandlerUPP handler,
  Boolean isSysHandler) ;
# 690 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern OSErr
AEGetCoercionHandler(
  DescType fromType,
  DescType toType,
  AECoercionHandlerUPP * handler,
  SRefCon * handlerRefcon,
  Boolean * fromTypeIsDesc,
  Boolean isSysHandler) ;
# 740 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern OSErr
AECoercePtr(
  DescType typeCode,
  const void * dataPtr,
  Size dataSize,
  DescType toType,
  AEDesc * result) ;
# 780 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern OSErr
AECoerceDesc(
  const AEDesc * theAEDesc,
  DescType toType,
  AEDesc * result) ;
# 816 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern void
AEInitializeDesc(AEDesc * desc) ;




    inline void AEInitializeDescInline(AEDesc* d) { d->descriptorType = typeNull; d->dataHandle = __null; }
# 871 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern OSErr
AECreateDesc(
  DescType typeCode,
  const void * dataPtr,
  Size dataSize,
  AEDesc * result) ;
# 913 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern OSErr
AEDisposeDesc(AEDesc * theAEDesc) ;
# 957 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern OSErr
AEDuplicateDesc(
  const AEDesc * theAEDesc,
  AEDesc * result) ;



typedef void ( * AEDisposeExternalProcPtr)(const void *dataPtr, Size dataLength, SRefCon refcon);
typedef AEDisposeExternalProcPtr AEDisposeExternalUPP;
# 1038 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern OSStatus
AECreateDescFromExternalPtr(
  OSType descriptorType,
  const void * dataPtr,
  Size dataLength,
  AEDisposeExternalUPP disposeCallback,
  SRefCon disposeRefcon,
  AEDesc * theDesc) ;
# 1094 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern OSErr
AECreateList(
  const void * factoringPtr,
  Size factoredSize,
  Boolean isRecord,
  AEDescList * resultList) ;
# 1126 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern OSErr
AECountItems(
  const AEDescList * theAEDescList,
  long * theCount) ;
# 1171 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern OSErr
AEPutPtr(
  AEDescList * theAEDescList,
  long index,
  DescType typeCode,
  const void * dataPtr,
  Size dataSize) ;
# 1213 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern OSErr
AEPutDesc(
  AEDescList * theAEDescList,
  long index,
  const AEDesc * theAEDesc) ;
# 1290 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern OSErr
AEGetNthPtr(
  const AEDescList * theAEDescList,
  long index,
  DescType desiredType,
  AEKeyword * theAEKeyword,
  DescType * typeCode,
  void * dataPtr,
  Size maximumSize,
  Size * actualSize) ;
# 1356 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern OSErr
AEGetNthDesc(
  const AEDescList * theAEDescList,
  long index,
  DescType desiredType,
  AEKeyword * theAEKeyword,
  AEDesc * result) ;
# 1401 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern OSErr
AESizeOfNthItem(
  const AEDescList * theAEDescList,
  long index,
  DescType * typeCode,
  Size * dataSize) ;
# 1469 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern OSErr
AEGetArray(
  const AEDescList * theAEDescList,
  AEArrayType arrayType,
  AEArrayDataPointer arrayPtr,
  Size maximumSize,
  DescType * itemType,
  Size * itemSize,
  long * itemCount) ;
# 1532 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern OSErr
AEPutArray(
  AEDescList * theAEDescList,
  AEArrayType arrayType,
  const AEArrayData * arrayPtr,
  DescType itemType,
  Size itemSize,
  long itemCount) ;
# 1570 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern OSErr
AEDeleteItem(
  AEDescList * theAEDescList,
  long index) ;
# 1597 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern Boolean
AECheckIsRecord(const AEDesc * theDesc) ;
# 1697 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern OSErr
AECreateAppleEvent(
  AEEventClass theAEEventClass,
  AEEventID theAEEventID,
  const AEAddressDesc * target,
  AEReturnID returnID,
  AETransactionID transactionID,
  AppleEvent * result) ;
# 1749 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern OSErr
AEPutParamPtr(
  AppleEvent * theAppleEvent,
  AEKeyword theAEKeyword,
  DescType typeCode,
  const void * dataPtr,
  Size dataSize) ;
# 1787 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern OSErr
AEPutParamDesc(
  AppleEvent * theAppleEvent,
  AEKeyword theAEKeyword,
  const AEDesc * theAEDesc) ;
# 1882 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern OSErr
AEGetParamPtr(
  const AppleEvent * theAppleEvent,
  AEKeyword theAEKeyword,
  DescType desiredType,
  DescType * actualType,
  void * dataPtr,
  Size maximumSize,
  Size * actualSize) ;
# 1947 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern OSErr
AEGetParamDesc(
  const AppleEvent * theAppleEvent,
  AEKeyword theAEKeyword,
  DescType desiredType,
  AEDesc * result) ;
# 1987 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern OSErr
AESizeOfParam(
  const AppleEvent * theAppleEvent,
  AEKeyword theAEKeyword,
  DescType * typeCode,
  Size * dataSize) ;
# 2019 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern OSErr
AEDeleteParam(
  AppleEvent * theAppleEvent,
  AEKeyword theAEKeyword) ;
# 2109 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern OSErr
AEGetAttributePtr(
  const AppleEvent * theAppleEvent,
  AEKeyword theAEKeyword,
  DescType desiredType,
  DescType * typeCode,
  void * dataPtr,
  Size maximumSize,
  Size * actualSize) ;
# 2170 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern OSErr
AEGetAttributeDesc(
  const AppleEvent * theAppleEvent,
  AEKeyword theAEKeyword,
  DescType desiredType,
  AEDesc * result) ;
# 2209 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern OSErr
AESizeOfAttribute(
  const AppleEvent * theAppleEvent,
  AEKeyword theAEKeyword,
  DescType * typeCode,
  Size * dataSize) ;
# 2253 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern OSErr
AEPutAttributePtr(
  AppleEvent * theAppleEvent,
  AEKeyword theAEKeyword,
  DescType typeCode,
  const void * dataPtr,
  Size dataSize) ;
# 2302 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern OSErr
AEPutAttributeDesc(
  AppleEvent * theAppleEvent,
  AEKeyword theAEKeyword,
  const AEDesc * theAEDesc) ;
# 2342 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern Size
AESizeOfFlattenedDesc(const AEDesc * theAEDesc) ;
# 2389 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern OSStatus
AEFlattenDesc(
  const AEDesc * theAEDesc,
  Ptr buffer,
  Size bufferSize,
  Size * actualSize) ;
# 2426 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern OSStatus
AEUnflattenDesc(
  const void * buffer,
  AEDesc * result) ;
# 2471 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern OSErr
AEGetDescData(
  const AEDesc * theAEDesc,
  void * dataPtr,
  Size maximumSize) ;
# 2498 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern Size
AEGetDescDataSize(const AEDesc * theAEDesc) ;
# 2532 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern OSErr
AEReplaceDescData(
  DescType typeCode,
  const void * dataPtr,
  Size dataSize,
  AEDesc * theAEDesc) ;
# 2577 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern OSStatus
AEGetDescDataRange(
  const AEDesc * dataDesc,
  void * buffer,
  Size offset,
  Size length) ;





typedef OSErr ( * AEEventHandlerProcPtr)(const AppleEvent *theAppleEvent, AppleEvent *reply, SRefCon handlerRefcon);
typedef AEEventHandlerProcPtr AEEventHandlerUPP;
# 2598 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern AEDisposeExternalUPP
NewAEDisposeExternalUPP(AEDisposeExternalProcPtr userRoutine) ;
# 2609 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern AEEventHandlerUPP
NewAEEventHandlerUPP(AEEventHandlerProcPtr userRoutine) ;
# 2620 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern void
DisposeAEDisposeExternalUPP(AEDisposeExternalUPP userUPP) ;
# 2631 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern void
DisposeAEEventHandlerUPP(AEEventHandlerUPP userUPP) ;
# 2642 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern void
InvokeAEDisposeExternalUPP(
  const void * dataPtr,
  Size dataLength,
  SRefCon refcon,
  AEDisposeExternalUPP userUPP) ;
# 2657 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
extern OSErr
InvokeAEEventHandlerUPP(
  const AppleEvent * theAppleEvent,
  AppleEvent * reply,
  SRefCon handlerRefcon,
  AEEventHandlerUPP userUPP) ;



    inline AEDisposeExternalUPP NewAEDisposeExternalUPP(AEDisposeExternalProcPtr userRoutine) { return userRoutine; }
    inline AEEventHandlerUPP NewAEEventHandlerUPP(AEEventHandlerProcPtr userRoutine) { return userRoutine; }
    inline void DisposeAEDisposeExternalUPP(AEDisposeExternalUPP) { }
    inline void DisposeAEEventHandlerUPP(AEEventHandlerUPP) { }
    inline void InvokeAEDisposeExternalUPP(const void * dataPtr, Size dataLength, SRefCon refcon, AEDisposeExternalUPP userUPP) { (*userUPP)(dataPtr, dataLength, refcon); }
    inline OSErr InvokeAEEventHandlerUPP(const AppleEvent * theAppleEvent, AppleEvent * reply, SRefCon handlerRefcon, AEEventHandlerUPP userUPP) { return (*userUPP)(theAppleEvent, reply, handlerRefcon); }
# 2684 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEDataModel.h" 3
#pragma pack(pop)


}
# 26 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AE.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AppleEvents.h" 1 3
# 44 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AppleEvents.h" 3
extern "C" {


#pragma pack(push, 2)

enum {

  keyDirectObject = '----',
  keyErrorNumber = 'errn',
  keyErrorString = 'errs',
  keyProcessSerialNumber = 'psn ',
  keyPreDispatch = 'phac',
  keySelectProc = 'selh',

  keyAERecorderCount = 'recr',

  keyAEVersion = 'vers'
};


enum {
  kCoreEventClass = 'aevt'
};


enum {
  kAEOpenApplication = 'oapp',
  kAEOpenDocuments = 'odoc',
  kAEPrintDocuments = 'pdoc',
  kAEOpenContents = 'ocon',
  kAEQuitApplication = 'quit',
  kAEAnswer = 'ansr',
  kAEApplicationDied = 'obit',
  kAEShowPreferences = 'pref'
};


enum {
  kAEStartRecording = 'reca',
  kAEStopRecording = 'recc',
  kAENotifyStartRecording = 'rec1',
  kAENotifyStopRecording = 'rec0',
  kAENotifyRecording = 'recr'
};
# 96 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AppleEvents.h" 3
typedef SInt8 AEEventSource;
enum {
  kAEUnknownSource = 0,
  kAEDirectCall = 1,
  kAESameProcess = 2,
  kAELocalProcess = 3,
  kAERemoteProcess = 4
};
# 119 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AppleEvents.h" 3
extern OSErr
AEInstallEventHandler(
  AEEventClass theAEEventClass,
  AEEventID theAEEventID,
  AEEventHandlerUPP handler,
  SRefCon handlerRefcon,
  Boolean isSysHandler) ;
# 139 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AppleEvents.h" 3
extern OSErr
AERemoveEventHandler(
  AEEventClass theAEEventClass,
  AEEventID theAEEventID,
  AEEventHandlerUPP handler,
  Boolean isSysHandler) ;
# 158 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AppleEvents.h" 3
extern OSErr
AEGetEventHandler(
  AEEventClass theAEEventClass,
  AEEventID theAEEventID,
  AEEventHandlerUPP * handler,
  SRefCon * handlerRefcon,
  Boolean isSysHandler) ;
# 184 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AppleEvents.h" 3
extern OSErr
AEInstallSpecialHandler(
  AEKeyword functionClass,
  AEEventHandlerUPP handler,
  Boolean isSysHandler) ;
# 202 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AppleEvents.h" 3
extern OSErr
AERemoveSpecialHandler(
  AEKeyword functionClass,
  AEEventHandlerUPP handler,
  Boolean isSysHandler) ;
# 220 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AppleEvents.h" 3
extern OSErr
AEGetSpecialHandler(
  AEKeyword functionClass,
  AEEventHandlerUPP * handler,
  Boolean isSysHandler) ;
# 245 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AppleEvents.h" 3
extern OSErr
AEManagerInfo(
  AEKeyword keyWord,
  long * result) ;
# 285 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AppleEvents.h" 3
extern const CFStringRef kAERemoteProcessURLKey ;
# 298 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AppleEvents.h" 3
extern const CFStringRef kAERemoteProcessNameKey ;
# 311 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AppleEvents.h" 3
extern const CFStringRef kAERemoteProcessUserIDKey ;
# 324 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AppleEvents.h" 3
extern const CFStringRef kAERemoteProcessProcessIDKey ;
# 334 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AppleEvents.h" 3
struct AERemoteProcessResolverContext {




  CFIndex version;




  void * info;




  CFAllocatorRetainCallBack retain;




  CFAllocatorReleaseCallBack release;




  CFAllocatorCopyDescriptionCallBack copyDescription;
};
typedef struct AERemoteProcessResolverContext AERemoteProcessResolverContext;
# 373 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AppleEvents.h" 3
typedef struct AERemoteProcessResolver* AERemoteProcessResolverRef;
# 406 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AppleEvents.h" 3
extern AERemoteProcessResolverRef
AECreateRemoteProcessResolver(
  CFAllocatorRef allocator,
  CFURLRef url) ;
# 433 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AppleEvents.h" 3
extern void
AEDisposeRemoteProcessResolver(AERemoteProcessResolverRef ref) ;
# 474 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AppleEvents.h" 3
extern CFArrayRef
AERemoteProcessResolverGetProcesses(
  AERemoteProcessResolverRef ref,
  CFStreamError * outError) ;
# 489 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AppleEvents.h" 3
typedef void ( * AERemoteProcessResolverCallback)(AERemoteProcessResolverRef ref, void *info);
# 529 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AppleEvents.h" 3
extern void
AERemoteProcessResolverScheduleWithRunLoop(
  AERemoteProcessResolverRef ref,
  CFRunLoopRef runLoop,
  CFStringRef runLoopMode,
  AERemoteProcessResolverCallback callback,
  const AERemoteProcessResolverContext * ctx) ;






#pragma pack(pop)


}
# 30 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AE.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEPackObject.h" 1 3
# 32 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEPackObject.h" 3
extern "C" {
# 47 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEPackObject.h" 3
extern OSErr
CreateOffsetDescriptor(
  long theOffset,
  AEDesc * theDescriptor) ;
# 64 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEPackObject.h" 3
extern OSErr
CreateCompDescriptor(
  DescType comparisonOperator,
  AEDesc * operand1,
  AEDesc * operand2,
  Boolean disposeInputs,
  AEDesc * theDescriptor) ;
# 84 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEPackObject.h" 3
extern OSErr
CreateLogicalDescriptor(
  AEDescList * theLogicalTerms,
  DescType theLogicOperator,
  Boolean disposeInputs,
  AEDesc * theDescriptor) ;
# 104 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEPackObject.h" 3
extern OSErr
CreateObjSpecifier(
  DescType desiredClass,
  AEDesc * theContainer,
  DescType keyForm,
  AEDesc * keyData,
  Boolean disposeInputs,
  AEDesc * objSpecifier) ;
# 125 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEPackObject.h" 3
extern OSErr
CreateRangeDescriptor(
  AEDesc * rangeStart,
  AEDesc * rangeStop,
  Boolean disposeInputs,
  AEDesc * theDescriptor) ;




}
# 34 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AE.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEObjects.h" 1 3
# 36 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEObjects.h" 3
extern "C" {


#pragma pack(push, 2)

enum {

  kAEAND = 'AND ',
  kAEOR = 'OR  ',
  kAENOT = 'NOT ',

  kAEFirst = 'firs',
  kAELast = 'last',
  kAEMiddle = 'midd',
  kAEAny = 'any ',
  kAEAll = 'all ',

  kAENext = 'next',
  kAEPrevious = 'prev',

  keyAECompOperator = 'relo',
  keyAELogicalTerms = 'term',
  keyAELogicalOperator = 'logc',
  keyAEObject1 = 'obj1',
  keyAEObject2 = 'obj2',

  keyAEDesiredClass = 'want',
  keyAEContainer = 'from',
  keyAEKeyForm = 'form',
  keyAEKeyData = 'seld'
};

enum {

  keyAERangeStart = 'star',
  keyAERangeStop = 'stop',

  keyDisposeTokenProc = 'xtok',
  keyAECompareProc = 'cmpr',
  keyAECountProc = 'cont',
  keyAEMarkTokenProc = 'mkid',
  keyAEMarkProc = 'mark',
  keyAEAdjustMarksProc = 'adjm',
  keyAEGetErrDescProc = 'indc'
};


enum {

  formAbsolutePosition = 'indx',
  formRelativePosition = 'rele',
  formTest = 'test',
  formRange = 'rang',
  formPropertyID = 'prop',
  formName = 'name',
  formUniqueID = 'ID  ',

  typeObjectSpecifier = 'obj ',
  typeObjectBeingExamined = 'exmn',
  typeCurrentContainer = 'ccnt',
  typeToken = 'toke',
  typeRelativeDescriptor = 'rel ',
  typeAbsoluteOrdinal = 'abso',
  typeIndexDescriptor = 'inde',
  typeRangeDescriptor = 'rang',
  typeLogicalDescriptor = 'logi',
  typeCompDescriptor = 'cmpd',
  typeOSLTokenList = 'ostl'
};


enum {
  kAEIDoMinimum = 0x0000,
  kAEIDoWhose = 0x0001,
  kAEIDoMarking = 0x0004,
  kAEPassSubDescs = 0x0008,
  kAEResolveNestedLists = 0x0010,
  kAEHandleSimpleRanges = 0x0020,
  kAEUseRelativeIterators = 0x0040
};


enum {
  typeWhoseDescriptor = 'whos',
  formWhose = 'whos',
  typeWhoseRange = 'wrng',
  keyAEWhoseRangeStart = 'wstr',
  keyAEWhoseRangeStop = 'wstp',
  keyAEIndex = 'kidx',
  keyAETest = 'ktst'
};







struct ccntTokenRecord {
  DescType tokenClass;
  AEDesc token;
};
typedef struct ccntTokenRecord ccntTokenRecord;
typedef ccntTokenRecord * ccntTokenRecPtr;
typedef ccntTokenRecPtr * ccntTokenRecHandle;






typedef OSErr ( * OSLAccessorProcPtr)(DescType desiredClass, const AEDesc *container, DescType containerClass, DescType form, const AEDesc *selectionData, AEDesc *value, SRefCon accessorRefcon);
typedef OSErr ( * OSLCompareProcPtr)(DescType oper, const AEDesc *obj1, const AEDesc *obj2, Boolean *result);
typedef OSErr ( * OSLCountProcPtr)(DescType desiredType, DescType containerClass, const AEDesc *container, long *result);
typedef OSErr ( * OSLDisposeTokenProcPtr)(AEDesc * unneededToken);
typedef OSErr ( * OSLGetMarkTokenProcPtr)(const AEDesc *dContainerToken, DescType containerClass, AEDesc *result);
typedef OSErr ( * OSLGetErrDescProcPtr)(AEDesc ** appDescPtr);
typedef OSErr ( * OSLMarkProcPtr)(const AEDesc *dToken, const AEDesc *markToken, long index);
typedef OSErr ( * OSLAdjustMarksProcPtr)(long newStart, long newStop, const AEDesc *markToken);
typedef OSLAccessorProcPtr OSLAccessorUPP;
typedef OSLCompareProcPtr OSLCompareUPP;
typedef OSLCountProcPtr OSLCountUPP;
typedef OSLDisposeTokenProcPtr OSLDisposeTokenUPP;
typedef OSLGetMarkTokenProcPtr OSLGetMarkTokenUPP;
typedef OSLGetErrDescProcPtr OSLGetErrDescUPP;
typedef OSLMarkProcPtr OSLMarkUPP;
typedef OSLAdjustMarksProcPtr OSLAdjustMarksUPP;
# 171 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEObjects.h" 3
extern OSLAccessorUPP
NewOSLAccessorUPP(OSLAccessorProcPtr userRoutine) ;
# 182 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEObjects.h" 3
extern OSLCompareUPP
NewOSLCompareUPP(OSLCompareProcPtr userRoutine) ;
# 193 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEObjects.h" 3
extern OSLCountUPP
NewOSLCountUPP(OSLCountProcPtr userRoutine) ;
# 204 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEObjects.h" 3
extern OSLDisposeTokenUPP
NewOSLDisposeTokenUPP(OSLDisposeTokenProcPtr userRoutine) ;
# 215 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEObjects.h" 3
extern OSLGetMarkTokenUPP
NewOSLGetMarkTokenUPP(OSLGetMarkTokenProcPtr userRoutine) ;
# 226 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEObjects.h" 3
extern OSLGetErrDescUPP
NewOSLGetErrDescUPP(OSLGetErrDescProcPtr userRoutine) ;
# 237 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEObjects.h" 3
extern OSLMarkUPP
NewOSLMarkUPP(OSLMarkProcPtr userRoutine) ;
# 248 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEObjects.h" 3
extern OSLAdjustMarksUPP
NewOSLAdjustMarksUPP(OSLAdjustMarksProcPtr userRoutine) ;
# 259 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEObjects.h" 3
extern void
DisposeOSLAccessorUPP(OSLAccessorUPP userUPP) ;
# 270 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEObjects.h" 3
extern void
DisposeOSLCompareUPP(OSLCompareUPP userUPP) ;
# 281 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEObjects.h" 3
extern void
DisposeOSLCountUPP(OSLCountUPP userUPP) ;
# 292 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEObjects.h" 3
extern void
DisposeOSLDisposeTokenUPP(OSLDisposeTokenUPP userUPP) ;
# 303 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEObjects.h" 3
extern void
DisposeOSLGetMarkTokenUPP(OSLGetMarkTokenUPP userUPP) ;
# 314 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEObjects.h" 3
extern void
DisposeOSLGetErrDescUPP(OSLGetErrDescUPP userUPP) ;
# 325 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEObjects.h" 3
extern void
DisposeOSLMarkUPP(OSLMarkUPP userUPP) ;
# 336 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEObjects.h" 3
extern void
DisposeOSLAdjustMarksUPP(OSLAdjustMarksUPP userUPP) ;
# 347 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEObjects.h" 3
extern OSErr
InvokeOSLAccessorUPP(
  DescType desiredClass,
  const AEDesc * container,
  DescType containerClass,
  DescType form,
  const AEDesc * selectionData,
  AEDesc * value,
  SRefCon accessorRefcon,
  OSLAccessorUPP userUPP) ;
# 366 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEObjects.h" 3
extern OSErr
InvokeOSLCompareUPP(
  DescType oper,
  const AEDesc * obj1,
  const AEDesc * obj2,
  Boolean * result,
  OSLCompareUPP userUPP) ;
# 382 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEObjects.h" 3
extern OSErr
InvokeOSLCountUPP(
  DescType desiredType,
  DescType containerClass,
  const AEDesc * container,
  long * result,
  OSLCountUPP userUPP) ;
# 398 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEObjects.h" 3
extern OSErr
InvokeOSLDisposeTokenUPP(
  AEDesc * unneededToken,
  OSLDisposeTokenUPP userUPP) ;
# 411 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEObjects.h" 3
extern OSErr
InvokeOSLGetMarkTokenUPP(
  const AEDesc * dContainerToken,
  DescType containerClass,
  AEDesc * result,
  OSLGetMarkTokenUPP userUPP) ;
# 426 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEObjects.h" 3
extern OSErr
InvokeOSLGetErrDescUPP(
  AEDesc ** appDescPtr,
  OSLGetErrDescUPP userUPP) ;
# 439 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEObjects.h" 3
extern OSErr
InvokeOSLMarkUPP(
  const AEDesc * dToken,
  const AEDesc * markToken,
  long index,
  OSLMarkUPP userUPP) ;
# 454 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEObjects.h" 3
extern OSErr
InvokeOSLAdjustMarksUPP(
  long newStart,
  long newStop,
  const AEDesc * markToken,
  OSLAdjustMarksUPP userUPP) ;



    inline OSLAccessorUPP NewOSLAccessorUPP(OSLAccessorProcPtr userRoutine) { return userRoutine; }
    inline OSLCompareUPP NewOSLCompareUPP(OSLCompareProcPtr userRoutine) { return userRoutine; }
    inline OSLCountUPP NewOSLCountUPP(OSLCountProcPtr userRoutine) { return userRoutine; }
    inline OSLDisposeTokenUPP NewOSLDisposeTokenUPP(OSLDisposeTokenProcPtr userRoutine) { return userRoutine; }
    inline OSLGetMarkTokenUPP NewOSLGetMarkTokenUPP(OSLGetMarkTokenProcPtr userRoutine) { return userRoutine; }
    inline OSLGetErrDescUPP NewOSLGetErrDescUPP(OSLGetErrDescProcPtr userRoutine) { return userRoutine; }
    inline OSLMarkUPP NewOSLMarkUPP(OSLMarkProcPtr userRoutine) { return userRoutine; }
    inline OSLAdjustMarksUPP NewOSLAdjustMarksUPP(OSLAdjustMarksProcPtr userRoutine) { return userRoutine; }
    inline void DisposeOSLAccessorUPP(OSLAccessorUPP) { }
    inline void DisposeOSLCompareUPP(OSLCompareUPP) { }
    inline void DisposeOSLCountUPP(OSLCountUPP) { }
    inline void DisposeOSLDisposeTokenUPP(OSLDisposeTokenUPP) { }
    inline void DisposeOSLGetMarkTokenUPP(OSLGetMarkTokenUPP) { }
    inline void DisposeOSLGetErrDescUPP(OSLGetErrDescUPP) { }
    inline void DisposeOSLMarkUPP(OSLMarkUPP) { }
    inline void DisposeOSLAdjustMarksUPP(OSLAdjustMarksUPP) { }
    inline OSErr InvokeOSLAccessorUPP(DescType desiredClass, const AEDesc * container, DescType containerClass, DescType form, const AEDesc * selectionData, AEDesc * value, SRefCon accessorRefcon, OSLAccessorUPP userUPP) { return (*userUPP)(desiredClass, container, containerClass, form, selectionData, value, accessorRefcon); }
    inline OSErr InvokeOSLCompareUPP(DescType oper, const AEDesc * obj1, const AEDesc * obj2, Boolean * result, OSLCompareUPP userUPP) { return (*userUPP)(oper, obj1, obj2, result); }
    inline OSErr InvokeOSLCountUPP(DescType desiredType, DescType containerClass, const AEDesc * container, long * result, OSLCountUPP userUPP) { return (*userUPP)(desiredType, containerClass, container, result); }
    inline OSErr InvokeOSLDisposeTokenUPP(AEDesc * unneededToken, OSLDisposeTokenUPP userUPP) { return (*userUPP)(unneededToken); }
    inline OSErr InvokeOSLGetMarkTokenUPP(const AEDesc * dContainerToken, DescType containerClass, AEDesc * result, OSLGetMarkTokenUPP userUPP) { return (*userUPP)(dContainerToken, containerClass, result); }
    inline OSErr InvokeOSLGetErrDescUPP(AEDesc ** appDescPtr, OSLGetErrDescUPP userUPP) { return (*userUPP)(appDescPtr); }
    inline OSErr InvokeOSLMarkUPP(const AEDesc * dToken, const AEDesc * markToken, long index, OSLMarkUPP userUPP) { return (*userUPP)(dToken, markToken, index); }
    inline OSErr InvokeOSLAdjustMarksUPP(long newStart, long newStop, const AEDesc * markToken, OSLAdjustMarksUPP userUPP) { return (*userUPP)(newStart, newStop, markToken); }
# 529 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEObjects.h" 3
extern OSErr
AEObjectInit(void) ;
# 546 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEObjects.h" 3
extern OSErr
AESetObjectCallbacks(
  OSLCompareUPP myCompareProc,
  OSLCountUPP myCountProc,
  OSLDisposeTokenUPP myDisposeTokenProc,
  OSLGetMarkTokenUPP myGetMarkTokenProc,
  OSLMarkUPP myMarkProc,
  OSLAdjustMarksUPP myAdjustMarksProc,
  OSLGetErrDescUPP myGetErrDescProcPtr) ;
# 568 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEObjects.h" 3
extern OSErr
AEResolve(
  const AEDesc * objectSpecifier,
  short callbackFlags,
  AEDesc * theToken) ;
# 586 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEObjects.h" 3
extern OSErr
AEInstallObjectAccessor(
  DescType desiredClass,
  DescType containerType,
  OSLAccessorUPP theAccessor,
  SRefCon accessorRefcon,
  Boolean isSysHandler) ;
# 606 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEObjects.h" 3
extern OSErr
AERemoveObjectAccessor(
  DescType desiredClass,
  DescType containerType,
  OSLAccessorUPP theAccessor,
  Boolean isSysHandler) ;
# 625 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEObjects.h" 3
extern OSErr
AEGetObjectAccessor(
  DescType desiredClass,
  DescType containerType,
  OSLAccessorUPP * accessor,
  SRefCon * accessorRefcon,
  Boolean isSysHandler) ;
# 645 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEObjects.h" 3
extern OSErr
AEDisposeToken(AEDesc * theToken) ;
# 660 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEObjects.h" 3
extern OSErr
AECallObjectAccessor(
  DescType desiredClass,
  const AEDesc * containerToken,
  DescType containerClass,
  DescType keyForm,
  const AEDesc * keyData,
  AEDesc * token) ;



#pragma pack(pop)


}
# 38 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AE.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AERegistry.h" 1 3
# 35 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AERegistry.h" 3
#pragma pack(push, 2)

enum {
  cAEList = 'list',
  cApplication = 'capp',
  cArc = 'carc',
  cBoolean = 'bool',
  cCell = 'ccel',
  cChar = 'cha ',
  cColorTable = 'clrt',
  cColumn = 'ccol',
  cDocument = 'docu',
  cDrawingArea = 'cdrw',
  cEnumeration = 'enum',
  cFile = 'file',
  cFixed = 'fixd',
  cFixedPoint = 'fpnt',
  cFixedRectangle = 'frct',
  cGraphicLine = 'glin',
  cGraphicObject = 'cgob',
  cGraphicShape = 'cgsh',
  cGraphicText = 'cgtx',
  cGroupedGraphic = 'cpic'
};

enum {
  cInsertionLoc = 'insl',
  cInsertionPoint = 'cins',
  cIntlText = 'itxt',
  cIntlWritingCode = 'intl',
  cItem = 'citm',
  cLine = 'clin',
  cLongDateTime = 'ldt ',
  cLongFixed = 'lfxd',
  cLongFixedPoint = 'lfpt',
  cLongFixedRectangle = 'lfrc',
  cLongInteger = 'long',
  cLongPoint = 'lpnt',
  cLongRectangle = 'lrct',
  cMachineLoc = 'mLoc',
  cMenu = 'cmnu',
  cMenuItem = 'cmen',
  cObject = 'cobj',
  cObjectSpecifier = 'obj ',
  cOpenableObject = 'coob',
  cOval = 'covl'
};

enum {
  cParagraph = 'cpar',
  cPICT = 'PICT',
  cPixel = 'cpxl',
  cPixelMap = 'cpix',
  cPolygon = 'cpgn',
  cProperty = 'prop',
  cQDPoint = 'QDpt',
  cQDRectangle = 'qdrt',
  cRectangle = 'crec',
  cRGBColor = 'cRGB',
  cRotation = 'trot',
  cRoundedRectangle = 'crrc',
  cRow = 'crow',
  cSelection = 'csel',
  cShortInteger = 'shor',
  cTable = 'ctbl',
  cText = 'ctxt',
  cTextFlow = 'cflo',
  cTextStyles = 'tsty',
  cType = 'type'
};

enum {
  cVersion = 'vers',
  cWindow = 'cwin',
  cWord = 'cwor',
  enumArrows = 'arro',
  enumJustification = 'just',
  enumKeyForm = 'kfrm',
  enumPosition = 'posi',
  enumProtection = 'prtn',
  enumQuality = 'qual',
  enumSaveOptions = 'savo',
  enumStyle = 'styl',
  enumTransferMode = 'tran',
  kAEAbout = 'abou',
  kAEAfter = 'afte',
  kAEAliasSelection = 'sali',
  kAEAllCaps = 'alcp',
  kAEArrowAtEnd = 'aren',
  kAEArrowAtStart = 'arst',
  kAEArrowBothEnds = 'arbo'
};

enum {
  kAEAsk = 'ask ',
  kAEBefore = 'befo',
  kAEBeginning = 'bgng',
  kAEBeginsWith = 'bgwt',
  kAEBeginTransaction = 'begi',
  kAEBold = 'bold',
  kAECaseSensEquals = 'cseq',
  kAECentered = 'cent',
  kAEChangeView = 'view',
  kAEClone = 'clon',
  kAEClose = 'clos',
  kAECondensed = 'cond',
  kAEContains = 'cont',
  kAECopy = 'copy',
  kAECoreSuite = 'core',
  kAECountElements = 'cnte',
  kAECreateElement = 'crel',
  kAECreatePublisher = 'cpub',
  kAECut = 'cut ',
  kAEDelete = 'delo'
};

enum {
  kAEDoObjectsExist = 'doex',
  kAEDoScript = 'dosc',
  kAEDrag = 'drag',
  kAEDuplicateSelection = 'sdup',
  kAEEditGraphic = 'edit',
  kAEEmptyTrash = 'empt',
  kAEEnd = 'end ',
  kAEEndsWith = 'ends',
  kAEEndTransaction = 'endt',
  kAEEquals = '=   ',
  kAEExpanded = 'pexp',
  kAEFast = 'fast',
  kAEFinderEvents = 'FNDR',
  kAEFormulaProtect = 'fpro',
  kAEFullyJustified = 'full',
  kAEGetClassInfo = 'qobj',
  kAEGetData = 'getd',
  kAEGetDataSize = 'dsiz',
  kAEGetEventInfo = 'gtei',
  kAEGetInfoSelection = 'sinf'
};

enum {
  kAEGetPrivilegeSelection = 'sprv',
  kAEGetSuiteInfo = 'gtsi',
  kAEGreaterThan = '>   ',
  kAEGreaterThanEquals = '>=  ',
  kAEGrow = 'grow',
  kAEHidden = 'hidn',
  kAEHiQuality = 'hiqu',
  kAEImageGraphic = 'imgr',
  kAEIsUniform = 'isun',
  kAEItalic = 'ital',
  kAELeftJustified = 'left',
  kAELessThan = '<   ',
  kAELessThanEquals = '<=  ',
  kAELowercase = 'lowc',
  kAEMakeObjectsVisible = 'mvis',
  kAEMiscStandards = 'misc',
  kAEModifiable = 'modf',
  kAEMove = 'move',
  kAENo = 'no  ',
  kAENoArrow = 'arno'
};

enum {
  kAENonmodifiable = 'nmod',
  kAEOpen = 'odoc',
  kAEOpenSelection = 'sope',
  kAEOutline = 'outl',
  kAEPageSetup = 'pgsu',
  kAEPaste = 'past',
  kAEPlain = 'plan',
  kAEPrint = 'pdoc',
  kAEPrintSelection = 'spri',
  kAEPrintWindow = 'pwin',
  kAEPutAwaySelection = 'sput',
  kAEQDAddOver = 'addo',
  kAEQDAddPin = 'addp',
  kAEQDAdMax = 'admx',
  kAEQDAdMin = 'admn',
  kAEQDBic = 'bic ',
  kAEQDBlend = 'blnd',
  kAEQDCopy = 'cpy ',
  kAEQDNotBic = 'nbic',
  kAEQDNotCopy = 'ncpy'
};

enum {
  kAEQDNotOr = 'ntor',
  kAEQDNotXor = 'nxor',
  kAEQDOr = 'or  ',
  kAEQDSubOver = 'subo',
  kAEQDSubPin = 'subp',
  kAEQDSupplementalSuite = 'qdsp',
  kAEQDXor = 'xor ',
  kAEQuickdrawSuite = 'qdrw',
  kAEQuitAll = 'quia',
  kAERedo = 'redo',
  kAERegular = 'regl',
  kAEReopenApplication = 'rapp',
  kAEReplace = 'rplc',
  kAERequiredSuite = 'reqd',
  kAERestart = 'rest',
  kAERevealSelection = 'srev',
  kAERevert = 'rvrt',
  kAERightJustified = 'rght',
  kAESave = 'save',
  kAESelect = 'slct',
  kAESetData = 'setd'
};

enum {
  kAESetPosition = 'posn',
  kAEShadow = 'shad',
  kAEShowClipboard = 'shcl',
  kAEShutDown = 'shut',
  kAESleep = 'slep',
  kAESmallCaps = 'smcp',
  kAESpecialClassProperties = 'c@#!',
  kAEStrikethrough = 'strk',
  kAESubscript = 'sbsc',
  kAESuperscript = 'spsc',
  kAETableSuite = 'tbls',
  kAETextSuite = 'TEXT',
  kAETransactionTerminated = 'ttrm',
  kAEUnderline = 'undl',
  kAEUndo = 'undo',
  kAEWholeWordEquals = 'wweq',
  kAEYes = 'yes ',
  kAEZoom = 'zoom'
};


enum {
  kAELogOut = 'logo',
  kAEReallyLogOut = 'rlgo',
  kAEShowRestartDialog = 'rrst',
  kAEShowShutdownDialog = 'rsdn'
};


enum {
  kAEMouseClass = 'mous',
  kAEDown = 'down',
  kAEUp = 'up  ',
  kAEMoved = 'move',
  kAEStoppedMoving = 'stop',
  kAEWindowClass = 'wind',
  kAEUpdate = 'updt',
  kAEActivate = 'actv',
  kAEDeactivate = 'dact',
  kAECommandClass = 'cmnd',
  kAEKeyClass = 'keyc',
  kAERawKey = 'rkey',
  kAEVirtualKey = 'keyc',
  kAENavigationKey = 'nave',
  kAEAutoDown = 'auto',
  kAEApplicationClass = 'appl',
  kAESuspend = 'susp',
  kAEResume = 'rsme',
  kAEDiskEvent = 'disk',
  kAENullEvent = 'null',
  kAEWakeUpEvent = 'wake',
  kAEScrapEvent = 'scrp',
  kAEHighLevel = 'high'
};

enum {
  keyAEAngle = 'kang',
  keyAEArcAngle = 'parc'
};

enum {
  keyAEBaseAddr = 'badd',
  keyAEBestType = 'pbst',
  keyAEBgndColor = 'kbcl',
  keyAEBgndPattern = 'kbpt',
  keyAEBounds = 'pbnd',
  keyAECellList = 'kclt',
  keyAEClassID = 'clID',
  keyAEColor = 'colr',
  keyAEColorTable = 'cltb',
  keyAECurveHeight = 'kchd',
  keyAECurveWidth = 'kcwd',
  keyAEDashStyle = 'pdst',
  keyAEData = 'data',
  keyAEDefaultType = 'deft',
  keyAEDefinitionRect = 'pdrt',
  keyAEDescType = 'dstp',
  keyAEDestination = 'dest',
  keyAEDoAntiAlias = 'anta',
  keyAEDoDithered = 'gdit',
  keyAEDoRotate = 'kdrt'
};

enum {
  keyAEDoScale = 'ksca',
  keyAEDoTranslate = 'ktra',
  keyAEEditionFileLoc = 'eloc',
  keyAEElements = 'elms',
  keyAEEndPoint = 'pend',
  keyAEEventClass = 'evcl',
  keyAEEventID = 'evti',
  keyAEFile = 'kfil',
  keyAEFileType = 'fltp',
  keyAEFillColor = 'flcl',
  keyAEFillPattern = 'flpt',
  keyAEFlipHorizontal = 'kfho',
  keyAEFlipVertical = 'kfvt',
  keyAEFont = 'font',
  keyAEFormula = 'pfor',
  keyAEGraphicObjects = 'gobs',
  keyAEID = 'ID  ',
  keyAEImageQuality = 'gqua',
  keyAEInsertHere = 'insh',
  keyAEKeyForms = 'keyf'
};

enum {
  keyAEKeyword = 'kywd',
  keyAELevel = 'levl',
  keyAELineArrow = 'arro',
  keyAEName = 'pnam',
  keyAENewElementLoc = 'pnel',
  keyAEObject = 'kobj',
  keyAEObjectClass = 'kocl',
  keyAEOffStyles = 'ofst',
  keyAEOnStyles = 'onst',
  keyAEParameters = 'prms',
  keyAEParamFlags = 'pmfg',
  keyAEPenColor = 'ppcl',
  keyAEPenPattern = 'pppa',
  keyAEPenWidth = 'ppwd',
  keyAEPixelDepth = 'pdpt',
  keyAEPixMapMinus = 'kpmm',
  keyAEPMTable = 'kpmt',
  keyAEPointList = 'ptlt',
  keyAEPointSize = 'ptsz',
  keyAEPosition = 'kpos'
};

enum {
  keyAEPropData = 'prdt',
  keyAEProperties = 'qpro',
  keyAEProperty = 'kprp',
  keyAEPropFlags = 'prfg',
  keyAEPropID = 'prop',
  keyAEProtection = 'ppro',
  keyAERenderAs = 'kren',
  keyAERequestedType = 'rtyp',
  keyAEResult = '----',
  keyAEResultInfo = 'rsin',
  keyAERotation = 'prot',
  keyAERotPoint = 'krtp',
  keyAERowList = 'krls',
  keyAESaveOptions = 'savo',
  keyAEScale = 'pscl',
  keyAEScriptTag = 'psct',
  keyAESearchText = 'stxt',
  keyAEShowWhere = 'show',
  keyAEStartAngle = 'pang',
  keyAEStartPoint = 'pstp',
  keyAEStyles = 'ksty'
};

enum {
  keyAESuiteID = 'suit',
  keyAEText = 'ktxt',
  keyAETextColor = 'ptxc',
  keyAETextFont = 'ptxf',
  keyAETextPointSize = 'ptps',
  keyAETextStyles = 'txst',
  keyAETextLineHeight = 'ktlh',
  keyAETextLineAscent = 'ktas',
  keyAETheText = 'thtx',
  keyAETransferMode = 'pptm',
  keyAETranslation = 'ptrs',
  keyAETryAsStructGraf = 'toog',
  keyAEUniformStyles = 'ustl',
  keyAEUpdateOn = 'pupd',
  keyAEUserTerm = 'utrm',
  keyAEWindow = 'wndw',
  keyAEWritingCode = 'wrcd'
};

enum {
  keyMiscellaneous = 'fmsc',
  keySelection = 'fsel',
  keyWindow = 'kwnd',

  keyWhen = 'when',
  keyWhere = 'wher',
  keyModifiers = 'mods',
  keyKey = 'key ',
  keyKeyCode = 'code',
  keyKeyboard = 'keyb',
  keyDriveNumber = 'drv#',
  keyErrorCode = 'err#',
  keyHighLevelClass = 'hcls',
  keyHighLevelID = 'hid '
};

enum {
  pArcAngle = 'parc',
  pBackgroundColor = 'pbcl',
  pBackgroundPattern = 'pbpt',
  pBestType = 'pbst',
  pBounds = 'pbnd',
  pClass = 'pcls',
  pClipboard = 'pcli',
  pColor = 'colr',
  pColorTable = 'cltb',
  pContents = 'pcnt',
  pCornerCurveHeight = 'pchd',
  pCornerCurveWidth = 'pcwd',
  pDashStyle = 'pdst',
  pDefaultType = 'deft',
  pDefinitionRect = 'pdrt',
  pEnabled = 'enbl',
  pEndPoint = 'pend',
  pFillColor = 'flcl',
  pFillPattern = 'flpt',
  pFont = 'font'
};

enum {
  pFormula = 'pfor',
  pGraphicObjects = 'gobs',
  pHasCloseBox = 'hclb',
  pHasTitleBar = 'ptit',
  pID = 'ID  ',
  pIndex = 'pidx',
  pInsertionLoc = 'pins',
  pIsFloating = 'isfl',
  pIsFrontProcess = 'pisf',
  pIsModal = 'pmod',
  pIsModified = 'imod',
  pIsResizable = 'prsz',
  pIsStationeryPad = 'pspd',
  pIsZoomable = 'iszm',
  pIsZoomed = 'pzum',
  pItemNumber = 'itmn',
  pJustification = 'pjst',
  pLineArrow = 'arro',
  pMenuID = 'mnid',
  pName = 'pnam'
};

enum {
  pNewElementLoc = 'pnel',
  pPenColor = 'ppcl',
  pPenPattern = 'pppa',
  pPenWidth = 'ppwd',
  pPixelDepth = 'pdpt',
  pPointList = 'ptlt',
  pPointSize = 'ptsz',
  pProtection = 'ppro',
  pRotation = 'prot',
  pScale = 'pscl',
  pScript = 'scpt',
  pScriptTag = 'psct',
  pSelected = 'selc',
  pSelection = 'sele',
  pStartAngle = 'pang',
  pStartPoint = 'pstp',
  pTextColor = 'ptxc',
  pTextFont = 'ptxf',
  pTextItemDelimiters = 'txdl',
  pTextPointSize = 'ptps'
};

enum {
  pTextStyles = 'txst',
  pTransferMode = 'pptm',
  pTranslation = 'ptrs',
  pUniformStyles = 'ustl',
  pUpdateOn = 'pupd',
  pUserSelection = 'pusl',
  pVersion = 'vers',
  pVisible = 'pvis'
};

enum {
  typeAEText = 'tTXT',
  typeArc = 'carc',
  typeBest = 'best',
  typeCell = 'ccel',
  typeClassInfo = 'gcli',
  typeColorTable = 'clrt',
  typeColumn = 'ccol',
  typeDashStyle = 'tdas',
  typeData = 'tdta',
  typeDrawingArea = 'cdrw',
  typeElemInfo = 'elin',
  typeEnumeration = 'enum',
  typeEPS = 'EPS ',
  typeEventInfo = 'evin'
};

enum {
  typeFinderWindow = 'fwin',
  typeFixedPoint = 'fpnt',
  typeFixedRectangle = 'frct',
  typeGraphicLine = 'glin',
  typeGraphicText = 'cgtx',
  typeGroupedGraphic = 'cpic',
  typeInsertionLoc = 'insl',
  typeIntlText = 'itxt',
  typeIntlWritingCode = 'intl',
  typeLongDateTime = 'ldt ',
  typeCFAbsoluteTime = 'cfat',
  typeISO8601DateTime = 'isot',
  typeLongFixed = 'lfxd',
  typeLongFixedPoint = 'lfpt',
  typeLongFixedRectangle = 'lfrc',
  typeLongPoint = 'lpnt',
  typeLongRectangle = 'lrct',
  typeMachineLoc = 'mLoc',
  typeOval = 'covl',
  typeParamInfo = 'pmin',
  typePict = 'PICT'
};

enum {
  typePixelMap = 'cpix',
  typePixMapMinus = 'tpmm',
  typePolygon = 'cpgn',
  typePropInfo = 'pinf',
  typePtr = 'ptr ',
  typeQDPoint = 'QDpt',
  typeQDRegion = 'Qrgn',
  typeRectangle = 'crec',
  typeRGB16 = 'tr16',
  typeRGB96 = 'tr96',
  typeRGBColor = 'cRGB',
  typeRotation = 'trot',
  typeRoundedRectangle = 'crrc',
  typeRow = 'crow',
  typeScrapStyles = 'styl',
  typeScript = 'scpt',
  typeStyledText = 'STXT',
  typeSuiteInfo = 'suin',
  typeTable = 'ctbl',
  typeTextStyles = 'tsty'
};

enum {
  typeTIFF = 'TIFF',
  typeJPEG = 'JPEG',
  typeGIF = 'GIFf',
  typeVersion = 'vers'
};

enum {
  kAEMenuClass = 'menu',
  kAEMenuSelect = 'mhit',
  kAEMouseDown = 'mdwn',
  kAEMouseDownInBack = 'mdbk',
  kAEKeyDown = 'kdwn',
  kAEResized = 'rsiz',
  kAEPromise = 'prom'
};

enum {
  keyMenuID = 'mid ',
  keyMenuItem = 'mitm',
  keyCloseAllWindows = 'caw ',
  keyOriginalBounds = 'obnd',
  keyNewBounds = 'nbnd',
  keyLocalWhere = 'lwhr'
};

enum {
  typeHIMenu = 'mobj',
  typeHIWindow = 'wobj'
};

enum {
  kAEQuitReason = 'why?'
};

enum {
  kBySmallIcon = 0,
  kByIconView = 1,
  kByNameView = 2,
  kByDateView = 3,
  kBySizeView = 4,
  kByKindView = 5,
  kByCommentView = 6,
  kByLabelView = 7,
  kByVersionView = 8
};

enum {
  kAEInfo = 11,
  kAEMain = 0,
  kAESharing = 13
};

enum {
  kAEZoomIn = 7,
  kAEZoomOut = 8
};

enum {
  kTextServiceClass = 'tsvc',
  kUpdateActiveInputArea = 'updt',
  kShowHideInputWindow = 'shiw',
  kPos2Offset = 'p2st',
  kOffset2Pos = 'st2p',
  kUnicodeNotFromInputMethod = 'unim',
  kGetSelectedText = 'gtxt',
  keyAETSMDocumentRefcon = 'refc',
  keyAEServerInstance = 'srvi',
  keyAETheData = 'kdat',
  keyAEFixLength = 'fixl',
  keyAEUpdateRange = 'udng',
  keyAECurrentPoint = 'cpos',
  keyAEBufferSize = 'buff',
  keyAEMoveView = 'mvvw',
  keyAENextBody = 'nxbd',
  keyAETSMScriptTag = 'sclg',
  keyAETSMTextFont = 'ktxf',
  keyAETSMTextFMFont = 'ktxm',
  keyAETSMTextPointSize = 'ktps',
  keyAETSMEventRecord = 'tevt',
  keyAETSMEventRef = 'tevr',
  keyAETextServiceEncoding = 'tsen',
  keyAETextServiceMacEncoding = 'tmen',
  keyAETSMGlyphInfoArray = 'tgia',
  typeTextRange = 'txrn',
  typeComponentInstance = 'cmpi',
  typeOffsetArray = 'ofay',
  typeTextRangeArray = 'tray',
  typeLowLevelEventRecord = 'evtr',
  typeGlyphInfoArray = 'glia',
  typeEventRef = 'evrf',
  typeText = typeChar
};



enum {
  kTSMOutsideOfBody = 1,
  kTSMInsideOfBody = 2,
  kTSMInsideOfActiveInputArea = 3
};

enum {
  kNextBody = 1,
  kPreviousBody = 2
};

struct TextRange {
  SInt32 fStart;
  SInt32 fEnd;
  SInt16 fHiliteStyle;
};
typedef struct TextRange TextRange;
typedef TextRange * TextRangePtr;
typedef TextRangePtr * TextRangeHandle;
struct TextRangeArray {
  SInt16 fNumOfRanges;
  TextRange fRange[1];
};
typedef struct TextRangeArray TextRangeArray;
typedef TextRangeArray * TextRangeArrayPtr;
typedef TextRangeArrayPtr * TextRangeArrayHandle;
struct OffsetArray {
  SInt16 fNumOfOffsets;
  SInt32 fOffset[1];
};
typedef struct OffsetArray OffsetArray;
typedef OffsetArray * OffsetArrayPtr;
typedef OffsetArrayPtr * OffsetArrayHandle;
struct WritingCode {
  ScriptCode theScriptCode;
  LangCode theLangCode;
};
typedef struct WritingCode WritingCode;
struct IntlText {
  ScriptCode theScriptCode;
  LangCode theLangCode;
  char theText[1];
};
typedef struct IntlText IntlText;


enum {
  kTSMHiliteCaretPosition = 1,
  kTSMHiliteRawText = 2,
  kTSMHiliteSelectedRawText = 3,
  kTSMHiliteConvertedText = 4,
  kTSMHiliteSelectedConvertedText = 5,
  kTSMHiliteBlockFillText = 6,
  kTSMHiliteOutlineText = 7,
  kTSMHiliteSelectedText = 8,
  kTSMHiliteNoHilite = 9
};
# 748 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AERegistry.h" 3
enum {
  keyAEHiliteRange = 'hrng',
  keyAEPinRange = 'pnrg',
  keyAEClauseOffsets = 'clau',
  keyAEOffset = 'ofst',
  keyAEPoint = 'gpos',
  keyAELeftSide = 'klef',
  keyAERegionClass = 'rgnc',
  keyAEDragging = 'bool'
};
# 767 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AERegistry.h" 3
enum {

  typeMeters = 'metr',
  typeInches = 'inch',
  typeFeet = 'feet',
  typeYards = 'yard',
  typeMiles = 'mile',
  typeKilometers = 'kmtr',
  typeCentimeters = 'cmtr',
  typeSquareMeters = 'sqrm',
  typeSquareFeet = 'sqft',
  typeSquareYards = 'sqyd',
  typeSquareMiles = 'sqmi',
  typeSquareKilometers = 'sqkm',
  typeLiters = 'litr',
  typeQuarts = 'qrts',
  typeGallons = 'galn',
  typeCubicMeters = 'cmet',
  typeCubicFeet = 'cfet',
  typeCubicInches = 'cuin',
  typeCubicCentimeter = 'ccmt',
  typeCubicYards = 'cyrd',
  typeKilograms = 'kgrm',
  typeGrams = 'gram',
  typeOunces = 'ozs ',
  typePounds = 'lbs ',
  typeDegreesC = 'degc',
  typeDegreesF = 'degf',
  typeDegreesK = 'degk'
};

enum {

  kFAServerApp = 'ssrv',
  kDoFolderActionEvent = 'fola',
  kFolderActionCode = 'actn',
  kFolderOpenedEvent = 'fopn',
  kFolderClosedEvent = 'fclo',
  kFolderWindowMovedEvent = 'fsiz',
  kFolderItemsAddedEvent = 'fget',
  kFolderItemsRemovedEvent = 'flos',
  kItemList = 'flst',
  kNewSizeParameter = 'fnsz',
  kFASuiteCode = 'faco',
  kFAAttachCommand = 'atfa',
  kFARemoveCommand = 'rmfa',
  kFAEditCommand = 'edfa',
  kFAFileParam = 'faal',
  kFAIndexParam = 'indx'
};


enum {

  kAEInternetSuite = 'gurl',
  kAEISWebStarSuite = 0x575757BD
};

enum {

  kAEISGetURL = 'gurl',
  KAEISHandleCGI = 'sdoc'
};

enum {

  cURL = 'url ',
  cInternetAddress = 'IPAD',
  cHTML = 'html',
  cFTPItem = 'ftp '
};

enum {

  kAEISHTTPSearchArgs = 'kfor',
  kAEISPostArgs = 'post',
  kAEISMethod = 'meth',
  kAEISClientAddress = 'addr',
  kAEISUserName = 'user',
  kAEISPassword = 'pass',
  kAEISFromUser = 'frmu',
  kAEISServerName = 'svnm',
  kAEISServerPort = 'svpt',
  kAEISScriptName = 'scnm',
  kAEISContentType = 'ctyp',
  kAEISReferrer = 'refr',
  kAEISUserAgent = 'Agnt',
  kAEISAction = 'Kact',
  kAEISActionPath = 'Kapt',
  kAEISClientIP = 'Kcip',
  kAEISFullRequest = 'Kfrq'
};

enum {

  pScheme = 'pusc',
  pHost = 'HOST',
  pPath = 'FTPc',
  pUserName = 'RAun',
  pUserPassword = 'RApw',
  pDNSForm = 'pDNS',
  pURL = 'pURL',
  pTextEncoding = 'ptxe',
  pFTPKind = 'kind'
};

enum {

  eScheme = 'esch',
  eurlHTTP = 'http',
  eurlHTTPS = 'htps',
  eurlFTP = 'ftp ',
  eurlMail = 'mail',
  eurlFile = 'file',
  eurlGopher = 'gphr',
  eurlTelnet = 'tlnt',
  eurlNews = 'news',
  eurlSNews = 'snws',
  eurlNNTP = 'nntp',
  eurlMessage = 'mess',
  eurlMailbox = 'mbox',
  eurlMulti = 'mult',
  eurlLaunch = 'laun',
  eurlAFP = 'afp ',
  eurlAT = 'at  ',
  eurlEPPC = 'eppc',
  eurlRTSP = 'rtsp',
  eurlIMAP = 'imap',
  eurlNFS = 'unfs',
  eurlPOP = 'upop',
  eurlLDAP = 'uldp',
  eurlUnknown = 'url?'
};

enum {

  kConnSuite = 'macc',
  cDevSpec = 'cdev',
  cAddressSpec = 'cadr',
  cADBAddress = 'cadb',
  cAppleTalkAddress = 'cat ',
  cBusAddress = 'cbus',
  cEthernetAddress = 'cen ',
  cFireWireAddress = 'cfw ',
  cIPAddress = 'cip ',
  cLocalTalkAddress = 'clt ',
  cSCSIAddress = 'cscs',
  cTokenRingAddress = 'ctok',
  cUSBAddress = 'cusb',

  pDeviceType = 'pdvt',
  pDeviceAddress = 'pdva',
  pConduit = 'pcon',
  pProtocol = 'pprt',
  pATMachine = 'patm',
  pATZone = 'patz',
  pATType = 'patt',
  pDottedDecimal = 'pipd',
  pDNS = 'pdns',
  pPort = 'ppor',
  pNetwork = 'pnet',
  pNode = 'pnod',
  pSocket = 'psoc',
  pSCSIBus = 'pscb',
  pSCSILUN = 'pslu',

  eDeviceType = 'edvt',
  eAddressSpec = 'eads',
  eConduit = 'econ',
  eProtocol = 'epro',
  eADB = 'eadb',
  eAnalogAudio = 'epau',
  eAppleTalk = 'epat',
  eAudioLineIn = 'ecai',
  eAudioLineOut = 'ecal',
  eAudioOut = 'ecao',
  eBus = 'ebus',
  eCDROM = 'ecd ',
  eCommSlot = 'eccm',
  eDigitalAudio = 'epda',
  eDisplay = 'edds',
  eDVD = 'edvd',
  eEthernet = 'ecen',
  eFireWire = 'ecfw',
  eFloppy = 'efd ',
  eHD = 'ehd ',
  eInfrared = 'ecir',
  eIP = 'epip',
  eIrDA = 'epir',
  eIRTalk = 'epit',
  eKeyboard = 'ekbd',
  eLCD = 'edlc',
  eLocalTalk = 'eclt',
  eMacIP = 'epmi',
  eMacVideo = 'epmv',
  eMicrophone = 'ecmi',
  eModemPort = 'ecmp',
  eModemPrinterPort = 'empp',
  eModem = 'edmm',
  eMonitorOut = 'ecmn',
  eMouse = 'emou',
  eNuBusCard = 'ednb',
  eNuBus = 'enub',
  ePCcard = 'ecpc',
  ePCIbus = 'ecpi',
  ePCIcard = 'edpi',
  ePDSslot = 'ecpd',
  ePDScard = 'epds',
  ePointingDevice = 'edpd',
  ePostScript = 'epps',
  ePPP = 'eppp',
  ePrinterPort = 'ecpp',
  ePrinter = 'edpr',
  eSvideo = 'epsv',
  eSCSI = 'ecsc',
  eSerial = 'epsr',
  eSpeakers = 'edsp',
  eStorageDevice = 'edst',
  eSVGA = 'epsg',
  eTokenRing = 'etok',
  eTrackball = 'etrk',
  eTrackpad = 'edtp',
  eUSB = 'ecus',
  eVideoIn = 'ecvi',
  eVideoMonitor = 'edvm',
  eVideoOut = 'ecvo'
};

enum {

  cKeystroke = 'kprs',
  pKeystrokeKey = 'kMsg',
  pModifiers = 'kMod',
  pKeyKind = 'kknd',
  eModifiers = 'eMds',
  eOptionDown = 'Kopt',
  eCommandDown = 'Kcmd',
  eControlDown = 'Kctl',
  eShiftDown = 'Ksft',
  eCapsLockDown = 'Kclk',
  eKeyKind = 'ekst',

  eEscapeKey = 0x6B733500,
  eDeleteKey = 0x6B733300,
  eTabKey = 0x6B733000,
  eReturnKey = 0x6B732400,
  eClearKey = 0x6B734700,
  eEnterKey = 0x6B734C00,
  eUpArrowKey = 0x6B737E00,
  eDownArrowKey = 0x6B737D00,
  eLeftArrowKey = 0x6B737B00,
  eRightArrowKey = 0x6B737C00,
  eHelpKey = 0x6B737200,
  eHomeKey = 0x6B737300,
  ePageUpKey = 0x6B737400,
  ePageDownKey = 0x6B737900,
  eForwardDelKey = 0x6B737500,
  eEndKey = 0x6B737700,
  eF1Key = 0x6B737A00,
  eF2Key = 0x6B737800,
  eF3Key = 0x6B736300,
  eF4Key = 0x6B737600,
  eF5Key = 0x6B736000,
  eF6Key = 0x6B736100,
  eF7Key = 0x6B736200,
  eF8Key = 0x6B736400,
  eF9Key = 0x6B736500,
  eF10Key = 0x6B736D00,
  eF11Key = 0x6B736700,
  eF12Key = 0x6B736F00,
  eF13Key = 0x6B736900,
  eF14Key = 0x6B736B00,
  eF15Key = 0x6B737100
};

enum {
  keyAELaunchedAsLogInItem = 'lgit',
  keyAELaunchedAsServiceItem = 'svit'
};


#pragma pack(pop)
# 42 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AE.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEUserTermTypes.h" 1 3
# 30 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEUserTermTypes.h" 3
#pragma pack(push, 2)

enum {
  kAEUserTerminology = 'aeut',
  kAETerminologyExtension = 'aete',
  kAEScriptingSizeResource = 'scsz',
  kAEOSAXSizeResource = 'osiz'
};

enum {
  kAEUTHasReturningParam = 31,
  kAEUTOptional = 15,
  kAEUTlistOfItems = 14,
  kAEUTEnumerated = 13,
  kAEUTReadWrite = 12,
  kAEUTChangesState = 12,
  kAEUTTightBindingFunction = 12,

  kAEUTEnumsAreTypes = 11,
  kAEUTEnumListIsExclusive = 10,
  kAEUTReplyIsReference = 9,
  kAEUTDirectParamIsReference = 9,
  kAEUTParamIsReference = 9,
  kAEUTPropertyIsReference = 9,
  kAEUTNotDirectParamIsTarget = 8,
  kAEUTParamIsTarget = 8,
  kAEUTApostrophe = 3,
  kAEUTFeminine = 2,
  kAEUTMasculine = 1,
  kAEUTPlural = 0
};

struct TScriptingSizeResource {
  SInt16 scriptingSizeFlags;
  UInt32 minStackSize;
  UInt32 preferredStackSize;
  UInt32 maxStackSize;
  UInt32 minHeapSize;
  UInt32 preferredHeapSize;
  UInt32 maxHeapSize;
};
typedef struct TScriptingSizeResource TScriptingSizeResource;
enum {
  kLaunchToGetTerminology = (1 << 15),
  kDontFindAppBySignature = (1 << 14),
  kAlwaysSendSubject = (1 << 13)
};


enum {
  kReadExtensionTermsMask = (1 << 15)
};

enum {


  kOSIZDontOpenResourceFile = 15,
  kOSIZdontAcceptRemoteEvents = 14,
  kOSIZOpenWithReadPermission = 13,
  kOSIZCodeInSharedLibraries = 11
};


#pragma pack(pop)
# 46 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AE.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEHelpers.h" 1 3
# 44 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEHelpers.h" 3
extern "C" {


#pragma pack(push, 2)
# 63 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEHelpers.h" 3
typedef UInt32 AEBuildErrorCode;
enum {
  aeBuildSyntaxNoErr = 0,
  aeBuildSyntaxBadToken = 1,
  aeBuildSyntaxBadEOF = 2,
  aeBuildSyntaxNoEOF = 3,
  aeBuildSyntaxBadNegative = 4,
  aeBuildSyntaxMissingQuote = 5,
  aeBuildSyntaxBadHex = 6,
  aeBuildSyntaxOddHex = 7,
  aeBuildSyntaxNoCloseHex = 8,
  aeBuildSyntaxUncoercedHex = 9,
  aeBuildSyntaxNoCloseString = 10,
  aeBuildSyntaxBadDesc = 11,
  aeBuildSyntaxBadData = 12,
  aeBuildSyntaxNoCloseParen = 13,
  aeBuildSyntaxNoCloseBracket = 14,
  aeBuildSyntaxNoCloseBrace = 15,
  aeBuildSyntaxNoKey = 16,
  aeBuildSyntaxNoColon = 17,
  aeBuildSyntaxCoercedList = 18,
  aeBuildSyntaxUncoercedDoubleAt = 19
};



struct AEBuildError {
  AEBuildErrorCode fError;
  UInt32 fErrorPos;
};
typedef struct AEBuildError AEBuildError;
# 109 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEHelpers.h" 3
extern OSStatus
AEBuildDesc(
  AEDesc * dst,
  AEBuildError * error,
  const char * src,
  ...) ;
# 129 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEHelpers.h" 3
extern OSStatus
vAEBuildDesc(
  AEDesc * dst,
  AEBuildError * error,
  const char * src,
  va_list args) ;
# 150 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEHelpers.h" 3
extern OSStatus
AEBuildParameters(
  AppleEvent * event,
  AEBuildError * error,
  const char * format,
  ...) ;
# 170 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEHelpers.h" 3
extern OSStatus
vAEBuildParameters(
  AppleEvent * event,
  AEBuildError * error,
  const char * format,
  va_list args) ;
# 190 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEHelpers.h" 3
extern OSStatus
AEBuildAppleEvent(
  AEEventClass theClass,
  AEEventID theID,
  DescType addressType,
  const void * addressData,
  Size addressLength,
  SInt16 returnID,
  SInt32 transactionID,
  AppleEvent * result,
  AEBuildError * error,
  const char * paramsFmt,
  ...) ;
# 217 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEHelpers.h" 3
extern OSStatus
vAEBuildAppleEvent(
  AEEventClass theClass,
  AEEventID theID,
  DescType addressType,
  const void * addressData,
  Size addressLength,
  SInt16 returnID,
  SInt32 transactionID,
  AppleEvent * resultEvt,
  AEBuildError * error,
  const char * paramsFmt,
  va_list args) ;
# 252 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEHelpers.h" 3
extern OSStatus
AEPrintDescToHandle(
  const AEDesc * desc,
  Handle * result) ;
# 268 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEHelpers.h" 3
typedef struct OpaqueAEStreamRef* AEStreamRef;
# 284 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEHelpers.h" 3
extern AEStreamRef
AEStreamOpen(void) ;
# 304 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEHelpers.h" 3
extern OSStatus
AEStreamClose(
  AEStreamRef ref,
  AEDesc * desc) ;
# 325 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEHelpers.h" 3
extern OSStatus
AEStreamOpenDesc(
  AEStreamRef ref,
  DescType newType) ;
# 343 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEHelpers.h" 3
extern OSStatus
AEStreamWriteData(
  AEStreamRef ref,
  const void * data,
  Size length) ;
# 365 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEHelpers.h" 3
extern OSStatus
AEStreamCloseDesc(AEStreamRef ref) ;
# 381 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEHelpers.h" 3
extern OSStatus
AEStreamWriteDesc(
  AEStreamRef ref,
  DescType newType,
  const void * data,
  Size length) ;
# 401 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEHelpers.h" 3
extern OSStatus
AEStreamWriteAEDesc(
  AEStreamRef ref,
  const AEDesc * desc) ;
# 422 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEHelpers.h" 3
extern OSStatus
AEStreamOpenList(AEStreamRef ref) ;
# 438 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEHelpers.h" 3
extern OSStatus
AEStreamCloseList(AEStreamRef ref) ;
# 457 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEHelpers.h" 3
extern OSStatus
AEStreamOpenRecord(
  AEStreamRef ref,
  DescType newType) ;
# 475 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEHelpers.h" 3
extern OSStatus
AEStreamSetRecordType(
  AEStreamRef ref,
  DescType newType) ;
# 493 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEHelpers.h" 3
extern OSStatus
AEStreamCloseRecord(AEStreamRef ref) ;
# 512 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEHelpers.h" 3
extern OSStatus
AEStreamWriteKeyDesc(
  AEStreamRef ref,
  AEKeyword key,
  DescType newType,
  const void * data,
  Size length) ;
# 536 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEHelpers.h" 3
extern OSStatus
AEStreamOpenKeyDesc(
  AEStreamRef ref,
  AEKeyword key,
  DescType newType) ;
# 555 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEHelpers.h" 3
extern OSStatus
AEStreamWriteKey(
  AEStreamRef ref,
  AEKeyword key) ;
# 577 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEHelpers.h" 3
extern AEStreamRef
AEStreamCreateEvent(
  AEEventClass clazz,
  AEEventID id,
  DescType targetType,
  const void * targetData,
  Size targetLength,
  SInt16 returnID,
  SInt32 transactionID) ;
# 607 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEHelpers.h" 3
extern AEStreamRef
AEStreamOpenEvent(AppleEvent * event) ;
# 623 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEHelpers.h" 3
extern OSStatus
AEStreamOptionalParam(
  AEStreamRef ref,
  AEKeyword key) ;



#pragma pack(pop)


}
# 50 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AE.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEMach.h" 1 3
# 30 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEMach.h" 3
extern "C" {



}
# 45 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEMach.h" 3
extern "C" {
# 83 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEMach.h" 3
enum {
  keyReplyPortAttr = 'repp'
};


enum {
  typeReplyPortAttr = keyReplyPortAttr
};
# 112 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEMach.h" 3
extern mach_port_t
AEGetRegisteredMachPort(void) ;
# 151 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEMach.h" 3
extern OSStatus
AEDecodeMessage(
  mach_msg_header_t * header,
  AppleEvent * event,
  AppleEvent * reply) ;
# 179 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEMach.h" 3
extern OSStatus
AEProcessMessage(mach_msg_header_t * header) ;
# 215 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AEMach.h" 3
extern OSStatus
AESendMessage(
  const AppleEvent * event,
  AppleEvent * reply,
  AESendMode sendMode,
  long timeOutInTicks) ;





}
# 54 "/System/Library/Frameworks/CoreServices.framework/Frameworks/AE.framework/Headers/AE.h" 2 3
# 22 "/System/Library/Frameworks/CoreServices.framework/Headers/CoreServices.h" 2 3







# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/OSServices.h" 1 3
# 30 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/OSServices.h" 3
# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentityAuthority.h" 1 3
# 32 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentityAuthority.h" 3
extern "C" {
# 43 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentityAuthority.h" 3
typedef struct __CSIdentityAuthority* CSIdentityAuthorityRef;
# 61 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentityAuthority.h" 3
extern CFTypeID
CSIdentityAuthorityGetTypeID(void) ;
# 89 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentityAuthority.h" 3
extern CSIdentityAuthorityRef
CSGetDefaultIdentityAuthority(void) ;
# 112 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentityAuthority.h" 3
extern CSIdentityAuthorityRef
CSGetLocalIdentityAuthority(void) ;
# 140 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentityAuthority.h" 3
extern CSIdentityAuthorityRef
CSGetManagedIdentityAuthority(void) ;
# 167 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentityAuthority.h" 3
extern CFStringRef
CSIdentityAuthorityCopyLocalizedName(CSIdentityAuthorityRef authority) ;





}
# 31 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/OSServices.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 1 3
# 30 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 3
# 1 "/System/Library/Frameworks/Security.framework/Headers/SecBase.h" 1 3
# 35 "/System/Library/Frameworks/Security.framework/Headers/SecBase.h" 3
extern "C" {
# 45 "/System/Library/Frameworks/Security.framework/Headers/SecBase.h" 3
typedef struct OpaqueSecKeychainRef *SecKeychainRef;





typedef struct OpaqueSecKeychainItemRef *SecKeychainItemRef;





typedef struct OpaqueSecKeychainSearchRef *SecKeychainSearchRef;





typedef OSType SecKeychainAttrType;
# 72 "/System/Library/Frameworks/Security.framework/Headers/SecBase.h" 3
struct SecKeychainAttribute
{
    SecKeychainAttrType tag;
    UInt32 length;
    void *data;
};
typedef struct SecKeychainAttribute SecKeychainAttribute;





typedef SecKeychainAttribute *SecKeychainAttributePtr;







struct SecKeychainAttributeList
{
    UInt32 count;
    SecKeychainAttribute *attr;
};
typedef struct SecKeychainAttributeList SecKeychainAttributeList;





typedef UInt32 SecKeychainStatus;






typedef struct OpaqueSecTrustedApplicationRef *SecTrustedApplicationRef;





typedef struct OpaqueSecPolicyRef *SecPolicyRef;





typedef struct OpaqueSecCertificateRef *SecCertificateRef;





typedef struct OpaqueSecAccessRef *SecAccessRef;





typedef struct OpaqueSecIdentityRef *SecIdentityRef;





typedef struct OpaqueSecKeyRef *SecKeyRef;





typedef struct OpaqueSecTrustRef *SecACLRef;





typedef struct OpaqueSecPasswordRef *SecPasswordRef;
# 162 "/System/Library/Frameworks/Security.framework/Headers/SecBase.h" 3
struct SecKeychainAttributeInfo
{
    UInt32 count;
    UInt32 *tag;
 UInt32 *format;
};
typedef struct SecKeychainAttributeInfo SecKeychainAttributeInfo;
# 177 "/System/Library/Frameworks/Security.framework/Headers/SecBase.h" 3
CFStringRef SecCopyErrorMessageString(OSStatus status, void *reserved);
# 241 "/System/Library/Frameworks/Security.framework/Headers/SecBase.h" 3
enum
{
    errSecSuccess = 0,
    errSecUnimplemented = -4,
    errSecParam = -50,
    errSecAllocate = -108,

    errSecNotAvailable = -25291,
    errSecReadOnly = -25292,
    errSecAuthFailed = -25293,
    errSecNoSuchKeychain = -25294,
    errSecInvalidKeychain = -25295,
    errSecDuplicateKeychain = -25296,
    errSecDuplicateCallback = -25297,
    errSecInvalidCallback = -25298,
    errSecDuplicateItem = -25299,
    errSecItemNotFound = -25300,
    errSecBufferTooSmall = -25301,
    errSecDataTooLarge = -25302,
    errSecNoSuchAttr = -25303,
    errSecInvalidItemRef = -25304,
    errSecInvalidSearchRef = -25305,
    errSecNoSuchClass = -25306,
    errSecNoDefaultKeychain = -25307,
    errSecInteractionNotAllowed = -25308,
    errSecReadOnlyAttr = -25309,
    errSecWrongSecVersion = -25310,
    errSecKeySizeNotAllowed = -25311,
    errSecNoStorageModule = -25312,
    errSecNoCertificateModule = -25313,
    errSecNoPolicyModule = -25314,
    errSecInteractionRequired = -25315,
    errSecDataNotAvailable = -25316,
    errSecDataNotModifiable = -25317,
    errSecCreateChainFailed = -25318,
 errSecInvalidPrefsDomain = -25319,

 errSecACLNotSimple = -25240,
 errSecPolicyNotFound = -25241,
 errSecInvalidTrustSetting = -25242,
 errSecNoAccessForItem = -25243,
 errSecInvalidOwnerEdit = -25244,
 errSecTrustNotAvailable = -25245,
 errSecUnsupportedFormat = -25256,
 errSecUnknownFormat = -25257,
 errSecKeyIsSensitive = -25258,
 errSecMultiplePrivKeys = -25259,
 errSecPassphraseRequired = -25260,
 errSecInvalidPasswordRef = -25261,
 errSecInvalidTrustSettings = -25262,
 errSecNoTrustSettings = -25263,
 errSecPkcs12VerifyFailure = -25264,

    errSecDecode = -26275,
};


}
# 31 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 2 3



# 1 "/System/Library/Frameworks/Security.framework/Headers/Authorization.h" 1 3
# 43 "/System/Library/Frameworks/Security.framework/Headers/Authorization.h" 3
extern "C" {
# 86 "/System/Library/Frameworks/Security.framework/Headers/Authorization.h" 3
enum {
 errAuthorizationSuccess = 0,
 errAuthorizationInvalidSet = -60001,
 errAuthorizationInvalidRef = -60002,
 errAuthorizationInvalidTag = -60003,
 errAuthorizationInvalidPointer = -60004,
 errAuthorizationDenied = -60005,
 errAuthorizationCanceled = -60006,
 errAuthorizationInteractionNotAllowed = -60007,
 errAuthorizationInternal = -60008,
 errAuthorizationExternalizeNotAllowed = -60009,
 errAuthorizationInternalizeNotAllowed = -60010,
 errAuthorizationInvalidFlags = -60011,
 errAuthorizationToolExecuteFailure = -60031,
 errAuthorizationToolEnvironmentError = -60032,
 errAuthorizationBadAddress = -60033,
};






enum {
 kAuthorizationFlagDefaults = 0,
 kAuthorizationFlagInteractionAllowed = (1 << 0),
 kAuthorizationFlagExtendRights = (1 << 1),
 kAuthorizationFlagPartialRights = (1 << 2),
 kAuthorizationFlagDestroyRights = (1 << 3),
 kAuthorizationFlagPreAuthorize = (1 << 4),


 kAuthorizationFlagNoData = (1 << 20)
};






typedef UInt32 AuthorizationFlags;






enum {
 kAuthorizationFlagCanNotPreAuthorize = (1 << 0)
};






typedef const struct AuthorizationOpaqueRef *AuthorizationRef;






typedef const char *AuthorizationString;
# 164 "/System/Library/Frameworks/Security.framework/Headers/Authorization.h" 3
typedef struct {
 AuthorizationString name;
 size_t valueLength;
 void *value;
 UInt32 flags;
} AuthorizationItem;
# 179 "/System/Library/Frameworks/Security.framework/Headers/Authorization.h" 3
typedef struct {
 UInt32 count;
 AuthorizationItem *items;
} AuthorizationItemSet;
# 197 "/System/Library/Frameworks/Security.framework/Headers/Authorization.h" 3
enum {
 kAuthorizationExternalFormLength = 32
};

typedef struct {
 char bytes[kAuthorizationExternalFormLength];
} AuthorizationExternalForm;
# 212 "/System/Library/Frameworks/Security.framework/Headers/Authorization.h" 3
typedef AuthorizationItemSet AuthorizationRights;







typedef AuthorizationItemSet AuthorizationEnvironment;
# 253 "/System/Library/Frameworks/Security.framework/Headers/Authorization.h" 3
OSStatus AuthorizationCreate(const AuthorizationRights *rights,
 const AuthorizationEnvironment *environment,
 AuthorizationFlags flags,
 AuthorizationRef *authorization);
# 275 "/System/Library/Frameworks/Security.framework/Headers/Authorization.h" 3
OSStatus AuthorizationFree(AuthorizationRef authorization, AuthorizationFlags flags);
# 311 "/System/Library/Frameworks/Security.framework/Headers/Authorization.h" 3
OSStatus AuthorizationCopyRights(AuthorizationRef authorization,
 const AuthorizationRights *rights,
 const AuthorizationEnvironment *environment,
 AuthorizationFlags flags,
 AuthorizationRights **authorizedRights);
# 335 "/System/Library/Frameworks/Security.framework/Headers/Authorization.h" 3
OSStatus AuthorizationCopyInfo(AuthorizationRef authorization,
 AuthorizationString tag,
 AuthorizationItemSet **info);
# 359 "/System/Library/Frameworks/Security.framework/Headers/Authorization.h" 3
OSStatus AuthorizationMakeExternalForm(AuthorizationRef authorization,
 AuthorizationExternalForm *extForm);
# 376 "/System/Library/Frameworks/Security.framework/Headers/Authorization.h" 3
OSStatus AuthorizationCreateFromExternalForm(const AuthorizationExternalForm *extForm,
 AuthorizationRef *authorization);
# 391 "/System/Library/Frameworks/Security.framework/Headers/Authorization.h" 3
OSStatus AuthorizationFreeItemSet(AuthorizationItemSet *set);
# 411 "/System/Library/Frameworks/Security.framework/Headers/Authorization.h" 3
OSStatus AuthorizationExecuteWithPrivileges(AuthorizationRef authorization,
 const char *pathToTool,
 AuthorizationFlags options,
 char * const *arguments,
 FILE **communicationsPipe);
# 426 "/System/Library/Frameworks/Security.framework/Headers/Authorization.h" 3
OSStatus AuthorizationCopyPrivilegedReference(AuthorizationRef *authorization,
 AuthorizationFlags flags);



}
# 35 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 2 3
# 46 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 3
extern "C" {


#pragma pack(push, 2)
# 63 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 3
extern const CFStringRef kCSIdentityErrorDomain ;







enum {




  kCSIdentityUnknownAuthorityErr = -1,




  kCSIdentityAuthorityNotAccessibleErr = -2,




  kCSIdentityPermissionErr = -3,




  kCSIdentityDeletedErr = -4,




  kCSIdentityInvalidFullNameErr = -5,




  kCSIdentityDuplicateFullNameErr = -6,





  kCSIdentityInvalidPosixNameErr = -7,




  kCSIdentityDuplicatePosixNameErr = -8
};
# 147 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 3
typedef struct __CSIdentity* CSIdentityRef;
# 156 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 3
typedef struct __CSIdentityQuery* CSIdentityQueryRef;
# 171 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 3
extern const CFStringRef kCSIdentityGeneratePosixName ;
# 180 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 3
enum {




  kCSIdentityClassUser = 1,




  kCSIdentityClassGroup = 2
};

typedef CFIndex CSIdentityClass;







enum {




  kCSIdentityFlagNone = 0,
# 215 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 3
  kCSIdentityFlagHidden = 1
};

typedef CFOptionFlags CSIdentityFlags;
# 236 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 3
extern CFTypeID
CSIdentityGetTypeID(void) ;
# 298 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 3
extern CSIdentityRef
CSIdentityCreate(
  CFAllocatorRef allocator,
  CSIdentityClass identityClass,
  CFStringRef fullName,
  CFStringRef posixName,
  CSIdentityFlags flags,
  CSIdentityAuthorityRef authority) ;
# 335 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 3
extern CSIdentityRef
CSIdentityCreateCopy(
  CFAllocatorRef allocator,
  CSIdentityRef identity) ;
# 369 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 3
extern CSIdentityClass
CSIdentityGetClass(CSIdentityRef identity) ;
# 396 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 3
extern CSIdentityAuthorityRef
CSIdentityGetAuthority(CSIdentityRef identity) ;
# 424 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 3
extern CFUUIDRef
CSIdentityGetUUID(CSIdentityRef identity) ;
# 456 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 3
extern CFStringRef
CSIdentityGetFullName(CSIdentityRef identity) ;
# 483 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 3
extern id_t
CSIdentityGetPosixID(CSIdentityRef identity) ;
# 516 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 3
extern CFStringRef
CSIdentityGetPosixName(CSIdentityRef identity) ;
# 545 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 3
extern CFStringRef
CSIdentityGetEmailAddress(CSIdentityRef identity) ;
# 575 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 3
extern CFURLRef
CSIdentityGetImageURL(CSIdentityRef identity) ;
# 604 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 3
extern CFDataRef
CSIdentityGetImageData(CSIdentityRef identity) ;
# 633 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 3
extern CFStringRef
CSIdentityGetImageDataType(CSIdentityRef identity) ;
# 668 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 3
extern CFArrayRef
CSIdentityGetAliases(CSIdentityRef identity) ;
# 699 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 3
extern Boolean
CSIdentityIsMemberOfGroup(
  CSIdentityRef identity,
  CSIdentityRef group) ;
# 728 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 3
extern Boolean
CSIdentityIsHidden(CSIdentityRef identity) ;
# 771 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 3
extern CFDataRef
CSIdentityCreatePersistentReference(
  CFAllocatorRef allocator,
  CSIdentityRef identity) ;
# 812 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 3
extern Boolean
CSIdentityIsEnabled(CSIdentityRef user) ;
# 842 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 3
extern Boolean
CSIdentityAuthenticateUsingPassword(
  CSIdentityRef user,
  CFStringRef password) ;
# 877 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 3
extern SecCertificateRef
CSIdentityGetCertificate(CSIdentityRef user) ;
# 918 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 3
extern CSIdentityQueryRef
CSIdentityCreateGroupMembershipQuery(
  CFAllocatorRef allocator,
  CSIdentityRef group) ;
# 956 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 3
extern void
CSIdentitySetFullName(
  CSIdentityRef identity,
  CFStringRef fullName) ;
# 989 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 3
extern void
CSIdentitySetEmailAddress(
  CSIdentityRef identity,
  CFStringRef emailAddress) ;
# 1022 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 3
extern void
CSIdentitySetImageURL(
  CSIdentityRef identity,
  CFURLRef url) ;
# 1058 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 3
extern void
CSIdentitySetImageData(
  CSIdentityRef identity,
  CFDataRef imageData,
  CFStringRef imageDataType) ;
# 1091 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 3
extern void
CSIdentityAddAlias(
  CSIdentityRef identity,
  CFStringRef alias) ;
# 1123 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 3
extern void
CSIdentityRemoveAlias(
  CSIdentityRef identity,
  CFStringRef alias) ;
# 1162 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 3
extern void
CSIdentityAddMember(
  CSIdentityRef group,
  CSIdentityRef member) ;
# 1194 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 3
extern void
CSIdentityRemoveMember(
  CSIdentityRef group,
  CSIdentityRef member) ;
# 1236 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 3
extern void
CSIdentitySetIsEnabled(
  CSIdentityRef user,
  Boolean isEnabled) ;
# 1272 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 3
extern void
CSIdentitySetPassword(
  CSIdentityRef user,
  CFStringRef password) ;
# 1308 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 3
extern void
CSIdentitySetCertificate(
  CSIdentityRef user,
  SecCertificateRef certificate) ;
# 1342 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 3
extern void
CSIdentityDelete(CSIdentityRef identity) ;
# 1389 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 3
extern Boolean
CSIdentityCommit(
  CSIdentityRef identity,
  AuthorizationRef authorization,
  CFErrorRef * error) ;
# 1402 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 3
enum {




  kCSIdentityCommitCompleted = 1
};


typedef void ( * CSIdentityStatusUpdatedCallback)(CSIdentityRef identity, CFIndex status, CFErrorRef error, void *info);
# 1420 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 3
struct CSIdentityClientContext {





  CFIndex version;





  void * info;
# 1441 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 3
  CFAllocatorRetainCallBack retain;





  CFAllocatorReleaseCallBack release;






  CFAllocatorCopyDescriptionCallBack copyDescription;





  CSIdentityStatusUpdatedCallback statusUpdated;
};
typedef struct CSIdentityClientContext CSIdentityClientContext;
# 1507 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 3
extern Boolean
CSIdentityCommitAsynchronously(
  CSIdentityRef identity,
  const CSIdentityClientContext * clientContext,
  CFRunLoopRef runLoop,
  CFStringRef runLoopMode,
  AuthorizationRef authorization) ;
# 1539 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 3
extern Boolean
CSIdentityIsCommitting(CSIdentityRef identity) ;
# 1570 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentity.h" 3
extern void
CSIdentityRemoveClient(CSIdentityRef identity) ;




#pragma pack(pop)


}
# 35 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/OSServices.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentityQuery.h" 1 3
# 33 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentityQuery.h" 3
extern "C" {


#pragma pack(push, 2)
# 53 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentityQuery.h" 3
extern CFTypeID
CSIdentityQueryGetTypeID(void) ;
# 68 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentityQuery.h" 3
enum {





  kCSIdentityQueryGenerateUpdateEvents = 0x0001,





  kCSIdentityQueryIncludeHiddenIdentities = 0x0002
};

typedef CFOptionFlags CSIdentityQueryFlags;
# 95 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentityQuery.h" 3
enum {




  kCSIdentityQueryStringEquals = 1,




  kCSIdentityQueryStringBeginsWith = 2
};

typedef CFIndex CSIdentityQueryStringComparisonMethod;
# 142 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentityQuery.h" 3
extern CSIdentityQueryRef
CSIdentityQueryCreate(
  CFAllocatorRef allocator,
  CSIdentityClass identityClass,
  CSIdentityAuthorityRef authority) ;
# 188 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentityQuery.h" 3
extern CSIdentityQueryRef
CSIdentityQueryCreateForName(
  CFAllocatorRef allocator,
  CFStringRef name,
  CSIdentityQueryStringComparisonMethod comparisonMethod,
  CSIdentityClass identityClass,
  CSIdentityAuthorityRef authority) ;
# 229 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentityQuery.h" 3
extern CSIdentityQueryRef
CSIdentityQueryCreateForUUID(
  CFAllocatorRef allocator,
  CFUUIDRef uuid,
  CSIdentityAuthorityRef authority) ;
# 271 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentityQuery.h" 3
extern CSIdentityQueryRef
CSIdentityQueryCreateForPosixID(
  CFAllocatorRef allocator,
  id_t posixID,
  CSIdentityClass identityClass,
  CSIdentityAuthorityRef authority) ;
# 310 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentityQuery.h" 3
extern CSIdentityQueryRef
CSIdentityQueryCreateForPersistentReference(
  CFAllocatorRef allocator,
  CFDataRef referenceData) ;
# 339 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentityQuery.h" 3
extern CSIdentityQueryRef
CSIdentityQueryCreateForCurrentUser(CFAllocatorRef allocator) ;
# 370 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentityQuery.h" 3
extern CFArrayRef
CSIdentityQueryCopyResults(CSIdentityQueryRef query) ;
# 405 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentityQuery.h" 3
extern Boolean
CSIdentityQueryExecute(
  CSIdentityQueryRef query,
  CSIdentityQueryFlags flags,
  CFErrorRef * error) ;
# 423 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentityQuery.h" 3
enum {






  kCSIdentityQueryEventSearchPhaseFinished = 1,




  kCSIdentityQueryEventResultsAdded = 2,





  kCSIdentityQueryEventResultsChanged = 3,




  kCSIdentityQueryEventResultsRemoved = 4,





  kCSIdentityQueryEventErrorOccurred = 5
};

typedef CFIndex CSIdentityQueryEvent;
# 481 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentityQuery.h" 3
typedef void ( * CSIdentityQueryReceiveEventCallback)(CSIdentityQueryRef query, CSIdentityQueryEvent event, CFArrayRef identities, CFErrorRef error, void *info);







struct CSIdentityQueryClientContext {
  CFIndex version;
  void * info;
  CFAllocatorRetainCallBack retainInfo;
  CFAllocatorReleaseCallBack releaseInfo;
  CFAllocatorCopyDescriptionCallBack copyInfoDescription;
  CSIdentityQueryReceiveEventCallback receiveEvent;
};
typedef struct CSIdentityQueryClientContext CSIdentityQueryClientContext;
# 533 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentityQuery.h" 3
extern Boolean
CSIdentityQueryExecuteAsynchronously(
  CSIdentityQueryRef query,
  CSIdentityQueryFlags flags,
  const CSIdentityQueryClientContext * clientContext,
  CFRunLoopRef runLoop,
  CFStringRef runLoopMode) ;
# 568 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/CSIdentityQuery.h" 3
extern void
CSIdentityQueryStop(CSIdentityQueryRef query) ;




#pragma pack(pop)


}
# 39 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/OSServices.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/IconStorage.h" 1 3
# 31 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/IconStorage.h" 3
#pragma pack(push, 2)



enum {
  kIconServices16PixelDataARGB = 'ic04',
  kIconServices32PixelDataARGB = 'ic05',
  kIconServices48PixelDataARGB = 'ic06',
  kIconServices128PixelDataARGB = 'ic07'
};



enum {
  kIconServices256PixelDataARGB = 'ic08',
  kIconServices512PixelDataARGB = 'ic09',
  kThumbnail32BitData = 'it32',
  kThumbnail8BitMask = 't8mk'
};

enum {
  kHuge1BitMask = 'ich#',
  kHuge4BitData = 'ich4',
  kHuge8BitData = 'ich8',
  kHuge32BitData = 'ih32',
  kHuge8BitMask = 'h8mk'
};



enum {
  kLarge1BitMask = 'ICN#',
  kLarge4BitData = 'icl4',
  kLarge8BitData = 'icl8',
  kLarge32BitData = 'il32',
  kLarge8BitMask = 'l8mk',
  kSmall1BitMask = 'ics#',
  kSmall4BitData = 'ics4',
  kSmall8BitData = 'ics8',
  kSmall32BitData = 'is32',
  kSmall8BitMask = 's8mk',
  kMini1BitMask = 'icm#',
  kMini4BitData = 'icm4',
  kMini8BitData = 'icm8'
};


enum {
  large1BitMask = kLarge1BitMask,
  large4BitData = kLarge4BitData,
  large8BitData = kLarge8BitData,
  small1BitMask = kSmall1BitMask,
  small4BitData = kSmall4BitData,
  small8BitData = kSmall8BitData,
  mini1BitMask = kMini1BitMask,
  mini4BitData = kMini4BitData,
  mini8BitData = kMini8BitData
};
# 106 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/IconStorage.h" 3
enum {
  kIconFamilyType = 'icns'
};


struct IconFamilyElement {
  OSType elementType;
  SInt32 elementSize;
  unsigned char elementData[1];
};
typedef struct IconFamilyElement IconFamilyElement;
struct IconFamilyResource {
  OSType resourceType;
  SInt32 resourceSize;
  IconFamilyElement elements[1];

};
typedef struct IconFamilyResource IconFamilyResource;
typedef IconFamilyResource * IconFamilyPtr;
typedef IconFamilyPtr * IconFamilyHandle;



enum {
  kTileIconVariant = 'tile',
  kRolloverIconVariant = 'over',
  kDropIconVariant = 'drop',
  kOpenIconVariant = 'open',
  kOpenDropIconVariant = 'odrp'
};


#pragma pack(pop)
# 43 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/OSServices.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/SystemSound.h" 1 3
# 36 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/SystemSound.h" 3
extern "C" {





enum {
  kSystemSoundNoError = 0,
  kSystemSoundUnspecifiedError = -1500,
  kSystemSoundClientTimedOutError = -1501
};




typedef UInt32 SystemSoundActionID;
typedef OSStatus ( * SystemSoundCompletionProcPtr)(SystemSoundActionID actionID, void *userData);
typedef SystemSoundCompletionProcPtr SystemSoundCompletionUPP;
# 62 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/SystemSound.h" 3
extern SystemSoundCompletionUPP
NewSystemSoundCompletionUPP(SystemSoundCompletionProcPtr userRoutine) __attribute__((deprecated));
# 73 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/SystemSound.h" 3
extern void
DisposeSystemSoundCompletionUPP(SystemSoundCompletionUPP userUPP) __attribute__((deprecated));
# 84 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/SystemSound.h" 3
extern OSStatus
InvokeSystemSoundCompletionUPP(
  SystemSoundActionID actionID,
  void * userData,
  SystemSoundCompletionUPP userUPP) __attribute__((deprecated));



    inline SystemSoundCompletionUPP NewSystemSoundCompletionUPP(SystemSoundCompletionProcPtr userRoutine) { return userRoutine; }
    inline void DisposeSystemSoundCompletionUPP(SystemSoundCompletionUPP) { }
    inline OSStatus InvokeSystemSoundCompletionUPP(SystemSoundActionID actionID, void * userData, SystemSoundCompletionUPP userUPP) { return (*userUPP)(actionID, userData); }
# 124 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/SystemSound.h" 3
extern void
AlertSoundPlay(void) __attribute__((deprecated));
# 153 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/SystemSound.h" 3
extern void
AlertSoundPlayCustomSound(SystemSoundActionID inAction) __attribute__((deprecated));
# 183 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/SystemSound.h" 3
extern void
SystemSoundPlay(SystemSoundActionID inAction) __attribute__((deprecated));
# 223 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/SystemSound.h" 3
extern OSStatus
SystemSoundGetActionID(
  const FSRef * userFile,
  SystemSoundActionID * outAction) __attribute__((deprecated));
# 256 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/SystemSound.h" 3
extern OSStatus
SystemSoundRemoveActionID(SystemSoundActionID inAction) __attribute__((deprecated));
# 304 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/SystemSound.h" 3
extern OSStatus
SystemSoundSetCompletionRoutine(
  SystemSoundActionID inAction,
  CFRunLoopRef inRunLoop,
  CFStringRef inRunLoopMode,
  SystemSoundCompletionUPP inCompletionRoutine,
  void * inUserData) __attribute__((deprecated));
# 340 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/SystemSound.h" 3
extern void
SystemSoundRemoveCompletionRoutine(SystemSoundActionID inAction) __attribute__((deprecated));




}
# 47 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/OSServices.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSTypes.h" 1 3
# 42 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSTypes.h" 3
extern "C" {


#pragma pack(push, 2)





enum {
  errWSInternalError = -65793L,
  errWSTransportError = -65794L,
  errWSParseError = -65795L,
  errWSTimeoutError = -65796L
};
# 70 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSTypes.h" 3
enum WSTypeID {




  eWSUnknownType = 0,




  eWSNullType = 1,




  eWSBooleanType = 2,




  eWSIntegerType = 3,




  eWSDoubleType = 4,




  eWSStringType = 5,




  eWSDateType = 6,




  eWSDataType = 7,




  eWSArrayType = 8,




  eWSDictionaryType = 9
};
typedef enum WSTypeID WSTypeID;

typedef void * ( * WSClientContextRetainCallBackProcPtr)(void * info);
typedef void ( * WSClientContextReleaseCallBackProcPtr)(void * info);
typedef CFStringRef ( * WSClientContextCopyDescriptionCallBackProcPtr)(void * info);
# 137 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSTypes.h" 3
struct WSClientContext {




  CFIndex version;




  void * info;




  WSClientContextRetainCallBackProcPtr retain;




  WSClientContextReleaseCallBackProcPtr release;




  WSClientContextCopyDescriptionCallBackProcPtr copyDescription;
};
typedef struct WSClientContext WSClientContext;
# 176 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSTypes.h" 3
extern CFStringRef kWSXMLRPCProtocol;
extern CFStringRef kWSSOAP1999Protocol;
extern CFStringRef kWSSOAP2001Protocol;
# 206 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSTypes.h" 3
extern WSTypeID
WSGetWSTypeIDFromCFType(CFTypeRef ref);
# 234 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSTypes.h" 3
extern CFTypeID
WSGetCFTypeIDFromWSTypeID(WSTypeID typeID);







#pragma pack(pop)


}
# 51 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/OSServices.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSMethodInvocation.h" 1 3
# 35 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSMethodInvocation.h" 3
extern "C" {
# 54 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSMethodInvocation.h" 3
extern CFStringRef kWSMethodInvocationResult;



extern CFStringRef kWSFaultString;
extern CFStringRef kWSFaultCode;
extern CFStringRef kWSFaultExtra;
# 70 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSMethodInvocation.h" 3
extern CFStringRef kWSNetworkStreamFaultString;
extern CFStringRef kWSStreamErrorMessage;
extern CFStringRef kWSStreamErrorDomain;
extern CFStringRef kWSStreamErrorError;
# 90 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSMethodInvocation.h" 3
extern CFStringRef kWSHTTPMessage;
extern CFStringRef kWSHTTPResponseMessage;





extern CFStringRef kWSHTTPVersion;
extern CFStringRef kWSHTTPExtraHeaders;
extern CFStringRef kWSHTTPProxy;
extern CFStringRef kWSHTTPFollowsRedirects;
# 114 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSMethodInvocation.h" 3
extern CFStringRef kWSDebugOutgoingHeaders;
extern CFStringRef kWSDebugOutgoingBody;
extern CFStringRef kWSDebugIncomingHeaders;
extern CFStringRef kWSDebugIncomingBody;





extern CFStringRef kWSSOAPMethodNamespaceURI;
extern CFStringRef kWSSOAPBodyEncodingStyle;
extern CFStringRef kWSSOAPStyleDoc;
extern CFStringRef kWSSOAPStyleRPC;







extern CFStringRef kWSSOAPMessageHeaders;





extern CFStringRef kWSRecordParameterOrder;
extern CFStringRef kWSRecordNamespaceURI;
extern CFStringRef kWSRecordType;





extern CFStringRef kWSMethodInvocationResultParameterName;






extern CFStringRef kWSMethodInvocationTimeoutValue;

}
# 167 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSMethodInvocation.h" 3
extern "C" {
# 184 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSMethodInvocation.h" 3
typedef struct OpaqueWSMethodInvocationRef* WSMethodInvocationRef;
# 196 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSMethodInvocation.h" 3
extern CFTypeID
WSMethodInvocationGetTypeID(void);
# 233 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSMethodInvocation.h" 3
extern WSMethodInvocationRef
WSMethodInvocationCreate(
  CFURLRef url,
  CFStringRef methodName,
  CFStringRef protocol);
# 265 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSMethodInvocation.h" 3
extern WSMethodInvocationRef
WSMethodInvocationCreateFromSerialization(CFDataRef contract);
# 293 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSMethodInvocation.h" 3
extern CFDataRef
WSMethodInvocationCopySerialization(WSMethodInvocationRef invocation);
# 329 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSMethodInvocation.h" 3
extern void
WSMethodInvocationSetParameters(
  WSMethodInvocationRef invocation,
  CFDictionaryRef parameters,
  CFArrayRef parameterOrder);
# 366 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSMethodInvocation.h" 3
extern CFDictionaryRef
WSMethodInvocationCopyParameters(
  WSMethodInvocationRef invocation,
  CFArrayRef * parameterOrder);
# 406 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSMethodInvocation.h" 3
extern void
WSMethodInvocationSetProperty(
  WSMethodInvocationRef invocation,
  CFStringRef propertyName,
  CFTypeRef propertyValue);
# 442 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSMethodInvocation.h" 3
extern CFTypeRef
WSMethodInvocationCopyProperty(
  WSMethodInvocationRef invocation,
  CFStringRef propertyName);
# 476 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSMethodInvocation.h" 3
extern CFDictionaryRef
WSMethodInvocationInvoke(WSMethodInvocationRef invocation);
# 526 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSMethodInvocation.h" 3
typedef void ( * WSMethodInvocationCallBackProcPtr)(WSMethodInvocationRef invocation, void *info, CFDictionaryRef outRef);
# 554 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSMethodInvocation.h" 3
extern void
WSMethodInvocationSetCallBack(
  WSMethodInvocationRef invocation,
  WSMethodInvocationCallBackProcPtr clientCB,
  WSClientContext * context);
# 587 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSMethodInvocation.h" 3
extern void
WSMethodInvocationScheduleWithRunLoop(
  WSMethodInvocationRef invocation,
  CFRunLoopRef runLoop,
  CFStringRef runLoopMode);
# 623 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSMethodInvocation.h" 3
extern void
WSMethodInvocationUnscheduleFromRunLoop(
  WSMethodInvocationRef invocation,
  CFRunLoopRef runLoop,
  CFStringRef runLoopMode);
# 662 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSMethodInvocation.h" 3
extern Boolean
WSMethodResultIsFault(CFDictionaryRef methodResult);
# 701 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSMethodInvocation.h" 3
typedef CFStringRef ( * WSMethodInvocationSerializationProcPtr)(WSMethodInvocationRef invocation, CFTypeRef obj, void *info);
# 734 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSMethodInvocation.h" 3
extern void
WSMethodInvocationAddSerializationOverride(
  WSMethodInvocationRef invocation,
  CFTypeID objType,
  WSMethodInvocationSerializationProcPtr serializationProc,
  WSClientContext * context);
# 773 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSMethodInvocation.h" 3
typedef CFTypeRef ( * WSMethodInvocationDeserializationProcPtr)(WSMethodInvocationRef invocation, CFXMLTreeRef msgRoot, CFXMLTreeRef deserializeRoot, void *info);
# 810 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSMethodInvocation.h" 3
extern void
WSMethodInvocationAddDeserializationOverride(
  WSMethodInvocationRef invocation,
  CFStringRef typeNamespace,
  CFStringRef typeName,
  WSMethodInvocationDeserializationProcPtr deserializationProc,
  WSClientContext * context);
# 826 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSMethodInvocation.h" 3
}
# 55 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/OSServices.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSProtocolHandler.h" 1 3
# 42 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSProtocolHandler.h" 3
extern "C" {
# 63 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSProtocolHandler.h" 3
typedef struct OpaqueWSProtocolHandlerRef* WSProtocolHandlerRef;
# 75 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSProtocolHandler.h" 3
extern CFTypeID
WSProtocolHandlerGetTypeID(void);
# 107 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSProtocolHandler.h" 3
extern WSProtocolHandlerRef
WSProtocolHandlerCreate(
  CFAllocatorRef allocator,
  CFStringRef protocol);
# 149 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSProtocolHandler.h" 3
extern CFDictionaryRef
WSProtocolHandlerCopyRequestDictionary(
  WSProtocolHandlerRef ref,
  CFDataRef data);
# 189 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSProtocolHandler.h" 3
extern CFDictionaryRef
WSProtocolHandlerCopyReplyDictionary(
  WSProtocolHandlerRef ref,
  CFStringRef methodName,
  CFDataRef data);
# 227 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSProtocolHandler.h" 3
extern CFDataRef
WSProtocolHandlerCopyReplyDocument(
  WSProtocolHandlerRef ref,
  CFDictionaryRef methodContext,
  CFTypeRef resultValue);
# 265 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSProtocolHandler.h" 3
extern CFDataRef
WSProtocolHandlerCopyFaultDocument(
  WSProtocolHandlerRef ref,
  CFDictionaryRef methodContext,
  CFDictionaryRef faultDict);
# 309 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSProtocolHandler.h" 3
extern CFDataRef
WSProtocolHandlerCopyRequestDocument(
  WSProtocolHandlerRef ref,
  CFStringRef methodName,
  CFDictionaryRef methodParams,
  CFArrayRef methodParamOrder,
  CFDictionaryRef methodExtras);
# 347 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSProtocolHandler.h" 3
extern CFTypeRef
WSProtocolHandlerCopyProperty(
  WSProtocolHandlerRef ref,
  CFStringRef propertyName);
# 378 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSProtocolHandler.h" 3
extern void
WSProtocolHandlerSetProperty(
  WSProtocolHandlerRef ref,
  CFStringRef propertyName,
  CFTypeRef propertyValue);
# 421 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSProtocolHandler.h" 3
typedef CFStringRef ( * WSProtocolHandlerSerializationProcPtr)(WSProtocolHandlerRef protocol, CFTypeRef obj, void *info);
# 454 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSProtocolHandler.h" 3
extern void
WSProtocolHandlerSetSerializationOverride(
  WSProtocolHandlerRef protocol,
  CFTypeID objType,
  WSProtocolHandlerSerializationProcPtr serializationProc,
  WSClientContext * context);
# 494 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSProtocolHandler.h" 3
typedef CFTypeRef ( * WSProtocolHandlerDeserializationProcPtr)(WSProtocolHandlerRef protocol, CFXMLTreeRef msgRoot, CFXMLTreeRef deserializeRoot, void *info);
# 531 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSProtocolHandler.h" 3
extern void
WSProtocolHandlerSetDeserializationOverride(
  WSProtocolHandlerRef protocol,
  CFStringRef typeNamespace,
  CFStringRef typeName,
  WSProtocolHandlerDeserializationProcPtr deserializationProc,
  WSClientContext * context);
# 554 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/WSProtocolHandler.h" 3
}
# 59 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/OSServices.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/Power.h" 1 3
# 44 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/Power.h" 3
extern "C" {


#pragma pack(push, 2)

enum {

  kSleepRequest = 1,
  kSleepDemand = 2,
  kSleepWakeUp = 3,
  kSleepRevoke = 4,
  kSleepUnlock = 4,
  kSleepDeny = 5,
  kSleepNow = 6,
  kDozeDemand = 7,
  kDozeWakeUp = 8,
  kDozeRequest = 9,
  kEnterStandby = 10,
  kEnterRun = 11,
  kSuspendRequest = 12,
  kSuspendDemand = 13,
  kSuspendRevoke = 14,
  kSuspendWakeUp = 15,
  kGetPowerLevel = 16,
  kSetPowerLevel = 17,
  kDeviceInitiatedWake = 18,
  kWakeToDoze = 19,
  kDozeToFullWakeUp = 20,
  kGetPowerInfo = 21,
  kGetWakeOnNetInfo = 22,
  kSuspendWakeToDoze = 23,
  kEnterIdle = 24,
  kStillIdle = 25,
  kExitIdle = 26
};

enum {

  noCalls = 1,
  noRequest = 2,
  slpQType = 16,
  sleepQType = 16
};
# 95 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/Power.h" 3
enum {
  OverallAct = 0,
  UsrActivity = 1,
  NetActivity = 2,
  HDActivity = 3,
  IdleActivity = 4
};

typedef struct SleepQRec SleepQRec;
typedef SleepQRec * SleepQRecPtr;
typedef long ( * SleepQProcPtr)(long message, SleepQRecPtr qRecPtr);
typedef SleepQProcPtr SleepQUPP;
# 115 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/Power.h" 3
extern SleepQUPP
NewSleepQUPP(SleepQProcPtr userRoutine) ;
# 126 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/Power.h" 3
extern void
DisposeSleepQUPP(SleepQUPP userUPP) ;
# 137 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/Power.h" 3
extern long
InvokeSleepQUPP(
  long message,
  SleepQRecPtr qRecPtr,
  SleepQUPP userUPP) ;



    inline SleepQUPP NewSleepQUPP(SleepQProcPtr userRoutine) { return userRoutine; }
    inline void DisposeSleepQUPP(SleepQUPP) { }
    inline long InvokeSleepQUPP(long message, SleepQRecPtr qRecPtr, SleepQUPP userUPP) { return (*userUPP)(message, qRecPtr); }







struct SleepQRec {
  SleepQRecPtr sleepQLink;
  short sleepQType;
  SleepQUPP sleepQProc;
  short sleepQFlags;
};
# 177 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/Power.h" 3
extern long
GetCPUSpeed(void) ;
# 197 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/Power.h" 3
extern void
SleepQInstall(SleepQRecPtr qRecPtr) ;
# 217 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/Power.h" 3
extern void
SleepQRemove(SleepQRecPtr qRecPtr) ;
# 236 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/Power.h" 3
extern short
MaximumProcessorSpeed(void) ;
# 256 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/Power.h" 3
extern short
MinimumProcessorSpeed(void) ;
# 278 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/Power.h" 3
extern short
CurrentProcessorSpeed(void) ;
# 296 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/Power.h" 3
extern short
BatteryCount(void) ;
# 343 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/Power.h" 3
extern OSErr
UpdateSystemActivity(UInt8 activity) ;
# 425 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/Power.h" 3
typedef unsigned long RegEntryID;
typedef OSStatus ( * PowerHandlerProcPtr)(UInt32 message, void *param, UInt32 refCon, RegEntryID *regEntryID);
typedef PowerHandlerProcPtr PowerHandlerUPP;
# 668 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/Power.h" 3
typedef struct HDQueueElement HDQueueElement;
typedef struct PMgrQueueElement PMgrQueueElement;
typedef void ( * HDSpindownProcPtr)(HDQueueElement * theElement);
typedef void ( * PMgrStateChangeProcPtr)(PMgrQueueElement *theElement, long stateBits);
typedef HDSpindownProcPtr HDSpindownUPP;
typedef PMgrStateChangeProcPtr PMgrStateChangeUPP;
# 1428 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/Power.h" 3
extern HDSpindownUPP
NewHDSpindownUPP(HDSpindownProcPtr userRoutine) ;
# 1439 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/Power.h" 3
extern PMgrStateChangeUPP
NewPMgrStateChangeUPP(PMgrStateChangeProcPtr userRoutine) ;
# 1450 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/Power.h" 3
extern void
DisposeHDSpindownUPP(HDSpindownUPP userUPP) ;
# 1461 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/Power.h" 3
extern void
DisposePMgrStateChangeUPP(PMgrStateChangeUPP userUPP) ;
# 1472 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/Power.h" 3
extern void
InvokeHDSpindownUPP(
  HDQueueElement * theElement,
  HDSpindownUPP userUPP) ;
# 1485 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/Power.h" 3
extern void
InvokePMgrStateChangeUPP(
  PMgrQueueElement * theElement,
  long stateBits,
  PMgrStateChangeUPP userUPP) ;



    inline HDSpindownUPP NewHDSpindownUPP(HDSpindownProcPtr userRoutine) { return userRoutine; }
    inline PMgrStateChangeUPP NewPMgrStateChangeUPP(PMgrStateChangeProcPtr userRoutine) { return userRoutine; }
    inline void DisposeHDSpindownUPP(HDSpindownUPP) { }
    inline void DisposePMgrStateChangeUPP(PMgrStateChangeUPP) { }
    inline void InvokeHDSpindownUPP(HDQueueElement * theElement, HDSpindownUPP userUPP) { (*userUPP)(theElement); }
    inline void InvokePMgrStateChangeUPP(PMgrQueueElement * theElement, long stateBits, PMgrStateChangeUPP userUPP) { (*userUPP)(theElement, stateBits); }
# 1510 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/Power.h" 3
#pragma pack(pop)


}
# 63 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/OSServices.h" 2 3
# 77 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/OSServices.h" 3
# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/NSLCore.h" 1 3
# 31 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/NSLCore.h" 3
extern "C" {


#pragma pack(push, 2)


enum {
  kNSLMinSystemVersion = 0x0900,
  kNSLMinOTVersion = 0x0130
};

enum {
  kNSLDefaultListSize = 256
};

enum {
  kNSLURLDelimiter = ','
};




enum {
  kNSLNoContext = 0
};

struct NSLError {
  OSStatus theErr;
  UInt32 theContext;
};
typedef struct NSLError NSLError;
typedef NSLError * NSLErrorPtr;
enum {




  kNSLDuplicateSearchInProgress = 100,
  kNSLUserCanceled = userCanceledErr,

  kNSLInvalidEnumeratorRef = 0
};

typedef UInt16 NSLSearchState;
enum {

  kNSLSearchStateBufferFull = 1,
  kNSLSearchStateOnGoing = 2,
  kNSLSearchStateComplete = 3,
  kNSLSearchStateStalled = 4,
  kNSLWaitingForContinue = 5
};

typedef UInt32 NSLEventCode;
enum {

  kNSLServicesLookupDataEvent = 6,
  kNSLNeighborhoodLookupDataEvent = 7,
  kNSLNewDataEvent = 8,
  kNSLContinueLookupEvent = 9
};


typedef UInt32 NSLClientRef;
typedef UInt32 NSLRequestRef;
typedef UInt32 NSLOneBasedIndex;
typedef char * NSLPath;
typedef char * NSLServiceType;
typedef Handle NSLServicesList;
typedef unsigned char * NSLNeighborhood;






struct NSLClientAsyncInfo {
  void * clientContextPtr;
  void * mgrContextPtr;
  char * resultBuffer;
  long bufferLen;
  long maxBufferSize;
  UInt32 startTime;
  UInt32 intStartTime;
  UInt32 maxSearchTime;
  UInt32 alertInterval;
  UInt32 totalItems;
  UInt32 alertThreshold;
  NSLSearchState searchState;
  NSLError searchResult;
  NSLEventCode searchDataType;

};
typedef struct NSLClientAsyncInfo NSLClientAsyncInfo;
typedef NSLClientAsyncInfo * NSLClientAsyncInfoPtr;


struct NSLPluginAsyncInfo {
  void * mgrContextPtr;
  void * pluginContextPtr;
  void * pluginPtr;
  char * resultBuffer;
  long bufferLen;
  long maxBufferSize;
  UInt32 maxSearchTime;
  UInt32 reserved1;
  UInt32 reserved2;
  UInt32 reserved3;
  NSLClientRef clientRef;
  NSLRequestRef requestRef;
  NSLSearchState searchState;
  OSStatus searchResult;
};
typedef struct NSLPluginAsyncInfo NSLPluginAsyncInfo;
typedef NSLPluginAsyncInfo * NSLPluginAsyncInfoPtr;


typedef void ( * NSLMgrNotifyProcPtr)(NSLPluginAsyncInfo * thePluginAsyncInfo);


typedef void ( * NSLClientNotifyProcPtr)(NSLClientAsyncInfo * theClientAsyncInfo);
typedef NSLMgrNotifyProcPtr NSLMgrNotifyUPP;
typedef NSLClientNotifyProcPtr NSLClientNotifyUPP;
# 162 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/NSLCore.h" 3
extern NSLMgrNotifyUPP
NewNSLMgrNotifyUPP(NSLMgrNotifyProcPtr userRoutine) __attribute__((deprecated));
# 173 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/NSLCore.h" 3
extern NSLClientNotifyUPP
NewNSLClientNotifyUPP(NSLClientNotifyProcPtr userRoutine) __attribute__((deprecated));
# 184 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/NSLCore.h" 3
extern void
DisposeNSLMgrNotifyUPP(NSLMgrNotifyUPP userUPP) __attribute__((deprecated));
# 195 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/NSLCore.h" 3
extern void
DisposeNSLClientNotifyUPP(NSLClientNotifyUPP userUPP) __attribute__((deprecated));
# 206 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/NSLCore.h" 3
extern void
InvokeNSLMgrNotifyUPP(
  NSLPluginAsyncInfo * thePluginAsyncInfo,
  NSLMgrNotifyUPP userUPP) __attribute__((deprecated));
# 219 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/NSLCore.h" 3
extern void
InvokeNSLClientNotifyUPP(
  NSLClientAsyncInfo * theClientAsyncInfo,
  NSLClientNotifyUPP userUPP) __attribute__((deprecated));



    inline NSLMgrNotifyUPP NewNSLMgrNotifyUPP(NSLMgrNotifyProcPtr userRoutine) { return userRoutine; }
    inline NSLClientNotifyUPP NewNSLClientNotifyUPP(NSLClientNotifyProcPtr userRoutine) { return userRoutine; }
    inline void DisposeNSLMgrNotifyUPP(NSLMgrNotifyUPP) { }
    inline void DisposeNSLClientNotifyUPP(NSLClientNotifyUPP) { }
    inline void InvokeNSLMgrNotifyUPP(NSLPluginAsyncInfo * thePluginAsyncInfo, NSLMgrNotifyUPP userUPP) { (*userUPP)(thePluginAsyncInfo); }
    inline void InvokeNSLClientNotifyUPP(NSLClientAsyncInfo * theClientAsyncInfo, NSLClientNotifyUPP userUPP) { (*userUPP)(theClientAsyncInfo); }
# 247 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/NSLCore.h" 3
struct NSLTypedData {
  unsigned long dataType;
  unsigned long lengthOfData;


};
typedef struct NSLTypedData NSLTypedData;
typedef NSLTypedData * NSLTypedDataPtr;







struct NSLServicesListHeader {
  unsigned long numServices;
  unsigned long logicalLen;


};
typedef struct NSLServicesListHeader NSLServicesListHeader;
typedef NSLServicesListHeader * NSLServicesListHeaderPtr;
# 285 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/NSLCore.h" 3
struct NSLPluginData {
  long reserved1;
  long reserved2;
  long reserved3;
  Boolean supportsRegistration;
  Boolean isPurgeable;
  UInt16 totalLen;
  UInt16 dataTypeOffset;
  UInt16 serviceListOffset;
  UInt16 protocolListOffset;
  UInt16 commentStringOffset;


};
typedef struct NSLPluginData NSLPluginData;
typedef NSLPluginData * NSLPluginDataPtr;
# 954 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/NSLCore.h" 3
#pragma pack(pop)


}
# 78 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/OSServices.h" 2 3
# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/SecurityCore.h" 1 3
# 25 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/SecurityCore.h" 3
# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/KeychainCore.h" 1 3
# 48 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/KeychainCore.h" 3
extern "C" {


#pragma pack(push, 2)
# 75 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/KeychainCore.h" 3
typedef SecKeychainRef KCRef;
typedef SecKeychainItemRef KCItemRef;
typedef SecKeychainSearchRef KCSearchRef;
typedef SecKeychainAttribute KCAttribute;
typedef SecKeychainAttributeList KCAttributeList;
typedef SecKeychainAttrType KCAttrType;
typedef SecKeychainStatus KCStatus;
typedef UInt16 KCEvent;
enum {
  kIdleKCEvent = 0,
  kLockKCEvent = 1,
  kUnlockKCEvent = 2,
  kAddKCEvent = 3,
  kDeleteKCEvent = 4,
  kUpdateKCEvent = 5,
  kPasswordChangedKCEvent = 6,
  kSystemKCEvent = 8,
  kDefaultChangedKCEvent = 9,
  kDataAccessKCEvent = 10,
  kKeychainListChangedKCEvent = 11
};

typedef UInt16 KCEventMask;
enum {
  kIdleKCEventMask = 1 << kIdleKCEvent,
  kLockKCEventMask = 1 << kLockKCEvent,
  kUnlockKCEventMask = 1 << kUnlockKCEvent,
  kAddKCEventMask = 1 << kAddKCEvent,
  kDeleteKCEventMask = 1 << kDeleteKCEvent,
  kUpdateKCEventMask = 1 << kUpdateKCEvent,
  kPasswordChangedKCEventMask = 1 << kPasswordChangedKCEvent,
  kSystemEventKCEventMask = 1 << kSystemKCEvent,
  kDefaultChangedKCEventMask = 1 << kDefaultChangedKCEvent,
  kDataAccessKCEventMask = 1 << kDataAccessKCEvent,
  kEveryKCEventMask = 0xFFFF
};

typedef UInt8 AFPServerSignature[16];
typedef UInt8 KCPublicKeyHash[20];
struct KCCallbackInfo {
  UInt32 version;
  KCItemRef item;
  SInt32 processID[2];
  SInt32 event[4];
  KCRef keychain;
};
typedef struct KCCallbackInfo KCCallbackInfo;
enum {
  kUnlockStateKCStatus = 1,
  kRdPermKCStatus = 2,
  kWrPermKCStatus = 4
};


enum {
  kCertificateKCItemClass = 'cert',
  kAppleSharePasswordKCItemClass = 'ashp',
  kInternetPasswordKCItemClass = 'inet',
  kGenericPasswordKCItemClass = 'genp'
};


typedef FourCharCode KCItemClass;
enum {

  kClassKCItemAttr = 'clas',
  kCreationDateKCItemAttr = 'cdat',
  kModDateKCItemAttr = 'mdat',
  kDescriptionKCItemAttr = 'desc',
  kCommentKCItemAttr = 'icmt',
  kCreatorKCItemAttr = 'crtr',
  kTypeKCItemAttr = 'type',
  kScriptCodeKCItemAttr = 'scrp',
  kLabelKCItemAttr = 'labl',
  kInvisibleKCItemAttr = 'invi',
  kNegativeKCItemAttr = 'nega',
  kCustomIconKCItemAttr = 'cusi',
  kAccountKCItemAttr = 'acct',

  kServiceKCItemAttr = 'svce',
  kGenericKCItemAttr = 'gena',

  kSecurityDomainKCItemAttr = 'sdmn',
  kServerKCItemAttr = 'srvr',
  kAuthTypeKCItemAttr = 'atyp',
  kPortKCItemAttr = 'port',
  kPathKCItemAttr = 'path',

  kVolumeKCItemAttr = 'vlme',
  kAddressKCItemAttr = 'addr',
  kSignatureKCItemAttr = 'ssig',

  kProtocolKCItemAttr = 'ptcl',

  kSubjectKCItemAttr = 'subj',
  kCommonNameKCItemAttr = 'cn  ',
  kIssuerKCItemAttr = 'issu',
  kSerialNumberKCItemAttr = 'snbr',
  kEMailKCItemAttr = 'mail',
  kPublicKeyHashKCItemAttr = 'hpky',
  kIssuerURLKCItemAttr = 'iurl',

  kEncryptKCItemAttr = 'encr',
  kDecryptKCItemAttr = 'decr',
  kSignKCItemAttr = 'sign',
  kVerifyKCItemAttr = 'veri',
  kWrapKCItemAttr = 'wrap',
  kUnwrapKCItemAttr = 'unwr',
  kStartDateKCItemAttr = 'sdat',
  kEndDateKCItemAttr = 'edat'
};

typedef FourCharCode KCItemAttr;
enum {
  kKCAuthTypeNTLM = 'ntlm',
  kKCAuthTypeMSN = 'msna',
  kKCAuthTypeDPA = 'dpaa',
  kKCAuthTypeRPA = 'rpaa',
  kKCAuthTypeHTTPDigest = 'httd',
  kKCAuthTypeDefault = 'dflt'
};

typedef FourCharCode KCAuthType;
enum {
  kKCProtocolTypeFTP = 'ftp ',
  kKCProtocolTypeFTPAccount = 'ftpa',
  kKCProtocolTypeHTTP = 'http',
  kKCProtocolTypeIRC = 'irc ',
  kKCProtocolTypeNNTP = 'nntp',
  kKCProtocolTypePOP3 = 'pop3',
  kKCProtocolTypeSMTP = 'smtp',
  kKCProtocolTypeSOCKS = 'sox ',
  kKCProtocolTypeIMAP = 'imap',
  kKCProtocolTypeLDAP = 'ldap',
  kKCProtocolTypeAppleTalk = 'atlk',
  kKCProtocolTypeAFP = 'afp ',
  kKCProtocolTypeTelnet = 'teln'
};

typedef FourCharCode KCProtocolType;
typedef UInt32 KCCertAddOptions;
enum {
  kSecOptionReserved = 0x000000FF,
  kCertUsageShift = 8,
  kCertUsageSigningAdd = 1 << (kCertUsageShift + 0),
  kCertUsageSigningAskAndAdd = 1 << (kCertUsageShift + 1),
  kCertUsageVerifyAdd = 1 << (kCertUsageShift + 2),
  kCertUsageVerifyAskAndAdd = 1 << (kCertUsageShift + 3),
  kCertUsageEncryptAdd = 1 << (kCertUsageShift + 4),
  kCertUsageEncryptAskAndAdd = 1 << (kCertUsageShift + 5),
  kCertUsageDecryptAdd = 1 << (kCertUsageShift + 6),
  kCertUsageDecryptAskAndAdd = 1 << (kCertUsageShift + 7),
  kCertUsageKeyExchAdd = 1 << (kCertUsageShift + 8),
  kCertUsageKeyExchAskAndAdd = 1 << (kCertUsageShift + 9),
  kCertUsageRootAdd = 1 << (kCertUsageShift + 10),
  kCertUsageRootAskAndAdd = 1 << (kCertUsageShift + 11),
  kCertUsageSSLAdd = 1 << (kCertUsageShift + 12),
  kCertUsageSSLAskAndAdd = 1 << (kCertUsageShift + 13),
  kCertUsageAllAdd = 0x7FFFFF00
};

typedef UInt16 KCVerifyStopOn;
enum {
  kPolicyKCStopOn = 0,
  kNoneKCStopOn = 1,
  kFirstPassKCStopOn = 2,
  kFirstFailKCStopOn = 3
};

typedef UInt32 KCCertSearchOptions;
enum {
  kCertSearchShift = 0,
  kCertSearchSigningIgnored = 0,
  kCertSearchSigningAllowed = 1 << (kCertSearchShift + 0),
  kCertSearchSigningDisallowed = 1 << (kCertSearchShift + 1),
  kCertSearchSigningMask = ((kCertSearchSigningAllowed) | (kCertSearchSigningDisallowed)),
  kCertSearchVerifyIgnored = 0,
  kCertSearchVerifyAllowed = 1 << (kCertSearchShift + 2),
  kCertSearchVerifyDisallowed = 1 << (kCertSearchShift + 3),
  kCertSearchVerifyMask = ((kCertSearchVerifyAllowed) | (kCertSearchVerifyDisallowed)),
  kCertSearchEncryptIgnored = 0,
  kCertSearchEncryptAllowed = 1 << (kCertSearchShift + 4),
  kCertSearchEncryptDisallowed = 1 << (kCertSearchShift + 5),
  kCertSearchEncryptMask = ((kCertSearchEncryptAllowed) | (kCertSearchEncryptDisallowed)),
  kCertSearchDecryptIgnored = 0,
  kCertSearchDecryptAllowed = 1 << (kCertSearchShift + 6),
  kCertSearchDecryptDisallowed = 1 << (kCertSearchShift + 7),
  kCertSearchDecryptMask = ((kCertSearchDecryptAllowed) | (kCertSearchDecryptDisallowed)),
  kCertSearchWrapIgnored = 0,
  kCertSearchWrapAllowed = 1 << (kCertSearchShift + 8),
  kCertSearchWrapDisallowed = 1 << (kCertSearchShift + 9),
  kCertSearchWrapMask = ((kCertSearchWrapAllowed) | (kCertSearchWrapDisallowed)),
  kCertSearchUnwrapIgnored = 0,
  kCertSearchUnwrapAllowed = 1 << (kCertSearchShift + 10),
  kCertSearchUnwrapDisallowed = 1 << (kCertSearchShift + 11),
  kCertSearchUnwrapMask = ((kCertSearchUnwrapAllowed) | (kCertSearchUnwrapDisallowed)),
  kCertSearchPrivKeyRequired = 1 << (kCertSearchShift + 12),
  kCertSearchAny = 0
};


enum {
  kAnyPort = 0
};

enum {
  kAnyProtocol = 0,
  kAnyAuthType = 0
};
# 297 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/KeychainCore.h" 3
extern OSStatus
KCGetKeychainManagerVersion(UInt32 * returnVers);
# 310 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/KeychainCore.h" 3
    inline Boolean KeychainManagerAvailable() { return true; }
# 328 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/KeychainCore.h" 3
extern OSStatus
KCSetInteractionAllowed(Boolean state) __attribute__((deprecated));
# 343 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/KeychainCore.h" 3
extern Boolean
KCIsInteractionAllowed(void) __attribute__((deprecated));
# 379 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/KeychainCore.h" 3
extern OSStatus
KCMakeKCRefFromFSRef(
  FSRef * keychainFSRef,
  KCRef * keychain) __attribute__((deprecated));
# 396 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/KeychainCore.h" 3
extern OSStatus
KCMakeKCRefFromAlias(
  AliasHandle keychainAlias,
  KCRef * keychain) __attribute__((deprecated));
# 413 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/KeychainCore.h" 3
extern OSStatus
KCMakeAliasFromKCRef(
  KCRef keychain,
  AliasHandle * keychainAlias) __attribute__((deprecated));
# 430 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/KeychainCore.h" 3
extern OSStatus
KCReleaseKeychain(KCRef * keychain) __attribute__((deprecated));
# 446 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/KeychainCore.h" 3
extern OSStatus
KCGetDefaultKeychain(KCRef * keychain) __attribute__((deprecated));
# 461 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/KeychainCore.h" 3
extern OSStatus
KCSetDefaultKeychain(KCRef keychain) __attribute__((deprecated));
# 477 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/KeychainCore.h" 3
extern OSStatus
KCGetStatus(
  KCRef keychain,
  UInt32 * keychainStatus) __attribute__((deprecated));
# 494 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/KeychainCore.h" 3
extern OSStatus
KCGetKeychain(
  KCItemRef item,
  KCRef * keychain) __attribute__((deprecated));
# 511 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/KeychainCore.h" 3
extern OSStatus
KCGetKeychainName(
  KCRef keychain,
  StringPtr keychainName) __attribute__((deprecated));
# 529 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/KeychainCore.h" 3
extern UInt16
KCCountKeychains(void) __attribute__((deprecated));
# 544 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/KeychainCore.h" 3
extern OSStatus
KCGetIndKeychain(
  UInt16 index,
  KCRef * keychain) __attribute__((deprecated));


typedef OSStatus ( * KCCallbackProcPtr)(KCEvent keychainEvent, KCCallbackInfo *info, void *userContext);
typedef KCCallbackProcPtr KCCallbackUPP;
# 560 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/KeychainCore.h" 3
extern KCCallbackUPP
NewKCCallbackUPP(KCCallbackProcPtr userRoutine) __attribute__((deprecated));
# 571 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/KeychainCore.h" 3
extern void
DisposeKCCallbackUPP(KCCallbackUPP userUPP) __attribute__((deprecated));
# 582 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/KeychainCore.h" 3
extern OSStatus
InvokeKCCallbackUPP(
  KCEvent keychainEvent,
  KCCallbackInfo * info,
  void * userContext,
  KCCallbackUPP userUPP) __attribute__((deprecated));



    inline KCCallbackUPP NewKCCallbackUPP(KCCallbackProcPtr userRoutine) { return userRoutine; }
    inline void DisposeKCCallbackUPP(KCCallbackUPP) { }
    inline OSStatus InvokeKCCallbackUPP(KCEvent keychainEvent, KCCallbackInfo * info, void * userContext, KCCallbackUPP userUPP) { return (*userUPP)(keychainEvent, info, userContext); }
# 613 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/KeychainCore.h" 3
extern OSStatus
KCFindAppleSharePassword(
  AFPServerSignature * serverSignature,
  ConstStringPtr serverAddress,
  ConstStringPtr serverName,
  ConstStringPtr volumeName,
  ConstStringPtr accountName,
  UInt32 maxLength,
  void * passwordData,
  UInt32 * actualLength,
  KCItemRef * item) __attribute__((deprecated));
# 637 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/KeychainCore.h" 3
extern OSStatus
KCFindInternetPassword(
  ConstStringPtr serverName,
  ConstStringPtr securityDomain,
  ConstStringPtr accountName,
  UInt16 port,
  OSType protocol,
  OSType authType,
  UInt32 maxLength,
  void * passwordData,
  UInt32 * actualLength,
  KCItemRef * item) __attribute__((deprecated));
# 662 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/KeychainCore.h" 3
extern OSStatus
KCFindInternetPasswordWithPath(
  ConstStringPtr serverName,
  ConstStringPtr securityDomain,
  ConstStringPtr accountName,
  ConstStringPtr path,
  UInt16 port,
  OSType protocol,
  OSType authType,
  UInt32 maxLength,
  void * passwordData,
  UInt32 * actualLength,
  KCItemRef * item) __attribute__((deprecated));
# 688 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/KeychainCore.h" 3
extern OSStatus
KCFindGenericPassword(
  ConstStringPtr serviceName,
  ConstStringPtr accountName,
  UInt32 maxLength,
  void * passwordData,
  UInt32 * actualLength,
  KCItemRef * item) __attribute__((deprecated));
# 710 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/KeychainCore.h" 3
extern OSStatus
KCAddCallback(
  KCCallbackUPP callbackProc,
  KCEventMask eventMask,
  void * userContext) __attribute__((deprecated));
# 728 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/KeychainCore.h" 3
extern OSStatus
KCRemoveCallback(KCCallbackUPP callbackProc) __attribute__((deprecated));
# 744 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/KeychainCore.h" 3
extern OSStatus
KCNewItem(
  KCItemClass itemClass,
  OSType itemCreator,
  UInt32 length,
  const void * data,
  KCItemRef * item) __attribute__((deprecated));
# 764 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/KeychainCore.h" 3
extern OSStatus
KCSetAttribute(
  KCItemRef item,
  KCAttribute * attr) __attribute__((deprecated));
# 781 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/KeychainCore.h" 3
extern OSStatus
KCGetAttribute(
  KCItemRef item,
  KCAttribute * attr,
  UInt32 * actualLength) __attribute__((deprecated));
# 799 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/KeychainCore.h" 3
extern OSStatus
KCSetData(
  KCItemRef item,
  UInt32 length,
  const void * data) __attribute__((deprecated));
# 818 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/KeychainCore.h" 3
extern OSStatus
KCUpdateItem(KCItemRef item) __attribute__((deprecated));
# 833 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/KeychainCore.h" 3
extern OSStatus
KCReleaseItem(KCItemRef * item) __attribute__((deprecated));
# 848 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/KeychainCore.h" 3
extern OSStatus
KCCopyItem(
  KCItemRef item,
  KCRef destKeychain,
  KCItemRef * copy) __attribute__((deprecated));
# 868 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/KeychainCore.h" 3
extern OSStatus
KCFindFirstItem(
  KCRef keychain,
  const KCAttributeList * attrList,
  KCSearchRef * search,
  KCItemRef * item) __attribute__((deprecated));
# 887 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/KeychainCore.h" 3
extern OSStatus
KCFindNextItem(
  KCSearchRef search,
  KCItemRef * item) __attribute__((deprecated));
# 904 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/KeychainCore.h" 3
extern OSStatus
KCReleaseSearch(KCSearchRef * search) __attribute__((deprecated));
# 920 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/KeychainCore.h" 3
extern OSStatus
KCDeleteItem(KCItemRef item) __attribute__((deprecated));
# 935 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/KeychainCore.h" 3
extern OSStatus
KCGetData(
  KCItemRef item,
  UInt32 maxLength,
  void * data,
  UInt32 * actualLength) __attribute__((deprecated));
# 955 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/KeychainCore.h" 3
extern OSStatus
KCLock(KCRef keychain) __attribute__((deprecated));
# 971 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/KeychainCore.h" 3
extern OSStatus
kcgetkeychainname(
  KCRef keychain,
  char * keychainName) __attribute__((deprecated));
# 988 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/KeychainCore.h" 3
extern OSStatus
kcfindapplesharepassword(
  AFPServerSignature * serverSignature,
  const char * serverAddress,
  const char * serverName,
  const char * volumeName,
  const char * accountName,
  UInt32 maxLength,
  void * passwordData,
  UInt32 * actualLength,
  KCItemRef * item) __attribute__((deprecated));
# 1012 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/KeychainCore.h" 3
extern OSStatus
kcfindinternetpassword(
  const char * serverName,
  const char * securityDomain,
  const char * accountName,
  UInt16 port,
  OSType protocol,
  OSType authType,
  UInt32 maxLength,
  void * passwordData,
  UInt32 * actualLength,
  KCItemRef * item) __attribute__((deprecated));
# 1037 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/KeychainCore.h" 3
extern OSStatus
kcfindinternetpasswordwithpath(
  const char * serverName,
  const char * securityDomain,
  const char * accountName,
  const char * path,
  UInt16 port,
  OSType protocol,
  OSType authType,
  UInt32 maxLength,
  void * passwordData,
  UInt32 * actualLength,
  KCItemRef * item) __attribute__((deprecated));
# 1063 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/KeychainCore.h" 3
extern OSStatus
kcfindgenericpassword(
  const char * serviceName,
  const char * accountName,
  UInt32 maxLength,
  void * passwordData,
  UInt32 * actualLength,
  KCItemRef * item) __attribute__((deprecated));



#pragma pack(pop)


}
# 26 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/SecurityCore.h" 2 3
# 79 "/System/Library/Frameworks/CoreServices.framework/Frameworks/OSServices.framework/Headers/OSServices.h" 2 3
# 30 "/System/Library/Frameworks/CoreServices.framework/Headers/CoreServices.h" 2 3







# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetwork.h" 1 3
# 23 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetwork.h" 3
# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetworkDefs.h" 1 3
# 24 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetwork.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetworkErrors.h" 1 3
# 18 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetworkErrors.h" 3
# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetworkDefs.h" 1 3
# 19 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetworkErrors.h" 2 3
# 34 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetworkErrors.h" 3
extern "C" {
# 53 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetworkErrors.h" 3
extern const CFStringRef kCFErrorDomainCFNetwork __attribute__((visibility("default")));
# 67 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetworkErrors.h" 3
extern const CFStringRef kCFErrorDomainWinSock __attribute__((visibility("default")));
# 77 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetworkErrors.h" 3
enum CFNetworkErrors {
  kCFHostErrorHostNotFound = 1,
  kCFHostErrorUnknown = 2,

  kCFSOCKSErrorUnknownClientVersion = 100,
  kCFSOCKSErrorUnsupportedServerVersion = 101,

  kCFSOCKS4ErrorRequestFailed = 110,
  kCFSOCKS4ErrorIdentdFailed = 111,
  kCFSOCKS4ErrorIdConflict = 112,
  kCFSOCKS4ErrorUnknownStatusCode = 113,

  kCFSOCKS5ErrorBadState = 120,
  kCFSOCKS5ErrorBadResponseAddr = 121,
  kCFSOCKS5ErrorBadCredentials = 122,
  kCFSOCKS5ErrorUnsupportedNegotiationMethod = 123,
  kCFSOCKS5ErrorNoAcceptableMethod = 124,

  kCFFTPErrorUnexpectedStatusCode = 200,

  kCFErrorHTTPAuthenticationTypeUnsupported = 300,
  kCFErrorHTTPBadCredentials = 301,
  kCFErrorHTTPConnectionLost = 302,
  kCFErrorHTTPParseFailure = 303,
  kCFErrorHTTPRedirectionLoopDetected = 304,
  kCFErrorHTTPBadURL = 305,
  kCFErrorHTTPProxyConnectionFailure = 306,
  kCFErrorHTTPBadProxyCredentials = 307,
  kCFErrorPACFileError = 308,
  kCFErrorPACFileAuth = 309,
  kCFErrorHTTPSProxyConnectionFailure = 310,


  kCFURLErrorUnknown = -998,
  kCFURLErrorCancelled = -999,
  kCFURLErrorBadURL = -1000,
  kCFURLErrorTimedOut = -1001,
  kCFURLErrorUnsupportedURL = -1002,
  kCFURLErrorCannotFindHost = -1003,
  kCFURLErrorCannotConnectToHost = -1004,
  kCFURLErrorNetworkConnectionLost = -1005,
  kCFURLErrorDNSLookupFailed = -1006,
  kCFURLErrorHTTPTooManyRedirects = -1007,
  kCFURLErrorResourceUnavailable = -1008,
  kCFURLErrorNotConnectedToInternet = -1009,
  kCFURLErrorRedirectToNonExistentLocation = -1010,
  kCFURLErrorBadServerResponse = -1011,
  kCFURLErrorUserCancelledAuthentication = -1012,
  kCFURLErrorUserAuthenticationRequired = -1013,
  kCFURLErrorZeroByteResource = -1014,
  kCFURLErrorCannotDecodeRawData = -1015,
  kCFURLErrorCannotDecodeContentData = -1016,
  kCFURLErrorCannotParseResponse = -1017,
  kCFURLErrorInternationalRoamingOff = -1018,
  kCFURLErrorCallIsActive = -1019,
  kCFURLErrorDataNotAllowed = -1020,
  kCFURLErrorRequestBodyStreamExhausted = -1021,
  kCFURLErrorFileDoesNotExist = -1100,
  kCFURLErrorFileIsDirectory = -1101,
  kCFURLErrorNoPermissionsToReadFile = -1102,
  kCFURLErrorDataLengthExceedsMaximum = -1103,

  kCFURLErrorSecureConnectionFailed = -1200,
  kCFURLErrorServerCertificateHasBadDate = -1201,
  kCFURLErrorServerCertificateUntrusted = -1202,
  kCFURLErrorServerCertificateHasUnknownRoot = -1203,
  kCFURLErrorServerCertificateNotYetValid = -1204,
  kCFURLErrorClientCertificateRejected = -1205,
  kCFURLErrorClientCertificateRequired = -1206,
  kCFURLErrorCannotLoadFromNetwork = -2000,

  kCFURLErrorCannotCreateFile = -3000,
  kCFURLErrorCannotOpenFile = -3001,
  kCFURLErrorCannotCloseFile = -3002,
  kCFURLErrorCannotWriteToFile = -3003,
  kCFURLErrorCannotRemoveFile = -3004,
  kCFURLErrorCannotMoveFile = -3005,
  kCFURLErrorDownloadDecodingFailedMidStream = -3006,
  kCFURLErrorDownloadDecodingFailedToComplete = -3007,


  kCFHTTPCookieCannotParseCookieFile = -4000,


  kCFNetServiceErrorUnknown = -72000L,
  kCFNetServiceErrorCollision = -72001L,
  kCFNetServiceErrorNotFound = -72002L,
  kCFNetServiceErrorInProgress = -72003L,
  kCFNetServiceErrorBadArgument = -72004L,
  kCFNetServiceErrorCancel = -72005L,
  kCFNetServiceErrorInvalid = -72006L,
  kCFNetServiceErrorTimeout = -72007L,
  kCFNetServiceErrorDNSServiceFailure = -73000L
};
typedef enum CFNetworkErrors CFNetworkErrors;
# 187 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetworkErrors.h" 3
extern const CFStringRef kCFURLErrorFailingURLErrorKey __attribute__((visibility("default")));
# 202 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetworkErrors.h" 3
extern const CFStringRef kCFURLErrorFailingURLStringErrorKey __attribute__((visibility("default")));
# 217 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetworkErrors.h" 3
extern const CFStringRef kCFGetAddrInfoFailureKey __attribute__((visibility("default")));
# 231 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetworkErrors.h" 3
extern const CFStringRef kCFSOCKSStatusCodeKey __attribute__((visibility("default")));
# 246 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetworkErrors.h" 3
extern const CFStringRef kCFSOCKSVersionKey __attribute__((visibility("default")));
# 261 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetworkErrors.h" 3
extern const CFStringRef kCFSOCKSNegotiationMethodKey __attribute__((visibility("default")));
# 276 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetworkErrors.h" 3
extern const CFStringRef kCFDNSServiceFailureKey __attribute__((visibility("default")));
# 291 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetworkErrors.h" 3
extern const CFStringRef kCFFTPStatusCodeKey __attribute__((visibility("default")));







}
# 28 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetwork.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 1 3
# 18 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetworkDefs.h" 1 3
# 19 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 2 3







# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHost.h" 1 3
# 18 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHost.h" 3
# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetworkDefs.h" 1 3
# 19 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHost.h" 2 3
# 38 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHost.h" 3
extern "C" {


#pragma pack(push, 2)
# 54 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHost.h" 3
typedef struct __CFHost* CFHostRef;
# 67 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHost.h" 3
extern const SInt32 kCFStreamErrorDomainNetDB __attribute__((visibility("default")));
# 81 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHost.h" 3
extern const SInt32 kCFStreamErrorDomainSystemConfiguration __attribute__((visibility("default")));
# 91 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHost.h" 3
enum CFHostInfoType {





  kCFHostAddresses = 0,




  kCFHostNames = 1,





  kCFHostReachability = 2
};
typedef enum CFHostInfoType CFHostInfoType;
# 120 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHost.h" 3
struct CFHostClientContext {






  CFIndex version;





  void * info;
# 142 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHost.h" 3
  CFAllocatorRetainCallBack retain;





  CFAllocatorReleaseCallBack release;







  CFAllocatorCopyDescriptionCallBack copyDescription;
};
typedef struct CFHostClientContext CFHostClientContext;
# 182 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHost.h" 3
typedef void ( * CFHostClientCallBack)(CFHostRef theHost, CFHostInfoType typeInfo, const CFStreamError *error, void *info);
# 199 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHost.h" 3
extern CFTypeID
CFHostGetTypeID(void) __attribute__((visibility("default")));
# 233 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHost.h" 3
extern CFHostRef
CFHostCreateWithName(
  CFAllocatorRef allocator,
  CFStringRef hostname) __attribute__((visibility("default")));
# 269 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHost.h" 3
extern CFHostRef
CFHostCreateWithAddress(
  CFAllocatorRef allocator,
  CFDataRef addr) __attribute__((visibility("default")));
# 306 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHost.h" 3
extern CFHostRef
CFHostCreateCopy(
  CFAllocatorRef alloc,
  CFHostRef host) __attribute__((visibility("default")));
# 350 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHost.h" 3
extern Boolean
CFHostStartInfoResolution(
  CFHostRef theHost,
  CFHostInfoType info,
  CFStreamError * error) __attribute__((visibility("default")));
# 390 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHost.h" 3
extern CFArrayRef
CFHostGetAddressing(
  CFHostRef theHost,
  Boolean * hasBeenResolved) __attribute__((visibility("default")));
# 428 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHost.h" 3
extern CFArrayRef
CFHostGetNames(
  CFHostRef theHost,
  Boolean * hasBeenResolved) __attribute__((visibility("default")));
# 470 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHost.h" 3
extern CFDataRef
CFHostGetReachability(
  CFHostRef theHost,
  Boolean * hasBeenResolved) __attribute__((visibility("default")));
# 501 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHost.h" 3
extern void
CFHostCancelInfoResolution(
  CFHostRef theHost,
  CFHostInfoType info) __attribute__((visibility("default")));
# 545 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHost.h" 3
extern Boolean
CFHostSetClient(
  CFHostRef theHost,
  CFHostClientCallBack clientCB,
  CFHostClientContext * clientContext) __attribute__((visibility("default")));
# 584 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHost.h" 3
extern void
CFHostScheduleWithRunLoop(
  CFHostRef theHost,
  CFRunLoopRef runLoop,
  CFStringRef runLoopMode) __attribute__((visibility("default")));
# 623 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHost.h" 3
extern void
CFHostUnscheduleFromRunLoop(
  CFHostRef theHost,
  CFRunLoopRef runLoop,
  CFStringRef runLoopMode) __attribute__((visibility("default")));







#pragma pack(pop)


}
# 27 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 1 3
# 18 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetworkDefs.h" 1 3
# 19 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 2 3
# 39 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern "C" {


#pragma pack(push, 2)
# 56 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
typedef struct __CFNetService* CFNetServiceRef;
# 65 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
typedef struct __CFNetServiceMonitor* CFNetServiceMonitorRef;
# 74 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
typedef struct __CFNetServiceBrowser* CFNetServiceBrowserRef;
# 87 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern const SInt32 kCFStreamErrorDomainMach __attribute__((visibility("default")));
# 104 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern const SInt32 kCFStreamErrorDomainNetServices __attribute__((visibility("default")));
# 114 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
enum CFNetServicesError {




  kCFNetServicesErrorUnknown = -72000L,






  kCFNetServicesErrorCollision = -72001L,




  kCFNetServicesErrorNotFound = -72002L,





  kCFNetServicesErrorInProgress = -72003L,




  kCFNetServicesErrorBadArgument = -72004L,




  kCFNetServicesErrorCancel = -72005L,





  kCFNetServicesErrorInvalid = -72006L,





  kCFNetServicesErrorTimeout = -72007L
};
typedef enum CFNetServicesError CFNetServicesError;
# 172 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
enum CFNetServiceMonitorType {




  kCFNetServiceMonitorTXT = 1
};
typedef enum CFNetServiceMonitorType CFNetServiceMonitorType;
# 188 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
enum {
  kCFNetServiceFlagNoAutoRename = 1
};
# 199 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
enum {
  kCFNetServiceFlagMoreComing = 1,
  kCFNetServiceFlagIsDomain = 2,
  kCFNetServiceFlagIsDefault = 4,
  kCFNetServiceFlagIsRegistrationDomain = 4,
  kCFNetServiceFlagRemove = 8
};
# 216 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
struct CFNetServiceClientContext {






  CFIndex version;





  void * info;
# 239 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
  CFAllocatorRetainCallBack retain;





  CFAllocatorReleaseCallBack release;







  CFAllocatorCopyDescriptionCallBack copyDescription;
};
typedef struct CFNetServiceClientContext CFNetServiceClientContext;
# 278 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
typedef void ( * CFNetServiceClientCallBack)(CFNetServiceRef theService, CFStreamError *error, void *info);
# 307 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
typedef void ( * CFNetServiceMonitorClientCallBack)(CFNetServiceMonitorRef theMonitor, CFNetServiceRef theService, CFNetServiceMonitorType typeInfo, CFDataRef rdata, CFStreamError *error, void *info);
# 337 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
typedef void ( * CFNetServiceBrowserClientCallBack)(CFNetServiceBrowserRef browser, CFOptionFlags flags, CFTypeRef domainOrService, CFStreamError *error, void *info);
# 352 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern CFTypeID
CFNetServiceGetTypeID(void) __attribute__((visibility("default")));
# 370 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern CFTypeID
CFNetServiceMonitorGetTypeID(void) __attribute__((visibility("default")));
# 388 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern CFTypeID
CFNetServiceBrowserGetTypeID(void) __attribute__((visibility("default")));
# 442 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern CFNetServiceRef
CFNetServiceCreate(
  CFAllocatorRef alloc,
  CFStringRef domain,
  CFStringRef serviceType,
  CFStringRef name,
  SInt32 port) __attribute__((visibility("default")));
# 483 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern CFNetServiceRef
CFNetServiceCreateCopy(
  CFAllocatorRef alloc,
  CFNetServiceRef service) __attribute__((visibility("default")));
# 516 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern CFStringRef
CFNetServiceGetDomain(CFNetServiceRef theService) __attribute__((visibility("default")));
# 547 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern CFStringRef
CFNetServiceGetType(CFNetServiceRef theService) __attribute__((visibility("default")));
# 578 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern CFStringRef
CFNetServiceGetName(CFNetServiceRef theService) __attribute__((visibility("default")));
# 625 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern Boolean
CFNetServiceRegisterWithOptions(
  CFNetServiceRef theService,
  CFOptionFlags options,
  CFStreamError * error) __attribute__((visibility("default")));
# 674 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern Boolean
CFNetServiceResolveWithTimeout(
  CFNetServiceRef theService,
  CFTimeInterval timeout,
  CFStreamError * error) __attribute__((visibility("default")));
# 701 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern void
CFNetServiceCancel(CFNetServiceRef theService) __attribute__((visibility("default")));
# 734 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern CFStringRef
CFNetServiceGetTargetHost(CFNetServiceRef theService) __attribute__((visibility("default")));
# 764 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern SInt32
CFNetServiceGetPortNumber(CFNetServiceRef theService) __attribute__((visibility("default")));
# 798 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern CFArrayRef
CFNetServiceGetAddressing(CFNetServiceRef theService) __attribute__((visibility("default")));
# 832 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern CFDataRef
CFNetServiceGetTXTData(CFNetServiceRef theService) __attribute__((visibility("default")));
# 863 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern Boolean
CFNetServiceSetTXTData(
  CFNetServiceRef theService,
  CFDataRef txtRecord) __attribute__((visibility("default")));
# 902 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern CFDictionaryRef
CFNetServiceCreateDictionaryWithTXTData(
  CFAllocatorRef alloc,
  CFDataRef txtRecord) __attribute__((visibility("default")));
# 949 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern CFDataRef
CFNetServiceCreateTXTDataWithDictionary(
  CFAllocatorRef alloc,
  CFDictionaryRef keyValuePairs) __attribute__((visibility("default")));
# 999 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern Boolean
CFNetServiceSetClient(
  CFNetServiceRef theService,
  CFNetServiceClientCallBack clientCB,
  CFNetServiceClientContext * clientContext) __attribute__((visibility("default")));
# 1034 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern void
CFNetServiceScheduleWithRunLoop(
  CFNetServiceRef theService,
  CFRunLoopRef runLoop,
  CFStringRef runLoopMode) __attribute__((visibility("default")));
# 1070 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern void
CFNetServiceUnscheduleFromRunLoop(
  CFNetServiceRef theService,
  CFRunLoopRef runLoop,
  CFStringRef runLoopMode) __attribute__((visibility("default")));
# 1115 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern CFNetServiceMonitorRef
CFNetServiceMonitorCreate(
  CFAllocatorRef alloc,
  CFNetServiceRef theService,
  CFNetServiceMonitorClientCallBack clientCB,
  CFNetServiceClientContext * clientContext) __attribute__((visibility("default")));
# 1145 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern void
CFNetServiceMonitorInvalidate(CFNetServiceMonitorRef monitor) __attribute__((visibility("default")));
# 1188 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern Boolean
CFNetServiceMonitorStart(
  CFNetServiceMonitorRef monitor,
  CFNetServiceMonitorType recordType,
  CFStreamError * error) __attribute__((visibility("default")));
# 1223 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern void
CFNetServiceMonitorStop(
  CFNetServiceMonitorRef monitor,
  CFStreamError * error) __attribute__((visibility("default")));
# 1260 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern void
CFNetServiceMonitorScheduleWithRunLoop(
  CFNetServiceMonitorRef monitor,
  CFRunLoopRef runLoop,
  CFStringRef runLoopMode) __attribute__((visibility("default")));
# 1295 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern void
CFNetServiceMonitorUnscheduleFromRunLoop(
  CFNetServiceMonitorRef monitor,
  CFRunLoopRef runLoop,
  CFStringRef runLoopMode) __attribute__((visibility("default")));
# 1336 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern CFNetServiceBrowserRef
CFNetServiceBrowserCreate(
  CFAllocatorRef alloc,
  CFNetServiceBrowserClientCallBack clientCB,
  CFNetServiceClientContext * clientContext) __attribute__((visibility("default")));
# 1362 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern void
CFNetServiceBrowserInvalidate(CFNetServiceBrowserRef browser) __attribute__((visibility("default")));
# 1407 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern Boolean
CFNetServiceBrowserSearchForDomains(
  CFNetServiceBrowserRef browser,
  Boolean registrationDomains,
  CFStreamError * error) __attribute__((visibility("default")));
# 1457 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern Boolean
CFNetServiceBrowserSearchForServices(
  CFNetServiceBrowserRef browser,
  CFStringRef domain,
  CFStringRef serviceType,
  CFStreamError * error) __attribute__((visibility("default")));
# 1495 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern void
CFNetServiceBrowserStopSearch(
  CFNetServiceBrowserRef browser,
  CFStreamError * error) __attribute__((visibility("default")));
# 1532 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern void
CFNetServiceBrowserScheduleWithRunLoop(
  CFNetServiceBrowserRef browser,
  CFRunLoopRef runLoop,
  CFStringRef runLoopMode) __attribute__((visibility("default")));
# 1567 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern void
CFNetServiceBrowserUnscheduleFromRunLoop(
  CFNetServiceBrowserRef browser,
  CFRunLoopRef runLoop,
  CFStringRef runLoopMode) __attribute__((visibility("default")));
# 1618 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern Boolean
CFNetServiceRegister(
  CFNetServiceRef theService,
  CFStreamError * error) __attribute__((deprecated,visibility("default")));
# 1670 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern Boolean
CFNetServiceResolve(
  CFNetServiceRef theService,
  CFStreamError * error) __attribute__((deprecated,visibility("default")));
# 1713 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern CFStringRef
CFNetServiceGetProtocolSpecificInformation(CFNetServiceRef theService) __attribute__((deprecated,visibility("default")));
# 1746 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
extern void
CFNetServiceSetProtocolSpecificInformation(
  CFNetServiceRef theService,
  CFStringRef theInfo) __attribute__((deprecated,visibility("default")));
# 1759 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetServices.h" 3
#pragma pack(pop)


}
# 31 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 2 3
# 42 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern "C" {
# 58 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamPropertySSLPeerTrust __attribute__((visibility("default")));
# 74 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamSSLValidatesCertificateChain __attribute__((visibility("default")));
# 89 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamPropertySSLSettings __attribute__((visibility("default")));
# 104 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamSSLLevel __attribute__((visibility("default")));
# 121 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamSSLPeerName __attribute__((visibility("default")));
# 137 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamSSLCertificates __attribute__((visibility("default")));
# 154 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamSSLIsServer __attribute__((visibility("default")));
# 196 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamPropertySSLPeerCertificates __attribute__((visibility("default")));
# 212 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamSSLAllowsExpiredCertificates __attribute__((visibility("default")));
# 228 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamSSLAllowsExpiredRoots __attribute__((visibility("default")));
# 244 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamSSLAllowsAnyRoot __attribute__((visibility("default")));
# 260 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFIndex kCFStreamErrorDomainWinSock __attribute__((visibility("default")));
# 273 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const int kCFStreamErrorDomainSOCKS;



static __inline__ __attribute__((always_inline))
SInt32 CFSocketStreamSOCKSGetErrorSubdomain(const CFStreamError* error) {
 return ((error->error >> 16) & 0x0000FFFF);
}

static __inline__ __attribute__((always_inline))
SInt32 CFSocketStreamSOCKSGetError(const CFStreamError* error) {
 return (error->error & 0x0000FFFF);
}

enum {
  kCFStreamErrorSOCKSSubDomainNone = 0,
  kCFStreamErrorSOCKSSubDomainVersionCode = 1,
  kCFStreamErrorSOCKS4SubDomainResponse = 2,
  kCFStreamErrorSOCKS5SubDomainUserPass = 3,
  kCFStreamErrorSOCKS5SubDomainMethod = 4,
  kCFStreamErrorSOCKS5SubDomainResponse = 5
};



enum {
  kCFStreamErrorSOCKS5BadResponseAddr = 1,
  kCFStreamErrorSOCKS5BadState = 2,
  kCFStreamErrorSOCKSUnknownClientVersion = 3
};


enum {
  kCFStreamErrorSOCKS4RequestFailed = 91,
  kCFStreamErrorSOCKS4IdentdFailed = 92,
  kCFStreamErrorSOCKS4IdConflict = 93
};


enum {
  kSOCKS5NoAcceptableMethod = 0xFF
};
# 336 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamPropertySOCKSProxy;
# 352 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamPropertySOCKSProxyHost;
# 369 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamPropertySOCKSProxyPort;
# 386 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamPropertySOCKSVersion;
# 400 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamSocketSOCKSVersion4;
# 414 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamSocketSOCKSVersion5;
# 432 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamPropertySOCKSUser;
# 450 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamPropertySOCKSPassword;
# 463 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const int kCFStreamErrorDomainSSL;
# 481 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamPropertySocketSecurityLevel;
# 495 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamSocketSecurityLevelNone;
# 509 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamSocketSecurityLevelSSLv2;
# 523 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamSocketSecurityLevelSSLv3;
# 537 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamSocketSecurityLevelTLSv1;
# 552 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamSocketSecurityLevelNegotiatedSSL;
# 573 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamPropertyShouldCloseNativeSocket;
# 588 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamPropertySocketRemoteHost __attribute__((visibility("default")));
# 603 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamPropertySocketRemoteNetService __attribute__((visibility("default")));
# 644 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern void
CFStreamCreatePairWithSocketToCFHost(
  CFAllocatorRef alloc,
  CFHostRef host,
  SInt32 port,
  CFReadStreamRef * readStream,
  CFWriteStreamRef * writeStream) __attribute__((visibility("default")));
# 689 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern void
CFStreamCreatePairWithSocketToNetService(
  CFAllocatorRef alloc,
  CFNetServiceRef service,
  CFReadStreamRef * readStream,
  CFWriteStreamRef * writeStream) __attribute__((visibility("default")));
# 708 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
enum CFStreamSocketSecurityProtocol {




  kCFStreamSocketSecurityNone = 0,




  kCFStreamSocketSecuritySSLv2 = 1,




  kCFStreamSocketSecuritySSLv3 = 2,




  kCFStreamSocketSecuritySSLv23 = 3,




  kCFStreamSocketSecurityTLSv1 = 4
};
typedef enum CFStreamSocketSecurityProtocol CFStreamSocketSecurityProtocol;
# 772 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern Boolean
CFSocketStreamPairSetSecurityProtocol(
  CFReadStreamRef socketReadStream,
  CFWriteStreamRef socketWriteStream,
  CFStreamSocketSecurityProtocol securityProtocol) __attribute__((deprecated,visibility("default")));
# 795 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h" 3
extern const CFStringRef kCFStreamPropertyProxyLocalBypass __attribute__((visibility("default")));






}
# 32 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetwork.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 1 3
# 18 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 3
# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetworkDefs.h" 1 3
# 19 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 2 3
# 34 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 3
extern "C" {
# 48 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 3
extern const SInt32 kCFStreamErrorDomainFTP __attribute__((visibility("default")));
# 73 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 3
extern const CFStringRef kCFStreamPropertyFTPUserName __attribute__((visibility("default")));
# 89 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 3
extern const CFStringRef kCFStreamPropertyFTPPassword __attribute__((visibility("default")));
# 105 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 3
extern const CFStringRef kCFStreamPropertyFTPUsePassiveMode __attribute__((visibility("default")));
# 120 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 3
extern const CFStringRef kCFStreamPropertyFTPResourceSize __attribute__((visibility("default")));
# 138 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 3
extern const CFStringRef kCFStreamPropertyFTPFetchResourceInfo __attribute__((visibility("default")));
# 153 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 3
extern const CFStringRef kCFStreamPropertyFTPFileTransferOffset __attribute__((visibility("default")));
# 169 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 3
extern const CFStringRef kCFStreamPropertyFTPAttemptPersistentConnection __attribute__((visibility("default")));
# 186 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 3
extern const CFStringRef kCFStreamPropertyFTPProxy __attribute__((visibility("default")));
# 204 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 3
extern const CFStringRef kCFStreamPropertyFTPProxyHost __attribute__((visibility("default")));
# 222 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 3
extern const CFStringRef kCFStreamPropertyFTPProxyPort __attribute__((visibility("default")));
# 232 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 3
extern const CFStringRef kCFStreamPropertyFTPProxyUser __attribute__((visibility("default")));
# 241 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 3
extern const CFStringRef kCFStreamPropertyFTPProxyPassword __attribute__((visibility("default")));
# 263 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 3
extern const CFStringRef kCFFTPResourceMode __attribute__((visibility("default")));
# 278 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 3
extern const CFStringRef kCFFTPResourceName __attribute__((visibility("default")));
# 293 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 3
extern const CFStringRef kCFFTPResourceOwner __attribute__((visibility("default")));
# 308 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 3
extern const CFStringRef kCFFTPResourceGroup __attribute__((visibility("default")));
# 324 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 3
extern const CFStringRef kCFFTPResourceLink __attribute__((visibility("default")));
# 339 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 3
extern const CFStringRef kCFFTPResourceSize __attribute__((visibility("default")));
# 354 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 3
extern const CFStringRef kCFFTPResourceType __attribute__((visibility("default")));
# 369 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 3
extern const CFStringRef kCFFTPResourceModDate __attribute__((visibility("default")));
# 408 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 3
extern CFReadStreamRef
CFReadStreamCreateWithFTPURL(
  CFAllocatorRef alloc,
  CFURLRef ftpURL) __attribute__((visibility("default")));
# 456 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 3
extern CFIndex
CFFTPCreateParsedResourceListing(
  CFAllocatorRef alloc,
  const UInt8 * buffer,
  CFIndex bufferLength,
  CFDictionaryRef * parsed) __attribute__((visibility("default")));
# 500 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h" 3
extern CFWriteStreamRef
CFWriteStreamCreateWithFTPURL(
  CFAllocatorRef alloc,
  CFURLRef ftpURL) __attribute__((visibility("default")));




}
# 36 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetwork.h" 2 3







# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 1 3
# 18 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetworkDefs.h" 1 3
# 19 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 2 3
# 38 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern "C" {
# 52 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern const CFStringRef kCFHTTPVersion1_0 __attribute__((visibility("default")));
# 66 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern const CFStringRef kCFHTTPVersion1_1 __attribute__((visibility("default")));
# 80 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern const CFStringRef kCFHTTPAuthenticationSchemeBasic __attribute__((visibility("default")));
# 94 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern const CFStringRef kCFHTTPAuthenticationSchemeDigest __attribute__((visibility("default")));
# 107 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern const CFStringRef kCFHTTPAuthenticationSchemeNTLM __attribute__((visibility("default")));
# 120 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern const CFStringRef kCFHTTPAuthenticationSchemeNegotiate __attribute__((visibility("default")));
# 133 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern const CFStringRef kCFHTTPAuthenticationSchemeNegotiate2 __attribute__((visibility("default")));
# 143 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
typedef struct __CFHTTPMessage* CFHTTPMessageRef;
# 162 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern CFTypeID
CFHTTPMessageGetTypeID(void) __attribute__((visibility("default")));
# 205 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern CFHTTPMessageRef
CFHTTPMessageCreateRequest(
  CFAllocatorRef alloc,
  CFStringRef requestMethod,
  CFURLRef url,
  CFStringRef httpVersion) __attribute__((visibility("default")));
# 252 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern CFHTTPMessageRef
CFHTTPMessageCreateResponse(
  CFAllocatorRef alloc,
  CFIndex statusCode,
  CFStringRef statusDescription,
  CFStringRef httpVersion) __attribute__((visibility("default")));
# 292 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern CFHTTPMessageRef
CFHTTPMessageCreateEmpty(
  CFAllocatorRef alloc,
  Boolean isRequest) __attribute__((visibility("default")));
# 329 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern CFHTTPMessageRef
CFHTTPMessageCreateCopy(
  CFAllocatorRef alloc,
  CFHTTPMessageRef message) __attribute__((visibility("default")));
# 360 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern Boolean
CFHTTPMessageIsRequest(CFHTTPMessageRef message) __attribute__((visibility("default")));
# 388 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern CFStringRef
CFHTTPMessageCopyVersion(CFHTTPMessageRef message) __attribute__((visibility("default")));
# 416 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern CFDataRef
CFHTTPMessageCopyBody(CFHTTPMessageRef message) __attribute__((visibility("default")));
# 444 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern void
CFHTTPMessageSetBody(
  CFHTTPMessageRef message,
  CFDataRef bodyData) __attribute__((visibility("default")));
# 478 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern CFStringRef
CFHTTPMessageCopyHeaderFieldValue(
  CFHTTPMessageRef message,
  CFStringRef headerField) __attribute__((visibility("default")));
# 508 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern CFDictionaryRef
CFHTTPMessageCopyAllHeaderFields(CFHTTPMessageRef message) __attribute__((visibility("default")));
# 540 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern void
CFHTTPMessageSetHeaderFieldValue(
  CFHTTPMessageRef message,
  CFStringRef headerField,
  CFStringRef value) __attribute__((visibility("default")));
# 579 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern Boolean
CFHTTPMessageAppendBytes(
  CFHTTPMessageRef message,
  const UInt8 * newBytes,
  CFIndex numBytes) __attribute__((visibility("default")));
# 610 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern Boolean
CFHTTPMessageIsHeaderComplete(CFHTTPMessageRef message) __attribute__((visibility("default")));
# 639 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern CFDataRef
CFHTTPMessageCopySerializedMessage(CFHTTPMessageRef request) __attribute__((visibility("default")));
# 670 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern CFURLRef
CFHTTPMessageCopyRequestURL(CFHTTPMessageRef request) __attribute__((visibility("default")));
# 697 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern CFStringRef
CFHTTPMessageCopyRequestMethod(CFHTTPMessageRef request) __attribute__((visibility("default")));
# 746 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern Boolean
CFHTTPMessageAddAuthentication(
  CFHTTPMessageRef request,
  CFHTTPMessageRef authenticationFailureResponse,
  CFStringRef username,
  CFStringRef password,
  CFStringRef authenticationScheme,
  Boolean forProxy) __attribute__((visibility("default")));
# 783 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern CFIndex
CFHTTPMessageGetResponseStatusCode(CFHTTPMessageRef response) __attribute__((visibility("default")));
# 812 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h" 3
extern CFStringRef
CFHTTPMessageCopyResponseStatusLine(CFHTTPMessageRef response) __attribute__((visibility("default")));




}
# 44 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetwork.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPStream.h" 1 3
# 18 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPStream.h" 3
# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetworkDefs.h" 1 3
# 19 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPStream.h" 2 3
# 40 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPStream.h" 3
extern "C" {
# 58 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPStream.h" 3
extern const SInt32 kCFStreamErrorDomainHTTP __attribute__((visibility("default")));







enum CFStreamErrorHTTP {




  kCFStreamErrorHTTPParseFailure = -1,




  kCFStreamErrorHTTPRedirectionLoop = -2,




  kCFStreamErrorHTTPBadURL = -3
};
typedef enum CFStreamErrorHTTP CFStreamErrorHTTP;
# 97 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPStream.h" 3
extern const CFStringRef kCFStreamPropertyHTTPResponseHeader __attribute__((visibility("default")));
# 114 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPStream.h" 3
extern const CFStringRef kCFStreamPropertyHTTPFinalURL __attribute__((visibility("default")));
# 130 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPStream.h" 3
extern const CFStringRef kCFStreamPropertyHTTPFinalRequest __attribute__((visibility("default")));
# 150 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPStream.h" 3
extern const CFStringRef kCFStreamPropertyHTTPProxy __attribute__((visibility("default")));
# 165 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPStream.h" 3
extern const CFStringRef kCFStreamPropertyHTTPProxyHost __attribute__((visibility("default")));
# 179 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPStream.h" 3
extern const CFStringRef kCFStreamPropertyHTTPProxyPort __attribute__((visibility("default")));
# 194 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPStream.h" 3
extern const CFStringRef kCFStreamPropertyHTTPSProxyHost __attribute__((visibility("default")));
# 209 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPStream.h" 3
extern const CFStringRef kCFStreamPropertyHTTPSProxyPort __attribute__((visibility("default")));
# 225 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPStream.h" 3
extern const CFStringRef kCFStreamPropertyHTTPShouldAutoredirect __attribute__((visibility("default")));
# 243 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPStream.h" 3
extern const CFStringRef kCFStreamPropertyHTTPAttemptPersistentConnection __attribute__((visibility("default")));
# 260 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPStream.h" 3
extern const CFStringRef kCFStreamPropertyHTTPRequestBytesWrittenCount __attribute__((visibility("default")));
# 302 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPStream.h" 3
extern CFReadStreamRef
CFReadStreamCreateForHTTPRequest(
  CFAllocatorRef alloc,
  CFHTTPMessageRef request) __attribute__((visibility("default")));
# 352 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPStream.h" 3
extern CFReadStreamRef
CFReadStreamCreateForStreamedHTTPRequest(
  CFAllocatorRef alloc,
  CFHTTPMessageRef requestHeaders,
  CFReadStreamRef requestBody) __attribute__((visibility("default")));
# 382 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPStream.h" 3
extern void
CFHTTPReadStreamSetRedirectsAutomatically(
  CFReadStreamRef httpStream,
  Boolean shouldAutoRedirect) __attribute__((deprecated,visibility("default")));
# 413 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPStream.h" 3
extern void
CFHTTPReadStreamSetProxy(
  CFReadStreamRef httpStream,
  CFStringRef proxyHost,
  CFIndex proxyPort) __attribute__((deprecated,visibility("default")));
# 426 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPStream.h" 3
}
# 48 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetwork.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPAuthentication.h" 1 3
# 18 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPAuthentication.h" 3
# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetworkDefs.h" 1 3
# 19 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPAuthentication.h" 2 3
# 39 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPAuthentication.h" 3
extern "C" {
# 54 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPAuthentication.h" 3
typedef struct _CFHTTPAuthentication* CFHTTPAuthenticationRef;
# 64 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPAuthentication.h" 3
enum CFStreamErrorHTTPAuthentication {





  kCFStreamErrorHTTPAuthenticationTypeUnsupported = -1000,





  kCFStreamErrorHTTPAuthenticationBadUserName = -1001,





  kCFStreamErrorHTTPAuthenticationBadPassword = -1002
};
typedef enum CFStreamErrorHTTPAuthentication CFStreamErrorHTTPAuthentication;
# 100 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPAuthentication.h" 3
extern const CFStringRef kCFHTTPAuthenticationUsername __attribute__((visibility("default")));
# 115 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPAuthentication.h" 3
extern const CFStringRef kCFHTTPAuthenticationPassword __attribute__((visibility("default")));
# 130 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPAuthentication.h" 3
extern const CFStringRef kCFHTTPAuthenticationAccountDomain __attribute__((visibility("default")));
# 146 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPAuthentication.h" 3
extern CFTypeID
CFHTTPAuthenticationGetTypeID(void) __attribute__((visibility("default")));
# 182 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPAuthentication.h" 3
extern CFHTTPAuthenticationRef
CFHTTPAuthenticationCreateFromResponse(
  CFAllocatorRef alloc,
  CFHTTPMessageRef response) __attribute__((visibility("default")));
# 228 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPAuthentication.h" 3
extern Boolean
CFHTTPAuthenticationIsValid(
  CFHTTPAuthenticationRef auth,
  CFStreamError * error) __attribute__((visibility("default")));
# 265 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPAuthentication.h" 3
extern Boolean
CFHTTPAuthenticationAppliesToRequest(
  CFHTTPAuthenticationRef auth,
  CFHTTPMessageRef request) __attribute__((visibility("default")));
# 300 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPAuthentication.h" 3
extern Boolean
CFHTTPAuthenticationRequiresOrderedRequests(CFHTTPAuthenticationRef auth) __attribute__((visibility("default")));
# 349 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPAuthentication.h" 3
extern Boolean
CFHTTPMessageApplyCredentials(
  CFHTTPMessageRef request,
  CFHTTPAuthenticationRef auth,
  CFStringRef username,
  CFStringRef password,
  CFStreamError * error) __attribute__((visibility("default")));
# 401 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPAuthentication.h" 3
extern Boolean
CFHTTPMessageApplyCredentialDictionary(
  CFHTTPMessageRef request,
  CFHTTPAuthenticationRef auth,
  CFDictionaryRef dict,
  CFStreamError * error) __attribute__((visibility("default")));
# 440 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPAuthentication.h" 3
extern CFStringRef
CFHTTPAuthenticationCopyRealm(CFHTTPAuthenticationRef auth) __attribute__((visibility("default")));
# 475 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPAuthentication.h" 3
extern CFArrayRef
CFHTTPAuthenticationCopyDomains(CFHTTPAuthenticationRef auth) __attribute__((visibility("default")));
# 508 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPAuthentication.h" 3
extern CFStringRef
CFHTTPAuthenticationCopyMethod(CFHTTPAuthenticationRef auth) __attribute__((visibility("default")));
# 540 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPAuthentication.h" 3
extern Boolean
CFHTTPAuthenticationRequiresUserNameAndPassword(CFHTTPAuthenticationRef auth) __attribute__((visibility("default")));
# 573 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPAuthentication.h" 3
extern Boolean
CFHTTPAuthenticationRequiresAccountDomain(CFHTTPAuthenticationRef auth) __attribute__((visibility("default")));
# 583 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFHTTPAuthentication.h" 3
}
# 52 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetwork.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetDiagnostics.h" 1 3
# 18 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetDiagnostics.h" 3
# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetworkDefs.h" 1 3
# 19 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetDiagnostics.h" 2 3
# 35 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetDiagnostics.h" 3
extern "C" {
# 50 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetDiagnostics.h" 3
typedef struct __CFNetDiagnostic* CFNetDiagnosticRef;







enum CFNetDiagnosticStatusValues {




  kCFNetDiagnosticNoErr = 0,




  kCFNetDiagnosticErr = -66560L,




  kCFNetDiagnosticConnectionUp = -66559L,
  kCFNetDiagnosticConnectionIndeterminate = -66558L,




  kCFNetDiagnosticConnectionDown = -66557L
};
typedef enum CFNetDiagnosticStatusValues CFNetDiagnosticStatusValues;
# 90 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetDiagnostics.h" 3
typedef CFIndex CFNetDiagnosticStatus;
# 119 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetDiagnostics.h" 3
extern CFNetDiagnosticRef
CFNetDiagnosticCreateWithStreams(
  CFAllocatorRef alloc,
  CFReadStreamRef readStream,
  CFWriteStreamRef writeStream) __attribute__((visibility("default")));
# 149 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetDiagnostics.h" 3
extern CFNetDiagnosticRef
CFNetDiagnosticCreateWithURL(
  CFAllocatorRef alloc,
  CFURLRef url) __attribute__((visibility("default")));
# 180 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetDiagnostics.h" 3
extern void
CFNetDiagnosticSetName(
  CFNetDiagnosticRef details,
  CFStringRef name) __attribute__((visibility("default")));
# 210 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetDiagnostics.h" 3
extern CFNetDiagnosticStatus
CFNetDiagnosticDiagnoseProblemInteractively(CFNetDiagnosticRef details) __attribute__((visibility("default")));
# 244 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetDiagnostics.h" 3
extern CFNetDiagnosticStatus
CFNetDiagnosticCopyNetworkStatusPassively(
  CFNetDiagnosticRef details,
  CFStringRef * description) __attribute__((visibility("default")));
# 256 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetDiagnostics.h" 3
}
# 56 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetwork.h" 2 3







# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 1 3
# 18 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetworkDefs.h" 1 3
# 19 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 2 3
# 70 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern "C" {
# 83 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern CFDictionaryRef
CFNetworkCopySystemProxySettings( void ) __attribute__((visibility("default")));
# 114 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern CFArrayRef
CFNetworkCopyProxiesForURL(
  CFURLRef url,
  CFDictionaryRef proxySettings) __attribute__((visibility("default")));
# 148 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
typedef void ( * CFProxyAutoConfigurationResultCallback)(void *client, CFArrayRef proxyList, CFErrorRef error);
# 179 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern CFArrayRef
CFNetworkCopyProxiesForAutoConfigurationScript(
  CFStringRef proxyAutoConfigurationScript,
  CFURLRef targetURL,
  CFErrorRef * error) __attribute__((visibility("default")));
# 225 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern CFRunLoopSourceRef
CFNetworkExecuteProxyAutoConfigurationScript(
  CFStringRef proxyAutoConfigurationScript,
  CFURLRef targetURL,
  CFProxyAutoConfigurationResultCallback cb,
  CFStreamClientContext * clientContext) __attribute__((visibility("default")));
# 250 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern CFRunLoopSourceRef
CFNetworkExecuteProxyAutoConfigurationURL(
  CFURLRef proxyAutoConfigURL,
  CFURLRef targetURL,
  CFProxyAutoConfigurationResultCallback cb,
  CFStreamClientContext * clientContext) __attribute__((visibility("default")));
# 270 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFProxyTypeKey __attribute__((visibility("default")));
# 284 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFProxyHostNameKey __attribute__((visibility("default")));
# 298 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFProxyPortNumberKey __attribute__((visibility("default")));
# 314 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFProxyAutoConfigurationURLKey __attribute__((visibility("default")));
# 330 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFProxyUsernameKey __attribute__((visibility("default")));
# 346 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFProxyPasswordKey __attribute__((visibility("default")));
# 365 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFProxyTypeNone __attribute__((visibility("default")));
# 374 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFProxyTypeHTTP __attribute__((visibility("default")));
# 383 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFProxyTypeHTTPS __attribute__((visibility("default")));
# 392 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFProxyTypeSOCKS __attribute__((visibility("default")));
# 401 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFProxyTypeFTP __attribute__((visibility("default")));
# 410 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFProxyTypeAutoConfigurationURL __attribute__((visibility("default")));
# 420 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFProxyAutoConfigurationHTTPResponseKey __attribute__((visibility("default")));
# 431 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFNetworkProxiesExceptionsList __attribute__((visibility("default")));
# 440 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFNetworkProxiesExcludeSimpleHostnames __attribute__((visibility("default")));







extern const CFStringRef kCFNetworkProxiesFTPEnable __attribute__((visibility("default")));
# 457 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h" 3
extern const CFStringRef kCFNetworkProxiesFTPPassive __attribute__((visibility("default")));







extern const CFStringRef kCFNetworkProxiesFTPPort __attribute__((visibility("default")));







extern const CFStringRef kCFNetworkProxiesFTPProxy __attribute__((visibility("default")));







extern const CFStringRef kCFNetworkProxiesGopherEnable __attribute__((visibility("default")));







extern const CFStringRef kCFNetworkProxiesGopherPort __attribute__((visibility("default")));







extern const CFStringRef kCFNetworkProxiesGopherProxy __attribute__((visibility("default")));







extern const CFStringRef kCFNetworkProxiesHTTPEnable __attribute__((visibility("default")));







extern const CFStringRef kCFNetworkProxiesHTTPPort __attribute__((visibility("default")));







extern const CFStringRef kCFNetworkProxiesHTTPProxy __attribute__((visibility("default")));







extern const CFStringRef kCFNetworkProxiesHTTPSEnable __attribute__((visibility("default")));







extern const CFStringRef kCFNetworkProxiesHTTPSPort __attribute__((visibility("default")));







extern const CFStringRef kCFNetworkProxiesHTTPSProxy __attribute__((visibility("default")));







extern const CFStringRef kCFNetworkProxiesRTSPEnable __attribute__((visibility("default")));







extern const CFStringRef kCFNetworkProxiesRTSPPort __attribute__((visibility("default")));







extern const CFStringRef kCFNetworkProxiesRTSPProxy __attribute__((visibility("default")));







extern const CFStringRef kCFNetworkProxiesSOCKSEnable __attribute__((visibility("default")));







extern const CFStringRef kCFNetworkProxiesSOCKSPort __attribute__((visibility("default")));







extern const CFStringRef kCFNetworkProxiesSOCKSProxy __attribute__((visibility("default")));







extern const CFStringRef kCFNetworkProxiesProxyAutoConfigEnable __attribute__((visibility("default")));







extern const CFStringRef kCFNetworkProxiesProxyAutoConfigURLString __attribute__((visibility("default")));







extern const CFStringRef kCFNetworkProxiesProxyAutoDiscoveryEnable __attribute__((visibility("default")));



}
# 64 "/System/Library/Frameworks/CoreServices.framework/Frameworks/CFNetwork.framework/Headers/CFNetwork.h" 2 3
# 38 "/System/Library/Frameworks/CoreServices.framework/Headers/CoreServices.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LaunchServices.h" 1 3
# 21 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LaunchServices.h" 3
# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/IconsCore.h" 1 3
# 35 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/IconsCore.h" 3
extern "C" {




enum {
  kGenericDocumentIconResource = -4000,
  kGenericStationeryIconResource = -3985,
  kGenericEditionFileIconResource = -3989,
  kGenericApplicationIconResource = -3996,
  kGenericDeskAccessoryIconResource = -3991,
  kGenericFolderIconResource = -3999,
  kPrivateFolderIconResource = -3994,
  kFloppyIconResource = -3998,
  kTrashIconResource = -3993,
  kGenericRAMDiskIconResource = -3988,
  kGenericCDROMIconResource = -3987
};



enum {
  kDesktopIconResource = -3992,
  kOpenFolderIconResource = -3997,
  kGenericHardDiskIconResource = -3995,
  kGenericFileServerIconResource = -3972,
  kGenericSuitcaseIconResource = -3970,
  kGenericMoverObjectIconResource = -3969
};



enum {
  kGenericPreferencesIconResource = -3971,
  kGenericQueryDocumentIconResource = -16506,
  kGenericExtensionIconResource = -16415,
  kSystemFolderIconResource = -3983,
  kHelpIconResource = -20271,
  kAppleMenuFolderIconResource = -3982
};


enum {
  genericDocumentIconResource = kGenericDocumentIconResource,
  genericStationeryIconResource = kGenericStationeryIconResource,
  genericEditionFileIconResource = kGenericEditionFileIconResource,
  genericApplicationIconResource = kGenericApplicationIconResource,
  genericDeskAccessoryIconResource = kGenericDeskAccessoryIconResource,
  genericFolderIconResource = kGenericFolderIconResource,
  privateFolderIconResource = kPrivateFolderIconResource,
  floppyIconResource = kFloppyIconResource,
  trashIconResource = kTrashIconResource,
  genericRAMDiskIconResource = kGenericRAMDiskIconResource,
  genericCDROMIconResource = kGenericCDROMIconResource,
  desktopIconResource = kDesktopIconResource,
  openFolderIconResource = kOpenFolderIconResource,
  genericHardDiskIconResource = kGenericHardDiskIconResource,
  genericFileServerIconResource = kGenericFileServerIconResource,
  genericSuitcaseIconResource = kGenericSuitcaseIconResource,
  genericMoverObjectIconResource = kGenericMoverObjectIconResource,
  genericPreferencesIconResource = kGenericPreferencesIconResource,
  genericQueryDocumentIconResource = kGenericQueryDocumentIconResource,
  genericExtensionIconResource = kGenericExtensionIconResource,
  systemFolderIconResource = kSystemFolderIconResource,
  appleMenuFolderIconResource = kAppleMenuFolderIconResource
};


enum {
  kStartupFolderIconResource = -3981,
  kOwnedFolderIconResource = -3980,
  kDropFolderIconResource = -3979,
  kSharedFolderIconResource = -3978,
  kMountedFolderIconResource = -3977,
  kControlPanelFolderIconResource = -3976,
  kPrintMonitorFolderIconResource = -3975,
  kPreferencesFolderIconResource = -3974,
  kExtensionsFolderIconResource = -3973,
  kFontsFolderIconResource = -3968,
  kFullTrashIconResource = -3984
};


enum {
  startupFolderIconResource = kStartupFolderIconResource,
  ownedFolderIconResource = kOwnedFolderIconResource,
  dropFolderIconResource = kDropFolderIconResource,
  sharedFolderIconResource = kSharedFolderIconResource,
  mountedFolderIconResource = kMountedFolderIconResource,
  controlPanelFolderIconResource = kControlPanelFolderIconResource,
  printMonitorFolderIconResource = kPrintMonitorFolderIconResource,
  preferencesFolderIconResource = kPreferencesFolderIconResource,
  extensionsFolderIconResource = kExtensionsFolderIconResource,
  fontsFolderIconResource = kFontsFolderIconResource,
  fullTrashIconResource = kFullTrashIconResource
};


typedef struct OpaqueIconRef* IconRef;
# 152 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/IconsCore.h" 3
enum {
  kSystemIconsCreator = 'macs'
};
# 164 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/IconsCore.h" 3
enum {
  kClipboardIcon = 'CLIP',
  kClippingUnknownTypeIcon = 'clpu',
  kClippingPictureTypeIcon = 'clpp',
  kClippingTextTypeIcon = 'clpt',
  kClippingSoundTypeIcon = 'clps',
  kDesktopIcon = 'desk',
  kFinderIcon = 'FNDR',
  kComputerIcon = 'root',
  kFontSuitcaseIcon = 'FFIL',
  kFullTrashIcon = 'ftrh',
  kGenericApplicationIcon = 'APPL',
  kGenericCDROMIcon = 'cddr',
  kGenericControlPanelIcon = 'APPC',
  kGenericControlStripModuleIcon = 'sdev',
  kGenericComponentIcon = 'thng',
  kGenericDeskAccessoryIcon = 'APPD',
  kGenericDocumentIcon = 'docu',
  kGenericEditionFileIcon = 'edtf',
  kGenericExtensionIcon = 'INIT',
  kGenericFileServerIcon = 'srvr',
  kGenericFontIcon = 'ffil',
  kGenericFontScalerIcon = 'sclr',
  kGenericFloppyIcon = 'flpy',
  kGenericHardDiskIcon = 'hdsk',
  kGenericIDiskIcon = 'idsk',
  kGenericRemovableMediaIcon = 'rmov',
  kGenericMoverObjectIcon = 'movr',
  kGenericPCCardIcon = 'pcmc',
  kGenericPreferencesIcon = 'pref',
  kGenericQueryDocumentIcon = 'qery',
  kGenericRAMDiskIcon = 'ramd',
  kGenericSharedLibaryIcon = 'shlb',
  kGenericStationeryIcon = 'sdoc',
  kGenericSuitcaseIcon = 'suit',
  kGenericURLIcon = 'gurl',
  kGenericWORMIcon = 'worm',
  kInternationalResourcesIcon = 'ifil',
  kKeyboardLayoutIcon = 'kfil',
  kSoundFileIcon = 'sfil',
  kSystemSuitcaseIcon = 'zsys',
  kTrashIcon = 'trsh',
  kTrueTypeFontIcon = 'tfil',
  kTrueTypeFlatFontIcon = 'sfnt',
  kTrueTypeMultiFlatFontIcon = 'ttcf',
  kUserIDiskIcon = 'udsk',
  kUnknownFSObjectIcon = 'unfs',
  kInternationResourcesIcon = kInternationalResourcesIcon
};


enum {
  kInternetLocationHTTPIcon = 'ilht',
  kInternetLocationFTPIcon = 'ilft',
  kInternetLocationAppleShareIcon = 'ilaf',
  kInternetLocationAppleTalkZoneIcon = 'ilat',
  kInternetLocationFileIcon = 'ilfi',
  kInternetLocationMailIcon = 'ilma',
  kInternetLocationNewsIcon = 'ilnw',
  kInternetLocationNSLNeighborhoodIcon = 'ilns',
  kInternetLocationGenericIcon = 'ilge'
};


enum {
  kGenericFolderIcon = 'fldr',
  kDropFolderIcon = 'dbox',
  kMountedFolderIcon = 'mntd',
  kOpenFolderIcon = 'ofld',
  kOwnedFolderIcon = 'ownd',
  kPrivateFolderIcon = 'prvf',
  kSharedFolderIcon = 'shfl'
};


enum {
  kSharingPrivsNotApplicableIcon = 'shna',
  kSharingPrivsReadOnlyIcon = 'shro',
  kSharingPrivsReadWriteIcon = 'shrw',
  kSharingPrivsUnknownIcon = 'shuk',
  kSharingPrivsWritableIcon = 'writ'
};



enum {
  kUserFolderIcon = 'ufld',
  kWorkgroupFolderIcon = 'wfld',
  kGuestUserIcon = 'gusr',
  kUserIcon = 'user',
  kOwnerIcon = 'susr',
  kGroupIcon = 'grup'
};


enum {
  kAppearanceFolderIcon = 'appr',
  kAppleExtrasFolderIcon = 0x616578C4 ,
  kAppleMenuFolderIcon = 'amnu',
  kApplicationsFolderIcon = 'apps',
  kApplicationSupportFolderIcon = 'asup',
  kAssistantsFolderIcon = 0x617374C4 ,
  kColorSyncFolderIcon = 'prof',
  kContextualMenuItemsFolderIcon = 'cmnu',
  kControlPanelDisabledFolderIcon = 'ctrD',
  kControlPanelFolderIcon = 'ctrl',
  kControlStripModulesFolderIcon = 0x736476C4 ,
  kDocumentsFolderIcon = 'docs',
  kExtensionsDisabledFolderIcon = 'extD',
  kExtensionsFolderIcon = 'extn',
  kFavoritesFolderIcon = 'favs',
  kFontsFolderIcon = 'font',
  kHelpFolderIcon = (int)0xC4686C70 ,
  kInternetFolderIcon = 0x696E74C4 ,
  kInternetPlugInFolderIcon = (int)0xC46E6574 ,
  kInternetSearchSitesFolderIcon = 'issf',
  kLocalesFolderIcon = (int)0xC46C6F63 ,
  kMacOSReadMeFolderIcon = 0x6D6F72C4 ,
  kPublicFolderIcon = 'pubf',
  kPreferencesFolderIcon = 0x707266C4 ,
  kPrinterDescriptionFolderIcon = 'ppdf',
  kPrinterDriverFolderIcon = (int)0xC4707264 ,
  kPrintMonitorFolderIcon = 'prnt',
  kRecentApplicationsFolderIcon = 'rapp',
  kRecentDocumentsFolderIcon = 'rdoc',
  kRecentServersFolderIcon = 'rsrv',
  kScriptingAdditionsFolderIcon = (int)0xC4736372 ,
  kSharedLibrariesFolderIcon = (int)0xC46C6962 ,
  kScriptsFolderIcon = 0x736372C4 ,
  kShutdownItemsDisabledFolderIcon = 'shdD',
  kShutdownItemsFolderIcon = 'shdf',
  kSpeakableItemsFolder = 'spki',
  kStartupItemsDisabledFolderIcon = 'strD',
  kStartupItemsFolderIcon = 'strt',
  kSystemExtensionDisabledFolderIcon = 'macD',
  kSystemFolderIcon = 'macs',
  kTextEncodingsFolderIcon = (int)0xC4746578 ,
  kUsersFolderIcon = 0x757372C4 ,
  kUtilitiesFolderIcon = 0x757469C4 ,
  kVoicesFolderIcon = 'fvoc'
};


enum {
  kAppleScriptBadgeIcon = 'scrp',
  kLockedBadgeIcon = 'lbdg',
  kMountedBadgeIcon = 'mbdg',
  kSharedBadgeIcon = 'sbdg',
  kAliasBadgeIcon = 'abdg',
  kAlertCautionBadgeIcon = 'cbdg'
};


enum {
  kAlertNoteIcon = 'note',
  kAlertCautionIcon = 'caut',
  kAlertStopIcon = 'stop'
};


enum {
  kAppleTalkIcon = 'atlk',
  kAppleTalkZoneIcon = 'atzn',
  kAFPServerIcon = 'afps',
  kFTPServerIcon = 'ftps',
  kHTTPServerIcon = 'htps',
  kGenericNetworkIcon = 'gnet',
  kIPFileServerIcon = 'isrv'
};


enum {
  kToolbarCustomizeIcon = 'tcus',
  kToolbarDeleteIcon = 'tdel',
  kToolbarFavoritesIcon = 'tfav',
  kToolbarHomeIcon = 'thom',
  kToolbarAdvancedIcon = 'tbav',
  kToolbarInfoIcon = 'tbin',
  kToolbarLabelsIcon = 'tblb',
  kToolbarApplicationsFolderIcon = 'tAps',
  kToolbarDocumentsFolderIcon = 'tDoc',
  kToolbarMovieFolderIcon = 'tMov',
  kToolbarMusicFolderIcon = 'tMus',
  kToolbarPicturesFolderIcon = 'tPic',
  kToolbarPublicFolderIcon = 'tPub',
  kToolbarDesktopFolderIcon = 'tDsk',
  kToolbarDownloadsFolderIcon = 'tDwn',
  kToolbarLibraryFolderIcon = 'tLib',
  kToolbarUtilitiesFolderIcon = 'tUtl',
  kToolbarSitesFolderIcon = 'tSts'
};


enum {
  kAppleLogoIcon = 'capl',
  kAppleMenuIcon = 'sapl',
  kBackwardArrowIcon = 'baro',
  kFavoriteItemsIcon = 'favr',
  kForwardArrowIcon = 'faro',
  kGridIcon = 'grid',
  kHelpIcon = 'help',
  kKeepArrangedIcon = 'arng',
  kLockedIcon = 'lock',
  kNoFilesIcon = 'nfil',
  kNoFolderIcon = 'nfld',
  kNoWriteIcon = 'nwrt',
  kProtectedApplicationFolderIcon = 'papp',
  kProtectedSystemFolderIcon = 'psys',
  kRecentItemsIcon = 'rcnt',
  kShortcutIcon = 'shrt',
  kSortAscendingIcon = 'asnd',
  kSortDescendingIcon = 'dsnd',
  kUnlockedIcon = 'ulck',
  kConnectToIcon = 'cnct',
  kGenericWindowIcon = 'gwin',
  kQuestionMarkIcon = 'ques',
  kDeleteAliasIcon = 'dali',
  kEjectMediaIcon = 'ejec',
  kBurningIcon = 'burn',
  kRightContainerArrowIcon = 'rcar'
};



typedef UInt32 IconServicesUsageFlags;
enum {
  kIconServicesNormalUsageFlag = 0x00000000,
  kIconServicesNoBadgeFlag = 0x00000001,
  kIconServicesUpdateIfNeededFlag = 0x00000002
};
# 403 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/IconsCore.h" 3
enum {
  kIconServicesCatalogInfoMask = (kFSCatInfoNodeID | kFSCatInfoParentDirID | kFSCatInfoVolume | kFSCatInfoNodeFlags | kFSCatInfoFinderInfo | kFSCatInfoFinderXInfo | kFSCatInfoUserAccess | kFSCatInfoPermissions | kFSCatInfoContentMod)
};
# 434 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/IconsCore.h" 3
extern OSErr
GetIconRefOwners(
  IconRef theIconRef,
  UInt16 * owners) ;
# 457 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/IconsCore.h" 3
extern OSErr
AcquireIconRef(IconRef theIconRef) ;
# 483 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/IconsCore.h" 3
extern OSErr
ReleaseIconRef(IconRef theIconRef) ;
# 560 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/IconsCore.h" 3
extern OSErr
GetIconRef(
  SInt16 vRefNum,
  OSType creator,
  OSType iconType,
  IconRef * theIconRef) ;
# 593 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/IconsCore.h" 3
extern OSErr
GetIconRefFromFolder(
  SInt16 vRefNum,
  SInt32 parentFolderID,
  SInt32 folderID,
  SInt8 attributes,
  SInt8 accessPrivileges,
  IconRef * theIconRef) ;
# 653 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/IconsCore.h" 3
extern OSStatus
GetIconRefFromFileInfo(
  const FSRef * inRef,
  UniCharCount inFileNameLength,
  const UniChar * inFileName,
  FSCatalogInfoBitmap inWhichInfo,
  const FSCatalogInfo * inCatalogInfo,
  IconServicesUsageFlags inUsageFlags,
  IconRef * outIconRef,
  SInt16 * outLabel) ;
# 709 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/IconsCore.h" 3
extern OSErr
GetIconRefFromTypeInfo(
  OSType inCreator,
  OSType inType,
  CFStringRef inExtension,
  CFStringRef inMIMEType,
  IconServicesUsageFlags inUsageFlags,
  IconRef * outIconRef) ;
# 749 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/IconsCore.h" 3
extern OSStatus
GetIconRefFromIconFamilyPtr(
  const IconFamilyResource * inIconFamilyPtr,
  Size inSize,
  IconRef * outIconRef) ;
# 784 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/IconsCore.h" 3
extern OSStatus
GetIconRefFromComponent(
  Component inComponent,
  IconRef * outIconRef) ;
# 820 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/IconsCore.h" 3
extern OSErr
RegisterIconRefFromIconFamily(
  OSType creator,
  OSType iconType,
  IconFamilyHandle iconFamily,
  IconRef * theIconRef) ;
# 893 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/IconsCore.h" 3
extern OSStatus
RegisterIconRefFromFSRef(
  OSType creator,
  OSType iconType,
  const FSRef * iconFile,
  IconRef * theIconRef) ;
# 920 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/IconsCore.h" 3
extern OSErr
UnregisterIconRef(
  OSType creator,
  OSType iconType) ;
# 951 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/IconsCore.h" 3
extern OSErr
UpdateIconRef(IconRef theIconRef) ;
# 1005 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/IconsCore.h" 3
extern OSErr
OverrideIconRef(
  IconRef oldIconRef,
  IconRef newIconRef) ;
# 1029 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/IconsCore.h" 3
extern OSErr
RemoveIconRefOverride(IconRef theIconRef) ;
# 1059 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/IconsCore.h" 3
extern OSErr
CompositeIconRef(
  IconRef backgroundIconRef,
  IconRef foregroundIconRef,
  IconRef * compositeIconRef) ;
# 1084 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/IconsCore.h" 3
extern OSErr
IsIconRefComposite(
  IconRef compositeIconRef,
  IconRef * backgroundIconRef,
  IconRef * foregroundIconRef) ;
# 1115 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/IconsCore.h" 3
extern Boolean
IsValidIconRef(IconRef theIconRef) ;
# 1147 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/IconsCore.h" 3
extern Boolean
IsDataAvailableInIconRef(
  OSType inIconKind,
  IconRef inIconRef) ;
# 1238 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/IconsCore.h" 3
extern OSErr
SetCustomIconsEnabled(
  SInt16 vRefNum,
  Boolean enableCustomIcons) ;
# 1262 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/IconsCore.h" 3
extern OSErr
GetCustomIconsEnabled(
  SInt16 vRefNum,
  Boolean * customIconsEnabled) ;
# 1381 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/IconsCore.h" 3
extern OSStatus
ReadIconFromFSRef(
  const FSRef * ref,
  IconFamilyHandle * iconFamily) ;




}
# 22 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LaunchServices.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSInfo.h" 1 3
# 35 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSInfo.h" 3
extern "C" {


#pragma pack(push, 2)





enum {
  kLSAppInTrashErr = -10660,
  kLSExecutableIncorrectFormat = -10661,
  kLSAttributeNotFoundErr = -10662,
  kLSAttributeNotSettableErr = -10663,
  kLSIncompatibleApplicationVersionErr = -10664,
  kLSNoRosettaEnvironmentErr = -10665,
  kLSUnknownErr = -10810,
  kLSNotAnApplicationErr = -10811,
  kLSNotInitializedErr = -10812,
  kLSDataUnavailableErr = -10813,
  kLSApplicationNotFoundErr = -10814,
  kLSUnknownTypeErr = -10815,
  kLSDataTooOldErr = -10816,
  kLSDataErr = -10817,
  kLSLaunchInProgressErr = -10818,
  kLSNotRegisteredErr = -10819,
  kLSAppDoesNotClaimTypeErr = -10820,
  kLSAppDoesNotSupportSchemeWarning = -10821,
  kLSServerCommunicationErr = -10822,
  kLSCannotSetInfoErr = -10823,
  kLSNoRegistrationInfoErr = -10824,
  kLSIncompatibleSystemVersionErr = -10825,
  kLSNoLaunchPermissionErr = -10826,
  kLSNoExecutableErr = -10827,
  kLSNoClassicEnvironmentErr = -10828,
  kLSMultipleSessionsNotSupportedErr = -10829
};

typedef OptionBits LSInitializeFlags;
enum {
  kLSInitializeDefaults = 0x00000001
};

enum {
  kLSMinCatInfoBitmap = (kFSCatInfoNodeFlags | kFSCatInfoParentDirID | kFSCatInfoFinderInfo | kFSCatInfoFinderXInfo)
};


typedef OptionBits LSRequestedInfo;
enum {
  kLSRequestExtension = 0x00000001,
  kLSRequestTypeCreator = 0x00000002,
  kLSRequestBasicFlagsOnly = 0x00000004,
  kLSRequestAppTypeFlags = 0x00000008,
  kLSRequestAllFlags = 0x00000010,
  kLSRequestIconAndKind = 0x00000020,
  kLSRequestExtensionFlagsOnly = 0x00000040,
  kLSRequestAllInfo = (UInt32)0xFFFFFFFF
};

typedef OptionBits LSItemInfoFlags;
enum {
  kLSItemInfoIsPlainFile = 0x00000001,
  kLSItemInfoIsPackage = 0x00000002,
  kLSItemInfoIsApplication = 0x00000004,
  kLSItemInfoIsContainer = 0x00000008,
  kLSItemInfoIsAliasFile = 0x00000010,
  kLSItemInfoIsSymlink = 0x00000020,
  kLSItemInfoIsInvisible = 0x00000040,
  kLSItemInfoIsNativeApp = 0x00000080,
  kLSItemInfoIsClassicApp = 0x00000100,
  kLSItemInfoAppPrefersNative = 0x00000200,
  kLSItemInfoAppPrefersClassic = 0x00000400,
  kLSItemInfoAppIsScriptable = 0x00000800,
  kLSItemInfoIsVolume = 0x00001000,
  kLSItemInfoExtensionIsHidden = 0x00100000
};

typedef OptionBits LSRolesMask;
enum {
  kLSRolesNone = 0x00000001,
  kLSRolesViewer = 0x00000002,
  kLSRolesEditor = 0x00000004,
  kLSRolesShell = 0x00000008,
  kLSRolesAll = (UInt32)0xFFFFFFFF
};
# 129 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSInfo.h" 3
enum {
  kLSUnknownType = 0,
  kLSUnknownCreator = 0
};

struct LSItemInfoRecord {
  LSItemInfoFlags flags;
  OSType filetype;
  OSType creator;
  CFStringRef extension;






};
typedef struct LSItemInfoRecord LSItemInfoRecord;

typedef OptionBits LSAcceptanceFlags;
enum {
  kLSAcceptDefault = 0x00000001,
  kLSAcceptAllowLoginUI = 0x00000002
};
# 170 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSInfo.h" 3
extern OSStatus
LSInit(LSInitializeFlags inFlags) __attribute__((deprecated));
# 186 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSInfo.h" 3
extern OSStatus
LSTerm(void) __attribute__((deprecated));
# 220 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSInfo.h" 3
extern OSStatus
LSCopyItemInfoForRef(
  const FSRef * inItemRef,
  LSRequestedInfo inWhichInfo,
  LSItemInfoRecord * outItemInfo) ;
# 256 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSInfo.h" 3
extern OSStatus
LSCopyItemInfoForURL(
  CFURLRef inURL,
  LSRequestedInfo inWhichInfo,
  LSItemInfoRecord * outItemInfo) ;
# 295 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSInfo.h" 3
extern OSStatus
LSGetExtensionInfo(
  UniCharCount inNameLen,
  const UniChar inNameBuffer[],
  UniCharCount * outExtStartIndex) ;
# 330 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSInfo.h" 3
extern OSStatus
LSCopyDisplayNameForRef(
  const FSRef * inRef,
  CFStringRef * outDisplayName) ;
# 364 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSInfo.h" 3
extern OSStatus
LSCopyDisplayNameForURL(
  CFURLRef inURL,
  CFStringRef * outDisplayName) ;
# 399 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSInfo.h" 3
extern OSStatus
LSSetExtensionHiddenForRef(
  const FSRef * inRef,
  Boolean inHide) ;
# 434 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSInfo.h" 3
extern OSStatus
LSSetExtensionHiddenForURL(
  CFURLRef inURL,
  Boolean inHide) ;
# 468 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSInfo.h" 3
extern OSStatus
LSCopyKindStringForRef(
  const FSRef * inFSRef,
  CFStringRef * outKindString) ;
# 502 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSInfo.h" 3
extern OSStatus
LSCopyKindStringForURL(
  CFURLRef inURL,
  CFStringRef * outKindString) ;
# 553 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSInfo.h" 3
extern OSStatus
LSCopyKindStringForTypeInfo(
  OSType inType,
  OSType inCreator,
  CFStringRef inExtension,
  CFStringRef * outKindString) ;
# 589 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSInfo.h" 3
extern OSStatus
LSCopyKindStringForMIMEType(
  CFStringRef inMIMEType,
  CFStringRef * outKindString) ;
# 635 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSInfo.h" 3
extern OSStatus
LSGetApplicationForItem(
  const FSRef * inItemRef,
  LSRolesMask inRoleMask,
  FSRef * outAppRef,
  CFURLRef * outAppURL) ;
# 692 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSInfo.h" 3
extern OSStatus
LSGetApplicationForInfo(
  OSType inType,
  OSType inCreator,
  CFStringRef inExtension,
  LSRolesMask inRoleMask,
  FSRef * outAppRef,
  CFURLRef * outAppURL) ;
# 738 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSInfo.h" 3
extern OSStatus
LSCopyApplicationForMIMEType(
  CFStringRef inMIMEType,
  LSRolesMask inRoleMask,
  CFURLRef * outAppURL) ;
# 786 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSInfo.h" 3
extern OSStatus
LSGetApplicationForURL(
  CFURLRef inURL,
  LSRolesMask inRoleMask,
  FSRef * outAppRef,
  CFURLRef * outAppURL) ;
# 837 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSInfo.h" 3
extern OSStatus
LSFindApplicationForInfo(
  OSType inCreator,
  CFStringRef inBundleID,
  CFStringRef inName,
  FSRef * outAppRef,
  CFURLRef * outAppURL) ;
# 885 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSInfo.h" 3
extern OSStatus
LSCanRefAcceptItem(
  const FSRef * inItemFSRef,
  const FSRef * inTargetRef,
  LSRolesMask inRoleMask,
  LSAcceptanceFlags inFlags,
  Boolean * outAcceptsItem) ;
# 933 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSInfo.h" 3
extern OSStatus
LSCanURLAcceptURL(
  CFURLRef inItemURL,
  CFURLRef inTargetURL,
  LSRolesMask inRoleMask,
  LSAcceptanceFlags inFlags,
  Boolean * outAcceptsItem) ;
# 976 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSInfo.h" 3
extern OSStatus
LSRegisterURL(
  CFURLRef inURL,
  Boolean inUpdate) ;
# 1015 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSInfo.h" 3
extern OSStatus
LSRegisterFSRef(
  const FSRef * inRef,
  Boolean inUpdate) ;
# 1058 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSInfo.h" 3
extern CFArrayRef
LSCopyApplicationURLsForURL(
  CFURLRef inURL,
  LSRolesMask inRoleMask) ;
# 1143 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSInfo.h" 3
extern const CFStringRef kLSItemContentType ;
# 1152 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSInfo.h" 3
extern const CFStringRef kLSItemFileType ;
# 1161 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSInfo.h" 3
extern const CFStringRef kLSItemFileCreator ;
# 1170 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSInfo.h" 3
extern const CFStringRef kLSItemExtension ;
# 1179 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSInfo.h" 3
extern const CFStringRef kLSItemDisplayName ;
# 1188 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSInfo.h" 3
extern const CFStringRef kLSItemDisplayKind ;
# 1197 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSInfo.h" 3
extern const CFStringRef kLSItemRoleHandlerDisplayName ;
# 1206 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSInfo.h" 3
extern const CFStringRef kLSItemIsInvisible ;
# 1215 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSInfo.h" 3
extern const CFStringRef kLSItemExtensionIsHidden ;
# 1224 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSInfo.h" 3
extern const CFStringRef kLSItemQuarantineProperties ;
# 1261 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSInfo.h" 3
extern OSStatus
LSCopyItemAttribute(
  const FSRef * inItem,
  LSRolesMask inRoles,
  CFStringRef inAttributeName,
  CFTypeRef * outValue) ;
# 1309 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSInfo.h" 3
extern OSStatus
LSCopyItemAttributes(
  const FSRef * inItem,
  LSRolesMask inRoles,
  CFArrayRef inAttributeNames,
  CFDictionaryRef * outValues) ;
# 1353 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSInfo.h" 3
extern OSStatus
LSSetItemAttribute(
  const FSRef * inItem,
  LSRolesMask inRoles,
  CFStringRef inAttributeName,
  CFTypeRef inValue) ;
# 1385 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSInfo.h" 3
extern CFStringRef
LSCopyDefaultRoleHandlerForContentType(
  CFStringRef inContentType,
  LSRolesMask inRole) ;
# 1413 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSInfo.h" 3
extern CFArrayRef
LSCopyAllRoleHandlersForContentType(
  CFStringRef inContentType,
  LSRolesMask inRole) ;
# 1439 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSInfo.h" 3
extern OSStatus
LSSetDefaultRoleHandlerForContentType(
  CFStringRef inContentType,
  LSRolesMask inRole,
  CFStringRef inHandlerBundleID) ;
# 1458 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSInfo.h" 3
typedef OptionBits LSHandlerOptions;
enum {
  kLSHandlerOptionsDefault = 0,
  kLSHandlerOptionsIgnoreCreator = 1
};
# 1481 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSInfo.h" 3
extern LSHandlerOptions
LSGetHandlerOptionsForContentType(CFStringRef inContentType) ;
# 1502 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSInfo.h" 3
extern OSStatus
LSSetHandlerOptionsForContentType(
  CFStringRef inContentType,
  LSHandlerOptions inOptions) ;
# 1527 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSInfo.h" 3
extern CFStringRef
LSCopyDefaultHandlerForURLScheme(CFStringRef inURLScheme) ;
# 1552 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSInfo.h" 3
extern CFArrayRef
LSCopyAllHandlersForURLScheme(CFStringRef inURLScheme) ;
# 1575 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSInfo.h" 3
extern OSStatus
LSSetDefaultHandlerForURLScheme(
  CFStringRef inURLScheme,
  CFStringRef inHandlerBundleID) ;



#pragma pack(pop)


}
# 26 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LaunchServices.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSOpen.h" 1 3
# 45 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSOpen.h" 3
extern "C" {


#pragma pack(push, 2)





typedef OptionBits LSLaunchFlags;
enum {
  kLSLaunchDefaults = 0x00000001,
  kLSLaunchAndPrint = 0x00000002,
  kLSLaunchReserved2 = 0x00000004,
  kLSLaunchReserved3 = 0x00000008,
  kLSLaunchReserved4 = 0x00000010,
  kLSLaunchReserved5 = 0x00000020,
  kLSLaunchAndDisplayErrors = 0x00000040,
  kLSLaunchInhibitBGOnly = 0x00000080,
  kLSLaunchDontAddToRecents = 0x00000100,
  kLSLaunchDontSwitch = 0x00000200,
  kLSLaunchNoParams = 0x00000800,
  kLSLaunchAsync = 0x00010000,
  kLSLaunchStartClassic = 0x00020000,
  kLSLaunchInClassic = 0x00040000,
  kLSLaunchNewInstance = 0x00080000,
  kLSLaunchAndHide = 0x00100000,
  kLSLaunchAndHideOthers = 0x00200000,
  kLSLaunchHasUntrustedContents = 0x00400000
};

struct LSLaunchFSRefSpec {
  const FSRef * appRef;
  ItemCount numDocs;
  const FSRef * itemRefs;
  const AEDesc * passThruParams;

  LSLaunchFlags launchFlags;
  void * asyncRefCon;
};
typedef struct LSLaunchFSRefSpec LSLaunchFSRefSpec;
struct LSLaunchURLSpec {
  CFURLRef appURL;
  CFArrayRef itemURLs;
  const AEDesc * passThruParams;
  LSLaunchFlags launchFlags;
  void * asyncRefCon;
};
typedef struct LSLaunchURLSpec LSLaunchURLSpec;
# 131 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSOpen.h" 3
extern OSStatus
LSOpenFSRef(
  const FSRef * inRef,
  FSRef * outLaunchedRef) ;
# 171 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSOpen.h" 3
extern OSStatus
LSOpenCFURLRef(
  CFURLRef inURL,
  CFURLRef * outLaunchedURL) ;
# 205 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSOpen.h" 3
extern OSStatus
LSOpenFromRefSpec(
  const LSLaunchFSRefSpec * inLaunchSpec,
  FSRef * outLaunchedRef) ;
# 241 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSOpen.h" 3
extern OSStatus
LSOpenFromURLSpec(
  const LSLaunchURLSpec * inLaunchSpec,
  CFURLRef * outLaunchedURL) ;
# 262 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSOpen.h" 3
struct LSApplicationParameters {
  CFIndex version;
  LSLaunchFlags flags;
  const FSRef * application;
  void * asyncLaunchRefCon;
  CFDictionaryRef environment;

  CFArrayRef argv;

  AppleEvent * initialEvent;
};
typedef struct LSApplicationParameters LSApplicationParameters;
# 301 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSOpen.h" 3
extern OSStatus
LSOpenApplication(
  const LSApplicationParameters * appParams,
  ProcessSerialNumber * outPSN) ;
# 346 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSOpen.h" 3
extern OSStatus
LSOpenItemsWithRole(
  const FSRef * inItems,
  CFIndex inItemCount,
  LSRolesMask inRole,
  const AEKeyDesc * inAEParam,
  const LSApplicationParameters * inAppParams,
  ProcessSerialNumber * outPSNs,
  CFIndex inMaxPSNCount) ;
# 399 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSOpen.h" 3
extern OSStatus
LSOpenURLsWithRole(
  CFArrayRef inURLs,
  LSRolesMask inRole,
  const AEKeyDesc * inAEParam,
  const LSApplicationParameters * inAppParams,
  ProcessSerialNumber * outPSNs,
  CFIndex inMaxPSNCount) ;





#pragma pack(pop)


}
# 30 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LaunchServices.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSQuarantine.h" 1 3
# 100 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSQuarantine.h" 3
extern const CFStringRef kLSQuarantineAgentNameKey ;
# 109 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSQuarantine.h" 3
extern const CFStringRef kLSQuarantineAgentBundleIdentifierKey ;
# 118 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSQuarantine.h" 3
extern const CFStringRef kLSQuarantineTimeStampKey ;
# 127 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSQuarantine.h" 3
extern const CFStringRef kLSQuarantineTypeKey ;
# 136 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSQuarantine.h" 3
extern const CFStringRef kLSQuarantineTypeWebDownload ;
# 145 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSQuarantine.h" 3
extern const CFStringRef kLSQuarantineTypeOtherDownload ;
# 154 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSQuarantine.h" 3
extern const CFStringRef kLSQuarantineTypeEmailAttachment ;
# 163 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSQuarantine.h" 3
extern const CFStringRef kLSQuarantineTypeInstantMessageAttachment ;
# 172 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSQuarantine.h" 3
extern const CFStringRef kLSQuarantineTypeCalendarEventAttachment ;
# 181 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSQuarantine.h" 3
extern const CFStringRef kLSQuarantineTypeOtherAttachment ;
# 190 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSQuarantine.h" 3
extern const CFStringRef kLSQuarantineOriginURLKey ;
# 199 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSQuarantine.h" 3
extern const CFStringRef kLSQuarantineDataURLKey ;
# 34 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LaunchServices.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSSharedFileList.h" 1 3
# 45 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSSharedFileList.h" 3
extern "C" {
# 54 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSSharedFileList.h" 3
typedef struct OpaqueLSSharedFileListRef* LSSharedFileListRef;
typedef struct OpaqueLSSharedFileListItemRef* LSSharedFileListItemRef;
# 67 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSSharedFileList.h" 3
extern CFStringRef kLSSharedFileListFavoriteVolumes ;
# 78 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSSharedFileList.h" 3
extern CFStringRef kLSSharedFileListFavoriteItems ;
# 89 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSSharedFileList.h" 3
extern CFStringRef kLSSharedFileListRecentApplicationItems ;
# 100 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSSharedFileList.h" 3
extern CFStringRef kLSSharedFileListRecentDocumentItems ;
# 111 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSSharedFileList.h" 3
extern CFStringRef kLSSharedFileListRecentServerItems ;
# 122 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSSharedFileList.h" 3
extern CFStringRef kLSSharedFileListSessionLoginItems ;
# 133 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSSharedFileList.h" 3
extern CFStringRef kLSSharedFileListGlobalLoginItems ;
# 151 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSSharedFileList.h" 3
extern CFStringRef kLSSharedFileListRecentItemsMaxAmount ;
# 165 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSSharedFileList.h" 3
extern CFStringRef kLSSharedFileListVolumesComputerVisible ;
# 179 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSSharedFileList.h" 3
extern CFStringRef kLSSharedFileListVolumesIDiskVisible ;
# 193 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSSharedFileList.h" 3
extern CFStringRef kLSSharedFileListVolumesNetworkVisible ;
# 210 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSSharedFileList.h" 3
extern LSSharedFileListItemRef kLSSharedFileListItemBeforeFirst ;
# 224 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSSharedFileList.h" 3
extern LSSharedFileListItemRef kLSSharedFileListItemLast ;
# 241 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSSharedFileList.h" 3
extern CFStringRef kLSSharedFileListItemHidden ;
# 254 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSSharedFileList.h" 3
extern CFStringRef kLSSharedFileListLoginItemHidden ;


enum {
  kLSSharedFileListNoUserInteraction = 1 << 0,
  kLSSharedFileListDoNotMountVolumes = 1 << 1
};
# 270 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSSharedFileList.h" 3
typedef void ( * LSSharedFileListChangedProcPtr)(LSSharedFileListRef inList, void *context);
# 290 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSSharedFileList.h" 3
extern CFTypeID
LSSharedFileListGetTypeID(void) ;
# 312 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSSharedFileList.h" 3
extern CFTypeID
LSSharedFileListItemGetTypeID(void) ;
# 353 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSSharedFileList.h" 3
extern LSSharedFileListRef
LSSharedFileListCreate(
  CFAllocatorRef inAllocator,
  CFStringRef inListType,
  CFTypeRef listOptions) ;
# 389 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSSharedFileList.h" 3
extern OSStatus
LSSharedFileListSetAuthorization(
  LSSharedFileListRef inList,
  AuthorizationRef inAuthorization) ;
# 431 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSSharedFileList.h" 3
extern void
LSSharedFileListAddObserver(
  LSSharedFileListRef inList,
  CFRunLoopRef inRunloop,
  CFStringRef inRunloopMode,
  LSSharedFileListChangedProcPtr callback,
  void * context) ;
# 474 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSSharedFileList.h" 3
extern void
LSSharedFileListRemoveObserver(
  LSSharedFileListRef inList,
  CFRunLoopRef inRunloop,
  CFStringRef inRunloopMode,
  LSSharedFileListChangedProcPtr callback,
  void * context) ;
# 505 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSSharedFileList.h" 3
extern UInt32
LSSharedFileListGetSeedValue(LSSharedFileListRef inList) ;
# 539 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSSharedFileList.h" 3
extern CFTypeRef
LSSharedFileListCopyProperty(
  LSSharedFileListRef inList,
  CFStringRef inPropertyName) ;
# 573 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSSharedFileList.h" 3
extern OSStatus
LSSharedFileListSetProperty(
  LSSharedFileListRef inList,
  CFStringRef inPropertyName,
  CFTypeRef inPropertyData) ;
# 610 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSSharedFileList.h" 3
extern CFArrayRef
LSSharedFileListCopySnapshot(
  LSSharedFileListRef inList,
  UInt32 * outSnapshotSeed) ;
# 667 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSSharedFileList.h" 3
extern LSSharedFileListItemRef
LSSharedFileListInsertItemURL(
  LSSharedFileListRef inList,
  LSSharedFileListItemRef insertAfterThisItem,
  CFStringRef inDisplayName,
  IconRef inIconRef,
  CFURLRef inURL,
  CFDictionaryRef inPropertiesToSet,
  CFArrayRef inPropertiesToClear) ;
# 729 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSSharedFileList.h" 3
extern LSSharedFileListItemRef
LSSharedFileListInsertItemFSRef(
  LSSharedFileListRef inList,
  LSSharedFileListItemRef insertAfterThisItem,
  CFStringRef inDisplayName,
  IconRef inIconRef,
  const FSRef * inFSRef,
  CFDictionaryRef inPropertiesToSet,
  CFArrayRef inPropertiesToClear) ;
# 770 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSSharedFileList.h" 3
extern OSStatus
LSSharedFileListItemMove(
  LSSharedFileListRef inList,
  LSSharedFileListItemRef inItem,
  LSSharedFileListItemRef inMoveAfterItem) ;
# 802 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSSharedFileList.h" 3
extern OSStatus
LSSharedFileListItemRemove(
  LSSharedFileListRef inList,
  LSSharedFileListItemRef inItem) ;
# 830 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSSharedFileList.h" 3
extern OSStatus
LSSharedFileListRemoveAllItems(LSSharedFileListRef inList) ;
# 851 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSSharedFileList.h" 3
extern UInt32
LSSharedFileListItemGetID(LSSharedFileListItemRef inItem) ;
# 876 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSSharedFileList.h" 3
extern IconRef
LSSharedFileListItemCopyIconRef(LSSharedFileListItemRef inItem) ;
# 898 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSSharedFileList.h" 3
extern CFStringRef
LSSharedFileListItemCopyDisplayName(LSSharedFileListItemRef inItem) ;
# 934 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSSharedFileList.h" 3
extern OSStatus
LSSharedFileListItemResolve(
  LSSharedFileListItemRef inItem,
  UInt32 inFlags,
  CFURLRef * outURL,
  FSRef * outRef) ;
# 960 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSSharedFileList.h" 3
extern CFTypeRef
LSSharedFileListItemCopyProperty(
  LSSharedFileListItemRef inItem,
  CFStringRef inPropertyName) ;
# 983 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LSSharedFileList.h" 3
extern OSStatus
LSSharedFileListItemSetProperty(
  LSSharedFileListItemRef inItem,
  CFStringRef inPropertyName,
  CFTypeRef inPropertyData) ;




}
# 38 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LaunchServices.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 1 3
# 101 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeItem ;
# 110 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeContent ;
# 119 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeCompositeContent ;
# 128 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeApplication ;
# 137 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeMessage ;
# 146 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeContact ;
# 155 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeArchive ;
# 164 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeDiskImage ;
# 251 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeData ;
# 260 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeDirectory ;
# 269 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeResolvable ;
# 278 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeSymLink ;
# 287 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeMountPoint ;
# 296 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeAliasFile ;
# 305 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeAliasRecord ;
# 314 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeURL ;
# 323 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeFileURL ;
# 469 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeText ;
# 478 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypePlainText ;
# 487 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeUTF8PlainText ;
# 496 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeUTF16ExternalPlainText ;
# 505 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeUTF16PlainText ;
# 514 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeRTF ;
# 523 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeHTML ;
# 532 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeXML ;
# 541 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeSourceCode ;
# 550 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeCSource ;
# 559 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeObjectiveCSource ;
# 568 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeCPlusPlusSource ;
# 577 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeObjectiveCPlusPlusSource ;
# 586 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeCHeader ;
# 595 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeCPlusPlusHeader ;
# 604 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeJavaSource ;
# 659 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypePDF ;
# 668 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeRTFD ;
# 677 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeFlatRTFD ;
# 686 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeTXNTextAndMultimediaData ;
# 695 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeWebArchive ;
# 796 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeImage ;
# 805 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeJPEG ;
# 814 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeJPEG2000 ;
# 823 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeTIFF ;
# 832 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypePICT ;
# 841 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeGIF ;
# 850 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypePNG ;
# 859 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeQuickTimeImage ;
# 868 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeAppleICNS ;
# 877 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeBMP ;
# 886 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeICO ;
# 982 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeAudiovisualContent ;
# 991 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeMovie ;
# 1000 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeVideo ;
# 1009 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeAudio ;
# 1018 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeQuickTimeMovie ;
# 1027 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeMPEG ;
# 1036 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeMPEG4 ;
# 1045 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeMP3 ;
# 1054 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeMPEG4Audio ;
# 1063 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeAppleProtectedMPEG4Audio ;
# 1115 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeFolder ;
# 1124 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeVolume ;
# 1133 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypePackage ;
# 1142 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeBundle ;
# 1151 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeFramework ;
# 1179 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeApplicationBundle ;
# 1188 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeApplicationFile ;
# 1208 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeVCard ;
# 1228 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h" 3
extern const CFStringRef kUTTypeInkText ;
# 42 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LaunchServices.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTType.h" 1 3
# 35 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTType.h" 3
extern "C" {
# 217 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTType.h" 3
extern const CFStringRef kUTExportedTypeDeclarationsKey ;
# 226 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTType.h" 3
extern const CFStringRef kUTImportedTypeDeclarationsKey ;
# 235 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTType.h" 3
extern const CFStringRef kUTTypeIdentifierKey ;
# 244 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTType.h" 3
extern const CFStringRef kUTTypeTagSpecificationKey ;
# 253 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTType.h" 3
extern const CFStringRef kUTTypeConformsToKey ;
# 262 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTType.h" 3
extern const CFStringRef kUTTypeDescriptionKey ;
# 271 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTType.h" 3
extern const CFStringRef kUTTypeIconFileKey ;
# 280 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTType.h" 3
extern const CFStringRef kUTTypeReferenceURLKey ;
# 289 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTType.h" 3
extern const CFStringRef kUTTypeVersionKey ;
# 307 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTType.h" 3
extern const CFStringRef kUTTagClassFilenameExtension ;
# 316 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTType.h" 3
extern const CFStringRef kUTTagClassMIMEType ;
# 325 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTType.h" 3
extern const CFStringRef kUTTagClassNSPboardType ;
# 334 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTType.h" 3
extern const CFStringRef kUTTagClassOSType ;
# 385 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTType.h" 3
extern CFStringRef
UTTypeCreatePreferredIdentifierForTag(
  CFStringRef inTagClass,
  CFStringRef inTag,
  CFStringRef inConformingToUTI) ;
# 436 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTType.h" 3
extern CFArrayRef
UTTypeCreateAllIdentifiersForTag(
  CFStringRef inTagClass,
  CFStringRef inTag,
  CFStringRef inConformingToUTI) ;
# 473 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTType.h" 3
extern CFStringRef
UTTypeCopyPreferredTagWithClass(
  CFStringRef inUTI,
  CFStringRef inTagClass) ;
# 507 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTType.h" 3
extern Boolean
UTTypeEqual(
  CFStringRef inUTI1,
  CFStringRef inUTI2) ;
# 538 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTType.h" 3
extern Boolean
UTTypeConformsTo(
  CFStringRef inUTI,
  CFStringRef inConformsToUTI) ;
# 567 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTType.h" 3
extern CFStringRef
UTTypeCopyDescription(CFStringRef inUTI) ;
# 597 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTType.h" 3
extern CFDictionaryRef
UTTypeCopyDeclaration(CFStringRef inUTI) ;
# 625 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTType.h" 3
extern CFURLRef
UTTypeCopyDeclaringBundleURL(CFStringRef inUTI) ;
# 654 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTType.h" 3
extern CFStringRef
UTCreateStringForOSType(OSType inOSType) ;
# 683 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTType.h" 3
extern OSType
UTGetOSTypeFromString(CFStringRef inString) ;





}
# 46 "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/LaunchServices.h" 2 3
# 42 "/System/Library/Frameworks/CoreServices.framework/Headers/CoreServices.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SearchKit.h" 1 3
# 30 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SearchKit.h" 3
# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKDocument.h" 1 3
# 36 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKDocument.h" 3
extern "C" {
# 51 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKDocument.h" 3
typedef CFTypeRef SKDocumentRef;
# 66 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKDocument.h" 3
extern CFTypeID
SKDocumentGetTypeID(void) ;
# 97 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKDocument.h" 3
extern SKDocumentRef
SKDocumentCreateWithURL(CFURLRef inURL) ;
# 115 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKDocument.h" 3
extern CFURLRef
SKDocumentCopyURL(SKDocumentRef inDocument) ;
# 156 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKDocument.h" 3
extern SKDocumentRef
SKDocumentCreate(
  CFStringRef inScheme,
  SKDocumentRef inParent,
  CFStringRef inName) ;
# 182 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKDocument.h" 3
extern CFStringRef
SKDocumentGetSchemeName(SKDocumentRef inDocument) ;
# 205 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKDocument.h" 3
extern CFStringRef
SKDocumentGetName(SKDocumentRef inDocument) ;
# 229 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKDocument.h" 3
extern SKDocumentRef
SKDocumentGetParent(SKDocumentRef inDocument) ;




}
# 31 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SearchKit.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKAnalysis.h" 1 3
# 54 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKAnalysis.h" 3
extern const CFStringRef kSKMinTermLength ;
# 71 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKAnalysis.h" 3
extern const CFStringRef kSKSubstitutions ;
# 88 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKAnalysis.h" 3
extern const CFStringRef kSKStopWords ;
# 107 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKAnalysis.h" 3
extern const CFStringRef kSKProximityIndexing ;
# 127 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKAnalysis.h" 3
extern const CFStringRef kSKMaximumTerms ;
# 146 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKAnalysis.h" 3
extern const CFStringRef kSKTermChars ;
# 165 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKAnalysis.h" 3
extern const CFStringRef kSKStartTermChars ;
# 184 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKAnalysis.h" 3
extern const CFStringRef kSKEndTermChars ;
# 207 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKAnalysis.h" 3
extern const CFStringRef kSKLanguageTypes __attribute__((deprecated));
# 35 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SearchKit.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKIndex.h" 1 3
# 48 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKIndex.h" 3
extern "C" {
# 62 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKIndex.h" 3
typedef struct __SKIndex* SKIndexRef;
# 74 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKIndex.h" 3
extern CFTypeID
SKIndexGetTypeID(void) ;
# 86 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKIndex.h" 3
typedef struct __SKIndexDocumentIterator* SKIndexDocumentIteratorRef;
# 98 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKIndex.h" 3
extern CFTypeID
SKIndexDocumentIteratorGetTypeID(void) ;
# 112 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKIndex.h" 3
enum SKIndexType {




  kSKIndexUnknown = 0,




  kSKIndexInverted = 1,




  kSKIndexVector = 2,





  kSKIndexInvertedVector = 3
};
typedef enum SKIndexType SKIndexType;
# 144 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKIndex.h" 3
enum SKDocumentIndexState {




  kSKDocumentStateNotIndexed = 0,




  kSKDocumentStateIndexed = 1,





  kSKDocumentStateAddPending = 2,





  kSKDocumentStateDeletePending = 3
};
typedef enum SKDocumentIndexState SKDocumentIndexState;
# 213 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKIndex.h" 3
extern SKIndexRef
SKIndexCreateWithURL(
  CFURLRef inURL,
  CFStringRef inIndexName,
  SKIndexType inIndexType,
  CFDictionaryRef inAnalysisProperties) ;
# 254 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKIndex.h" 3
extern SKIndexRef
SKIndexOpenWithURL(
  CFURLRef inURL,
  CFStringRef inIndexName,
  Boolean inWriteAccess) ;
# 293 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKIndex.h" 3
extern SKIndexRef
SKIndexCreateWithMutableData(
  CFMutableDataRef inData,
  CFStringRef inIndexName,
  SKIndexType inIndexType,
  CFDictionaryRef inAnalysisProperties) ;
# 330 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKIndex.h" 3
extern SKIndexRef
SKIndexOpenWithData(
  CFDataRef inData,
  CFStringRef inIndexName) ;
# 366 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKIndex.h" 3
extern SKIndexRef
SKIndexOpenWithMutableData(
  CFMutableDataRef inData,
  CFStringRef inIndexName) ;
# 393 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKIndex.h" 3
extern Boolean
SKIndexFlush(SKIndexRef inIndex) ;
# 408 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKIndex.h" 3
extern void
SKIndexSetMaximumBytesBeforeFlush(
  SKIndexRef inIndex,
  CFIndex inBytesForUpdate) ;
# 429 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKIndex.h" 3
extern CFIndex
SKIndexGetMaximumBytesBeforeFlush(SKIndexRef inIndex) ;
# 455 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKIndex.h" 3
extern Boolean
SKIndexCompact(SKIndexRef inIndex) ;
# 478 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKIndex.h" 3
extern SKIndexType
SKIndexGetIndexType(SKIndexRef inIndex) ;
# 497 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKIndex.h" 3
extern CFDictionaryRef
SKIndexGetAnalysisProperties(SKIndexRef inIndex) ;
# 521 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKIndex.h" 3
extern CFIndex
SKIndexGetDocumentCount(SKIndexRef inIndex) ;
# 536 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKIndex.h" 3
extern void
SKIndexClose(SKIndexRef inIndex) ;





typedef CFIndex SKDocumentID;
# 574 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKIndex.h" 3
extern Boolean
SKIndexAddDocumentWithText(
  SKIndexRef inIndex,
  SKDocumentRef inDocument,
  CFStringRef inDocumentText,
  Boolean inCanReplace) ;
# 623 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKIndex.h" 3
extern Boolean
SKIndexAddDocument(
  SKIndexRef inIndex,
  SKDocumentRef inDocument,
  CFStringRef inMIMETypeHint,
  Boolean inCanReplace) ;
# 655 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKIndex.h" 3
extern Boolean
SKIndexRemoveDocument(
  SKIndexRef inIndex,
  SKDocumentRef inDocument) ;
# 676 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKIndex.h" 3
extern CFDictionaryRef
SKIndexCopyDocumentProperties(
  SKIndexRef inIndex,
  SKDocumentRef inDocument) ;
# 695 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKIndex.h" 3
extern void
SKIndexSetDocumentProperties(
  SKIndexRef inIndex,
  SKDocumentRef inDocument,
  CFDictionaryRef inProperties) ;
# 720 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKIndex.h" 3
extern SKDocumentIndexState
SKIndexGetDocumentState(
  SKIndexRef inIndex,
  SKDocumentRef inDocument) ;
# 741 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKIndex.h" 3
extern SKDocumentID
SKIndexGetDocumentID(
  SKIndexRef inIndex,
  SKDocumentRef inDocument) ;
# 758 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKIndex.h" 3
extern SKDocumentRef
SKIndexCopyDocumentForDocumentID(
  SKIndexRef inIndex,
  SKDocumentID inDocumentID) ;
# 775 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKIndex.h" 3
extern Boolean
SKIndexRenameDocument(
  SKIndexRef inIndex,
  SKDocumentRef inDocument,
  CFStringRef inNewName) ;
# 793 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKIndex.h" 3
extern Boolean
SKIndexMoveDocument(
  SKIndexRef inIndex,
  SKDocumentRef inDocument,
  SKDocumentRef inNewParent) ;
# 812 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKIndex.h" 3
extern SKIndexDocumentIteratorRef
SKIndexDocumentIteratorCreate(
  SKIndexRef inIndex,
  SKDocumentRef inParentDocument) ;
# 834 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKIndex.h" 3
extern SKDocumentRef
SKIndexDocumentIteratorCopyNext(SKIndexDocumentIteratorRef inIterator) ;
# 852 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKIndex.h" 3
extern SKDocumentID
SKIndexGetMaximumDocumentID(SKIndexRef inIndex) ;
# 867 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKIndex.h" 3
extern CFIndex
SKIndexGetDocumentTermCount(
  SKIndexRef inIndex,
  SKDocumentID inDocumentID) ;
# 887 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKIndex.h" 3
extern CFArrayRef
SKIndexCopyTermIDArrayForDocumentID(
  SKIndexRef inIndex,
  SKDocumentID inDocumentID) ;
# 904 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKIndex.h" 3
extern CFIndex
SKIndexGetDocumentTermFrequency(
  SKIndexRef inIndex,
  SKDocumentID inDocumentID,
  CFIndex inTermID) ;
# 927 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKIndex.h" 3
extern CFIndex
SKIndexGetMaximumTermID(SKIndexRef inIndex) ;
# 942 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKIndex.h" 3
extern CFIndex
SKIndexGetTermDocumentCount(
  SKIndexRef inIndex,
  CFIndex inTermID) ;
# 962 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKIndex.h" 3
extern CFArrayRef
SKIndexCopyDocumentIDArrayForTermID(
  SKIndexRef inIndex,
  CFIndex inTermID) ;
# 979 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKIndex.h" 3
extern CFStringRef
SKIndexCopyTermStringForTermID(
  SKIndexRef inIndex,
  CFIndex inTermID) ;
# 999 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKIndex.h" 3
extern CFIndex
SKIndexGetTermIDForTermString(
  SKIndexRef inIndex,
  CFStringRef inTermString) ;
# 1025 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKIndex.h" 3
extern void
SKLoadDefaultExtractorPlugIns(void) ;
# 1035 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKIndex.h" 3
}
# 39 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SearchKit.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKSearch.h" 1 3
# 52 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKSearch.h" 3
extern "C" {
# 66 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKSearch.h" 3
typedef struct __SKSearch* SKSearchRef;
# 78 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKSearch.h" 3
extern CFTypeID
SKSearchGetTypeID(void) ;
# 90 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKSearch.h" 3
typedef UInt32 SKSearchOptions;
enum {
  kSKSearchOptionDefault = 0,
  kSKSearchOptionNoRelevanceScores = 1L << 0,
  kSKSearchOptionSpaceMeansOR = 1L << 1,
  kSKSearchOptionFindSimilar = 1L << 2
};
# 128 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKSearch.h" 3
extern SKSearchRef
SKSearchCreate(
  SKIndexRef inIndex,
  CFStringRef inQuery,
  SKSearchOptions inSearchOptions) ;
# 146 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKSearch.h" 3
extern void
SKSearchCancel(SKSearchRef inSearch) ;
# 194 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKSearch.h" 3
extern Boolean
SKSearchFindMatches(
  SKSearchRef inSearch,
  CFIndex inMaximumCount,
  SKDocumentID * outDocumentIDsArray,
  float * outScoresArray,
  CFTimeInterval maximumTime,
  CFIndex * outFoundCount) ;
# 235 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKSearch.h" 3
extern void
SKIndexCopyInfoForDocumentIDs(
  SKIndexRef inIndex,
  CFIndex inCount,
  SKDocumentID * inDocumentIDsArray,
  CFStringRef * outNamesArray,
  SKDocumentID * outParentIDsArray) ;
# 269 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKSearch.h" 3
extern void
SKIndexCopyDocumentRefsForDocumentIDs(
  SKIndexRef inIndex,
  CFIndex inCount,
  SKDocumentID * inDocumentIDsArray,
  SKDocumentRef * outDocumentRefsArray) ;
# 302 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKSearch.h" 3
extern void
SKIndexCopyDocumentURLsForDocumentIDs(
  SKIndexRef inIndex,
  CFIndex inCount,
  SKDocumentID * inDocumentIDsArray,
  CFURLRef * outDocumentURLsArray) ;
# 323 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKSearch.h" 3
typedef struct __SKSearchGroup* SKSearchGroupRef;
# 335 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKSearch.h" 3
extern CFTypeID
SKSearchGroupGetTypeID(void) __attribute__((deprecated));
# 346 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKSearch.h" 3
typedef struct __SKSearchResults* SKSearchResultsRef;
# 358 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKSearch.h" 3
extern CFTypeID
SKSearchResultsGetTypeID(void) __attribute__((deprecated));
# 374 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKSearch.h" 3
enum SKSearchType {




  kSKSearchRanked = 0,





  kSKSearchBooleanRanked = 1,




  kSKSearchRequiredRanked = 2,




  kSKSearchPrefixRanked = 3
};
typedef enum SKSearchType SKSearchType;
# 411 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKSearch.h" 3
typedef Boolean ( * SKSearchResultsFilterCallBack)(SKIndexRef inIndex, SKDocumentRef inDocument, void *inContext);
# 434 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKSearch.h" 3
extern SKSearchGroupRef
SKSearchGroupCreate(CFArrayRef inArrayOfInIndexes) __attribute__((deprecated));
# 452 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKSearch.h" 3
extern CFArrayRef
SKSearchGroupCopyIndexes(SKSearchGroupRef inSearchGroup) __attribute__((deprecated));
# 498 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKSearch.h" 3
extern SKSearchResultsRef
SKSearchResultsCreateWithQuery(
  SKSearchGroupRef inSearchGroup,
  CFStringRef inQuery,
  SKSearchType inSearchType,
  CFIndex inMaxFoundDocuments,
  void * inContext,
  SKSearchResultsFilterCallBack inFilterCallBack) __attribute__((deprecated));
# 548 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKSearch.h" 3
extern SKSearchResultsRef
SKSearchResultsCreateWithDocuments(
  SKSearchGroupRef inSearchGroup,
  CFArrayRef inExampleDocuments,
  CFIndex inMaxFoundDocuments,
  void * inContext,
  SKSearchResultsFilterCallBack inFilterCallBack) __attribute__((deprecated));
# 568 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKSearch.h" 3
extern CFIndex
SKSearchResultsGetCount(SKSearchResultsRef inSearchResults) __attribute__((deprecated));
# 617 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKSearch.h" 3
extern CFIndex
SKSearchResultsGetInfoInRange(
  SKSearchResultsRef inSearchResults,
  CFRange inRange,
  SKDocumentRef * outDocumentsArray,
  SKIndexRef * outIndexesArray,
  float * outScoresArray) __attribute__((deprecated));
# 649 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKSearch.h" 3
extern CFArrayRef
SKSearchResultsCopyMatchingTerms(
  SKSearchResultsRef inSearchResults,
  CFIndex inItem) __attribute__((deprecated));
# 661 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKSearch.h" 3
}
# 43 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SearchKit.h" 2 3



# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKSummary.h" 1 3
# 39 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKSummary.h" 3
extern "C" {
# 53 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKSummary.h" 3
typedef struct __SKSummary* SKSummaryRef;
# 68 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKSummary.h" 3
extern CFTypeID
SKSummaryGetTypeID(void) ;
# 96 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKSummary.h" 3
extern SKSummaryRef
SKSummaryCreateWithString(CFStringRef inString) ;
# 116 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKSummary.h" 3
extern CFIndex
SKSummaryGetSentenceCount(SKSummaryRef summary) ;
# 136 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKSummary.h" 3
extern CFIndex
SKSummaryGetParagraphCount(SKSummaryRef summary) ;
# 159 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKSummary.h" 3
extern CFStringRef
SKSummaryCopySentenceAtIndex(
  SKSummaryRef summary,
  CFIndex i) ;
# 184 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKSummary.h" 3
extern CFStringRef
SKSummaryCopyParagraphAtIndex(
  SKSummaryRef summary,
  CFIndex i) ;
# 210 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKSummary.h" 3
extern CFStringRef
SKSummaryCopySentenceSummaryString(
  SKSummaryRef summary,
  CFIndex numSentences) ;
# 236 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKSummary.h" 3
extern CFStringRef
SKSummaryCopyParagraphSummaryString(
  SKSummaryRef summary,
  CFIndex numParagraphs) ;
# 277 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKSummary.h" 3
extern CFIndex
SKSummaryGetSentenceSummaryInfo(
  SKSummaryRef summary,
  CFIndex numSentencesInSummary,
  CFIndex * outRankOrderOfSentences,
  CFIndex * outSentenceIndexOfSentences,
  CFIndex * outParagraphIndexOfSentences) ;
# 317 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SKSummary.h" 3
extern CFIndex
SKSummaryGetParagraphSummaryInfo(
  SKSummaryRef summary,
  CFIndex numParagraphsInSummary,
  CFIndex * outRankOrderOfParagraphs,
  CFIndex * outParagraphIndexOfParagraphs) ;




}
# 47 "/System/Library/Frameworks/CoreServices.framework/Frameworks/SearchKit.framework/Headers/SearchKit.h" 2 3
# 46 "/System/Library/Frameworks/CoreServices.framework/Headers/CoreServices.h" 2 3


# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/Metadata.h" 1 3
# 10 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/Metadata.h" 3
# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDItem.h" 1 3
# 62 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDItem.h" 3
extern "C" {






typedef struct __MDItem *MDItemRef;





extern CFTypeID MDItemGetTypeID(void) ;
# 89 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDItem.h" 3
extern MDItemRef MDItemCreate(CFAllocatorRef allocator, CFStringRef path) ;
# 103 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDItem.h" 3
extern MDItemRef MDItemCreateWithURL(CFAllocatorRef allocator, CFURLRef url) ;
# 113 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDItem.h" 3
extern CFTypeRef MDItemCopyAttribute(MDItemRef item, CFStringRef name) ;
# 126 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDItem.h" 3
extern CFDictionaryRef MDItemCopyAttributes(MDItemRef item, CFArrayRef names) ;
# 140 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDItem.h" 3
extern CFDictionaryRef MDItemCopyAttributeList(MDItemRef item, ... ) ;
# 149 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDItem.h" 3
extern CFArrayRef MDItemCopyAttributeNames(MDItemRef item) ;
# 425 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDItem.h" 3
extern const CFStringRef kMDItemAttributeChangeDate ;
extern const CFStringRef kMDItemContentType ;
extern const CFStringRef kMDItemContentTypeTree ;
extern const CFStringRef kMDItemKeywords ;
extern const CFStringRef kMDItemTitle ;
extern const CFStringRef kMDItemAuthors ;
extern const CFStringRef kMDItemEditors ;
extern const CFStringRef kMDItemParticipants ;
extern const CFStringRef kMDItemProjects ;
extern const CFStringRef kMDItemWhereFroms ;
extern const CFStringRef kMDItemComment ;
extern const CFStringRef kMDItemCopyright ;
extern const CFStringRef kMDItemLastUsedDate ;
extern const CFStringRef kMDItemContentCreationDate ;
extern const CFStringRef kMDItemContentModificationDate ;
extern const CFStringRef kMDItemDurationSeconds ;
extern const CFStringRef kMDItemContactKeywords ;
extern const CFStringRef kMDItemVersion ;

extern const CFStringRef kMDItemPixelHeight ;
extern const CFStringRef kMDItemPixelWidth ;
extern const CFStringRef kMDItemPixelCount ;
extern const CFStringRef kMDItemColorSpace ;
extern const CFStringRef kMDItemBitsPerSample ;
extern const CFStringRef kMDItemFlashOnOff ;
extern const CFStringRef kMDItemFocalLength ;
extern const CFStringRef kMDItemAcquisitionMake ;
extern const CFStringRef kMDItemAcquisitionModel ;
extern const CFStringRef kMDItemISOSpeed ;
extern const CFStringRef kMDItemOrientation ;
extern const CFStringRef kMDItemLayerNames ;
extern const CFStringRef kMDItemWhiteBalance ;
extern const CFStringRef kMDItemAperture ;
extern const CFStringRef kMDItemProfileName ;
extern const CFStringRef kMDItemResolutionWidthDPI ;
extern const CFStringRef kMDItemResolutionHeightDPI ;
extern const CFStringRef kMDItemExposureMode ;
extern const CFStringRef kMDItemExposureTimeSeconds ;
extern const CFStringRef kMDItemEXIFVersion ;

extern const CFStringRef kMDItemEXIFGPSVersion ;
extern const CFStringRef kMDItemAltitude ;
extern const CFStringRef kMDItemLatitude ;
extern const CFStringRef kMDItemLongitude ;
extern const CFStringRef kMDItemSpeed ;
extern const CFStringRef kMDItemTimestamp ;
extern const CFStringRef kMDItemGPSTrack ;
extern const CFStringRef kMDItemImageDirection ;
extern const CFStringRef kMDItemNamedLocation ;

extern const CFStringRef kMDItemCodecs ;
extern const CFStringRef kMDItemMediaTypes ;
extern const CFStringRef kMDItemStreamable ;
extern const CFStringRef kMDItemTotalBitRate ;
extern const CFStringRef kMDItemVideoBitRate ;
extern const CFStringRef kMDItemAudioBitRate ;
extern const CFStringRef kMDItemDeliveryType ;

extern const CFStringRef kMDItemAlbum ;
extern const CFStringRef kMDItemHasAlphaChannel ;
extern const CFStringRef kMDItemRedEyeOnOff ;
extern const CFStringRef kMDItemMeteringMode ;
extern const CFStringRef kMDItemMaxAperture ;
extern const CFStringRef kMDItemFNumber ;
extern const CFStringRef kMDItemExposureProgram ;
extern const CFStringRef kMDItemExposureTimeString ;


extern const CFStringRef kMDItemHeadline ;
extern const CFStringRef kMDItemInstructions ;
extern const CFStringRef kMDItemCity ;
extern const CFStringRef kMDItemStateOrProvince ;
extern const CFStringRef kMDItemCountry ;
# 559 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDItem.h" 3
extern const CFStringRef kMDItemFSName ;
extern const CFStringRef kMDItemDisplayName ;
extern const CFStringRef kMDItemPath ;
extern const CFStringRef kMDItemFSSize ;
extern const CFStringRef kMDItemFSCreationDate ;
extern const CFStringRef kMDItemFSContentChangeDate ;
extern const CFStringRef kMDItemFSOwnerUserID ;
extern const CFStringRef kMDItemFSOwnerGroupID ;
extern const CFStringRef kMDItemFSExists __attribute__((deprecated));
extern const CFStringRef kMDItemFSIsReadable __attribute__((deprecated));
extern const CFStringRef kMDItemFSIsWriteable __attribute__((deprecated));
extern const CFStringRef kMDItemFSHasCustomIcon ;
extern const CFStringRef kMDItemFSIsExtensionHidden ;
extern const CFStringRef kMDItemFSIsStationery ;
extern const CFStringRef kMDItemFSInvisible ;
extern const CFStringRef kMDItemFSLabel ;
extern const CFStringRef kMDItemFSNodeCount ;

extern const CFStringRef kMDItemTextContent ;
# 639 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDItem.h" 3
extern const CFStringRef kMDItemAudioSampleRate ;
extern const CFStringRef kMDItemAudioChannelCount ;
extern const CFStringRef kMDItemTempo ;
extern const CFStringRef kMDItemKeySignature ;
extern const CFStringRef kMDItemTimeSignature ;
extern const CFStringRef kMDItemAudioEncodingApplication ;
extern const CFStringRef kMDItemComposer ;
extern const CFStringRef kMDItemLyricist ;
extern const CFStringRef kMDItemAudioTrackNumber ;
extern const CFStringRef kMDItemRecordingDate ;
extern const CFStringRef kMDItemMusicalGenre ;
extern const CFStringRef kMDItemIsGeneralMIDISequence ;
extern const CFStringRef kMDItemRecordingYear ;
# 722 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDItem.h" 3
extern const CFStringRef kMDItemOrganizations ;
extern const CFStringRef kMDItemLanguages ;
extern const CFStringRef kMDItemRights ;
extern const CFStringRef kMDItemPublishers ;
extern const CFStringRef kMDItemContributors ;
extern const CFStringRef kMDItemCoverage ;
extern const CFStringRef kMDItemSubject ;
extern const CFStringRef kMDItemTheme ;
extern const CFStringRef kMDItemDescription ;
extern const CFStringRef kMDItemIdentifier ;
extern const CFStringRef kMDItemAudiences ;
# 791 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDItem.h" 3
extern const CFStringRef kMDItemNumberOfPages ;
extern const CFStringRef kMDItemPageWidth ;
extern const CFStringRef kMDItemPageHeight ;
extern const CFStringRef kMDItemSecurityMethod ;
extern const CFStringRef kMDItemCreator ;
extern const CFStringRef kMDItemEncodingApplications ;
extern const CFStringRef kMDItemDueDate ;
extern const CFStringRef kMDItemStarRating ;
extern const CFStringRef kMDItemPhoneNumbers ;
extern const CFStringRef kMDItemEmailAddresses ;
extern const CFStringRef kMDItemInstantMessageAddresses ;
extern const CFStringRef kMDItemKind ;
extern const CFStringRef kMDItemRecipients ;
extern const CFStringRef kMDItemFinderComment ;
extern const CFStringRef kMDItemFonts ;
# 864 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDItem.h" 3
extern const CFStringRef kMDItemAppleLoopsRootKey ;
extern const CFStringRef kMDItemAppleLoopsKeyFilterType ;
extern const CFStringRef kMDItemAppleLoopsLoopMode ;
extern const CFStringRef kMDItemAppleLoopDescriptors ;
extern const CFStringRef kMDItemMusicalInstrumentCategory ;
extern const CFStringRef kMDItemMusicalInstrumentName ;

extern const CFStringRef kMDItemCFBundleIdentifier ;
extern const CFStringRef kMDItemSupportFileType __attribute__((deprecated));
# 914 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDItem.h" 3
extern const CFStringRef kMDItemInformation ;
extern const CFStringRef kMDItemDirector ;
extern const CFStringRef kMDItemProducer ;
extern const CFStringRef kMDItemGenre ;
extern const CFStringRef kMDItemPerformers ;
extern const CFStringRef kMDItemOriginalFormat ;
extern const CFStringRef kMDItemOriginalSource ;
extern const CFStringRef kMDItemAuthorEmailAddresses ;
extern const CFStringRef kMDItemRecipientEmailAddresses ;
extern const CFStringRef kMDItemAuthorAddresses ;
extern const CFStringRef kMDItemRecipientAddresses ;
extern const CFStringRef kMDItemURL ;
}





extern "C" {

extern CFDictionaryRef __MDItemCopyAttributesEllipsis1(MDItemRef item, ...) ;
}
# 11 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/Metadata.h" 2 3
# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDQuery.h" 1 3
# 73 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDQuery.h" 3
# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDItem.h" 1 3
# 74 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDQuery.h" 2 3


extern "C" {






typedef struct __MDQuery *MDQueryRef;

typedef enum {
    kMDQuerySynchronous = 1,
    kMDQueryWantsUpdates = 4
} MDQueryOptionFlags;
# 118 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDQuery.h" 3
extern CFTypeID MDQueryGetTypeID(void) ;
# 154 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDQuery.h" 3
extern MDQueryRef MDQueryCreate(CFAllocatorRef allocator, CFStringRef queryString, CFArrayRef valueListAttrs, CFArrayRef sortingAttrs) ;
# 194 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDQuery.h" 3
extern MDQueryRef MDQueryCreateSubset(CFAllocatorRef allocator, MDQueryRef query, CFStringRef queryString, CFArrayRef valueListAttrs, CFArrayRef sortingAttrs) ;







extern CFStringRef MDQueryCopyQueryString(MDQueryRef query) ;
# 211 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDQuery.h" 3
extern CFArrayRef MDQueryCopyValueListAttributes(MDQueryRef query) ;
# 220 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDQuery.h" 3
extern CFArrayRef MDQueryCopySortingAttributes(MDQueryRef query) ;
# 265 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDQuery.h" 3
typedef struct {
    size_t first_max_num;
    size_t first_max_ms;
    size_t progress_max_num;
    size_t progress_max_ms;
    size_t update_max_num;
    size_t update_max_ms;
} MDQueryBatchingParams;
# 282 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDQuery.h" 3
extern MDQueryBatchingParams MDQueryGetBatchingParameters(MDQueryRef query) ;







extern void MDQuerySetBatchingParameters(MDQueryRef query, MDQueryBatchingParams params) ;
# 321 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDQuery.h" 3
typedef const void *(*MDQueryCreateResultFunction)(MDQueryRef query, MDItemRef item, void *context);
# 388 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDQuery.h" 3
extern void MDQuerySetCreateResultFunction(MDQueryRef query, MDQueryCreateResultFunction func, void *context, const CFArrayCallBacks *cb) ;
# 412 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDQuery.h" 3
typedef const void *(*MDQueryCreateValueFunction)(MDQueryRef query, CFStringRef attrName, CFTypeRef attrValue, void *context);
# 477 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDQuery.h" 3
extern void MDQuerySetCreateValueFunction(MDQueryRef query, MDQueryCreateValueFunction func, void *context, const CFArrayCallBacks *cb) ;
# 490 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDQuery.h" 3
extern void MDQuerySetDispatchQueue(MDQueryRef query, dispatch_queue_t queue) ;
# 526 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDQuery.h" 3
extern Boolean MDQueryExecute(MDQueryRef query, CFOptionFlags optionFlags) ;
# 551 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDQuery.h" 3
extern void MDQueryStop(MDQueryRef query) ;
# 562 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDQuery.h" 3
extern void MDQueryDisableUpdates(MDQueryRef query) ;
# 573 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDQuery.h" 3
extern void MDQueryEnableUpdates(MDQueryRef query) ;
# 583 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDQuery.h" 3
extern Boolean MDQueryIsGatheringComplete(MDQueryRef query) ;
# 593 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDQuery.h" 3
extern CFIndex MDQueryGetResultCount(MDQueryRef query) ;
# 614 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDQuery.h" 3
extern const void *MDQueryGetResultAtIndex(MDQueryRef query, CFIndex idx) ;
# 636 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDQuery.h" 3
extern CFIndex MDQueryGetIndexOfResult(MDQueryRef query, const void *result) ;
# 653 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDQuery.h" 3
extern void *MDQueryGetAttributeValueOfResultAtIndex(MDQueryRef query, CFStringRef name, CFIndex idx) ;
# 669 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDQuery.h" 3
extern CFArrayRef MDQueryCopyValuesOfAttribute(MDQueryRef query, CFStringRef name) ;
# 688 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDQuery.h" 3
extern CFIndex MDQueryGetCountOfResultsWithAttributeValue(MDQueryRef query, CFStringRef name, CFTypeRef value) ;
# 719 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDQuery.h" 3
typedef CFComparisonResult (*MDQuerySortComparatorFunction)(const CFTypeRef attrs1[], const CFTypeRef attrs2[], void *context);
# 750 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDQuery.h" 3
extern void MDQuerySetSortComparator(MDQueryRef query, MDQuerySortComparatorFunction comparator, void *context) ;
# 775 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDQuery.h" 3
extern void MDQuerySetSortComparatorBlock(MDQueryRef query, CFComparisonResult (^comparator)(const CFTypeRef attrs1[], const CFTypeRef attrs2[])) ;
# 794 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDQuery.h" 3
extern const CFStringRef kMDQueryProgressNotification ;
# 807 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDQuery.h" 3
extern const CFStringRef kMDQueryDidFinishNotification ;
# 822 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDQuery.h" 3
extern const CFStringRef kMDQueryDidUpdateNotification ;
# 833 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDQuery.h" 3
extern const CFStringRef kMDQueryUpdateAddedItems ;
# 850 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDQuery.h" 3
extern const CFStringRef kMDQueryUpdateChangedItems ;
# 865 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDQuery.h" 3
extern const CFStringRef kMDQueryUpdateRemovedItems ;
# 893 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDQuery.h" 3
extern const CFStringRef kMDQueryResultContentRelevance ;
# 913 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDQuery.h" 3
extern void MDQuerySetSearchScope(MDQueryRef query, CFArrayRef scopeDirectories, OptionBits scopeOptions) ;







extern const CFStringRef kMDQueryScopeHome ;







extern const CFStringRef kMDQueryScopeComputer ;






extern const CFStringRef kMDQueryScopeNetwork ;







extern const CFStringRef kMDQueryScopeAllIndexed ;







extern const CFStringRef kMDQueryScopeComputerIndexed ;






extern const CFStringRef kMDQueryScopeNetworkIndexed ;
# 968 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDQuery.h" 3
extern void MDQuerySetMaxCount(MDQueryRef query, CFIndex size) ;

}
# 12 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/Metadata.h" 2 3
# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDSchema.h" 1 3
# 19 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDSchema.h" 3
# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDItem.h" 1 3
# 20 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDSchema.h" 2 3

extern "C" {
# 32 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDSchema.h" 3
extern CFDictionaryRef MDSchemaCopyAttributesForContentType(CFStringRef contentTypeUTI) ;







extern CFDictionaryRef MDSchemaCopyMetaAttributesForAttribute(CFStringRef name) ;






extern CFArrayRef MDSchemaCopyAllAttributes(void) ;
# 56 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDSchema.h" 3
extern CFStringRef MDSchemaCopyDisplayNameForAttribute(CFStringRef name) ;
# 65 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDSchema.h" 3
extern CFStringRef MDSchemaCopyDisplayDescriptionForAttribute(CFStringRef name) ;


extern const CFStringRef kMDAttributeDisplayValues ;



extern const CFStringRef kMDAttributeAllValues ;



extern const CFStringRef kMDAttributeReadOnlyValues ;




extern const CFStringRef kMDExporterAvaliable ;






extern const CFStringRef kMDAttributeName ;
extern const CFStringRef kMDAttributeType ;
extern const CFStringRef kMDAttributeMultiValued ;

}
# 13 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/Metadata.h" 2 3
# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDImporter.h" 1 3
# 22 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDImporter.h" 3
# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDItem.h" 1 3
# 23 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDImporter.h" 2 3


extern "C" {
# 111 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/MDImporter.h" 3
}
# 14 "/System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/Headers/Metadata.h" 2 3
# 49 "/System/Library/Frameworks/CoreServices.framework/Headers/CoreServices.h" 2 3
# 1 "/System/Library/Frameworks/CoreServices.framework/Frameworks/DictionaryServices.framework/Headers/DictionaryServices.h" 1 3
# 19 "/System/Library/Frameworks/CoreServices.framework/Frameworks/DictionaryServices.framework/Headers/DictionaryServices.h" 3
extern "C" {






typedef const struct __DCSDictionary* DCSDictionaryRef;
# 43 "/System/Library/Frameworks/CoreServices.framework/Frameworks/DictionaryServices.framework/Headers/DictionaryServices.h" 3
extern CFRange DCSGetTermRangeInString( DCSDictionaryRef dictionary, CFStringRef textString, CFIndex offset )
 ;
# 57 "/System/Library/Frameworks/CoreServices.framework/Frameworks/DictionaryServices.framework/Headers/DictionaryServices.h" 3
extern CFStringRef DCSCopyTextDefinition( DCSDictionaryRef dictionary, CFStringRef textString, CFRange range )
 ;


}
# 50 "/System/Library/Frameworks/CoreServices.framework/Headers/CoreServices.h" 2 3
# 115 "/Applications/Autodesk/maya2011/devkit/include/maya/OpenMayaMac.h" 2
# 1 "<command-line>" 2
# 1 "/Users/ristopuukko/Documents/maya_developement/drawOgl/drawOgl/oglRoutines.cpp"
# 10 "/Users/ristopuukko/Documents/maya_developement/drawOgl/drawOgl/oglRoutines.cpp"
# 1 "/Users/ristopuukko/Documents/maya_developement/drawOgl/drawOgl/oglRoutines.h" 1
# 10 "/Users/ristopuukko/Documents/maya_developement/drawOgl/drawOgl/oglRoutines.h"
# 1 "/System/Library/Frameworks/OpenGL.framework/Headers/gl.h" 1 3




extern "C" {
# 40 "/System/Library/Frameworks/OpenGL.framework/Headers/gl.h" 3
typedef unsigned int GLenum;
typedef unsigned char GLboolean;
typedef unsigned int GLbitfield;
typedef signed char GLbyte;
typedef short GLshort;
typedef int GLint;
typedef int GLsizei;
typedef unsigned char GLubyte;
typedef unsigned short GLushort;
typedef unsigned int GLuint;
typedef float GLfloat;
typedef float GLclampf;
typedef double GLdouble;
typedef double GLclampd;
typedef void GLvoid;

typedef long GLintptr;
typedef long GLsizeiptr;



    typedef char GLchar;



# 1 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 1 3
# 9 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
extern "C" {
# 300 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
typedef char GLcharARB;
typedef void *GLhandleARB;



typedef long GLintptrARB;
typedef long GLsizeiptrARB;



typedef unsigned short GLhalfARB;



typedef unsigned short GLhalf;
# 3134 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
extern void glActiveTextureARB (GLenum);
extern void glClientActiveTextureARB (GLenum);
extern void glMultiTexCoord1dARB (GLenum, GLdouble);
extern void glMultiTexCoord1dvARB (GLenum, const GLdouble *);
extern void glMultiTexCoord1fARB (GLenum, GLfloat);
extern void glMultiTexCoord1fvARB (GLenum, const GLfloat *);
extern void glMultiTexCoord1iARB (GLenum, GLint);
extern void glMultiTexCoord1ivARB (GLenum, const GLint *);
extern void glMultiTexCoord1sARB (GLenum, GLshort);
extern void glMultiTexCoord1svARB (GLenum, const GLshort *);
extern void glMultiTexCoord2dARB (GLenum, GLdouble, GLdouble);
extern void glMultiTexCoord2dvARB (GLenum, const GLdouble *);
extern void glMultiTexCoord2fARB (GLenum, GLfloat, GLfloat);
extern void glMultiTexCoord2fvARB (GLenum, const GLfloat *);
extern void glMultiTexCoord2iARB (GLenum, GLint, GLint);
extern void glMultiTexCoord2ivARB (GLenum, const GLint *);
extern void glMultiTexCoord2sARB (GLenum, GLshort, GLshort);
extern void glMultiTexCoord2svARB (GLenum, const GLshort *);
extern void glMultiTexCoord3dARB (GLenum, GLdouble, GLdouble, GLdouble);
extern void glMultiTexCoord3dvARB (GLenum, const GLdouble *);
extern void glMultiTexCoord3fARB (GLenum, GLfloat, GLfloat, GLfloat);
extern void glMultiTexCoord3fvARB (GLenum, const GLfloat *);
extern void glMultiTexCoord3iARB (GLenum, GLint, GLint, GLint);
extern void glMultiTexCoord3ivARB (GLenum, const GLint *);
extern void glMultiTexCoord3sARB (GLenum, GLshort, GLshort, GLshort);
extern void glMultiTexCoord3svARB (GLenum, const GLshort *);
extern void glMultiTexCoord4dARB (GLenum, GLdouble, GLdouble, GLdouble, GLdouble);
extern void glMultiTexCoord4dvARB (GLenum, const GLdouble *);
extern void glMultiTexCoord4fARB (GLenum, GLfloat, GLfloat, GLfloat, GLfloat);
extern void glMultiTexCoord4fvARB (GLenum, const GLfloat *);
extern void glMultiTexCoord4iARB (GLenum, GLint, GLint, GLint, GLint);
extern void glMultiTexCoord4ivARB (GLenum, const GLint *);
extern void glMultiTexCoord4sARB (GLenum, GLshort, GLshort, GLshort, GLshort);
extern void glMultiTexCoord4svARB (GLenum, const GLshort *);
# 3178 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
extern void glLoadTransposeMatrixfARB (const GLfloat *);
extern void glLoadTransposeMatrixdARB (const GLdouble *);
extern void glMultTransposeMatrixfARB (const GLfloat *);
extern void glMultTransposeMatrixdARB (const GLdouble *);
# 3190 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
extern void glSampleCoverageARB (GLclampf, GLboolean);
extern void glSamplePassARB (GLenum);
# 3205 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
extern void glCompressedTexImage3DARB (GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, const GLvoid *);
extern void glCompressedTexImage2DARB (GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, const GLvoid *);
extern void glCompressedTexImage1DARB (GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, const GLvoid *);
extern void glCompressedTexSubImage3DARB (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, const GLvoid *);
extern void glCompressedTexSubImage2DARB (GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, const GLvoid *);
extern void glCompressedTexSubImage1DARB (GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, const GLvoid *);
extern void glGetCompressedTexImageARB (GLenum, GLint, GLvoid *);
# 3228 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
extern void glWeightbvARB(GLint, const GLbyte *);
extern void glWeightsvARB(GLint, const GLshort *);
extern void glWeightivARB(GLint, const GLint *);
extern void glWeightfvARB(GLint, const GLfloat *);
extern void glWeightdvARB(GLint, const GLdouble *);
extern void glWeightubvARB(GLint, const GLubyte *);
extern void glWeightusvARB(GLint, const GLushort *);
extern void glWeightuivARB(GLint, const GLuint *);
extern void glWeightPointerARB(GLint, GLenum, GLsizei, const GLvoid *);
extern void glVertexBlendARB(GLint);
# 3260 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
extern void glWindowPos2dARB (GLdouble, GLdouble);
extern void glWindowPos2dvARB (const GLdouble *);
extern void glWindowPos2fARB (GLfloat, GLfloat);
extern void glWindowPos2fvARB (const GLfloat *);
extern void glWindowPos2iARB (GLint, GLint);
extern void glWindowPos2ivARB (const GLint *);
extern void glWindowPos2sARB (GLshort, GLshort);
extern void glWindowPos2svARB (const GLshort *);
extern void glWindowPos3dARB (GLdouble, GLdouble, GLdouble);
extern void glWindowPos3dvARB (const GLdouble *);
extern void glWindowPos3fARB (GLfloat, GLfloat, GLfloat);
extern void glWindowPos3fvARB (const GLfloat *);
extern void glWindowPos3iARB (GLint, GLint, GLint);
extern void glWindowPos3ivARB (const GLint *);
extern void glWindowPos3sARB (GLshort, GLshort, GLshort);
extern void glWindowPos3svARB (const GLshort *);
# 3290 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
extern void glGenQueriesARB(GLsizei n, GLuint *ids);
extern void glDeleteQueriesARB(GLsizei n, const GLuint *ids);
extern GLboolean glIsQueryARB(GLuint id);
extern void glBeginQueryARB(GLenum target, GLuint id);
extern void glEndQueryARB(GLenum target);
extern void glGetQueryivARB(GLenum target, GLenum pname, GLint *params);
extern void glGetQueryObjectivARB(GLuint id, GLenum pname, GLint *params);
extern void glGetQueryObjectuivARB(GLuint id, GLenum pname, GLuint *params);
# 3306 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
extern void glPointParameterfARB(GLenum pname, GLfloat param);
extern void glPointParameterfvARB(GLenum pname, const GLfloat *params);
# 3342 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
extern void glBindProgramARB(GLenum target, GLuint program);
extern void glDeleteProgramsARB(GLsizei n, const GLuint *programs);
extern void glGenProgramsARB(GLsizei n, GLuint *programs);
extern GLboolean glIsProgramARB(GLuint program);

extern void glProgramEnvParameter4dARB(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern void glProgramEnvParameter4dvARB(GLenum target, GLuint index, const GLdouble *params);
extern void glProgramEnvParameter4fARB(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern void glProgramEnvParameter4fvARB(GLenum target, GLuint index, const GLfloat *params);
extern void glProgramLocalParameter4dARB(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern void glProgramLocalParameter4dvARB(GLenum target, GLuint index, const GLdouble *params);
extern void glProgramLocalParameter4fARB(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern void glProgramLocalParameter4fvARB(GLenum target, GLuint index, const GLfloat *params);

extern void glGetProgramEnvParameterdvARB(GLenum target, GLuint index, GLdouble *params);
extern void glGetProgramEnvParameterfvARB(GLenum target, GLuint index, GLfloat *params);

extern void glProgramEnvParameters4fvEXT(GLenum target, GLuint index, GLsizei count, const GLfloat *params);
extern void glProgramLocalParameters4fvEXT(GLenum target, GLuint index, GLsizei count, const GLfloat *params);


extern void glGetProgramLocalParameterdvARB(GLenum target, GLuint index, GLdouble *params);
extern void glGetProgramLocalParameterfvARB(GLenum target, GLuint index, GLfloat *params);

extern void glProgramStringARB(GLenum target, GLenum format, GLsizei len, const GLvoid *string);
extern void glGetProgramStringARB(GLenum target, GLenum pname, GLvoid *string);

extern void glGetProgramivARB(GLenum target, GLenum pname, GLint *params);
# 3425 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
extern void glVertexAttrib1dARB(GLuint index, GLdouble x);
extern void glVertexAttrib1dvARB(GLuint index, const GLdouble *v);
extern void glVertexAttrib1fARB(GLuint index, GLfloat x);
extern void glVertexAttrib1fvARB(GLuint index, const GLfloat *v);
extern void glVertexAttrib1sARB(GLuint index, GLshort x);
extern void glVertexAttrib1svARB(GLuint index, const GLshort *v);
extern void glVertexAttrib2dARB(GLuint index, GLdouble x, GLdouble y);
extern void glVertexAttrib2dvARB(GLuint index, const GLdouble *v);
extern void glVertexAttrib2fARB(GLuint index, GLfloat x, GLfloat y);
extern void glVertexAttrib2fvARB(GLuint index, const GLfloat *v);
extern void glVertexAttrib2sARB(GLuint index, GLshort x, GLshort y);
extern void glVertexAttrib2svARB(GLuint index, const GLshort *v);
extern void glVertexAttrib3dARB(GLuint index, GLdouble x, GLdouble y, GLdouble z);
extern void glVertexAttrib3dvARB(GLuint index, const GLdouble *v);
extern void glVertexAttrib3fARB(GLuint index, GLfloat x, GLfloat y, GLfloat z);
extern void glVertexAttrib3fvARB(GLuint index, const GLfloat *v);
extern void glVertexAttrib3sARB(GLuint index, GLshort x, GLshort y, GLshort z);
extern void glVertexAttrib3svARB(GLuint index, const GLshort *v);
extern void glVertexAttrib4NbvARB(GLuint index, const GLbyte *v);
extern void glVertexAttrib4NivARB(GLuint index, const GLint *v);
extern void glVertexAttrib4NsvARB(GLuint index, const GLshort *v);
extern void glVertexAttrib4NubARB(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
extern void glVertexAttrib4NubvARB(GLuint index, const GLubyte *v);
extern void glVertexAttrib4NuivARB(GLuint index, const GLuint *v);
extern void glVertexAttrib4NusvARB(GLuint index, const GLushort *v);
extern void glVertexAttrib4bvARB(GLuint index, const GLbyte *v);
extern void glVertexAttrib4dARB(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern void glVertexAttrib4dvARB(GLuint index, const GLdouble *v);
extern void glVertexAttrib4fARB(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern void glVertexAttrib4fvARB(GLuint index, const GLfloat *v);
extern void glVertexAttrib4ivARB(GLuint index, const GLint *v);
extern void glVertexAttrib4sARB(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
extern void glVertexAttrib4svARB(GLuint index, const GLshort *v);
extern void glVertexAttrib4ubvARB(GLuint index, const GLubyte *v);
extern void glVertexAttrib4uivARB(GLuint index, const GLuint *v);
extern void glVertexAttrib4usvARB(GLuint index, const GLushort *v);
extern void glVertexAttribPointerARB(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer);

extern void glDisableVertexAttribArrayARB(GLuint index);
extern void glEnableVertexAttribArrayARB(GLuint index);

extern void glGetVertexAttribPointervARB(GLuint index, GLenum pname, GLvoid **pointer);
extern void glGetVertexAttribdvARB(GLuint index, GLenum pname, GLdouble *params);
extern void glGetVertexAttribfvARB(GLuint index, GLenum pname, GLfloat *params);
extern void glGetVertexAttribivARB(GLuint index, GLenum pname, GLint *params);
# 3516 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
extern void glDeleteObjectARB(GLhandleARB obj);
extern GLhandleARB glGetHandleARB(GLenum pname);
extern void glDetachObjectARB(GLhandleARB containerObj, GLhandleARB attachedObj);
extern GLhandleARB glCreateShaderObjectARB(GLenum shaderType);
extern void glShaderSourceARB(GLhandleARB shaderObj, GLsizei count, const GLcharARB **string, const GLint *length);
extern void glCompileShaderARB(GLhandleARB shaderObj);
extern GLhandleARB glCreateProgramObjectARB(void);
extern void glAttachObjectARB(GLhandleARB containerObj, GLhandleARB obj);
extern void glLinkProgramARB(GLhandleARB programObj);
extern void glUseProgramObjectARB(GLhandleARB programObj);
extern void glValidateProgramARB(GLhandleARB programObj);
extern void glUniform1fARB(GLint location, GLfloat v0);
extern void glUniform2fARB(GLint location, GLfloat v0, GLfloat v1);
extern void glUniform3fARB(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
extern void glUniform4fARB(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
extern void glUniform1iARB(GLint location, GLint v0);
extern void glUniform2iARB(GLint location, GLint v0, GLint v1);
extern void glUniform3iARB(GLint location, GLint v0, GLint v1, GLint v2);
extern void glUniform4iARB(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
extern void glUniform1fvARB(GLint location, GLsizei count, const GLfloat *value);
extern void glUniform2fvARB(GLint location, GLsizei count, const GLfloat *value);
extern void glUniform3fvARB(GLint location, GLsizei count, const GLfloat *value);
extern void glUniform4fvARB(GLint location, GLsizei count, const GLfloat *value);
extern void glUniform1ivARB(GLint location, GLsizei count, const GLint *value);
extern void glUniform2ivARB(GLint location, GLsizei count, const GLint *value);
extern void glUniform3ivARB(GLint location, GLsizei count, const GLint *value);
extern void glUniform4ivARB(GLint location, GLsizei count, const GLint *value);
extern void glUniformMatrix2fvARB(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void glUniformMatrix3fvARB(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void glUniformMatrix4fvARB(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void glGetObjectParameterfvARB(GLhandleARB obj, GLenum pname, GLfloat *params);
extern void glGetObjectParameterivARB(GLhandleARB obj, GLenum pname, GLint *params);
extern void glGetInfoLogARB(GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *infoLog);
extern void glGetAttachedObjectsARB(GLhandleARB containerObj, GLsizei maxCount, GLsizei *count, GLhandleARB *obj);
extern GLint glGetUniformLocationARB(GLhandleARB programObj, const GLcharARB *name);
extern void glGetActiveUniformARB(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);
extern void glGetUniformfvARB(GLhandleARB programObj, GLint location, GLfloat *params);
extern void glGetUniformivARB(GLhandleARB programObj, GLint location, GLint *params);
extern void glGetShaderSourceARB(GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *source);
# 3564 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
extern void glBindAttribLocationARB(GLhandleARB programObj, GLuint index, const GLcharARB *name);
extern void glGetActiveAttribARB(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);
extern GLint glGetAttribLocationARB(GLhandleARB programObj, const GLcharARB *name);
# 3584 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
extern void glBindBufferARB(GLenum target, GLuint buffer);
extern void glDeleteBuffersARB(GLsizei n, const GLuint *buffers);
extern void glGenBuffersARB(GLsizei n, GLuint *buffers);
extern GLboolean glIsBufferARB(GLuint buffer);
extern void glBufferDataARB(GLenum target, GLsizeiptrARB size, const GLvoid *data, GLenum usage);
extern void glBufferSubDataARB(GLenum target, GLintptrARB offset, GLsizeiptrARB size, const GLvoid *data);
extern void glGetBufferSubDataARB(GLenum target, GLintptrARB offset, GLsizeiptrARB size, GLvoid *data);
extern GLvoid *glMapBufferARB(GLenum target, GLenum access);
extern GLboolean glUnmapBufferARB(GLenum target);
extern void glGetBufferParameterivARB(GLenum target, GLenum pname, GLint *params);
extern void glGetBufferPointervARB(GLenum target, GLenum pname, GLvoid **params);
# 3603 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
extern void glDrawBuffersARB(GLsizei n, const GLenum *bufs);







extern void glClampColorARB(GLenum target, GLenum clamp);
# 3620 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
extern void glDrawArraysInstancedARB(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
extern void glDrawElementsInstancedARB(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount);






extern void glVertexAttribDivisorARB(GLuint index, GLuint divisor);
# 3644 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
extern void glGetUniformIndices(GLuint program, GLsizei uniformCount, const GLchar** uniformNames, GLuint* uniformIndices);
extern void glGetActiveUniformsiv(GLuint program, GLsizei uniformCount, const GLuint* uniformIndices, GLenum pname, GLint* params);
extern void glGetActiveUniformName(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei* length, GLchar* uniformName);
extern GLuint glGetUniformBlockIndex(GLuint program, const GLchar* uniformBlockName);
extern void glGetActiveUniformBlockiv(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint* params);
extern void glGetActiveUniformBlockName(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei* length, GLchar* uniformBlockName);
extern void glBindBufferRange(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
extern void glBindBufferBase(GLenum target, GLuint index, GLuint buffer);
extern void glGetIntegeri_v(GLenum pname, GLuint index, GLint* data);
extern void glUniformBlockBinding(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);







extern void glBlendColorEXT (GLclampf, GLclampf, GLclampf, GLclampf);
# 3813 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
extern void glBlendEquationEXT (GLenum);
# 3864 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
extern void glLockArraysEXT (GLint, GLsizei);
extern void glUnlockArraysEXT (void);
# 3883 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
extern void glDrawRangeElementsEXT (GLenum, GLuint, GLuint, GLsizei, GLenum, const GLvoid *);
# 3933 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
extern void glSecondaryColor3bEXT (GLbyte, GLbyte, GLbyte);
extern void glSecondaryColor3bvEXT (const GLbyte *);
extern void glSecondaryColor3dEXT (GLdouble, GLdouble, GLdouble);
extern void glSecondaryColor3dvEXT (const GLdouble *);
extern void glSecondaryColor3fEXT (GLfloat, GLfloat, GLfloat);
extern void glSecondaryColor3fvEXT (const GLfloat *);
extern void glSecondaryColor3iEXT (GLint, GLint, GLint);
extern void glSecondaryColor3ivEXT (const GLint *);
extern void glSecondaryColor3sEXT (GLshort, GLshort, GLshort);
extern void glSecondaryColor3svEXT (const GLshort *);
extern void glSecondaryColor3ubEXT (GLubyte, GLubyte, GLubyte);
extern void glSecondaryColor3ubvEXT (const GLubyte *);
extern void glSecondaryColor3uiEXT (GLuint, GLuint, GLuint);
extern void glSecondaryColor3uivEXT (const GLuint *);
extern void glSecondaryColor3usEXT (GLushort, GLushort, GLushort);
extern void glSecondaryColor3usvEXT (const GLushort *);
extern void glSecondaryColorPointerEXT (GLint, GLenum, GLsizei, const GLvoid *);
# 3966 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
extern void glMultiDrawArraysEXT (GLenum, const GLint *, const GLsizei *, GLsizei);
extern void glMultiDrawElementsEXT (GLenum, const GLsizei *, GLenum, const GLvoid* *, GLsizei);
# 3979 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
extern void glFogCoordfEXT (GLfloat);
extern void glFogCoordfvEXT (const GLfloat *);
extern void glFogCoorddEXT (GLdouble);
extern void glFogCoorddvEXT (const GLdouble *);
extern void glFogCoordPointerEXT (GLenum, GLsizei, const GLvoid *);
# 4041 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
extern void glBlendFuncSeparateEXT (GLenum, GLenum, GLenum, GLenum);
# 4195 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
extern void glActiveStencilFaceEXT(GLenum face);







extern void glDepthBoundsEXT(GLclampd zmin, GLclampd zmax);







extern void glBlendEquationSeparateEXT(GLenum modeRGB, GLenum modeAlpha);
# 4235 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
extern GLboolean glIsRenderbufferEXT(GLuint renderbuffer);
extern void glBindRenderbufferEXT(GLenum target, GLuint renderbuffer);
extern void glDeleteRenderbuffersEXT(GLsizei n, const GLuint *renderbuffers);
extern void glGenRenderbuffersEXT(GLsizei n, GLuint *renderbuffers);
extern void glRenderbufferStorageEXT(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
extern void glGetRenderbufferParameterivEXT(GLenum target, GLenum pname, GLint *params);
extern GLboolean glIsFramebufferEXT(GLuint framebuffer);
extern void glBindFramebufferEXT(GLenum target, GLuint framebuffer);
extern void glDeleteFramebuffersEXT(GLsizei n, const GLuint *framebuffers);
extern void glGenFramebuffersEXT(GLsizei n, GLuint *framebuffers);
extern GLenum glCheckFramebufferStatusEXT(GLenum target);
extern void glFramebufferTexture1DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
extern void glFramebufferTexture2DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
extern void glFramebufferTexture3DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
extern void glFramebufferRenderbufferEXT(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
extern void glGetFramebufferAttachmentParameterivEXT(GLenum target, GLenum attachment, GLenum pname, GLint *params);
extern void glGenerateMipmapEXT(GLenum target);







extern void glBlitFramebufferEXT(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);







extern void glRenderbufferStorageMultisampleEXT(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
# 4277 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
extern void glProgramParameteriEXT(GLuint program, GLenum pname, GLint value);
extern void glFramebufferTextureEXT(GLenum target, GLenum attachment, GLuint texture, GLint level);
extern void glFramebufferTextureFaceEXT(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);







extern void glFramebufferTextureLayerEXT(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
# 4314 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
extern GLboolean glIsRenderbuffer (GLuint);
extern void glBindRenderbuffer (GLenum, GLuint);
extern void glDeleteRenderbuffers (GLsizei, const GLuint *);
extern void glGenRenderbuffers (GLsizei, GLuint *);
extern void glRenderbufferStorage (GLenum, GLenum, GLsizei, GLsizei);
extern void glGetRenderbufferParameteriv (GLenum, GLenum, GLint *);
extern GLboolean glIsFramebuffer (GLuint);
extern void glBindFramebuffer (GLenum, GLuint);
extern void glDeleteFramebuffers (GLsizei, const GLuint *);
extern void glGenFramebuffers (GLsizei, GLuint *);
extern GLenum glCheckFramebufferStatus (GLenum);
extern void glFramebufferTexture1D (GLenum, GLenum, GLenum, GLuint, GLint);
extern void glFramebufferTexture2D (GLenum, GLenum, GLenum, GLuint, GLint);
extern void glFramebufferTexture3D (GLenum, GLenum, GLenum, GLuint, GLint, GLint);
extern void glFramebufferRenderbuffer (GLenum, GLenum, GLenum, GLuint);
extern void glGetFramebufferAttachmentParameteriv (GLenum, GLenum, GLenum, GLint *);
extern void glGenerateMipmap (GLenum);
extern void glBlitFramebuffer (GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum);
extern void glRenderbufferStorageMultisample (GLenum, GLsizei, GLenum, GLsizei, GLsizei);
extern void glFramebufferTextureLayer (GLenum, GLenum, GLuint, GLint, GLint);
# 4347 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
extern void glBindBufferRangeEXT(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
extern void glBindBufferOffsetEXT(GLenum target, GLuint index, GLuint buffer, GLintptr offset);
extern void glBindBufferBaseEXT(GLenum target, GLuint index, GLuint buffer);
extern void glBeginTransformFeedbackEXT(GLenum primitiveMode);
extern void glEndTransformFeedbackEXT(void);
extern void glTransformFeedbackVaryingsEXT(GLuint program, GLsizei count, const GLchar **varyings, GLenum bufferMode);
extern void glGetTransformFeedbackVaryingEXT(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
# 4362 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
extern void glGetIntegerIndexedvEXT(GLenum param, GLuint index, GLint *values);
extern void glGetBooleanIndexedvEXT(GLenum param, GLuint index, GLboolean *values);
# 4373 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
extern void glUniformBufferEXT(GLuint program, GLint location, GLuint buffer);
extern GLint glGetUniformBufferSizeEXT(GLuint program, GLint location);
extern GLintptr glGetUniformOffsetEXT(GLuint program, GLint location);
# 4388 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
extern void glClearColorIiEXT( GLint r, GLint g, GLint b, GLint a );
extern void glClearColorIuiEXT( GLuint r, GLuint g, GLuint b, GLuint a );
extern void glTexParameterIivEXT( GLenum target, GLenum pname, GLint *params );
extern void glTexParameterIuivEXT( GLenum target, GLenum pname, GLuint *params );
extern void glGetTexParameterIivEXT( GLenum target, GLenum pname, GLint *params);
extern void glGetTexParameterIuivEXT( GLenum target, GLenum pname, GLuint *params);
# 4434 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
extern void glVertexAttribI1iEXT(GLuint index, GLint x);
extern void glVertexAttribI2iEXT(GLuint index, GLint x, GLint y);
extern void glVertexAttribI3iEXT(GLuint index, GLint x, GLint y, GLint z);
extern void glVertexAttribI4iEXT(GLuint index, GLint x, GLint y, GLint z, GLint w);
extern void glVertexAttribI1uiEXT(GLuint index, GLuint x);
extern void glVertexAttribI2uiEXT(GLuint index, GLuint x, GLuint y);
extern void glVertexAttribI3uiEXT(GLuint index, GLuint x, GLuint y, GLuint z);
extern void glVertexAttribI4uiEXT(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
extern void glVertexAttribI1ivEXT(GLuint index, const GLint *v);
extern void glVertexAttribI2ivEXT(GLuint index, const GLint *v);
extern void glVertexAttribI3ivEXT(GLuint index, const GLint *v);
extern void glVertexAttribI4ivEXT(GLuint index, const GLint *v);
extern void glVertexAttribI1uivEXT(GLuint index, const GLuint *v);
extern void glVertexAttribI2uivEXT(GLuint index, const GLuint *v);
extern void glVertexAttribI3uivEXT(GLuint index, const GLuint *v);
extern void glVertexAttribI4uivEXT(GLuint index, const GLuint *v);
extern void glVertexAttribI4bvEXT(GLuint index, const GLbyte *v);
extern void glVertexAttribI4svEXT(GLuint index, const GLshort *v);
extern void glVertexAttribI4ubvEXT(GLuint index, const GLubyte *v);
extern void glVertexAttribI4usvEXT(GLuint index, const GLushort *v);
extern void glVertexAttribIPointerEXT(GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
extern void glGetVertexAttribIivEXT(GLuint index, GLenum pname, GLint *params);
extern void glGetVertexAttribIuivEXT(GLuint index, GLenum pname, GLuint *params);
extern void glUniform1uiEXT(GLint location, GLuint v0);
extern void glUniform2uiEXT(GLint location, GLuint v0, GLuint v1);
extern void glUniform3uiEXT(GLint location, GLuint v0, GLuint v1, GLuint v2);
extern void glUniform4uiEXT(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
extern void glUniform1uivEXT(GLint location, GLsizei count, const GLuint *value);
extern void glUniform2uivEXT(GLint location, GLsizei count, const GLuint *value);
extern void glUniform3uivEXT(GLint location, GLsizei count, const GLuint *value);
extern void glUniform4uivEXT(GLint location, GLsizei count, const GLuint *value);
extern void glGetUniformuivEXT(GLuint program, GLint location, GLuint *params);
extern void glBindFragDataLocationEXT(GLuint program, GLuint colorNumber, const GLchar *name);
extern GLint glGetFragDataLocationEXT(GLuint program, const GLchar *name);
# 4478 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
extern void glColorMaskIndexedEXT(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
extern void glEnableIndexedEXT(GLenum target, GLuint index);
extern void glDisableIndexedEXT(GLenum target, GLuint index);
extern GLboolean glIsEnabledIndexedEXT(GLenum target, GLuint index);







extern void glProvokingVertexEXT(GLenum mode);
# 4498 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
extern void glTextureRangeAPPLE(GLenum target, GLsizei length, const GLvoid *pointer);
extern void glGetTexParameterPointervAPPLE(GLenum target, GLenum pname, GLvoid **params);
# 4509 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
extern void glVertexArrayRangeAPPLE(GLsizei length, const GLvoid *pointer);
extern void glFlushVertexArrayRangeAPPLE(GLsizei length, const GLvoid *pointer);
extern void glVertexArrayParameteriAPPLE(GLenum pname, GLint param);
# 4522 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
extern void glBindVertexArrayAPPLE(GLuint id);
extern void glDeleteVertexArraysAPPLE(GLsizei n, const GLuint *ids);
extern void glGenVertexArraysAPPLE(GLsizei n, GLuint *ids);
extern GLboolean glIsVertexArrayAPPLE(GLuint id);
# 4540 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
extern void glGenFencesAPPLE(GLsizei n, GLuint *fences);
extern void glDeleteFencesAPPLE(GLsizei n, const GLuint *fences);
extern void glSetFenceAPPLE(GLuint fence);
extern GLboolean glIsFenceAPPLE(GLuint fence);
extern GLboolean glTestFenceAPPLE(GLuint fence);
extern void glFinishFenceAPPLE(GLuint fence);
extern GLboolean glTestObjectAPPLE(GLenum object, GLuint name);
extern void glFinishObjectAPPLE(GLenum object, GLuint name);
# 4559 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
extern void glElementPointerAPPLE(GLenum type, const GLvoid *pointer);
extern void glDrawElementArrayAPPLE(GLenum mode, GLint first, GLsizei count);
extern void glDrawRangeElementArrayAPPLE(GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
extern void glMultiDrawElementArrayAPPLE(GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
extern void glMultiDrawRangeElementArrayAPPLE(GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);
# 4573 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
extern void glFlushRenderAPPLE(void);
extern void glFinishRenderAPPLE(void);
extern void glSwapAPPLE(void);
# 4589 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
extern void glEnableVertexAttribAPPLE(GLuint index, GLenum pname);
extern void glDisableVertexAttribAPPLE(GLuint index, GLenum pname);
extern GLboolean glIsVertexAttribEnabledAPPLE(GLuint index, GLenum pname);
extern void glMapVertexAttrib1dAPPLE(GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points);
extern void glMapVertexAttrib1fAPPLE(GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points);
extern void glMapVertexAttrib2dAPPLE(GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points);
extern void glMapVertexAttrib2fAPPLE(GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points);
# 4604 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
extern void glBufferParameteriAPPLE(GLenum target, GLenum pname, GLint param);
extern void glFlushMappedBufferRangeAPPLE(GLenum target, GLintptr offset, GLsizeiptr size);
# 4615 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
extern GLenum glObjectPurgeableAPPLE(GLenum objectType, GLuint name, GLenum option);
extern GLenum glObjectUnpurgeableAPPLE(GLenum objectType, GLuint name, GLenum option);
extern void glGetObjectParameterivAPPLE(GLenum objectType, GLuint name, GLenum pname, GLint* params);
# 4636 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
extern void glPNTrianglesiATI(GLenum pname, GLint param);
extern void glPNTrianglesfATI(GLenum pname, GLfloat param);







extern void glBlendEquationSeparateATI(GLenum equationRGB, GLenum equationAlpha);
# 4654 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
extern void glStencilOpSeparateATI(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
extern void glStencilFuncSeparateATI(GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);
# 4664 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
extern void glPNTrianglesiATIX(GLenum pname, GLint param);
extern void glPNTrianglesfATIX(GLenum pname, GLfloat param);
# 4937 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
extern void glPointParameteriNV(GLenum pname, GLint param);
extern void glPointParameterivNV(GLenum pname, const GLint *params);
# 5381 "/System/Library/Frameworks/OpenGL.framework/Headers/glext.h" 3
extern void glBeginConditionalRenderNV (GLuint id, GLenum mode);
extern void glEndConditionalRenderNV (void);



}
# 66 "/System/Library/Frameworks/OpenGL.framework/Headers/gl.h" 2 3
# 2427 "/System/Library/Frameworks/OpenGL.framework/Headers/gl.h" 3
extern void glAccum (GLenum op, GLfloat value);
extern void glAlphaFunc (GLenum func, GLclampf ref);
extern GLboolean glAreTexturesResident (GLsizei n, const GLuint *textures, GLboolean *residences);
extern void glArrayElement (GLint i);
extern void glBegin (GLenum mode);
extern void glBindTexture (GLenum target, GLuint texture);
extern void glBitmap (GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte *bitmap);
extern void glBlendColor (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
extern void glBlendEquation (GLenum mode);
extern void glBlendEquationSeparate(GLenum modeRGB, GLenum modeAlpha);
extern void glBlendFunc (GLenum sfactor, GLenum dfactor);
extern void glCallList (GLuint list);
extern void glCallLists (GLsizei n, GLenum type, const GLvoid *lists);
extern void glClear (GLbitfield mask);
extern void glClearAccum (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
extern void glClearColor (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
extern void glClearDepth (GLclampd depth);
extern void glClearIndex (GLfloat c);
extern void glClearStencil (GLint s);
extern void glClipPlane (GLenum plane, const GLdouble *equation);
extern void glColor3b (GLbyte red, GLbyte green, GLbyte blue);
extern void glColor3bv (const GLbyte *v);
extern void glColor3d (GLdouble red, GLdouble green, GLdouble blue);
extern void glColor3dv (const GLdouble *v);
extern void glColor3f (GLfloat red, GLfloat green, GLfloat blue);
extern void glColor3fv (const GLfloat *v);
extern void glColor3i (GLint red, GLint green, GLint blue);
extern void glColor3iv (const GLint *v);
extern void glColor3s (GLshort red, GLshort green, GLshort blue);
extern void glColor3sv (const GLshort *v);
extern void glColor3ub (GLubyte red, GLubyte green, GLubyte blue);
extern void glColor3ubv (const GLubyte *v);
extern void glColor3ui (GLuint red, GLuint green, GLuint blue);
extern void glColor3uiv (const GLuint *v);
extern void glColor3us (GLushort red, GLushort green, GLushort blue);
extern void glColor3usv (const GLushort *v);
extern void glColor4b (GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);
extern void glColor4bv (const GLbyte *v);
extern void glColor4d (GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);
extern void glColor4dv (const GLdouble *v);
extern void glColor4f (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
extern void glColor4fv (const GLfloat *v);
extern void glColor4i (GLint red, GLint green, GLint blue, GLint alpha);
extern void glColor4iv (const GLint *v);
extern void glColor4s (GLshort red, GLshort green, GLshort blue, GLshort alpha);
extern void glColor4sv (const GLshort *v);
extern void glColor4ub (GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);
extern void glColor4ubv (const GLubyte *v);
extern void glColor4ui (GLuint red, GLuint green, GLuint blue, GLuint alpha);
extern void glColor4uiv (const GLuint *v);
extern void glColor4us (GLushort red, GLushort green, GLushort blue, GLushort alpha);
extern void glColor4usv (const GLushort *v);
extern void glColorMask (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
extern void glColorMaterial (GLenum face, GLenum mode);
extern void glColorPointer (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
extern void glColorSubTable (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data);
extern void glColorTable (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);
extern void glColorTableParameterfv (GLenum target, GLenum pname, const GLfloat *params);
extern void glColorTableParameteriv (GLenum target, GLenum pname, const GLint *params);
extern void glConvolutionFilter1D (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image);
extern void glConvolutionFilter2D (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image);
extern void glConvolutionParameterf (GLenum target, GLenum pname, GLfloat params);
extern void glConvolutionParameterfv (GLenum target, GLenum pname, const GLfloat *params);
extern void glConvolutionParameteri (GLenum target, GLenum pname, GLint params);
extern void glConvolutionParameteriv (GLenum target, GLenum pname, const GLint *params);
extern void glCopyColorSubTable (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
extern void glCopyColorTable (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
extern void glCopyConvolutionFilter1D (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
extern void glCopyConvolutionFilter2D (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
extern void glCopyPixels (GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);
extern void glCopyTexImage1D (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
extern void glCopyTexImage2D (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
extern void glCopyTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
extern void glCopyTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
extern void glCopyTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
extern void glCullFace (GLenum mode);
extern void glDeleteLists (GLuint list, GLsizei range);
extern void glDeleteTextures (GLsizei n, const GLuint *textures);
extern void glDepthFunc (GLenum func);
extern void glDepthMask (GLboolean flag);
extern void glDepthRange (GLclampd zNear, GLclampd zFar);
extern void glDisable (GLenum cap);
extern void glDisableClientState (GLenum array);
extern void glDrawArrays (GLenum mode, GLint first, GLsizei count);
extern void glDrawBuffer (GLenum mode);
extern void glDrawElements (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices);
extern void glDrawPixels (GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);
extern void glDrawRangeElements (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);
extern void glEdgeFlag (GLboolean flag);
extern void glEdgeFlagPointer (GLsizei stride, const GLvoid *pointer);
extern void glEdgeFlagv (const GLboolean *flag);
extern void glEnable (GLenum cap);
extern void glEnableClientState (GLenum array);
extern void glEnd (void);
extern void glEndList (void);
extern void glEvalCoord1d (GLdouble u);
extern void glEvalCoord1dv (const GLdouble *u);
extern void glEvalCoord1f (GLfloat u);
extern void glEvalCoord1fv (const GLfloat *u);
extern void glEvalCoord2d (GLdouble u, GLdouble v);
extern void glEvalCoord2dv (const GLdouble *u);
extern void glEvalCoord2f (GLfloat u, GLfloat v);
extern void glEvalCoord2fv (const GLfloat *u);
extern void glEvalMesh1 (GLenum mode, GLint i1, GLint i2);
extern void glEvalMesh2 (GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);
extern void glEvalPoint1 (GLint i);
extern void glEvalPoint2 (GLint i, GLint j);
extern void glFeedbackBuffer (GLsizei size, GLenum type, GLfloat *buffer);
extern void glFinish (void);
extern void glFlush (void);
extern void glFogf (GLenum pname, GLfloat param);
extern void glFogfv (GLenum pname, const GLfloat *params);
extern void glFogi (GLenum pname, GLint param);
extern void glFogiv (GLenum pname, const GLint *params);
extern void glFrontFace (GLenum mode);
extern void glFrustum (GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
extern GLuint glGenLists (GLsizei range);
extern void glGenTextures (GLsizei n, GLuint *textures);
extern void glGetBooleanv (GLenum pname, GLboolean *params);
extern void glGetClipPlane (GLenum plane, GLdouble *equation);
extern void glGetColorTable (GLenum target, GLenum format, GLenum type, GLvoid *table);
extern void glGetColorTableParameterfv (GLenum target, GLenum pname, GLfloat *params);
extern void glGetColorTableParameteriv (GLenum target, GLenum pname, GLint *params);
extern void glGetConvolutionFilter (GLenum target, GLenum format, GLenum type, GLvoid *image);
extern void glGetConvolutionParameterfv (GLenum target, GLenum pname, GLfloat *params);
extern void glGetConvolutionParameteriv (GLenum target, GLenum pname, GLint *params);
extern void glGetDoublev (GLenum pname, GLdouble *params);
extern GLenum glGetError (void);
extern void glGetFloatv (GLenum pname, GLfloat *params);
extern void glGetHistogram (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);
extern void glGetHistogramParameterfv (GLenum target, GLenum pname, GLfloat *params);
extern void glGetHistogramParameteriv (GLenum target, GLenum pname, GLint *params);
extern void glGetIntegerv (GLenum pname, GLint *params);
extern void glGetLightfv (GLenum light, GLenum pname, GLfloat *params);
extern void glGetLightiv (GLenum light, GLenum pname, GLint *params);
extern void glGetMapdv (GLenum target, GLenum query, GLdouble *v);
extern void glGetMapfv (GLenum target, GLenum query, GLfloat *v);
extern void glGetMapiv (GLenum target, GLenum query, GLint *v);
extern void glGetMaterialfv (GLenum face, GLenum pname, GLfloat *params);
extern void glGetMaterialiv (GLenum face, GLenum pname, GLint *params);
extern void glGetMinmax (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);
extern void glGetMinmaxParameterfv (GLenum target, GLenum pname, GLfloat *params);
extern void glGetMinmaxParameteriv (GLenum target, GLenum pname, GLint *params);
extern void glGetPixelMapfv (GLenum map, GLfloat *values);
extern void glGetPixelMapuiv (GLenum map, GLuint *values);
extern void glGetPixelMapusv (GLenum map, GLushort *values);
extern void glGetPointerv (GLenum pname, GLvoid* *params);
extern void glGetPolygonStipple (GLubyte *mask);
extern void glGetSeparableFilter (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span);
extern const GLubyte * glGetString (GLenum name);
extern void glGetTexEnvfv (GLenum target, GLenum pname, GLfloat *params);
extern void glGetTexEnviv (GLenum target, GLenum pname, GLint *params);
extern void glGetTexGendv (GLenum coord, GLenum pname, GLdouble *params);
extern void glGetTexGenfv (GLenum coord, GLenum pname, GLfloat *params);
extern void glGetTexGeniv (GLenum coord, GLenum pname, GLint *params);
extern void glGetTexImage (GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels);
extern void glGetTexLevelParameterfv (GLenum target, GLint level, GLenum pname, GLfloat *params);
extern void glGetTexLevelParameteriv (GLenum target, GLint level, GLenum pname, GLint *params);
extern void glGetTexParameterfv (GLenum target, GLenum pname, GLfloat *params);
extern void glGetTexParameteriv (GLenum target, GLenum pname, GLint *params);
extern void glHint (GLenum target, GLenum mode);
extern void glHistogram (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
extern void glIndexMask (GLuint mask);
extern void glIndexPointer (GLenum type, GLsizei stride, const GLvoid *pointer);
extern void glIndexd (GLdouble c);
extern void glIndexdv (const GLdouble *c);
extern void glIndexf (GLfloat c);
extern void glIndexfv (const GLfloat *c);
extern void glIndexi (GLint c);
extern void glIndexiv (const GLint *c);
extern void glIndexs (GLshort c);
extern void glIndexsv (const GLshort *c);
extern void glIndexub (GLubyte c);
extern void glIndexubv (const GLubyte *c);
extern void glInitNames (void);
extern void glInterleavedArrays (GLenum format, GLsizei stride, const GLvoid *pointer);
extern GLboolean glIsEnabled (GLenum cap);
extern GLboolean glIsList (GLuint list);
extern GLboolean glIsTexture (GLuint texture);
extern void glLightModelf (GLenum pname, GLfloat param);
extern void glLightModelfv (GLenum pname, const GLfloat *params);
extern void glLightModeli (GLenum pname, GLint param);
extern void glLightModeliv (GLenum pname, const GLint *params);
extern void glLightf (GLenum light, GLenum pname, GLfloat param);
extern void glLightfv (GLenum light, GLenum pname, const GLfloat *params);
extern void glLighti (GLenum light, GLenum pname, GLint param);
extern void glLightiv (GLenum light, GLenum pname, const GLint *params);
extern void glLineStipple (GLint factor, GLushort pattern);
extern void glLineWidth (GLfloat width);
extern void glListBase (GLuint base);
extern void glLoadIdentity (void);
extern void glLoadMatrixd (const GLdouble *m);
extern void glLoadMatrixf (const GLfloat *m);
extern void glLoadName (GLuint name);
extern void glLogicOp (GLenum opcode);
extern void glMap1d (GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points);
extern void glMap1f (GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points);
extern void glMap2d (GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points);
extern void glMap2f (GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points);
extern void glMapGrid1d (GLint un, GLdouble u1, GLdouble u2);
extern void glMapGrid1f (GLint un, GLfloat u1, GLfloat u2);
extern void glMapGrid2d (GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);
extern void glMapGrid2f (GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);
extern void glMaterialf (GLenum face, GLenum pname, GLfloat param);
extern void glMaterialfv (GLenum face, GLenum pname, const GLfloat *params);
extern void glMateriali (GLenum face, GLenum pname, GLint param);
extern void glMaterialiv (GLenum face, GLenum pname, const GLint *params);
extern void glMatrixMode (GLenum mode);
extern void glMinmax (GLenum target, GLenum internalformat, GLboolean sink);
extern void glMultMatrixd (const GLdouble *m);
extern void glMultMatrixf (const GLfloat *m);
extern void glNewList (GLuint list, GLenum mode);
extern void glNormal3b (GLbyte nx, GLbyte ny, GLbyte nz);
extern void glNormal3bv (const GLbyte *v);
extern void glNormal3d (GLdouble nx, GLdouble ny, GLdouble nz);
extern void glNormal3dv (const GLdouble *v);
extern void glNormal3f (GLfloat nx, GLfloat ny, GLfloat nz);
extern void glNormal3fv (const GLfloat *v);
extern void glNormal3i (GLint nx, GLint ny, GLint nz);
extern void glNormal3iv (const GLint *v);
extern void glNormal3s (GLshort nx, GLshort ny, GLshort nz);
extern void glNormal3sv (const GLshort *v);
extern void glNormalPointer (GLenum type, GLsizei stride, const GLvoid *pointer);
extern void glOrtho (GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
extern void glPassThrough (GLfloat token);
extern void glPixelMapfv (GLenum map, GLint mapsize, const GLfloat *values);
extern void glPixelMapuiv (GLenum map, GLint mapsize, const GLuint *values);
extern void glPixelMapusv (GLenum map, GLint mapsize, const GLushort *values);
extern void glPixelStoref (GLenum pname, GLfloat param);
extern void glPixelStorei (GLenum pname, GLint param);
extern void glPixelTransferf (GLenum pname, GLfloat param);
extern void glPixelTransferi (GLenum pname, GLint param);
extern void glPixelZoom (GLfloat xfactor, GLfloat yfactor);
extern void glPointSize (GLfloat size);
extern void glPolygonMode (GLenum face, GLenum mode);
extern void glPolygonOffset (GLfloat factor, GLfloat units);
extern void glPolygonStipple (const GLubyte *mask);
extern void glPopAttrib (void);
extern void glPopClientAttrib (void);
extern void glPopMatrix (void);
extern void glPopName (void);
extern void glPrioritizeTextures (GLsizei n, const GLuint *textures, const GLclampf *priorities);
extern void glPushAttrib (GLbitfield mask);
extern void glPushClientAttrib (GLbitfield mask);
extern void glPushMatrix (void);
extern void glPushName (GLuint name);
extern void glRasterPos2d (GLdouble x, GLdouble y);
extern void glRasterPos2dv (const GLdouble *v);
extern void glRasterPos2f (GLfloat x, GLfloat y);
extern void glRasterPos2fv (const GLfloat *v);
extern void glRasterPos2i (GLint x, GLint y);
extern void glRasterPos2iv (const GLint *v);
extern void glRasterPos2s (GLshort x, GLshort y);
extern void glRasterPos2sv (const GLshort *v);
extern void glRasterPos3d (GLdouble x, GLdouble y, GLdouble z);
extern void glRasterPos3dv (const GLdouble *v);
extern void glRasterPos3f (GLfloat x, GLfloat y, GLfloat z);
extern void glRasterPos3fv (const GLfloat *v);
extern void glRasterPos3i (GLint x, GLint y, GLint z);
extern void glRasterPos3iv (const GLint *v);
extern void glRasterPos3s (GLshort x, GLshort y, GLshort z);
extern void glRasterPos3sv (const GLshort *v);
extern void glRasterPos4d (GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern void glRasterPos4dv (const GLdouble *v);
extern void glRasterPos4f (GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern void glRasterPos4fv (const GLfloat *v);
extern void glRasterPos4i (GLint x, GLint y, GLint z, GLint w);
extern void glRasterPos4iv (const GLint *v);
extern void glRasterPos4s (GLshort x, GLshort y, GLshort z, GLshort w);
extern void glRasterPos4sv (const GLshort *v);
extern void glReadBuffer (GLenum mode);
extern void glReadPixels (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels);
extern void glRectd (GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);
extern void glRectdv (const GLdouble *v1, const GLdouble *v2);
extern void glRectf (GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);
extern void glRectfv (const GLfloat *v1, const GLfloat *v2);
extern void glRecti (GLint x1, GLint y1, GLint x2, GLint y2);
extern void glRectiv (const GLint *v1, const GLint *v2);
extern void glRects (GLshort x1, GLshort y1, GLshort x2, GLshort y2);
extern void glRectsv (const GLshort *v1, const GLshort *v2);
extern GLint glRenderMode (GLenum mode);
extern void glResetHistogram (GLenum target);
extern void glResetMinmax (GLenum target);
extern void glRotated (GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
extern void glRotatef (GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
extern void glScaled (GLdouble x, GLdouble y, GLdouble z);
extern void glScalef (GLfloat x, GLfloat y, GLfloat z);
extern void glScissor (GLint x, GLint y, GLsizei width, GLsizei height);
extern void glSelectBuffer (GLsizei size, GLuint *buffer);
extern void glSeparableFilter2D (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column);
extern void glShadeModel (GLenum mode);
extern void glStencilFunc (GLenum func, GLint ref, GLuint mask);
extern void glStencilMask (GLuint mask);
extern void glStencilOp (GLenum fail, GLenum zfail, GLenum zpass);
extern void glTexCoord1d (GLdouble s);
extern void glTexCoord1dv (const GLdouble *v);
extern void glTexCoord1f (GLfloat s);
extern void glTexCoord1fv (const GLfloat *v);
extern void glTexCoord1i (GLint s);
extern void glTexCoord1iv (const GLint *v);
extern void glTexCoord1s (GLshort s);
extern void glTexCoord1sv (const GLshort *v);
extern void glTexCoord2d (GLdouble s, GLdouble t);
extern void glTexCoord2dv (const GLdouble *v);
extern void glTexCoord2f (GLfloat s, GLfloat t);
extern void glTexCoord2fv (const GLfloat *v);
extern void glTexCoord2i (GLint s, GLint t);
extern void glTexCoord2iv (const GLint *v);
extern void glTexCoord2s (GLshort s, GLshort t);
extern void glTexCoord2sv (const GLshort *v);
extern void glTexCoord3d (GLdouble s, GLdouble t, GLdouble r);
extern void glTexCoord3dv (const GLdouble *v);
extern void glTexCoord3f (GLfloat s, GLfloat t, GLfloat r);
extern void glTexCoord3fv (const GLfloat *v);
extern void glTexCoord3i (GLint s, GLint t, GLint r);
extern void glTexCoord3iv (const GLint *v);
extern void glTexCoord3s (GLshort s, GLshort t, GLshort r);
extern void glTexCoord3sv (const GLshort *v);
extern void glTexCoord4d (GLdouble s, GLdouble t, GLdouble r, GLdouble q);
extern void glTexCoord4dv (const GLdouble *v);
extern void glTexCoord4f (GLfloat s, GLfloat t, GLfloat r, GLfloat q);
extern void glTexCoord4fv (const GLfloat *v);
extern void glTexCoord4i (GLint s, GLint t, GLint r, GLint q);
extern void glTexCoord4iv (const GLint *v);
extern void glTexCoord4s (GLshort s, GLshort t, GLshort r, GLshort q);
extern void glTexCoord4sv (const GLshort *v);
extern void glTexCoordPointer (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
extern void glTexEnvf (GLenum target, GLenum pname, GLfloat param);
extern void glTexEnvfv (GLenum target, GLenum pname, const GLfloat *params);
extern void glTexEnvi (GLenum target, GLenum pname, GLint param);
extern void glTexEnviv (GLenum target, GLenum pname, const GLint *params);
extern void glTexGend (GLenum coord, GLenum pname, GLdouble param);
extern void glTexGendv (GLenum coord, GLenum pname, const GLdouble *params);
extern void glTexGenf (GLenum coord, GLenum pname, GLfloat param);
extern void glTexGenfv (GLenum coord, GLenum pname, const GLfloat *params);
extern void glTexGeni (GLenum coord, GLenum pname, GLint param);
extern void glTexGeniv (GLenum coord, GLenum pname, const GLint *params);
extern void glTexImage1D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
extern void glTexImage2D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
extern void glTexImage3D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
extern void glTexParameterf (GLenum target, GLenum pname, GLfloat param);
extern void glTexParameterfv (GLenum target, GLenum pname, const GLfloat *params);
extern void glTexParameteri (GLenum target, GLenum pname, GLint param);
extern void glTexParameteriv (GLenum target, GLenum pname, const GLint *params);
extern void glTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels);
extern void glTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);
extern void glTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);
extern void glTranslated (GLdouble x, GLdouble y, GLdouble z);
extern void glTranslatef (GLfloat x, GLfloat y, GLfloat z);
extern void glVertex2d (GLdouble x, GLdouble y);
extern void glVertex2dv (const GLdouble *v);
extern void glVertex2f (GLfloat x, GLfloat y);
extern void glVertex2fv (const GLfloat *v);
extern void glVertex2i (GLint x, GLint y);
extern void glVertex2iv (const GLint *v);
extern void glVertex2s (GLshort x, GLshort y);
extern void glVertex2sv (const GLshort *v);
extern void glVertex3d (GLdouble x, GLdouble y, GLdouble z);
extern void glVertex3dv (const GLdouble *v);
extern void glVertex3f (GLfloat x, GLfloat y, GLfloat z);
extern void glVertex3fv (const GLfloat *v);
extern void glVertex3i (GLint x, GLint y, GLint z);
extern void glVertex3iv (const GLint *v);
extern void glVertex3s (GLshort x, GLshort y, GLshort z);
extern void glVertex3sv (const GLshort *v);
extern void glVertex4d (GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern void glVertex4dv (const GLdouble *v);
extern void glVertex4f (GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern void glVertex4fv (const GLfloat *v);
extern void glVertex4i (GLint x, GLint y, GLint z, GLint w);
extern void glVertex4iv (const GLint *v);
extern void glVertex4s (GLshort x, GLshort y, GLshort z, GLshort w);
extern void glVertex4sv (const GLshort *v);
extern void glVertexPointer (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
extern void glViewport (GLint x, GLint y, GLsizei width, GLsizei height);

extern void glSampleCoverage (GLclampf value, GLboolean invert);
extern void glSamplePass (GLenum pass);

extern void glLoadTransposeMatrixf (const GLfloat *m);
extern void glLoadTransposeMatrixd (const GLdouble *m);
extern void glMultTransposeMatrixf (const GLfloat *m);
extern void glMultTransposeMatrixd (const GLdouble *m);

extern void glCompressedTexImage3D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);
extern void glCompressedTexImage2D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);
extern void glCompressedTexImage1D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);
extern void glCompressedTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);
extern void glCompressedTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);
extern void glCompressedTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);
extern void glGetCompressedTexImage (GLenum target, GLint lod, GLvoid *img);

extern void glActiveTexture (GLenum texture);
extern void glClientActiveTexture (GLenum texture);
extern void glMultiTexCoord1d (GLenum target, GLdouble s);
extern void glMultiTexCoord1dv (GLenum target, const GLdouble *v);
extern void glMultiTexCoord1f (GLenum target, GLfloat s);
extern void glMultiTexCoord1fv (GLenum target, const GLfloat *v);
extern void glMultiTexCoord1i (GLenum target, GLint s);
extern void glMultiTexCoord1iv (GLenum target, const GLint *v);
extern void glMultiTexCoord1s (GLenum target, GLshort s);
extern void glMultiTexCoord1sv (GLenum target, const GLshort *v);
extern void glMultiTexCoord2d (GLenum target, GLdouble s, GLdouble t);
extern void glMultiTexCoord2dv (GLenum target, const GLdouble *v);
extern void glMultiTexCoord2f (GLenum target, GLfloat s, GLfloat t);
extern void glMultiTexCoord2fv (GLenum target, const GLfloat *v);
extern void glMultiTexCoord2i (GLenum target, GLint s, GLint t);
extern void glMultiTexCoord2iv (GLenum target, const GLint *v);
extern void glMultiTexCoord2s (GLenum target, GLshort s, GLshort t);
extern void glMultiTexCoord2sv (GLenum target, const GLshort *v);
extern void glMultiTexCoord3d (GLenum target, GLdouble s, GLdouble t, GLdouble r);
extern void glMultiTexCoord3dv (GLenum target, const GLdouble *v);
extern void glMultiTexCoord3f (GLenum target, GLfloat s, GLfloat t, GLfloat r);
extern void glMultiTexCoord3fv (GLenum target, const GLfloat *v);
extern void glMultiTexCoord3i (GLenum target, GLint s, GLint t, GLint r);
extern void glMultiTexCoord3iv (GLenum target, const GLint *v);
extern void glMultiTexCoord3s (GLenum target, GLshort s, GLshort t, GLshort r);
extern void glMultiTexCoord3sv (GLenum target, const GLshort *v);
extern void glMultiTexCoord4d (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
extern void glMultiTexCoord4dv (GLenum target, const GLdouble *v);
extern void glMultiTexCoord4f (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
extern void glMultiTexCoord4fv (GLenum target, const GLfloat *v);
extern void glMultiTexCoord4i (GLenum target, GLint, GLint s, GLint t, GLint r);
extern void glMultiTexCoord4iv (GLenum target, const GLint *v);
extern void glMultiTexCoord4s (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
extern void glMultiTexCoord4sv (GLenum target, const GLshort *v);

extern void glFogCoordf (GLfloat coord);
extern void glFogCoordfv (const GLfloat *coord);
extern void glFogCoordd (GLdouble coord);
extern void glFogCoorddv (const GLdouble * coord);
extern void glFogCoordPointer (GLenum type, GLsizei stride, const GLvoid *pointer);

extern void glSecondaryColor3b (GLbyte red, GLbyte green, GLbyte blue);
extern void glSecondaryColor3bv (const GLbyte *v);
extern void glSecondaryColor3d (GLdouble red, GLdouble green, GLdouble blue);
extern void glSecondaryColor3dv (const GLdouble *v);
extern void glSecondaryColor3f (GLfloat red, GLfloat green, GLfloat blue);
extern void glSecondaryColor3fv (const GLfloat *v);
extern void glSecondaryColor3i (GLint red, GLint green, GLint blue);
extern void glSecondaryColor3iv (const GLint *v);
extern void glSecondaryColor3s (GLshort red, GLshort green, GLshort blue);
extern void glSecondaryColor3sv (const GLshort *v);
extern void glSecondaryColor3ub (GLubyte red, GLubyte green, GLubyte blue);
extern void glSecondaryColor3ubv (const GLubyte *v);
extern void glSecondaryColor3ui (GLuint red, GLuint green, GLuint blue);
extern void glSecondaryColor3uiv (const GLuint *v);
extern void glSecondaryColor3us (GLushort red, GLushort green, GLushort blue);
extern void glSecondaryColor3usv (const GLushort *v);
extern void glSecondaryColorPointer (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);

extern void glPointParameterf (GLenum pname, GLfloat param);
extern void glPointParameterfv (GLenum pname, const GLfloat *params);
extern void glPointParameteri (GLenum pname, GLint param);
extern void glPointParameteriv (GLenum pname, const GLint *params);

extern void glBlendFuncSeparate (GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);

extern void glMultiDrawArrays (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
extern void glMultiDrawElements (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* *indices, GLsizei primcount);

extern void glWindowPos2d (GLdouble x, GLdouble y);
extern void glWindowPos2dv (const GLdouble *v);
extern void glWindowPos2f (GLfloat x, GLfloat y);
extern void glWindowPos2fv (const GLfloat *v);
extern void glWindowPos2i (GLint x, GLint y);
extern void glWindowPos2iv (const GLint *v);
extern void glWindowPos2s (GLshort x, GLshort y);
extern void glWindowPos2sv (const GLshort *v);
extern void glWindowPos3d (GLdouble x, GLdouble y, GLdouble z);
extern void glWindowPos3dv (const GLdouble *v);
extern void glWindowPos3f (GLfloat x, GLfloat y, GLfloat z);
extern void glWindowPos3fv (const GLfloat *v);
extern void glWindowPos3i (GLint x, GLint y, GLint z);
extern void glWindowPos3iv (const GLint *v);
extern void glWindowPos3s (GLshort x, GLshort y, GLshort z);
extern void glWindowPos3sv (const GLshort *v);

extern void glGenQueries(GLsizei n, GLuint *ids);
extern void glDeleteQueries(GLsizei n, const GLuint *ids);
extern GLboolean glIsQuery(GLuint id);
extern void glBeginQuery(GLenum target, GLuint id);
extern void glEndQuery(GLenum target);
extern void glGetQueryiv(GLenum target, GLenum pname, GLint *params);
extern void glGetQueryObjectiv(GLuint id, GLenum pname, GLint *params);
extern void glGetQueryObjectuiv(GLuint id, GLenum pname, GLuint *params);

extern void glBindBuffer (GLenum target, GLuint buffer);
extern void glDeleteBuffers (GLsizei n, const GLuint *buffers);
extern void glGenBuffers (GLsizei n, GLuint *buffers);
extern GLboolean glIsBuffer (GLuint buffer);
extern void glBufferData (GLenum target, GLsizeiptr size, const GLvoid *data, GLenum usage);
extern void glBufferSubData (GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid *data);
extern void glGetBufferSubData (GLenum target, GLintptr offset, GLsizeiptr size, GLvoid *data);
extern GLvoid * glMapBuffer (GLenum target, GLenum access);
extern GLboolean glUnmapBuffer (GLenum target);
extern void glGetBufferParameteriv (GLenum target, GLenum pname, GLint *params);
extern void glGetBufferPointerv (GLenum target, GLenum pname, GLvoid **params);

extern void glDrawBuffers (GLsizei n, const GLenum *bufs);
extern void glVertexAttrib1d (GLuint index, GLdouble x);
extern void glVertexAttrib1dv (GLuint index, const GLdouble *v);
extern void glVertexAttrib1f (GLuint index, GLfloat x);
extern void glVertexAttrib1fv (GLuint index, const GLfloat *v);
extern void glVertexAttrib1s (GLuint index, GLshort x);
extern void glVertexAttrib1sv (GLuint index, const GLshort *v);
extern void glVertexAttrib2d (GLuint index, GLdouble x, GLdouble y);
extern void glVertexAttrib2dv (GLuint index, const GLdouble *v);
extern void glVertexAttrib2f (GLuint index, GLfloat x, GLfloat y);
extern void glVertexAttrib2fv (GLuint index, const GLfloat *v);
extern void glVertexAttrib2s (GLuint index, GLshort x, GLshort y);
extern void glVertexAttrib2sv (GLuint index, const GLshort *v);
extern void glVertexAttrib3d (GLuint index, GLdouble x, GLdouble y, GLdouble z);
extern void glVertexAttrib3dv (GLuint index, const GLdouble *v);
extern void glVertexAttrib3f (GLuint index, GLfloat x, GLfloat y, GLfloat z);
extern void glVertexAttrib3fv (GLuint index, const GLfloat *v);
extern void glVertexAttrib3s (GLuint index, GLshort x, GLshort y, GLshort z);
extern void glVertexAttrib3sv (GLuint index, const GLshort *v);
extern void glVertexAttrib4Nbv (GLuint index, const GLbyte *v);
extern void glVertexAttrib4Niv (GLuint index, const GLint *v);
extern void glVertexAttrib4Nsv (GLuint index, const GLshort *v);
extern void glVertexAttrib4Nub (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
extern void glVertexAttrib4Nubv (GLuint index, const GLubyte *v);
extern void glVertexAttrib4Nuiv (GLuint index, const GLuint *v);
extern void glVertexAttrib4Nusv (GLuint index, const GLushort *v);
extern void glVertexAttrib4bv (GLuint index, const GLbyte *v);
extern void glVertexAttrib4d (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern void glVertexAttrib4dv (GLuint index, const GLdouble *v);
extern void glVertexAttrib4f (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern void glVertexAttrib4fv (GLuint index, const GLfloat *v);
extern void glVertexAttrib4iv (GLuint index, const GLint *v);
extern void glVertexAttrib4s (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
extern void glVertexAttrib4sv (GLuint index, const GLshort *v);
extern void glVertexAttrib4ubv (GLuint index, const GLubyte *v);
extern void glVertexAttrib4uiv (GLuint index, const GLuint *v);
extern void glVertexAttrib4usv (GLuint index, const GLushort *v);
extern void glVertexAttribPointer (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer);
extern void glEnableVertexAttribArray (GLuint index);
extern void glDisableVertexAttribArray (GLuint index);
extern void glGetVertexAttribdv (GLuint index, GLenum pname, GLdouble *params);
extern void glGetVertexAttribfv (GLuint index, GLenum pname, GLfloat *params);
extern void glGetVertexAttribiv (GLuint index, GLenum pname, GLint *params);
extern void glGetVertexAttribPointerv (GLuint index, GLenum pname, GLvoid* *pointer);
extern void glDeleteShader (GLuint shader);
extern void glDetachShader (GLuint program, GLuint shader);
extern GLuint glCreateShader (GLenum type);
extern void glShaderSource (GLuint shader, GLsizei count, const GLchar* *string, const GLint *length);
extern void glCompileShader (GLuint shader);
extern GLuint glCreateProgram (void);
extern void glAttachShader (GLuint program, GLuint shader);
extern void glLinkProgram (GLuint program);
extern void glUseProgram (GLuint program);
extern void glDeleteProgram (GLuint program);
extern void glValidateProgram (GLuint program);
extern void glUniform1f (GLint location, GLfloat v0);
extern void glUniform2f (GLint location, GLfloat v0, GLfloat v1);
extern void glUniform3f (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
extern void glUniform4f (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
extern void glUniform1i (GLint location, GLint v0);
extern void glUniform2i (GLint location, GLint v0, GLint v1);
extern void glUniform3i (GLint location, GLint v0, GLint v1, GLint v2);
extern void glUniform4i (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
extern void glUniform1fv (GLint location, GLsizei count, const GLfloat *value);
extern void glUniform2fv (GLint location, GLsizei count, const GLfloat *value);
extern void glUniform3fv (GLint location, GLsizei count, const GLfloat *value);
extern void glUniform4fv (GLint location, GLsizei count, const GLfloat *value);
extern void glUniform1iv (GLint location, GLsizei count, const GLint *value);
extern void glUniform2iv (GLint location, GLsizei count, const GLint *value);
extern void glUniform3iv (GLint location, GLsizei count, const GLint *value);
extern void glUniform4iv (GLint location, GLsizei count, const GLint *value);
extern void glUniformMatrix2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void glUniformMatrix3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void glUniformMatrix4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern GLboolean glIsShader (GLuint shader);
extern GLboolean glIsProgram (GLuint program);
extern void glGetShaderiv (GLuint shader, GLenum pname, GLint *params);
extern void glGetProgramiv (GLuint program, GLenum pname, GLint *params);
extern void glGetAttachedShaders (GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders);
extern void glGetShaderInfoLog (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
extern void glGetProgramInfoLog (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
extern GLint glGetUniformLocation (GLuint program, const GLchar *name);
extern void glGetActiveUniform (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
extern void glGetUniformfv (GLuint program, GLint location, GLfloat *params);
extern void glGetUniformiv (GLuint program, GLint location, GLint *params);
extern void glGetShaderSource (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);
extern void glBindAttribLocation (GLuint program, GLuint index, const GLchar *name);
extern void glGetActiveAttrib (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
extern GLint glGetAttribLocation (GLuint program, const GLchar *name);
extern void glStencilFuncSeparate (GLenum face, GLenum func, GLint ref, GLuint mask);
extern void glStencilOpSeparate (GLenum face, GLenum fail, GLenum zfail, GLenum zpass);
extern void glStencilMaskSeparate (GLenum face, GLuint mask);

extern void glUniformMatrix2x3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void glUniformMatrix3x2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void glUniformMatrix2x4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void glUniformMatrix4x2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void glUniformMatrix3x4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void glUniformMatrix4x3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);





}
# 11 "/Users/ristopuukko/Documents/maya_developement/drawOgl/drawOgl/oglRoutines.h" 2
# 1 "/System/Library/Frameworks/OpenGL.framework/Headers/glu.h" 1 3
# 11 "/System/Library/Frameworks/OpenGL.framework/Headers/glu.h" 3
extern "C" {
# 218 "/System/Library/Frameworks/OpenGL.framework/Headers/glu.h" 3
class GLUnurbs;
class GLUquadric;
class GLUtesselator;

typedef class GLUnurbs GLUnurbsObj;
typedef class GLUquadric GLUquadricObj;
typedef class GLUtesselator GLUtesselatorObj;
typedef class GLUtesselator GLUtriangulatorObj;
# 239 "/System/Library/Frameworks/OpenGL.framework/Headers/glu.h" 3
extern void gluBeginCurve (GLUnurbs* nurb);
extern void gluBeginPolygon (GLUtesselator* tess);
extern void gluBeginSurface (GLUnurbs* nurb);
extern void gluBeginTrim (GLUnurbs* nurb);
extern GLint gluBuild1DMipmapLevels (GLenum target, GLint internalFormat, GLsizei width, GLenum format, GLenum type, GLint level, GLint base, GLint max, const void *data);
extern GLint gluBuild1DMipmaps (GLenum target, GLint internalFormat, GLsizei width, GLenum format, GLenum type, const void *data);
extern GLint gluBuild2DMipmapLevels (GLenum target, GLint internalFormat, GLsizei width, GLsizei height, GLenum format, GLenum type, GLint level, GLint base, GLint max, const void *data);
extern GLint gluBuild2DMipmaps (GLenum target, GLint internalFormat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *data);
extern GLint gluBuild3DMipmapLevels (GLenum target, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLint level, GLint base, GLint max, const void *data);
extern GLint gluBuild3DMipmaps (GLenum target, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *data);
extern GLboolean gluCheckExtension (const GLubyte *extName, const GLubyte *extString);
extern void gluCylinder (GLUquadric* quad, GLdouble base, GLdouble top, GLdouble height, GLint slices, GLint stacks);
extern void gluDeleteNurbsRenderer (GLUnurbs* nurb);
extern void gluDeleteQuadric (GLUquadric* quad);
extern void gluDeleteTess (GLUtesselator* tess);
extern void gluDisk (GLUquadric* quad, GLdouble inner, GLdouble outer, GLint slices, GLint loops);
extern void gluEndCurve (GLUnurbs* nurb);
extern void gluEndPolygon (GLUtesselator* tess);
extern void gluEndSurface (GLUnurbs* nurb);
extern void gluEndTrim (GLUnurbs* nurb);
extern const GLubyte * gluErrorString (GLenum error);
extern void gluGetNurbsProperty (GLUnurbs* nurb, GLenum property, GLfloat* data);
extern const GLubyte * gluGetString (GLenum name);
extern void gluGetTessProperty (GLUtesselator* tess, GLenum which, GLdouble* data);
extern void gluLoadSamplingMatrices (GLUnurbs* nurb, const GLfloat *model, const GLfloat *perspective, const GLint *view);
extern void gluLookAt (GLdouble eyeX, GLdouble eyeY, GLdouble eyeZ, GLdouble centerX, GLdouble centerY, GLdouble centerZ, GLdouble upX, GLdouble upY, GLdouble upZ);
extern GLUnurbs* gluNewNurbsRenderer (void);
extern GLUquadric* gluNewQuadric (void);
extern GLUtesselator* gluNewTess (void);
extern void gluNextContour (GLUtesselator* tess, GLenum type);
extern void gluNurbsCallback (GLUnurbs* nurb, GLenum which, GLvoid (*CallBackFunc)());
extern void gluNurbsCallbackData (GLUnurbs* nurb, GLvoid* userData);
extern void gluNurbsCallbackDataEXT (GLUnurbs* nurb, GLvoid* userData);
extern void gluNurbsCurve (GLUnurbs* nurb, GLint knotCount, GLfloat *knots, GLint stride, GLfloat *control, GLint order, GLenum type);
extern void gluNurbsProperty (GLUnurbs* nurb, GLenum property, GLfloat value);
extern void gluNurbsSurface (GLUnurbs* nurb, GLint sKnotCount, GLfloat* sKnots, GLint tKnotCount, GLfloat* tKnots, GLint sStride, GLint tStride, GLfloat* control, GLint sOrder, GLint tOrder, GLenum type);
extern void gluOrtho2D (GLdouble left, GLdouble right, GLdouble bottom, GLdouble top);
extern void gluPartialDisk (GLUquadric* quad, GLdouble inner, GLdouble outer, GLint slices, GLint loops, GLdouble start, GLdouble sweep);
extern void gluPerspective (GLdouble fovy, GLdouble aspect, GLdouble zNear, GLdouble zFar);
extern void gluPickMatrix (GLdouble x, GLdouble y, GLdouble delX, GLdouble delY, GLint *viewport);
extern GLint gluProject (GLdouble objX, GLdouble objY, GLdouble objZ, const GLdouble *model, const GLdouble *proj, const GLint *view, GLdouble* winX, GLdouble* winY, GLdouble* winZ);
extern void gluPwlCurve (GLUnurbs* nurb, GLint count, GLfloat* data, GLint stride, GLenum type);
extern void gluQuadricCallback (GLUquadric* quad, GLenum which, GLvoid (*CallBackFunc)());
extern void gluQuadricDrawStyle (GLUquadric* quad, GLenum draw);
extern void gluQuadricNormals (GLUquadric* quad, GLenum normal);
extern void gluQuadricOrientation (GLUquadric* quad, GLenum orientation);
extern void gluQuadricTexture (GLUquadric* quad, GLboolean texture);
extern GLint gluScaleImage (GLenum format, GLsizei wIn, GLsizei hIn, GLenum typeIn, const void *dataIn, GLsizei wOut, GLsizei hOut, GLenum typeOut, GLvoid* dataOut);
extern void gluSphere (GLUquadric* quad, GLdouble radius, GLint slices, GLint stacks);
extern void gluTessBeginContour (GLUtesselator* tess);
extern void gluTessBeginPolygon (GLUtesselator* tess, GLvoid* data);
extern void gluTessCallback (GLUtesselator* tess, GLenum which, GLvoid (*CallBackFunc)());
extern void gluTessEndContour (GLUtesselator* tess);
extern void gluTessEndPolygon (GLUtesselator* tess);
extern void gluTessNormal (GLUtesselator* tess, GLdouble valueX, GLdouble valueY, GLdouble valueZ);
extern void gluTessProperty (GLUtesselator* tess, GLenum which, GLdouble data);
extern void gluTessVertex (GLUtesselator* tess, GLdouble *location, GLvoid* data);
extern GLint gluUnProject (GLdouble winX, GLdouble winY, GLdouble winZ, const GLdouble *model, const GLdouble *proj, const GLint *view, GLdouble* objX, GLdouble* objY, GLdouble* objZ);
extern GLint gluUnProject4 (GLdouble winX, GLdouble winY, GLdouble winZ, GLdouble clipW, const GLdouble *model, const GLdouble *proj, const GLint *view, GLdouble nearPlane, GLdouble farPlane, GLdouble* objX, GLdouble* objY, GLdouble* objZ, GLdouble* objW);


}
# 12 "/Users/ristopuukko/Documents/maya_developement/drawOgl/drawOgl/oglRoutines.h" 2
# 1 "/System/Library/Frameworks/GLUT.framework/Headers/glut.h" 1 3
# 75 "/System/Library/Frameworks/GLUT.framework/Headers/glut.h" 3
extern "C" {
# 259 "/System/Library/Frameworks/GLUT.framework/Headers/glut.h" 3
extern void *glutStrokeRoman;
extern void *glutStrokeMonoRoman;






extern void *glutBitmap9By15;
extern void *glutBitmap8By13;
extern void *glutBitmapTimesRoman10;
extern void *glutBitmapTimesRoman24;
extern void *glutBitmapHelvetica10;
extern void *glutBitmapHelvetica12;
extern void *glutBitmapHelvetica18;
# 422 "/System/Library/Frameworks/GLUT.framework/Headers/glut.h" 3
extern void glutInit(int *argcp, char **argv);
extern void glutInitDisplayMode(unsigned int mode);

extern void glutInitDisplayString(const char *string);

extern void glutInitWindowPosition(int x, int y);
extern void glutInitWindowSize(int width, int height);
extern void glutMainLoop(void);


extern int glutCreateWindow(const char *title);
extern int glutCreateSubWindow(int win, int x, int y, int width, int height);
extern void glutDestroyWindow(int win);
extern void glutPostRedisplay(void);

extern void glutPostWindowRedisplay(int win);

extern void glutSwapBuffers(void);
extern int glutGetWindow(void);
extern void glutSetWindow(int win);
extern void glutSetWindowTitle(const char *title);
extern void glutSetIconTitle(const char *title);
extern void glutPositionWindow(int x, int y);
extern void glutReshapeWindow(int width, int height);
extern void glutPopWindow(void);
extern void glutPushWindow(void);
extern void glutIconifyWindow(void);
extern void glutShowWindow(void);
extern void glutHideWindow(void);

extern void glutFullScreen(void);
extern void glutSetCursor(int cursor);

extern void glutWarpPointer(int x, int y);






extern void glutSurfaceTexture (GLenum target, GLenum internalformat, int surfacewin); __attribute__((deprecated))






extern void glutWMCloseFunc(void (*func)(void));
extern void glutCheckLoop(void);




extern void glutEstablishOverlay(void);
extern void glutRemoveOverlay(void);
extern void glutUseLayer(GLenum layer);
extern void glutPostOverlayRedisplay(void);

extern void glutPostWindowOverlayRedisplay(int win);

extern void glutShowOverlay(void);
extern void glutHideOverlay(void);



extern int glutCreateMenu(void (*)(int));
extern void glutDestroyMenu(int menu);
extern int glutGetMenu(void);
extern void glutSetMenu(int menu);
extern void glutAddMenuEntry(const char *label, int value);
extern void glutAddSubMenu(const char *label, int submenu);
extern void glutChangeToMenuEntry(int item, const char *label, int value);
extern void glutChangeToSubMenu(int item, const char *label, int submenu);
extern void glutRemoveMenuItem(int item);
extern void glutAttachMenu(int button);
extern void glutDetachMenu(int button);


extern void glutDisplayFunc(void (*func)(void));
extern void glutReshapeFunc(void (*func)(int width, int height));
extern void glutKeyboardFunc(void (*func)(unsigned char key, int x, int y));
extern void glutMouseFunc(void (*func)(int button, int state, int x, int y));
extern void glutMotionFunc(void (*func)(int x, int y));
extern void glutPassiveMotionFunc(void (*func)(int x, int y));
extern void glutEntryFunc(void (*func)(int state));
extern void glutVisibilityFunc(void (*func)(int state));
extern void glutIdleFunc(void (*func)(void));
extern void glutTimerFunc(unsigned int millis, void (*func)(int value), int value);
extern void glutMenuStateFunc(void (*func)(int state));

extern void glutSpecialFunc(void (*func)(int key, int x, int y));
extern void glutSpaceballMotionFunc(void (*func)(int x, int y, int z));
extern void glutSpaceballRotateFunc(void (*func)(int x, int y, int z));
extern void glutSpaceballButtonFunc(void (*func)(int button, int state));
extern void glutButtonBoxFunc(void (*func)(int button, int state));
extern void glutDialsFunc(void (*func)(int dial, int value));
extern void glutTabletMotionFunc(void (*func)(int x, int y));
extern void glutTabletButtonFunc(void (*func)(int button, int state, int x, int y));

extern void glutMenuStatusFunc(void (*func)(int status, int x, int y));
extern void glutOverlayDisplayFunc(void (*func)(void));

extern void glutWindowStatusFunc(void (*func)(int state));


extern void glutKeyboardUpFunc(void (*func)(unsigned char key, int x, int y));
extern void glutSpecialUpFunc(void (*func)(int key, int x, int y));
extern void glutJoystickFunc(void (*func)(unsigned int buttonMask, int x, int y, int z), int pollInterval);





extern void glutSetColor(int, GLfloat red, GLfloat green, GLfloat blue);
extern GLfloat glutGetColor(int ndx, int component);
extern void glutCopyColormap(int win);


extern int glutGet(GLenum type);
extern int glutDeviceGet(GLenum type);


extern int glutExtensionSupported(const char *name);


extern int glutGetModifiers(void);
extern int glutLayerGet(GLenum type);


extern void * glutGetProcAddress(const char *procName);



extern void glutBitmapCharacter(void *font, int character);
extern int glutBitmapWidth(void *font, int character);
extern void glutStrokeCharacter(void *font, int character);
extern int glutStrokeWidth(void *font, int character);

extern int glutBitmapLength(void *font, const unsigned char *string);
extern int glutStrokeLength(void *font, const unsigned char *string);



extern void glutWireSphere(GLdouble radius, GLint slices, GLint stacks);
extern void glutSolidSphere(GLdouble radius, GLint slices, GLint stacks);
extern void glutWireCone(GLdouble base, GLdouble height, GLint slices, GLint stacks);
extern void glutSolidCone(GLdouble base, GLdouble height, GLint slices, GLint stacks);
extern void glutWireCube(GLdouble size);
extern void glutSolidCube(GLdouble size);
extern void glutWireTorus(GLdouble innerRadius, GLdouble outerRadius, GLint sides, GLint rings);
extern void glutSolidTorus(GLdouble innerRadius, GLdouble outerRadius, GLint sides, GLint rings);
extern void glutWireDodecahedron(void);
extern void glutSolidDodecahedron(void);
extern void glutWireTeapot(GLdouble size);
extern void glutSolidTeapot(GLdouble size);
extern void glutWireOctahedron(void);
extern void glutSolidOctahedron(void);
extern void glutWireTetrahedron(void);
extern void glutSolidTetrahedron(void);
extern void glutWireIcosahedron(void);
extern void glutSolidIcosahedron(void);



extern int glutVideoResizeGet(GLenum param);
extern void glutSetupVideoResizing(void);
extern void glutStopVideoResizing(void);
extern void glutVideoResize(int x, int y, int width, int height);
extern void glutVideoPan(int x, int y, int width, int height);


extern void glutReportErrors(void);
# 609 "/System/Library/Frameworks/GLUT.framework/Headers/glut.h" 3
extern void glutIgnoreKeyRepeat(int ignore);
extern void glutSetKeyRepeat(int repeatMode);
extern void glutForceJoystickFunc(void);
# 623 "/System/Library/Frameworks/GLUT.framework/Headers/glut.h" 3
extern void glutGameModeString(const char *string);
extern int glutEnterGameMode(void);
extern void glutLeaveGameMode(void);
extern int glutGameModeGet(GLenum mode);



}
# 12 "/Users/ristopuukko/Documents/maya_developement/drawOgl/drawOgl/oglRoutines.h" 2
# 11 "/Users/ristopuukko/Documents/maya_developement/drawOgl/drawOgl/oglRoutines.cpp" 2
# 1 "/Users/ristopuukko/Documents/maya_developement/drawOgl/drawOgl/drawOgl.h" 1
# 10 "/Users/ristopuukko/Documents/maya_developement/drawOgl/drawOgl/drawOgl.h"
       



# 1 "/Applications/Autodesk/maya2011/devkit/include/maya/MPxLocatorNode.h" 1
# 48 "/Applications/Autodesk/maya2011/devkit/include/maya/MPxLocatorNode.h"
# 1 "/Applications/Autodesk/maya2011/devkit/include/maya/MStatus.h" 1
# 47 "/Applications/Autodesk/maya2011/devkit/include/maya/MStatus.h"
# 1 "/Applications/Autodesk/maya2011/devkit/include/maya/MTypes.h" 1
# 57 "/Applications/Autodesk/maya2011/devkit/include/maya/MTypes.h"
class MStatus;
class MSyntax;
# 203 "/Applications/Autodesk/maya2011/devkit/include/maya/MTypes.h"
# 1 "/usr/include/sys/stat.h" 1 3 4
# 79 "/usr/include/sys/stat.h" 3 4
# 1 "/usr/include/sys/_structs.h" 1 3 4
# 80 "/usr/include/sys/stat.h" 2 3 4
# 153 "/usr/include/sys/stat.h" 3 4
struct ostat {
 __uint16_t st_dev;
 ino_t st_ino;
 mode_t st_mode;
 nlink_t st_nlink;
 __uint16_t st_uid;
 __uint16_t st_gid;
 __uint16_t st_rdev;
 __int32_t st_size;
 struct timespec st_atimespec;
 struct timespec st_mtimespec;
 struct timespec st_ctimespec;
 __int32_t st_blksize;
 __int32_t st_blocks;
 __uint32_t st_flags;
 __uint32_t st_gen;
};
# 225 "/usr/include/sys/stat.h" 3 4
struct stat { dev_t st_dev; mode_t st_mode; nlink_t st_nlink; __darwin_ino64_t st_ino; uid_t st_uid; gid_t st_gid; dev_t st_rdev; struct timespec st_atimespec; struct timespec st_mtimespec; struct timespec st_ctimespec; struct timespec st_birthtimespec; off_t st_size; blkcnt_t st_blocks; blksize_t st_blksize; __uint32_t st_flags; __uint32_t st_gen; __int32_t st_lspare; __int64_t st_qspare[2]; };
# 264 "/usr/include/sys/stat.h" 3 4
struct stat64 { dev_t st_dev; mode_t st_mode; nlink_t st_nlink; __darwin_ino64_t st_ino; uid_t st_uid; gid_t st_gid; dev_t st_rdev; struct timespec st_atimespec; struct timespec st_mtimespec; struct timespec st_ctimespec; struct timespec st_birthtimespec; off_t st_size; blkcnt_t st_blocks; blksize_t st_blksize; __uint32_t st_flags; __uint32_t st_gen; __int32_t st_lspare; __int64_t st_qspare[2]; };
# 427 "/usr/include/sys/stat.h" 3 4
extern "C" {

int chmod(const char *, mode_t) __asm("_" "chmod" );
int fchmod(int, mode_t) __asm("_" "fchmod" );
int fstat(int, struct stat *) __asm("_" "fstat" "$INODE64");
int lstat(const char *, struct stat *) __asm("_" "lstat" "$INODE64");
int mkdir(const char *, mode_t);
int mkfifo(const char *, mode_t);
int stat(const char *, struct stat *) __asm("_" "stat" "$INODE64");
int mknod(const char *, mode_t, dev_t);
mode_t umask(mode_t);







int chflags(const char *, __uint32_t);
int chmodx_np(const char *, filesec_t);
int fchflags(int, __uint32_t);
int fchmodx_np(int, filesec_t);
int fstatx_np(int, struct stat *, filesec_t) __asm("_" "fstatx_np" "$INODE64");
int lchflags(const char *, __uint32_t);
int lchmod(const char *, mode_t);
int lstatx_np(const char *, struct stat *, filesec_t) __asm("_" "lstatx_np" "$INODE64");
int mkdirx_np(const char *, filesec_t);
int mkfifox_np(const char *, filesec_t);
int statx_np(const char *, struct stat *, filesec_t) __asm("_" "statx_np" "$INODE64");
int umaskx_np(filesec_t);



int fstatx64_np(int, struct stat64 *, filesec_t) __attribute__((deprecated,visibility("default")));
int lstatx64_np(const char *, struct stat64 *, filesec_t) __attribute__((deprecated,visibility("default")));
int statx64_np(const char *, struct stat64 *, filesec_t) __attribute__((deprecated,visibility("default")));
int fstat64(int, struct stat64 *) __attribute__((deprecated,visibility("default")));
int lstat64(const char *, struct stat64 *) __attribute__((deprecated,visibility("default")));
int stat64(const char *, struct stat64 *) __attribute__((deprecated,visibility("default")));



}
# 204 "/Applications/Autodesk/maya2011/devkit/include/maya/MTypes.h" 2
# 245 "/Applications/Autodesk/maya2011/devkit/include/maya/MTypes.h"
typedef signed short short2[2];
typedef signed short short3[3];
typedef signed int long2[2];
typedef signed int long3[3];
typedef signed int int2[2];
typedef signed int int3[3];
typedef float float2[2];
typedef float float3[3];
typedef double double2[2];
typedef double double3[3];
typedef double double4[4];
# 270 "/Applications/Autodesk/maya2011/devkit/include/maya/MTypes.h"
 typedef unsigned long long MUint64;
# 284 "/Applications/Autodesk/maya2011/devkit/include/maya/MTypes.h"
 typedef long long MInt64;
# 294 "/Applications/Autodesk/maya2011/devkit/include/maya/MTypes.h"
# 1 "/usr/include/inttypes.h" 1 3 4
# 265 "/usr/include/inttypes.h" 3 4
extern "C" {


  extern intmax_t imaxabs(intmax_t j);


  typedef struct {
        intmax_t quot;
        intmax_t rem;
  } imaxdiv_t;

  extern imaxdiv_t imaxdiv(intmax_t numer, intmax_t denom);


  extern intmax_t strtoimax(const char * nptr, char ** endptr, int base);
  extern uintmax_t strtoumax(const char * nptr, char ** endptr, int base);
# 290 "/usr/include/inttypes.h" 3 4
  extern intmax_t wcstoimax(const wchar_t * nptr, wchar_t ** endptr, int base);
  extern uintmax_t wcstoumax(const wchar_t * nptr, wchar_t ** endptr, int base);






}
# 295 "/Applications/Autodesk/maya2011/devkit/include/maya/MTypes.h" 2




 typedef intptr_t MIntPtrSz;
 typedef uintptr_t MUintPtrSz;
# 311 "/Applications/Autodesk/maya2011/devkit/include/maya/MTypes.h"
typedef void * (*MCreatorFunction)();





typedef MSyntax (*MCreateSyntaxFunction)();





typedef MStatus (*MInitializeFunction)();

class MPxTransformationMatrix;





typedef MPxTransformationMatrix* (*MCreateXformMatrixFunction)();
# 455 "/Applications/Autodesk/maya2011/devkit/include/maya/MTypes.h"
class MSpace {
public:


 enum Space {
  kInvalid = 0,
   kTransform = 1,
   kPreTransform = 2,
   kPostTransform = 3,
   kWorld = 4,
   kObject = kPreTransform,
  kLast = 5
 };

};
# 483 "/Applications/Autodesk/maya2011/devkit/include/maya/MTypes.h"
  inline int statMachO (const char *path, struct stat *buffer)
  {
   return (stat(path, buffer));
  }
# 48 "/Applications/Autodesk/maya2011/devkit/include/maya/MStatus.h" 2


# 1 "/Applications/Autodesk/maya2011/devkit/include/maya/MIOStream.h" 1
# 48 "/Applications/Autodesk/maya2011/devkit/include/maya/MIOStream.h"
# 1 "/Applications/Autodesk/maya2011/devkit/include/maya/MIOStreamFwd.h" 1
# 47 "/Applications/Autodesk/maya2011/devkit/include/maya/MIOStreamFwd.h"
# 1 "/usr/include/c++/4.2.1/iosfwd" 1 3
# 42 "/usr/include/c++/4.2.1/iosfwd" 3
       
# 43 "/usr/include/c++/4.2.1/iosfwd" 3

# 1 "/usr/include/c++/4.2.1/i686-apple-darwin10/x86_64/bits/c++config.h" 1 3
# 41 "/usr/include/c++/4.2.1/i686-apple-darwin10/x86_64/bits/c++config.h" 3
# 1 "/usr/include/c++/4.2.1/i686-apple-darwin10/x86_64/bits/os_defines.h" 1 3
# 61 "/usr/include/c++/4.2.1/i686-apple-darwin10/x86_64/bits/os_defines.h" 3
# 1 "/usr/include/unistd.h" 1 3 4
# 72 "/usr/include/unistd.h" 3 4
# 1 "/usr/include/sys/unistd.h" 1 3 4
# 138 "/usr/include/sys/unistd.h" 3 4
struct accessx_descriptor {
 unsigned int ad_name_offset;
 int ad_flags;
 int ad_pad[2];
};
# 73 "/usr/include/unistd.h" 2 3 4
# 414 "/usr/include/unistd.h" 3 4
extern "C" {

void _exit(int) __attribute__((__noreturn__));
int access(const char *, int);
unsigned int
  alarm(unsigned int);
int chdir(const char *);
int chown(const char *, uid_t, gid_t);
int close(int) __asm("_" "close" );
size_t confstr(int, char *, size_t) __asm("_" "confstr" );
char *crypt(const char *, const char *);
char *ctermid(char *);
int dup(int);
int dup2(int, int);

void encrypt(char *, int) __asm("_" "encrypt" );



int execl(const char *, const char *, ...);
int execle(const char *, const char *, ...);
int execlp(const char *, const char *, ...);
int execv(const char *, char * const *);
int execve(const char *, char * const *, char * const *);
int execvp(const char *, char * const *);
int fchown(int, uid_t, gid_t);
int fchdir(int);
pid_t fork(void);
long fpathconf(int, int);
int fsync(int) __asm("_" "fsync" );
int ftruncate(int, off_t);
char *getcwd(char *, size_t);
gid_t getegid(void);
uid_t geteuid(void);
gid_t getgid(void);



int getgroups(int, gid_t []);

long gethostid(void);
int gethostname(char *, size_t);
char *getlogin(void);
int getlogin_r(char *, size_t);
int getopt(int, char * const [], const char *) __asm("_" "getopt" );
pid_t getpgid(pid_t);
pid_t getpgrp(void);
pid_t getpid(void);
pid_t getppid(void);
pid_t getsid(pid_t);
uid_t getuid(void);
char *getwd(char *);
int isatty(int);
int lchown(const char *, uid_t, gid_t) __asm("_" "lchown" );
int link(const char *, const char *);
int lockf(int, int, off_t) __asm("_" "lockf" );
off_t lseek(int, off_t, int);
int nice(int) __asm("_" "nice" );
long pathconf(const char *, int);
int pause(void) __asm("_" "pause" );
int pipe(int [2]);
ssize_t pread(int, void *, size_t, off_t) __asm("_" "pread" );
ssize_t pwrite(int, const void *, size_t, off_t) __asm("_" "pwrite" );
ssize_t read(int, void *, size_t) __asm("_" "read" );
ssize_t readlink(const char * , char * , size_t);
int rmdir(const char *);
int setegid(gid_t);
int seteuid(uid_t);
int setgid(gid_t);
int setpgid(pid_t, pid_t);

pid_t setpgrp(void) __asm("_" "setpgrp" );



int setregid(gid_t, gid_t) __asm("_" "setregid" );
int setreuid(uid_t, uid_t) __asm("_" "setreuid" );
pid_t setsid(void);
int setuid(uid_t);
unsigned int
  sleep(unsigned int) __asm("_" "sleep" );
void swab(const void * , void * , ssize_t);
int symlink(const char *, const char *);
void sync(void);
long sysconf(int);
pid_t tcgetpgrp(int);
int tcsetpgrp(int, pid_t);
int truncate(const char *, off_t);
char *ttyname(int);

int ttyname_r(int, char *, size_t) __asm("_" "ttyname_r" );



useconds_t
  ualarm(useconds_t, useconds_t);
int unlink(const char *);
int usleep(useconds_t) __asm("_" "usleep" );
pid_t vfork(void);
ssize_t write(int, const void *, size_t) __asm("_" "write" );

extern char *optarg;
extern int optind, opterr, optopt;


# 1 "/usr/include/sys/select.h" 1 3 4
# 78 "/usr/include/sys/select.h" 3 4
# 1 "/usr/include/sys/_structs.h" 1 3 4
# 79 "/usr/include/sys/select.h" 2 3 4
# 134 "/usr/include/sys/select.h" 3 4
extern "C" {


int pselect(int, fd_set * , fd_set * ,
  fd_set * , const struct timespec * ,
  const sigset_t * )




  __asm("_" "pselect" "$1050")




  ;


# 1 "/usr/include/sys/_select.h" 1 3 4
# 39 "/usr/include/sys/_select.h" 3 4
int select(int, fd_set * , fd_set * ,
  fd_set * , struct timeval * )




  __asm("_" "select" "$1050")




  ;
# 153 "/usr/include/sys/select.h" 2 3 4

}
# 520 "/usr/include/unistd.h" 2 3 4

void _Exit(int) __attribute__((__noreturn__));
int accessx_np(const struct accessx_descriptor *, size_t, int *, uid_t);
int acct(const char *);
int add_profil(char *, size_t, unsigned long, unsigned int);
void *brk(const void *);
int chroot(const char *);
void endusershell(void);
int execvP(const char *, const char *, char * const *);
char *fflagstostr(unsigned long);
int getdtablesize(void);
int getdomainname(char *, int);
int getgrouplist(const char *, int, int *, int *);
int gethostuuid(uuid_t, const struct timespec *);
mode_t getmode(const void *, mode_t);
int getpagesize(void) __attribute__((__const__));
char *getpass(const char *);
int getpeereid(int, uid_t *, gid_t *);
int getpgid(pid_t _pid);
int getsgroups_np(int *, uuid_t);
int getsid(pid_t _pid);
char *getusershell(void);
int getwgroups_np(int *, uuid_t);
int initgroups(const char *, int);
int iruserok(unsigned long, int, const char *, const char *);
int iruserok_sa(const void *, int, int, const char *, const char *);
int issetugid(void);
char *mkdtemp(char *);
int mknod(const char *, mode_t, dev_t);
int mkstemp(char *);
int mkstemps(char *, int);
char *mktemp(char *);
int nfssvc(int, void *);
int profil(char *, size_t, unsigned long, unsigned int);
int pthread_setugid_np(uid_t, gid_t);
int pthread_getugid_np( uid_t *, gid_t *);
int rcmd(char **, int, const char *, const char *, const char *, int *);
int rcmd_af(char **, int, const char *, const char *, const char *, int *,
  int);
int reboot(int);
int revoke(const char *);
int rresvport(int *);
int rresvport_af(int *, int);
int ruserok(const char *, int, const char *, const char *);
void *sbrk(int);
int setdomainname(const char *, int);
int setgroups(int, const gid_t *);
void sethostid(long);
int sethostname(const char *, int);

void setkey(const char *) __asm("_" "setkey" );



int setlogin(const char *);
void *setmode(const char *) __asm("_" "setmode" );
int setrgid(gid_t);
int setruid(uid_t);
int setsgroups_np(int, const uuid_t);
void setusershell(void);
int setwgroups_np(int, const uuid_t);
int strtofflags(char **, unsigned long *, unsigned long *);
int swapon(const char *);
int syscall(int, ...);
int ttyslot(void);
int undelete(const char *);
int unwhiteout(const char *);
void *valloc(size_t);

extern char *suboptarg;
int getsubopt(char **, char * const *, char **);



int fgetattrlist(int,void*,void*,size_t,unsigned int);
int fsetattrlist(int,void*,void*,size_t,unsigned int);
int getattrlist(const char*,void*,void*,size_t,unsigned int) __asm("_" "getattrlist" );
int setattrlist(const char*,void*,void*,size_t,unsigned int) __asm("_" "setattrlist" );
int exchangedata(const char*,const char*,unsigned int);
int getdirentriesattr(int,void*,void*,size_t,unsigned int*,unsigned int*,unsigned int*,unsigned int);
# 611 "/usr/include/unistd.h" 3 4
struct fssearchblock;
struct searchstate;

int searchfs(const char *, struct fssearchblock *, unsigned long *, unsigned int, unsigned int, struct searchstate *);
int fsctl(const char *,unsigned long,void*,unsigned int);
int ffsctl(int,unsigned long,void*,unsigned int);

extern int optreset;


}
# 62 "/usr/include/c++/4.2.1/i686-apple-darwin10/x86_64/bits/os_defines.h" 2 3


extern "C" {
# 89 "/usr/include/c++/4.2.1/i686-apple-darwin10/x86_64/bits/os_defines.h" 3
extern void __dtrace_probe$cxa_runtime$cxa_exception_rethrow$v1(void);
extern int __dtrace_isenabled$cxa_runtime$cxa_exception_rethrow$v1(void);
extern void __dtrace_probe$cxa_runtime$cxa_exception_throw$v1$766f6964202a(void *);
extern int __dtrace_isenabled$cxa_runtime$cxa_exception_throw$v1(void);


}
# 42 "/usr/include/c++/4.2.1/i686-apple-darwin10/x86_64/bits/c++config.h" 2 3


# 1 "/usr/include/c++/4.2.1/i686-apple-darwin10/x86_64/bits/cpu_defines.h" 1 3
# 45 "/usr/include/c++/4.2.1/i686-apple-darwin10/x86_64/bits/c++config.h" 2 3
# 153 "/usr/include/c++/4.2.1/i686-apple-darwin10/x86_64/bits/c++config.h" 3
namespace std {
# 165 "/usr/include/c++/4.2.1/i686-apple-darwin10/x86_64/bits/c++config.h" 3
}
# 45 "/usr/include/c++/4.2.1/iosfwd" 2 3
# 1 "/usr/include/c++/4.2.1/i686-apple-darwin10/x86_64/bits/c++locale.h" 1 3
# 45 "/usr/include/c++/4.2.1/i686-apple-darwin10/x86_64/bits/c++locale.h" 3
       
# 46 "/usr/include/c++/4.2.1/i686-apple-darwin10/x86_64/bits/c++locale.h" 3

# 1 "/usr/include/c++/4.2.1/clocale" 1 3
# 48 "/usr/include/c++/4.2.1/clocale" 3
       
# 49 "/usr/include/c++/4.2.1/clocale" 3
# 57 "/usr/include/c++/4.2.1/clocale" 3
namespace std {

  using ::lconv;
  using ::setlocale;
  using ::localeconv;

}
# 48 "/usr/include/c++/4.2.1/i686-apple-darwin10/x86_64/bits/c++locale.h" 2 3
# 1 "/usr/include/c++/4.2.1/cstring" 1 3
# 48 "/usr/include/c++/4.2.1/cstring" 3
       
# 49 "/usr/include/c++/4.2.1/cstring" 3


# 1 "/usr/include/c++/4.2.1/cstddef" 1 3
# 48 "/usr/include/c++/4.2.1/cstddef" 3
       
# 49 "/usr/include/c++/4.2.1/cstddef" 3


# 1 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/stddef.h" 1 3 4
# 52 "/usr/include/c++/4.2.1/cstddef" 2 3

namespace std {

  using ::ptrdiff_t;
  using ::size_t;

}
# 52 "/usr/include/c++/4.2.1/cstring" 2 3
# 78 "/usr/include/c++/4.2.1/cstring" 3
namespace std {

  using ::memcpy;
  using ::memmove;
  using ::strcpy;
  using ::strncpy;
  using ::strcat;
  using ::strncat;
  using ::memcmp;
  using ::strcmp;
  using ::strcoll;
  using ::strncmp;
  using ::strxfrm;
  using ::strcspn;
  using ::strspn;
  using ::strtok;
  using ::memset;
  using ::strerror;
  using ::strlen;

  using ::memchr;

  inline void*
  memchr(void* __p, int __c, size_t __n)
  { return memchr(const_cast<const void*>(__p), __c, __n); }

  using ::strchr;

  inline char*
  strchr(char* __s1, int __n)
  { return __builtin_strchr(const_cast<const char*>(__s1), __n); }

  using ::strpbrk;

  inline char*
  strpbrk(char* __s1, const char* __s2)
  { return __builtin_strpbrk(const_cast<const char*>(__s1), __s2); }

  using ::strrchr;

  inline char*
  strrchr(char* __s1, int __n)
  { return __builtin_strrchr(const_cast<const char*>(__s1), __n); }

  using ::strstr;

  inline char*
  strstr(char* __s1, const char* __s2)
  { return __builtin_strstr(const_cast<const char*>(__s1), __s2); }

}
# 49 "/usr/include/c++/4.2.1/i686-apple-darwin10/x86_64/bits/c++locale.h" 2 3
# 1 "/usr/include/c++/4.2.1/cstdio" 1 3
# 48 "/usr/include/c++/4.2.1/cstdio" 3
       
# 49 "/usr/include/c++/4.2.1/cstdio" 3
# 98 "/usr/include/c++/4.2.1/cstdio" 3
namespace std {

  using ::FILE;
  using ::fpos_t;

  using ::clearerr;
  using ::fclose;
  using ::feof;
  using ::ferror;
  using ::fflush;
  using ::fgetc;
  using ::fgetpos;
  using ::fgets;
  using ::fopen;
  using ::fprintf;
  using ::fputc;
  using ::fputs;
  using ::fread;
  using ::freopen;
  using ::fscanf;
  using ::fseek;
  using ::fsetpos;
  using ::ftell;
  using ::fwrite;
  using ::getc;
  using ::getchar;
  using ::gets;
  using ::perror;
  using ::printf;
  using ::putc;
  using ::putchar;
  using ::puts;
  using ::remove;
  using ::rename;
  using ::rewind;
  using ::scanf;
  using ::setbuf;
  using ::setvbuf;
  using ::sprintf;
  using ::sscanf;
  using ::tmpfile;
  using ::tmpnam;
  using ::ungetc;
  using ::vfprintf;
  using ::vprintf;
  using ::vsprintf;

}
# 155 "/usr/include/c++/4.2.1/cstdio" 3
namespace __gnu_cxx {
# 170 "/usr/include/c++/4.2.1/cstdio" 3
  using ::snprintf;
  using ::vfscanf;
  using ::vscanf;
  using ::vsnprintf;
  using ::vsscanf;


}

namespace std {

  using ::__gnu_cxx::snprintf;
  using ::__gnu_cxx::vfscanf;
  using ::__gnu_cxx::vscanf;
  using ::__gnu_cxx::vsnprintf;
  using ::__gnu_cxx::vsscanf;

}
# 50 "/usr/include/c++/4.2.1/i686-apple-darwin10/x86_64/bits/c++locale.h" 2 3
# 1 "/usr/include/c++/4.2.1/cstdarg" 1 3
# 48 "/usr/include/c++/4.2.1/cstdarg" 3
       
# 49 "/usr/include/c++/4.2.1/cstdarg" 3
# 58 "/usr/include/c++/4.2.1/cstdarg" 3
namespace std {

  using ::va_list;

}
# 51 "/usr/include/c++/4.2.1/i686-apple-darwin10/x86_64/bits/c++locale.h" 2 3



namespace std {

  typedef int* __c_locale;





  inline int
  __convert_from_v(const __c_locale&, char* __out,
     const int __size __attribute__((__unused__)),
     const char* __fmt, ...)
  {
    char* __old = std::setlocale(4, __null);
    char* __sav = __null;
    if (std::strcmp(__old, "C"))
      {
 __sav = new char[std::strlen(__old) + 1];
 std::strcpy(__sav, __old);
 std::setlocale(4, "C");
      }

    va_list __args;
    __builtin_va_start(__args,__fmt);


    const int __ret = std::vsnprintf(__out, __size, __fmt, __args);




    __builtin_va_end(__args);

    if (__sav)
      {
 std::setlocale(4, __sav);
 delete [] __sav;
      }
    return __ret;
  }

}
# 46 "/usr/include/c++/4.2.1/iosfwd" 2 3
# 1 "/usr/include/c++/4.2.1/i686-apple-darwin10/x86_64/bits/c++io.h" 1 3
# 43 "/usr/include/c++/4.2.1/i686-apple-darwin10/x86_64/bits/c++io.h" 3
# 1 "/usr/include/c++/4.2.1/i686-apple-darwin10/x86_64/bits/gthr.h" 1 3
# 33 "/usr/include/c++/4.2.1/i686-apple-darwin10/x86_64/bits/gthr.h" 3
#pragma GCC visibility push(default)
# 114 "/usr/include/c++/4.2.1/i686-apple-darwin10/x86_64/bits/gthr.h" 3
# 1 "/usr/include/c++/4.2.1/i686-apple-darwin10/x86_64/bits/gthr-default.h" 1 3
# 43 "/usr/include/c++/4.2.1/i686-apple-darwin10/x86_64/bits/gthr-default.h" 3
# 1 "/usr/include/pthread.h" 1 3 4
# 57 "/usr/include/pthread.h" 3 4
# 1 "/usr/include/pthread_impl.h" 1 3 4
# 58 "/usr/include/pthread.h" 2 3 4

# 1 "/usr/include/sched.h" 1 3 4
# 30 "/usr/include/sched.h" 3 4
extern "C" {




struct sched_param { int sched_priority; char __opaque[4]; };


extern int sched_yield(void);
extern int sched_get_priority_min(int);
extern int sched_get_priority_max(int);
}
# 60 "/usr/include/pthread.h" 2 3 4
# 148 "/usr/include/pthread.h" 3 4
extern "C" {
# 244 "/usr/include/pthread.h" 3 4
int pthread_atfork(void (*)(void), void (*)(void),
                      void (*)(void));
int pthread_attr_destroy(pthread_attr_t *);
int pthread_attr_getdetachstate(const pthread_attr_t *,
          int *);
int pthread_attr_getguardsize(const pthread_attr_t * ,
                                      size_t * );
int pthread_attr_getinheritsched(const pthread_attr_t * ,
           int * );
int pthread_attr_getschedparam(const pthread_attr_t * ,
                                     struct sched_param * );
int pthread_attr_getschedpolicy(const pthread_attr_t * ,
          int * );
int pthread_attr_getscope(const pthread_attr_t * , int * );
int pthread_attr_getstack(const pthread_attr_t * ,
                                      void ** , size_t * );
int pthread_attr_getstackaddr(const pthread_attr_t * ,
                                      void ** );
int pthread_attr_getstacksize(const pthread_attr_t * ,
                                      size_t * );
int pthread_attr_init(pthread_attr_t *);
int pthread_attr_setdetachstate(pthread_attr_t *,
          int );
int pthread_attr_setguardsize(pthread_attr_t *, size_t );
int pthread_attr_setinheritsched(pthread_attr_t *,
           int );
int pthread_attr_setschedparam(pthread_attr_t * ,
                                     const struct sched_param * );
int pthread_attr_setschedpolicy(pthread_attr_t *,
          int );
int pthread_attr_setscope(pthread_attr_t *, int);
int pthread_attr_setstack(pthread_attr_t *,
                                      void *, size_t );
int pthread_attr_setstackaddr(pthread_attr_t *,
                                      void *);
int pthread_attr_setstacksize(pthread_attr_t *, size_t );
int pthread_cancel(pthread_t ) __asm("_" "pthread_cancel" );

int pthread_cond_broadcast(pthread_cond_t *);
int pthread_cond_destroy(pthread_cond_t *);
int pthread_cond_init(pthread_cond_t * ,
                            const pthread_condattr_t * ) __asm("_" "pthread_cond_init" );
int pthread_cond_signal(pthread_cond_t *);
int pthread_cond_timedwait(pthread_cond_t * ,
     pthread_mutex_t * ,
     const struct timespec * ) __asm("_" "pthread_cond_timedwait" );
int pthread_cond_wait(pthread_cond_t * ,
       pthread_mutex_t * ) __asm("_" "pthread_cond_wait" );
int pthread_condattr_destroy(pthread_condattr_t *);
int pthread_condattr_init(pthread_condattr_t *);
int pthread_condattr_getpshared(const pthread_condattr_t * ,
   int * );
int pthread_condattr_setpshared(pthread_condattr_t *,
   int );
int pthread_create(pthread_t * ,
                         const pthread_attr_t * ,
                         void *(*)(void *),
                         void * );
int pthread_detach(pthread_t );
int pthread_equal(pthread_t ,
   pthread_t );
void pthread_exit(void *) __attribute__((__noreturn__));
int pthread_getconcurrency(void);
int pthread_getschedparam(pthread_t , int * , struct sched_param * );
void *pthread_getspecific(pthread_key_t );
int pthread_join(pthread_t , void **) __asm("_" "pthread_join" );
int pthread_key_create(pthread_key_t *, void (*)(void *));
int pthread_key_delete(pthread_key_t );
int pthread_mutex_destroy(pthread_mutex_t *);
int pthread_mutex_getprioceiling(const pthread_mutex_t * , int * );
int pthread_mutex_init(pthread_mutex_t * , const pthread_mutexattr_t * );
int pthread_mutex_lock(pthread_mutex_t *);
int pthread_mutex_setprioceiling(pthread_mutex_t * , int, int * );
int pthread_mutex_trylock(pthread_mutex_t *);
int pthread_mutex_unlock(pthread_mutex_t *);
int pthread_mutexattr_destroy(pthread_mutexattr_t *) __asm("_" "pthread_mutexattr_destroy" );
int pthread_mutexattr_getprioceiling(const pthread_mutexattr_t * , int * );
int pthread_mutexattr_getprotocol(const pthread_mutexattr_t * , int * );
int pthread_mutexattr_getpshared(const pthread_mutexattr_t * , int * );
int pthread_mutexattr_gettype(const pthread_mutexattr_t * , int * );
int pthread_mutexattr_init(pthread_mutexattr_t *);
int pthread_mutexattr_setprioceiling(pthread_mutexattr_t *, int);
int pthread_mutexattr_setprotocol(pthread_mutexattr_t *, int);
int pthread_mutexattr_setpshared(pthread_mutexattr_t *, int );
int pthread_mutexattr_settype(pthread_mutexattr_t *, int);
int pthread_once(pthread_once_t *, void (*)(void));
int pthread_rwlock_destroy(pthread_rwlock_t * ) __asm("_" "pthread_rwlock_destroy" );
int pthread_rwlock_init(pthread_rwlock_t * , const pthread_rwlockattr_t * ) __asm("_" "pthread_rwlock_init" );
int pthread_rwlock_rdlock(pthread_rwlock_t *) __asm("_" "pthread_rwlock_rdlock" );
int pthread_rwlock_tryrdlock(pthread_rwlock_t *) __asm("_" "pthread_rwlock_tryrdlock" );
int pthread_rwlock_trywrlock(pthread_rwlock_t *) __asm("_" "pthread_rwlock_trywrlock" );
int pthread_rwlock_wrlock(pthread_rwlock_t *) __asm("_" "pthread_rwlock_wrlock" );
int pthread_rwlock_unlock(pthread_rwlock_t *) __asm("_" "pthread_rwlock_unlock" );
int pthread_rwlockattr_destroy(pthread_rwlockattr_t *);
int pthread_rwlockattr_getpshared(const pthread_rwlockattr_t * ,
   int * );
int pthread_rwlockattr_init(pthread_rwlockattr_t *);
int pthread_rwlockattr_setpshared(pthread_rwlockattr_t *,
   int );
pthread_t pthread_self(void);

int pthread_setcancelstate(int , int *) __asm("_" "pthread_setcancelstate" );
int pthread_setcanceltype(int , int *) __asm("_" "pthread_setcanceltype" );
int pthread_setconcurrency(int);
int pthread_setschedparam(pthread_t ,
    int ,
                                const struct sched_param *);
int pthread_setspecific(pthread_key_t ,
         const void *);
void pthread_testcancel(void) __asm("_" "pthread_testcancel" );



int pthread_is_threaded_np(void);


int pthread_threadid_np(pthread_t,__uint64_t*);



int pthread_getname_np(pthread_t,char*,size_t);
int pthread_setname_np(const char*);

int pthread_main_np(void);


mach_port_t pthread_mach_thread_np(pthread_t);
size_t pthread_get_stacksize_np(pthread_t);
void * pthread_get_stackaddr_np(pthread_t);


int pthread_cond_signal_thread_np(pthread_cond_t *, pthread_t);


int pthread_cond_timedwait_relative_np(pthread_cond_t *,
     pthread_mutex_t *,
     const struct timespec *);


int pthread_create_suspended_np(pthread_t *,
                         const pthread_attr_t *,
                         void *(*)(void *),
                         void *);
int pthread_kill(pthread_t, int);

pthread_t pthread_from_mach_thread_np(mach_port_t);

int pthread_sigmask(int, const sigset_t *, sigset_t *) __asm("_" "pthread_sigmask" );
void pthread_yield_np(void);

}
# 44 "/usr/include/c++/4.2.1/i686-apple-darwin10/x86_64/bits/gthr-default.h" 2 3


typedef pthread_key_t __gthread_key_t;
typedef pthread_once_t __gthread_once_t;
typedef pthread_mutex_t __gthread_mutex_t;
typedef pthread_mutex_t __gthread_recursive_mutex_t;
# 92 "/usr/include/c++/4.2.1/i686-apple-darwin10/x86_64/bits/gthr-default.h" 3
















# 214 "/usr/include/c++/4.2.1/i686-apple-darwin10/x86_64/bits/gthr-default.h" 3
static inline int
__gthread_active_p (void)
{
  return 1;
}
# 571 "/usr/include/c++/4.2.1/i686-apple-darwin10/x86_64/bits/gthr-default.h" 3
static inline int
__gthread_once (__gthread_once_t *once, void (*func) (void))
{
  if (__gthread_active_p ())
    return pthread_once (once, func);
  else
    return -1;
}

static inline int
__gthread_key_create (__gthread_key_t *key, void (*dtor) (void *))
{
  return pthread_key_create (key, dtor);
}

static inline int
__gthread_key_delete (__gthread_key_t key)
{
  return pthread_key_delete (key);
}

static inline void *
__gthread_getspecific (__gthread_key_t key)
{
  return pthread_getspecific (key);
}

static inline int
__gthread_setspecific (__gthread_key_t key, const void *ptr)
{
  return pthread_setspecific (key, ptr);
}

static inline int
__gthread_mutex_lock (__gthread_mutex_t *mutex)
{
  if (__gthread_active_p ())
    return pthread_mutex_lock (mutex);
  else
    return 0;
}

static inline int
__gthread_mutex_trylock (__gthread_mutex_t *mutex)
{
  if (__gthread_active_p ())
    return pthread_mutex_trylock (mutex);
  else
    return 0;
}

static inline int
__gthread_mutex_unlock (__gthread_mutex_t *mutex)
{
  if (__gthread_active_p ())
    return pthread_mutex_unlock (mutex);
  else
    return 0;
}


static inline int
__gthread_recursive_mutex_init_function (__gthread_recursive_mutex_t *mutex)
{
  if (__gthread_active_p ())
    {
      pthread_mutexattr_t attr;
      int r;

      r = pthread_mutexattr_init (&attr);
      if (!r)
 r = pthread_mutexattr_settype (&attr, 2);
      if (!r)
 r = pthread_mutex_init (mutex, &attr);
      if (!r)
 r = pthread_mutexattr_destroy (&attr);
      return r;
    }
  return 0;
}


static inline int
__gthread_recursive_mutex_lock (__gthread_recursive_mutex_t *mutex)
{
  return __gthread_mutex_lock (mutex);
}

static inline int
__gthread_recursive_mutex_trylock (__gthread_recursive_mutex_t *mutex)
{
  return __gthread_mutex_trylock (mutex);
}

static inline int
__gthread_recursive_mutex_unlock (__gthread_recursive_mutex_t *mutex)
{
  return __gthread_mutex_unlock (mutex);
}
# 115 "/usr/include/c++/4.2.1/i686-apple-darwin10/x86_64/bits/gthr.h" 2 3







#pragma GCC visibility pop
# 44 "/usr/include/c++/4.2.1/i686-apple-darwin10/x86_64/bits/c++io.h" 2 3

namespace std {

  typedef __gthread_mutex_t __c_lock;


  typedef FILE __c_file;

}
# 47 "/usr/include/c++/4.2.1/iosfwd" 2 3
# 1 "/usr/include/c++/4.2.1/cctype" 1 3
# 48 "/usr/include/c++/4.2.1/cctype" 3
       
# 49 "/usr/include/c++/4.2.1/cctype" 3
# 68 "/usr/include/c++/4.2.1/cctype" 3
namespace std {

  using ::isalnum;
  using ::isalpha;
  using ::iscntrl;
  using ::isdigit;
  using ::isgraph;
  using ::islower;
  using ::isprint;
  using ::ispunct;
  using ::isspace;
  using ::isupper;
  using ::isxdigit;
  using ::tolower;
  using ::toupper;

}
# 48 "/usr/include/c++/4.2.1/iosfwd" 2 3
# 1 "/usr/include/c++/4.2.1/bits/stringfwd.h" 1 3
# 42 "/usr/include/c++/4.2.1/bits/stringfwd.h" 3
       
# 43 "/usr/include/c++/4.2.1/bits/stringfwd.h" 3



namespace std {

  template<typename _Alloc>
    class allocator;

  template<class _CharT>
    struct char_traits;

  template<typename _CharT, typename _Traits = char_traits<_CharT>,
           typename _Alloc = allocator<_CharT> >
    class basic_string;

  template<> struct char_traits<char>;

  typedef basic_string<char> string;


  template<> struct char_traits<wchar_t>;

  typedef basic_string<wchar_t> wstring;


}
# 49 "/usr/include/c++/4.2.1/iosfwd" 2 3
# 1 "/usr/include/c++/4.2.1/bits/postypes.h" 1 3
# 44 "/usr/include/c++/4.2.1/bits/postypes.h" 3
       
# 45 "/usr/include/c++/4.2.1/bits/postypes.h" 3

# 1 "/usr/include/c++/4.2.1/cwchar" 1 3
# 48 "/usr/include/c++/4.2.1/cwchar" 3
       
# 49 "/usr/include/c++/4.2.1/cwchar" 3



# 1 "/usr/include/c++/4.2.1/ctime" 1 3
# 48 "/usr/include/c++/4.2.1/ctime" 3
       
# 49 "/usr/include/c++/4.2.1/ctime" 3
# 64 "/usr/include/c++/4.2.1/ctime" 3
namespace std {

  using ::clock_t;
  using ::time_t;
  using ::tm;

  using ::clock;
  using ::difftime;
  using ::mktime;
  using ::time;
  using ::asctime;
  using ::ctime;
  using ::gmtime;
  using ::localtime;
  using ::strftime;

}
# 53 "/usr/include/c++/4.2.1/cwchar" 2 3


# 1 "/usr/include/wchar.h" 1 3 4
# 83 "/usr/include/wchar.h" 3 4
typedef __darwin_mbstate_t mbstate_t;
# 114 "/usr/include/wchar.h" 3 4
# 1 "/usr/include/_wctype.h" 1 3 4
# 52 "/usr/include/_wctype.h" 3 4
typedef __darwin_wctype_t wctype_t;
# 71 "/usr/include/_wctype.h" 3 4
static inline int
iswalnum(wint_t _wc)
{
 return (__istype(_wc, 0x00000100L|0x00000400L));
}

static inline int
iswalpha(wint_t _wc)
{
 return (__istype(_wc, 0x00000100L));
}

static inline int
iswcntrl(wint_t _wc)
{
 return (__istype(_wc, 0x00000200L));
}

static inline int
iswctype(wint_t _wc, wctype_t _charclass)
{
 return (__istype(_wc, _charclass));
}

static inline int
iswdigit(wint_t _wc)
{
 return (__isctype(_wc, 0x00000400L));
}

static inline int
iswgraph(wint_t _wc)
{
 return (__istype(_wc, 0x00000800L));
}

static inline int
iswlower(wint_t _wc)
{
 return (__istype(_wc, 0x00001000L));
}

static inline int
iswprint(wint_t _wc)
{
 return (__istype(_wc, 0x00040000L));
}

static inline int
iswpunct(wint_t _wc)
{
 return (__istype(_wc, 0x00002000L));
}

static inline int
iswspace(wint_t _wc)
{
 return (__istype(_wc, 0x00004000L));
}

static inline int
iswupper(wint_t _wc)
{
 return (__istype(_wc, 0x00008000L));
}

static inline int
iswxdigit(wint_t _wc)
{
 return (__isctype(_wc, 0x00010000L));
}

static inline wint_t
towlower(wint_t _wc)
{
        return (__tolower(_wc));
}

static inline wint_t
towupper(wint_t _wc)
{
        return (__toupper(_wc));
}
# 176 "/usr/include/_wctype.h" 3 4
extern "C" {
wctype_t
 wctype(const char *);
}
# 115 "/usr/include/wchar.h" 2 3 4

extern "C" {
wint_t btowc(int);
wint_t fgetwc(FILE *);
wchar_t *fgetws(wchar_t * , int, FILE * );
wint_t fputwc(wchar_t, FILE *);
int fputws(const wchar_t * , FILE * );
int fwide(FILE *, int);
int fwprintf(FILE * , const wchar_t * , ...) ;
int fwscanf(FILE * , const wchar_t * , ...) ;
wint_t getwc(FILE *);
wint_t getwchar(void);
size_t mbrlen(const char * , size_t, mbstate_t * );
size_t mbrtowc(wchar_t * , const char * , size_t,
     mbstate_t * );
int mbsinit(const mbstate_t *);
size_t mbsrtowcs(wchar_t * , const char ** , size_t,
     mbstate_t * );
wint_t putwc(wchar_t, FILE *);
wint_t putwchar(wchar_t);
int swprintf(wchar_t * , size_t, const wchar_t * ,
     ...) ;
int swscanf(const wchar_t * , const wchar_t * , ...) ;
wint_t ungetwc(wint_t, FILE *);
int vfwprintf(FILE * , const wchar_t * ,
     __darwin_va_list) ;
int vswprintf(wchar_t * , size_t, const wchar_t * ,
     __darwin_va_list) ;
int vwprintf(const wchar_t * , __darwin_va_list) ;
size_t wcrtomb(char * , wchar_t, mbstate_t * );
wchar_t *wcscat(wchar_t * , const wchar_t * );
wchar_t *wcschr(const wchar_t *, wchar_t);
int wcscmp(const wchar_t *, const wchar_t *);
int wcscoll(const wchar_t *, const wchar_t *);
wchar_t *wcscpy(wchar_t * , const wchar_t * );
size_t wcscspn(const wchar_t *, const wchar_t *);
size_t wcsftime(wchar_t * , size_t, const wchar_t * ,
     const struct tm * ) __asm("_" "wcsftime" );
size_t wcslen(const wchar_t *);
wchar_t *wcsncat(wchar_t * , const wchar_t * , size_t);
int wcsncmp(const wchar_t *, const wchar_t *, size_t);
wchar_t *wcsncpy(wchar_t * , const wchar_t * , size_t);
wchar_t *wcspbrk(const wchar_t *, const wchar_t *);
wchar_t *wcsrchr(const wchar_t *, wchar_t);
size_t wcsrtombs(char * , const wchar_t ** , size_t,
     mbstate_t * );
size_t wcsspn(const wchar_t *, const wchar_t *);
wchar_t *wcsstr(const wchar_t * , const wchar_t * );
size_t wcsxfrm(wchar_t * , const wchar_t * , size_t);
int wctob(wint_t);
double wcstod(const wchar_t * , wchar_t ** );
wchar_t *wcstok(wchar_t * , const wchar_t * ,
     wchar_t ** );
long wcstol(const wchar_t * , wchar_t ** , int);
unsigned long
  wcstoul(const wchar_t * , wchar_t ** , int);
wchar_t *wmemchr(const wchar_t *, wchar_t, size_t);
int wmemcmp(const wchar_t *, const wchar_t *, size_t);
wchar_t *wmemcpy(wchar_t * , const wchar_t * , size_t);
wchar_t *wmemmove(wchar_t *, const wchar_t *, size_t);
wchar_t *wmemset(wchar_t *, wchar_t, size_t);
int wprintf(const wchar_t * , ...) ;
int wscanf(const wchar_t * , ...) ;


int vfwscanf(FILE * , const wchar_t * ,
     __darwin_va_list) ;
int vswscanf(const wchar_t * , const wchar_t * ,
     __darwin_va_list) ;
int vwscanf(const wchar_t * , __darwin_va_list) ;
float wcstof(const wchar_t * , wchar_t ** );
long double
 wcstold(const wchar_t * , wchar_t ** ) ;

long long
 wcstoll(const wchar_t * , wchar_t ** , int);
unsigned long long
 wcstoull(const wchar_t * , wchar_t ** , int);

int wcswidth(const wchar_t *, size_t);
int wcwidth(wchar_t);



size_t mbsnrtowcs(wchar_t * , const char ** , size_t,
     size_t, mbstate_t * );
size_t wcslcat(wchar_t *, const wchar_t *, size_t);
size_t wcslcpy(wchar_t *, const wchar_t *, size_t);
size_t wcsnrtombs(char * , const wchar_t ** , size_t,
     size_t, mbstate_t * );






}
# 56 "/usr/include/c++/4.2.1/cwchar" 2 3
# 70 "/usr/include/c++/4.2.1/cwchar" 3
namespace std {

  using ::mbstate_t;

}
# 144 "/usr/include/c++/4.2.1/cwchar" 3
namespace std {

  using ::wint_t;

  using ::btowc;
  using ::fgetwc;
  using ::fgetws;
  using ::fputwc;
  using ::fputws;
  using ::fwide;
  using ::fwprintf;
  using ::fwscanf;
  using ::getwc;
  using ::getwchar;
  using ::mbrlen;
  using ::mbrtowc;
  using ::mbsinit;
  using ::mbsrtowcs;
  using ::putwc;
  using ::putwchar;
  using ::swprintf;
  using ::swscanf;
  using ::ungetwc;
  using ::vfwprintf;

  using ::vfwscanf;

  using ::vswprintf;

  using ::vswscanf;

  using ::vwprintf;

  using ::vwscanf;

  using ::wcrtomb;
  using ::wcscat;
  using ::wcscmp;
  using ::wcscoll;
  using ::wcscpy;
  using ::wcscspn;
  using ::wcsftime;
  using ::wcslen;
  using ::wcsncat;
  using ::wcsncmp;
  using ::wcsncpy;
  using ::wcsrtombs;
  using ::wcsspn;
  using ::wcstod;

  using ::wcstof;

  using ::wcstok;
  using ::wcstol;
  using ::wcstoul;
  using ::wcsxfrm;
  using ::wctob;
  using ::wmemcmp;
  using ::wmemcpy;
  using ::wmemmove;
  using ::wmemset;
  using ::wprintf;
  using ::wscanf;

  using ::wcschr;

  inline wchar_t*
  wcschr(wchar_t* __p, wchar_t __c)
  { return wcschr(const_cast<const wchar_t*>(__p), __c); }

  using ::wcspbrk;

  inline wchar_t*
  wcspbrk(wchar_t* __s1, const wchar_t* __s2)
  { return wcspbrk(const_cast<const wchar_t*>(__s1), __s2); }

  using ::wcsrchr;

  inline wchar_t*
  wcsrchr(wchar_t* __p, wchar_t __c)
  { return wcsrchr(const_cast<const wchar_t*>(__p), __c); }

  using ::wcsstr;

  inline wchar_t*
  wcsstr(wchar_t* __s1, const wchar_t* __s2)
  { return wcsstr(const_cast<const wchar_t*>(__s1), __s2); }

  using ::wmemchr;

  inline wchar_t*
  wmemchr(wchar_t* __p, wchar_t __c, size_t __n)
  { return wmemchr(const_cast<const wchar_t*>(__p), __c, __n); }

}







namespace __gnu_cxx {






  using ::wcstold;
# 262 "/usr/include/c++/4.2.1/cwchar" 3
  using ::wcstoll;
  using ::wcstoull;


}

namespace std {

  using ::__gnu_cxx::wcstold;
  using ::__gnu_cxx::wcstoll;
  using ::__gnu_cxx::wcstoull;

}
# 47 "/usr/include/c++/4.2.1/bits/postypes.h" 2 3





namespace std {
# 72 "/usr/include/c++/4.2.1/bits/postypes.h" 3
  typedef int64_t streamoff;





  typedef ptrdiff_t streamsize;

  template<typename _StateT>
    class fpos;
# 94 "/usr/include/c++/4.2.1/bits/postypes.h" 3
  template<typename _StateT>
    class fpos
    {
    private:
      streamoff _M_off;
      _StateT _M_state;

    public:




      fpos()
      : _M_off(0), _M_state() { }
# 116 "/usr/include/c++/4.2.1/bits/postypes.h" 3
      fpos(streamoff __off)
      : _M_off(__off), _M_state() { }


      operator streamoff() const { return _M_off; }


      void
      state(_StateT __st)
      { _M_state = __st; }


      _StateT
      state() const
      { return _M_state; }





      fpos&
      operator+=(streamoff __off)
      {
 _M_off += __off;
 return *this;
      }





      fpos&
      operator-=(streamoff __off)
      {
 _M_off -= __off;
 return *this;
      }







      fpos
      operator+(streamoff __off) const
      {
 fpos __pos(*this);
 __pos += __off;
 return __pos;
      }







      fpos
      operator-(streamoff __off) const
      {
 fpos __pos(*this);
 __pos -= __off;
 return __pos;
      }






      streamoff
      operator-(const fpos& __other) const
      { return _M_off - __other._M_off; }
    };






  template<typename _StateT>
    inline bool
    operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
    { return streamoff(__lhs) == streamoff(__rhs); }

  template<typename _StateT>
    inline bool
    operator!=(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
    { return streamoff(__lhs) != streamoff(__rhs); }





  typedef fpos<mbstate_t> streampos;

  typedef fpos<mbstate_t> wstreampos;

}
# 50 "/usr/include/c++/4.2.1/iosfwd" 2 3
# 1 "/usr/include/c++/4.2.1/bits/functexcept.h" 1 3
# 42 "/usr/include/c++/4.2.1/bits/functexcept.h" 3
# 1 "/usr/include/c++/4.2.1/exception_defines.h" 1 3
# 43 "/usr/include/c++/4.2.1/bits/functexcept.h" 2 3

namespace std {


  void
  __throw_bad_exception(void) __attribute__((__noreturn__));


  void
  __throw_bad_alloc(void) __attribute__((__noreturn__));


  void
  __throw_bad_cast(void) __attribute__((__noreturn__));

  void
  __throw_bad_typeid(void) __attribute__((__noreturn__));


  void
  __throw_logic_error(const char*) __attribute__((__noreturn__));

  void
  __throw_domain_error(const char*) __attribute__((__noreturn__));

  void
  __throw_invalid_argument(const char*) __attribute__((__noreturn__));

  void
  __throw_length_error(const char*) __attribute__((__noreturn__));

  void
  __throw_out_of_range(const char*) __attribute__((__noreturn__));

  void
  __throw_runtime_error(const char*) __attribute__((__noreturn__));

  void
  __throw_range_error(const char*) __attribute__((__noreturn__));

  void
  __throw_overflow_error(const char*) __attribute__((__noreturn__));

  void
  __throw_underflow_error(const char*) __attribute__((__noreturn__));


  void
  __throw_ios_failure(const char*) __attribute__((__noreturn__));

}
# 51 "/usr/include/c++/4.2.1/iosfwd" 2 3

namespace std {

  template<typename _CharT, typename _Traits = char_traits<_CharT> >
    class basic_ios;

  template<typename _CharT, typename _Traits = char_traits<_CharT> >
    class basic_streambuf;

  template<typename _CharT, typename _Traits = char_traits<_CharT> >
    class basic_istream;

  template<typename _CharT, typename _Traits = char_traits<_CharT> >
    class basic_ostream;

  template<typename _CharT, typename _Traits = char_traits<_CharT> >
    class basic_iostream;

  template<typename _CharT, typename _Traits = char_traits<_CharT>,
     typename _Alloc = allocator<_CharT> >
    class basic_stringbuf;

  template<typename _CharT, typename _Traits = char_traits<_CharT>,
    typename _Alloc = allocator<_CharT> >
    class basic_istringstream;

  template<typename _CharT, typename _Traits = char_traits<_CharT>,
    typename _Alloc = allocator<_CharT> >
    class basic_ostringstream;

  template<typename _CharT, typename _Traits = char_traits<_CharT>,
    typename _Alloc = allocator<_CharT> >
    class basic_stringstream;

  template<typename _CharT, typename _Traits = char_traits<_CharT> >
    class basic_filebuf;

  template<typename _CharT, typename _Traits = char_traits<_CharT> >
    class basic_ifstream;

  template<typename _CharT, typename _Traits = char_traits<_CharT> >
    class basic_ofstream;

  template<typename _CharT, typename _Traits = char_traits<_CharT> >
    class basic_fstream;

  template<typename _CharT, typename _Traits = char_traits<_CharT> >
    class istreambuf_iterator;

  template<typename _CharT, typename _Traits = char_traits<_CharT> >
    class ostreambuf_iterator;



  class ios_base;
# 135 "/usr/include/c++/4.2.1/iosfwd" 3
  typedef basic_ios<char> ios;
  typedef basic_streambuf<char> streambuf;
  typedef basic_istream<char> istream;
  typedef basic_ostream<char> ostream;
  typedef basic_iostream<char> iostream;
  typedef basic_stringbuf<char> stringbuf;
  typedef basic_istringstream<char> istringstream;
  typedef basic_ostringstream<char> ostringstream;
  typedef basic_stringstream<char> stringstream;
  typedef basic_filebuf<char> filebuf;
  typedef basic_ifstream<char> ifstream;
  typedef basic_ofstream<char> ofstream;
  typedef basic_fstream<char> fstream;


  typedef basic_ios<wchar_t> wios;
  typedef basic_streambuf<wchar_t> wstreambuf;
  typedef basic_istream<wchar_t> wistream;
  typedef basic_ostream<wchar_t> wostream;
  typedef basic_iostream<wchar_t> wiostream;
  typedef basic_stringbuf<wchar_t> wstringbuf;
  typedef basic_istringstream<wchar_t> wistringstream;
  typedef basic_ostringstream<wchar_t> wostringstream;
  typedef basic_stringstream<wchar_t> wstringstream;
  typedef basic_filebuf<wchar_t> wfilebuf;
  typedef basic_ifstream<wchar_t> wifstream;
  typedef basic_ofstream<wchar_t> wofstream;
  typedef basic_fstream<wchar_t> wfstream;



}
# 48 "/Applications/Autodesk/maya2011/devkit/include/maya/MIOStreamFwd.h" 2

 using std::streampos;

 using std::iostream;
 using std::ostream;
 using std::istream;
 using std::ios;
# 49 "/Applications/Autodesk/maya2011/devkit/include/maya/MIOStream.h" 2


# 1 "/usr/include/c++/4.2.1/iostream" 1 3
# 42 "/usr/include/c++/4.2.1/iostream" 3
       
# 43 "/usr/include/c++/4.2.1/iostream" 3


# 1 "/usr/include/c++/4.2.1/ostream" 1 3
# 43 "/usr/include/c++/4.2.1/ostream" 3
       
# 44 "/usr/include/c++/4.2.1/ostream" 3

# 1 "/usr/include/c++/4.2.1/ios" 1 3
# 41 "/usr/include/c++/4.2.1/ios" 3
       
# 42 "/usr/include/c++/4.2.1/ios" 3


# 1 "/usr/include/c++/4.2.1/exception" 1 3
# 40 "/usr/include/c++/4.2.1/exception" 3
#pragma GCC visibility push(default)



extern "C++" {

namespace std
{
# 56 "/usr/include/c++/4.2.1/exception" 3
  class exception
  {
  public:
    exception() throw() { }
    virtual ~exception() throw();



    virtual const char* what() const throw();
  };



  class bad_exception : public exception
  {
  public:
    bad_exception() throw() { }



    virtual ~bad_exception() throw();


    virtual const char* what() const throw();
  };


  typedef void (*terminate_handler) ();


  typedef void (*unexpected_handler) ();


  terminate_handler set_terminate(terminate_handler) throw();



  void terminate() __attribute__ ((__noreturn__));


  unexpected_handler set_unexpected(unexpected_handler) throw();



  void unexpected() __attribute__ ((__noreturn__));
# 112 "/usr/include/c++/4.2.1/exception" 3
  bool uncaught_exception() throw();
}

namespace __gnu_cxx {
# 127 "/usr/include/c++/4.2.1/exception" 3
  void __verbose_terminate_handler ();

}

}

#pragma GCC visibility pop
# 45 "/usr/include/c++/4.2.1/ios" 2 3
# 1 "/usr/include/c++/4.2.1/bits/char_traits.h" 1 3
# 43 "/usr/include/c++/4.2.1/bits/char_traits.h" 3
       
# 44 "/usr/include/c++/4.2.1/bits/char_traits.h" 3


# 1 "/usr/include/c++/4.2.1/bits/stl_algobase.h" 1 3
# 67 "/usr/include/c++/4.2.1/bits/stl_algobase.h" 3
# 1 "/usr/include/c++/4.2.1/climits" 1 3
# 48 "/usr/include/c++/4.2.1/climits" 3
       
# 49 "/usr/include/c++/4.2.1/climits" 3

# 1 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/limits.h" 1 3 4






# 1 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/syslimits.h" 1 3 4
# 8 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/limits.h" 2 3 4


# 1 "/usr/lib/gcc/i686-apple-darwin10/4.2.1/include/limits.h" 1 3 4






# 1 "/usr/lib/gcc/i686-apple-darwin10/4.2.1/include/syslimits.h" 1 3 4
# 8 "/usr/lib/gcc/i686-apple-darwin10/4.2.1/include/limits.h" 2 3 4
# 11 "/Developer/usr/bin/../lib/gcc/i686-apple-darwin10/4.2.1/include/limits.h" 2 3 4
# 51 "/usr/include/c++/4.2.1/climits" 2 3
# 68 "/usr/include/c++/4.2.1/bits/stl_algobase.h" 2 3
# 1 "/usr/include/c++/4.2.1/cstdlib" 1 3
# 48 "/usr/include/c++/4.2.1/cstdlib" 3
       
# 49 "/usr/include/c++/4.2.1/cstdlib" 3
# 104 "/usr/include/c++/4.2.1/cstdlib" 3
namespace std {

  using ::div_t;
  using ::ldiv_t;

  using ::abort;
  using ::abs;
  using ::atexit;
  using ::atof;
  using ::atoi;
  using ::atol;
  using ::bsearch;
  using ::calloc;
  using ::div;
  using ::exit;
  using ::free;
  using ::getenv;
  using ::labs;
  using ::ldiv;
  using ::malloc;

  using ::mblen;
  using ::mbstowcs;
  using ::mbtowc;

  using ::qsort;
  using ::rand;
  using ::realloc;
  using ::srand;
  using ::strtod;
  using ::strtol;
  using ::strtoul;
  using ::system;

  using ::wcstombs;
  using ::wctomb;


  inline long
  abs(long __i) { return labs(__i); }

  inline ldiv_t
  div(long __i, long __j) { return ldiv(__i, __j); }

}
# 161 "/usr/include/c++/4.2.1/cstdlib" 3
namespace __gnu_cxx {


  using ::lldiv_t;





  using ::_Exit;


  inline long long
  abs(long long __x) { return __x >= 0 ? __x : -__x; }


  using ::llabs;

  inline lldiv_t
  div(long long __n, long long __d)
  { lldiv_t __q; __q.quot = __n / __d; __q.rem = __n % __d; return __q; }

  using ::lldiv;
# 194 "/usr/include/c++/4.2.1/cstdlib" 3
  using ::atoll;
  using ::strtoll;
  using ::strtoull;

  using ::strtof;
  using ::strtold;

}

namespace std {


  using ::__gnu_cxx::lldiv_t;

  using ::__gnu_cxx::_Exit;
  using ::__gnu_cxx::abs;

  using ::__gnu_cxx::llabs;
  using ::__gnu_cxx::div;
  using ::__gnu_cxx::lldiv;

  using ::__gnu_cxx::atoll;
  using ::__gnu_cxx::strtof;
  using ::__gnu_cxx::strtoll;
  using ::__gnu_cxx::strtoull;
  using ::__gnu_cxx::strtold;

}
# 69 "/usr/include/c++/4.2.1/bits/stl_algobase.h" 2 3


# 1 "/usr/include/c++/4.2.1/bits/stl_pair.h" 1 3
# 64 "/usr/include/c++/4.2.1/bits/stl_pair.h" 3
namespace std {


  template<class _T1, class _T2>
    struct pair
    {
      typedef _T1 first_type;
      typedef _T2 second_type;

      _T1 first;
      _T2 second;





      pair()
      : first(), second() { }


      pair(const _T1& __a, const _T2& __b)
      : first(__a), second(__b) { }


      template<class _U1, class _U2>
        pair(const pair<_U1, _U2>& __p)
 : first(__p.first), second(__p.second) { }
    };


  template<class _T1, class _T2>
    inline bool
    operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
    { return __x.first == __y.first && __x.second == __y.second; }


  template<class _T1, class _T2>
    inline bool
    operator<(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
    { return __x.first < __y.first
      || (!(__y.first < __x.first) && __x.second < __y.second); }


  template<class _T1, class _T2>
    inline bool
    operator!=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
    { return !(__x == __y); }


  template<class _T1, class _T2>
    inline bool
    operator>(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
    { return __y < __x; }


  template<class _T1, class _T2>
    inline bool
    operator<=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
    { return !(__y < __x); }


  template<class _T1, class _T2>
    inline bool
    operator>=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
    { return !(__x < __y); }
# 142 "/usr/include/c++/4.2.1/bits/stl_pair.h" 3
  template<class _T1, class _T2>
    inline pair<_T1, _T2>
    make_pair(_T1 __x, _T2 __y)
    { return pair<_T1, _T2>(__x, __y); }

}
# 72 "/usr/include/c++/4.2.1/bits/stl_algobase.h" 2 3
# 1 "/usr/include/c++/4.2.1/bits/cpp_type_traits.h" 1 3
# 41 "/usr/include/c++/4.2.1/bits/cpp_type_traits.h" 3
       
# 42 "/usr/include/c++/4.2.1/bits/cpp_type_traits.h" 3
# 74 "/usr/include/c++/4.2.1/bits/cpp_type_traits.h" 3
namespace __gnu_cxx {

  template<typename _Iterator, typename _Container>
    class __normal_iterator;

}

namespace std {

namespace __detail
{


  typedef char __one;
  typedef char __two[2];

  template<typename _Tp>
  __one __test_type(int _Tp::*);
  template<typename _Tp>
  __two& __test_type(...);
}


  struct __true_type { };
  struct __false_type { };

  template<bool>
    struct __truth_type
    { typedef __false_type __type; };

  template<>
    struct __truth_type<true>
    { typedef __true_type __type; };



  template<class _Sp, class _Tp>
    struct __traitor
    {
      enum { __value = bool(_Sp::__value) || bool(_Tp::__value) };
      typedef typename __truth_type<__value>::__type __type;
    };


  template<typename, typename>
    struct __are_same
    {
      enum { __value = 0 };
      typedef __false_type __type;
    };

  template<typename _Tp>
    struct __are_same<_Tp, _Tp>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };


  template<typename _Tp>
    struct __is_void
    {
      enum { __value = 0 };
      typedef __false_type __type;
    };

  template<>
    struct __is_void<void>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };




  template<typename _Tp>
    struct __is_integer
    {
      enum { __value = 0 };
      typedef __false_type __type;
    };




  template<>
    struct __is_integer<bool>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<char>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<signed char>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<unsigned char>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };


  template<>
    struct __is_integer<wchar_t>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };


  template<>
    struct __is_integer<short>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<unsigned short>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<int>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<unsigned int>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<long>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<unsigned long>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<long long>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<unsigned long long>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };




  template<typename _Tp>
    struct __is_floating
    {
      enum { __value = 0 };
      typedef __false_type __type;
    };


  template<>
    struct __is_floating<float>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_floating<double>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_floating<long double>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };




  template<typename _Tp>
    struct __is_pointer
    {
      enum { __value = 0 };
      typedef __false_type __type;
    };

  template<typename _Tp>
    struct __is_pointer<_Tp*>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };




  template<typename _Tp>
    struct __is_normal_iterator
    {
      enum { __value = 0 };
      typedef __false_type __type;
    };

  template<typename _Iterator, typename _Container>
    struct __is_normal_iterator< __gnu_cxx::__normal_iterator<_Iterator,
             _Container> >
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };




  template<typename _Tp>
    struct __is_arithmetic
    : public __traitor<__is_integer<_Tp>, __is_floating<_Tp> >
    { };




  template<typename _Tp>
    struct __is_fundamental
    : public __traitor<__is_void<_Tp>, __is_arithmetic<_Tp> >
    { };




  template<typename _Tp>
    struct __is_scalar
    : public __traitor<__is_arithmetic<_Tp>, __is_pointer<_Tp> >
    { };


  template<typename _Tp>
    struct __is_pod
    {
      enum
 {
   __value = (sizeof(__detail::__test_type<_Tp>(0))
       != sizeof(__detail::__one))
 };
    };




  template<typename _Tp>
    struct __is_empty
    {
    private:
      template<typename>
        struct __first { };
      template<typename _Up>
        struct __second
        : public _Up { };

    public:
      enum
 {
   __value = sizeof(__first<_Tp>) == sizeof(__second<_Tp>)
 };
    };




  template<typename _Tp>
    struct __is_char
    {
      enum { __value = 0 };
      typedef __false_type __type;
    };

  template<>
    struct __is_char<char>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };


  template<>
    struct __is_char<wchar_t>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };


}
# 73 "/usr/include/c++/4.2.1/bits/stl_algobase.h" 2 3
# 1 "/usr/include/c++/4.2.1/ext/type_traits.h" 1 3
# 38 "/usr/include/c++/4.2.1/ext/type_traits.h" 3
       
# 39 "/usr/include/c++/4.2.1/ext/type_traits.h" 3


# 1 "/usr/include/c++/4.2.1/utility" 1 3
# 63 "/usr/include/c++/4.2.1/utility" 3
       
# 64 "/usr/include/c++/4.2.1/utility" 3


# 1 "/usr/include/c++/4.2.1/bits/stl_relops.h" 1 3
# 74 "/usr/include/c++/4.2.1/bits/stl_relops.h" 3
namespace std {

  namespace rel_ops
  {
# 90 "/usr/include/c++/4.2.1/bits/stl_relops.h" 3
    template <class _Tp>
      inline bool
      operator!=(const _Tp& __x, const _Tp& __y)
      { return !(__x == __y); }
# 103 "/usr/include/c++/4.2.1/bits/stl_relops.h" 3
    template <class _Tp>
      inline bool
      operator>(const _Tp& __x, const _Tp& __y)
      { return __y < __x; }
# 116 "/usr/include/c++/4.2.1/bits/stl_relops.h" 3
    template <class _Tp>
      inline bool
      operator<=(const _Tp& __x, const _Tp& __y)
      { return !(__y < __x); }
# 129 "/usr/include/c++/4.2.1/bits/stl_relops.h" 3
    template <class _Tp>
      inline bool
      operator>=(const _Tp& __x, const _Tp& __y)
      { return !(__x < __y); }

  }

}
# 67 "/usr/include/c++/4.2.1/utility" 2 3
# 42 "/usr/include/c++/4.2.1/ext/type_traits.h" 2 3


namespace __gnu_cxx {


  template<bool, typename>
    struct __enable_if
    { };

  template<typename _Tp>
    struct __enable_if<true, _Tp>
    { typedef _Tp __type; };



  template<bool _Cond, typename _Iftrue, typename _Iffalse>
    struct __conditional_type
    { typedef _Iftrue __type; };

  template<typename _Iftrue, typename _Iffalse>
    struct __conditional_type<false, _Iftrue, _Iffalse>
    { typedef _Iffalse __type; };



  template<typename _Tp>
    struct __add_unsigned
    {
    private:
      typedef __enable_if<std::__is_integer<_Tp>::__value, _Tp> __if_type;

    public:
      typedef typename __if_type::__type __type;
    };

  template<>
    struct __add_unsigned<char>
    { typedef unsigned char __type; };

  template<>
    struct __add_unsigned<signed char>
    { typedef unsigned char __type; };

  template<>
    struct __add_unsigned<short>
    { typedef unsigned short __type; };

  template<>
    struct __add_unsigned<int>
    { typedef unsigned int __type; };

  template<>
    struct __add_unsigned<long>
    { typedef unsigned long __type; };

  template<>
    struct __add_unsigned<long long>
    { typedef unsigned long long __type; };


  template<>
    struct __add_unsigned<bool>;

  template<>
    struct __add_unsigned<wchar_t>;



  template<typename _Tp>
    struct __remove_unsigned
    {
    private:
      typedef __enable_if<std::__is_integer<_Tp>::__value, _Tp> __if_type;

    public:
      typedef typename __if_type::__type __type;
    };

  template<>
    struct __remove_unsigned<char>
    { typedef signed char __type; };

  template<>
    struct __remove_unsigned<unsigned char>
    { typedef signed char __type; };

  template<>
    struct __remove_unsigned<unsigned short>
    { typedef short __type; };

  template<>
    struct __remove_unsigned<unsigned int>
    { typedef int __type; };

  template<>
    struct __remove_unsigned<unsigned long>
    { typedef long __type; };

  template<>
    struct __remove_unsigned<unsigned long long>
    { typedef long long __type; };


  template<>
    struct __remove_unsigned<bool>;

  template<>
    struct __remove_unsigned<wchar_t>;

}
# 74 "/usr/include/c++/4.2.1/bits/stl_algobase.h" 2 3
# 1 "/usr/include/c++/4.2.1/bits/stl_iterator_base_types.h" 1 3
# 67 "/usr/include/c++/4.2.1/bits/stl_iterator_base_types.h" 3
       
# 68 "/usr/include/c++/4.2.1/bits/stl_iterator_base_types.h" 3

namespace std {
# 80 "/usr/include/c++/4.2.1/bits/stl_iterator_base_types.h" 3
  struct input_iterator_tag {};

  struct output_iterator_tag {};

  struct forward_iterator_tag : public input_iterator_tag {};


  struct bidirectional_iterator_tag : public forward_iterator_tag {};


  struct random_access_iterator_tag : public bidirectional_iterator_tag {};
# 104 "/usr/include/c++/4.2.1/bits/stl_iterator_base_types.h" 3
  template<typename _Category, typename _Tp, typename _Distance = ptrdiff_t,
           typename _Pointer = _Tp*, typename _Reference = _Tp&>
    struct iterator
    {

      typedef _Category iterator_category;

      typedef _Tp value_type;

      typedef _Distance difference_type;

      typedef _Pointer pointer;

      typedef _Reference reference;
    };







  template<typename _Iterator>
    struct iterator_traits
    {
      typedef typename _Iterator::iterator_category iterator_category;
      typedef typename _Iterator::value_type value_type;
      typedef typename _Iterator::difference_type difference_type;
      typedef typename _Iterator::pointer pointer;
      typedef typename _Iterator::reference reference;
    };

  template<typename _Tp>
    struct iterator_traits<_Tp*>
    {
      typedef random_access_iterator_tag iterator_category;
      typedef _Tp value_type;
      typedef ptrdiff_t difference_type;
      typedef _Tp* pointer;
      typedef _Tp& reference;
    };

  template<typename _Tp>
    struct iterator_traits<const _Tp*>
    {
      typedef random_access_iterator_tag iterator_category;
      typedef _Tp value_type;
      typedef ptrdiff_t difference_type;
      typedef const _Tp* pointer;
      typedef const _Tp& reference;
    };







  template<typename _Iter>
    inline typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
    { return typename iterator_traits<_Iter>::iterator_category(); }

}
# 75 "/usr/include/c++/4.2.1/bits/stl_algobase.h" 2 3
# 1 "/usr/include/c++/4.2.1/bits/stl_iterator_base_funcs.h" 1 3
# 68 "/usr/include/c++/4.2.1/bits/stl_iterator_base_funcs.h" 3
       
# 69 "/usr/include/c++/4.2.1/bits/stl_iterator_base_funcs.h" 3
# 1 "/usr/include/c++/4.2.1/bits/concept_check.h" 1 3
# 38 "/usr/include/c++/4.2.1/bits/concept_check.h" 3
       
# 39 "/usr/include/c++/4.2.1/bits/concept_check.h" 3
# 70 "/usr/include/c++/4.2.1/bits/stl_iterator_base_funcs.h" 2 3

namespace std {

  template<typename _InputIterator>
    inline typename iterator_traits<_InputIterator>::difference_type
    __distance(_InputIterator __first, _InputIterator __last,
               input_iterator_tag)
    {

     

      typename iterator_traits<_InputIterator>::difference_type __n = 0;
      while (__first != __last)
 {
   ++__first;
   ++__n;
 }
      return __n;
    }

  template<typename _RandomAccessIterator>
    inline typename iterator_traits<_RandomAccessIterator>::difference_type
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
               random_access_iterator_tag)
    {

     

      return __last - __first;
    }
# 113 "/usr/include/c++/4.2.1/bits/stl_iterator_base_funcs.h" 3
  template<typename _InputIterator>
    inline typename iterator_traits<_InputIterator>::difference_type
    distance(_InputIterator __first, _InputIterator __last)
    {

      return std::__distance(__first, __last,
        std::__iterator_category(__first));
    }

  template<typename _InputIterator, typename _Distance>
    inline void
    __advance(_InputIterator& __i, _Distance __n, input_iterator_tag)
    {

     
      while (__n--)
 ++__i;
    }

  template<typename _BidirectionalIterator, typename _Distance>
    inline void
    __advance(_BidirectionalIterator& __i, _Distance __n,
       bidirectional_iterator_tag)
    {

     

      if (__n > 0)
        while (__n--)
   ++__i;
      else
        while (__n++)
   --__i;
    }

  template<typename _RandomAccessIterator, typename _Distance>
    inline void
    __advance(_RandomAccessIterator& __i, _Distance __n,
              random_access_iterator_tag)
    {

     

      __i += __n;
    }
# 171 "/usr/include/c++/4.2.1/bits/stl_iterator_base_funcs.h" 3
  template<typename _InputIterator, typename _Distance>
    inline void
    advance(_InputIterator& __i, _Distance __n)
    {

      typename iterator_traits<_InputIterator>::difference_type __d = __n;
      std::__advance(__i, __d, std::__iterator_category(__i));
    }

}
# 76 "/usr/include/c++/4.2.1/bits/stl_algobase.h" 2 3
# 1 "/usr/include/c++/4.2.1/bits/stl_iterator.h" 1 3
# 72 "/usr/include/c++/4.2.1/bits/stl_iterator.h" 3
namespace std {
# 93 "/usr/include/c++/4.2.1/bits/stl_iterator.h" 3
  template<typename _Iterator>
    class reverse_iterator
    : public iterator<typename iterator_traits<_Iterator>::iterator_category,
        typename iterator_traits<_Iterator>::value_type,
        typename iterator_traits<_Iterator>::difference_type,
        typename iterator_traits<_Iterator>::pointer,
                      typename iterator_traits<_Iterator>::reference>
    {
    protected:
      _Iterator current;

    public:
      typedef _Iterator iterator_type;
      typedef typename iterator_traits<_Iterator>::difference_type
              difference_type;
      typedef typename iterator_traits<_Iterator>::reference reference;
      typedef typename iterator_traits<_Iterator>::pointer pointer;

    public:






      reverse_iterator() : current() { }




      explicit
      reverse_iterator(iterator_type __x) : current(__x) { }




      reverse_iterator(const reverse_iterator& __x)
      : current(__x.current) { }





      template<typename _Iter>
        reverse_iterator(const reverse_iterator<_Iter>& __x)
 : current(__x.base()) { }




      iterator_type
      base() const
      { return current; }






      reference
      operator*() const
      {
 _Iterator __tmp = current;
 return *--__tmp;
      }






      pointer
      operator->() const
      { return &(operator*()); }






      reverse_iterator&
      operator++()
      {
 --current;
 return *this;
      }






      reverse_iterator
      operator++(int)
      {
 reverse_iterator __tmp = *this;
 --current;
 return __tmp;
      }






      reverse_iterator&
      operator--()
      {
 ++current;
 return *this;
      }






      reverse_iterator
      operator--(int)
      {
 reverse_iterator __tmp = *this;
 ++current;
 return __tmp;
      }






      reverse_iterator
      operator+(difference_type __n) const
      { return reverse_iterator(current - __n); }






      reverse_iterator&
      operator+=(difference_type __n)
      {
 current -= __n;
 return *this;
      }






      reverse_iterator
      operator-(difference_type __n) const
      { return reverse_iterator(current + __n); }






      reverse_iterator&
      operator-=(difference_type __n)
      {
 current += __n;
 return *this;
      }






      reference
      operator[](difference_type __n) const
      { return *(*this + __n); }
    };
# 280 "/usr/include/c++/4.2.1/bits/stl_iterator.h" 3
  template<typename _Iterator>
    inline bool
    operator==(const reverse_iterator<_Iterator>& __x,
        const reverse_iterator<_Iterator>& __y)
    { return __x.base() == __y.base(); }

  template<typename _Iterator>
    inline bool
    operator<(const reverse_iterator<_Iterator>& __x,
       const reverse_iterator<_Iterator>& __y)
    { return __y.base() < __x.base(); }

  template<typename _Iterator>
    inline bool
    operator!=(const reverse_iterator<_Iterator>& __x,
        const reverse_iterator<_Iterator>& __y)
    { return !(__x == __y); }

  template<typename _Iterator>
    inline bool
    operator>(const reverse_iterator<_Iterator>& __x,
       const reverse_iterator<_Iterator>& __y)
    { return __y < __x; }

  template<typename _Iterator>
    inline bool
    operator<=(const reverse_iterator<_Iterator>& __x,
        const reverse_iterator<_Iterator>& __y)
    { return !(__y < __x); }

  template<typename _Iterator>
    inline bool
    operator>=(const reverse_iterator<_Iterator>& __x,
        const reverse_iterator<_Iterator>& __y)
    { return !(__x < __y); }

  template<typename _Iterator>
    inline typename reverse_iterator<_Iterator>::difference_type
    operator-(const reverse_iterator<_Iterator>& __x,
       const reverse_iterator<_Iterator>& __y)
    { return __y.base() - __x.base(); }

  template<typename _Iterator>
    inline reverse_iterator<_Iterator>
    operator+(typename reverse_iterator<_Iterator>::difference_type __n,
       const reverse_iterator<_Iterator>& __x)
    { return reverse_iterator<_Iterator>(__x.base() - __n); }



  template<typename _IteratorL, typename _IteratorR>
    inline bool
    operator==(const reverse_iterator<_IteratorL>& __x,
        const reverse_iterator<_IteratorR>& __y)
    { return __x.base() == __y.base(); }

  template<typename _IteratorL, typename _IteratorR>
    inline bool
    operator<(const reverse_iterator<_IteratorL>& __x,
       const reverse_iterator<_IteratorR>& __y)
    { return __y.base() < __x.base(); }

  template<typename _IteratorL, typename _IteratorR>
    inline bool
    operator!=(const reverse_iterator<_IteratorL>& __x,
        const reverse_iterator<_IteratorR>& __y)
    { return !(__x == __y); }

  template<typename _IteratorL, typename _IteratorR>
    inline bool
    operator>(const reverse_iterator<_IteratorL>& __x,
       const reverse_iterator<_IteratorR>& __y)
    { return __y < __x; }

  template<typename _IteratorL, typename _IteratorR>
    inline bool
    operator<=(const reverse_iterator<_IteratorL>& __x,
        const reverse_iterator<_IteratorR>& __y)
    { return !(__y < __x); }

  template<typename _IteratorL, typename _IteratorR>
    inline bool
    operator>=(const reverse_iterator<_IteratorL>& __x,
        const reverse_iterator<_IteratorR>& __y)
    { return !(__x < __y); }

  template<typename _IteratorL, typename _IteratorR>
    inline typename reverse_iterator<_IteratorL>::difference_type
    operator-(const reverse_iterator<_IteratorL>& __x,
       const reverse_iterator<_IteratorR>& __y)
    { return __y.base() - __x.base(); }
# 384 "/usr/include/c++/4.2.1/bits/stl_iterator.h" 3
  template<typename _Container>
    class back_insert_iterator
    : public iterator<output_iterator_tag, void, void, void, void>
    {
    protected:
      _Container* container;

    public:

      typedef _Container container_type;


      explicit
      back_insert_iterator(_Container& __x) : container(&__x) { }
# 410 "/usr/include/c++/4.2.1/bits/stl_iterator.h" 3
      back_insert_iterator&
      operator=(typename _Container::const_reference __value)
      {
 container->push_back(__value);
 return *this;
      }


      back_insert_iterator&
      operator*()
      { return *this; }


      back_insert_iterator&
      operator++()
      { return *this; }


      back_insert_iterator
      operator++(int)
      { return *this; }
    };
# 444 "/usr/include/c++/4.2.1/bits/stl_iterator.h" 3
  template<typename _Container>
    inline back_insert_iterator<_Container>
    back_inserter(_Container& __x)
    { return back_insert_iterator<_Container>(__x); }
# 459 "/usr/include/c++/4.2.1/bits/stl_iterator.h" 3
  template<typename _Container>
    class front_insert_iterator
    : public iterator<output_iterator_tag, void, void, void, void>
    {
    protected:
      _Container* container;

    public:

      typedef _Container container_type;


      explicit front_insert_iterator(_Container& __x) : container(&__x) { }
# 484 "/usr/include/c++/4.2.1/bits/stl_iterator.h" 3
      front_insert_iterator&
      operator=(typename _Container::const_reference __value)
      {
 container->push_front(__value);
 return *this;
      }


      front_insert_iterator&
      operator*()
      { return *this; }


      front_insert_iterator&
      operator++()
      { return *this; }


      front_insert_iterator
      operator++(int)
      { return *this; }
    };
# 518 "/usr/include/c++/4.2.1/bits/stl_iterator.h" 3
  template<typename _Container>
    inline front_insert_iterator<_Container>
    front_inserter(_Container& __x)
    { return front_insert_iterator<_Container>(__x); }
# 537 "/usr/include/c++/4.2.1/bits/stl_iterator.h" 3
  template<typename _Container>
    class insert_iterator
    : public iterator<output_iterator_tag, void, void, void, void>
    {
    protected:
      _Container* container;
      typename _Container::iterator iter;

    public:

      typedef _Container container_type;





      insert_iterator(_Container& __x, typename _Container::iterator __i)
      : container(&__x), iter(__i) {}
# 579 "/usr/include/c++/4.2.1/bits/stl_iterator.h" 3
      insert_iterator&
      operator=(const typename _Container::const_reference __value)
      {
 iter = container->insert(iter, __value);
 ++iter;
 return *this;
      }


      insert_iterator&
      operator*()
      { return *this; }


      insert_iterator&
      operator++()
      { return *this; }


      insert_iterator&
      operator++(int)
      { return *this; }
    };
# 614 "/usr/include/c++/4.2.1/bits/stl_iterator.h" 3
  template<typename _Container, typename _Iterator>
    inline insert_iterator<_Container>
    inserter(_Container& __x, _Iterator __i)
    {
      return insert_iterator<_Container>(__x,
      typename _Container::iterator(__i));
    }

}

namespace __gnu_cxx {
# 633 "/usr/include/c++/4.2.1/bits/stl_iterator.h" 3
  using std::iterator_traits;
  using std::iterator;
  template<typename _Iterator, typename _Container>
    class __normal_iterator
    {
    protected:
      _Iterator _M_current;

    public:
      typedef typename iterator_traits<_Iterator>::iterator_category
                                                             iterator_category;
      typedef typename iterator_traits<_Iterator>::value_type value_type;
      typedef typename iterator_traits<_Iterator>::difference_type
                                                             difference_type;
      typedef typename iterator_traits<_Iterator>::reference reference;
      typedef typename iterator_traits<_Iterator>::pointer pointer;

      __normal_iterator() : _M_current(_Iterator()) { }

      explicit
      __normal_iterator(const _Iterator& __i) : _M_current(__i) { }


      template<typename _Iter>
        __normal_iterator(const __normal_iterator<_Iter,
     typename __enable_if<
              (std::__are_same<_Iter, typename _Container::pointer>::__value),
        _Container>::__type>& __i)
        : _M_current(__i.base()) { }


      reference
      operator*() const
      { return *_M_current; }

      pointer
      operator->() const
      { return _M_current; }

      __normal_iterator&
      operator++()
      {
 ++_M_current;
 return *this;
      }

      __normal_iterator
      operator++(int)
      { return __normal_iterator(_M_current++); }


      __normal_iterator&
      operator--()
      {
 --_M_current;
 return *this;
      }

      __normal_iterator
      operator--(int)
      { return __normal_iterator(_M_current--); }


      reference
      operator[](const difference_type& __n) const
      { return _M_current[__n]; }

      __normal_iterator&
      operator+=(const difference_type& __n)
      { _M_current += __n; return *this; }

      __normal_iterator
      operator+(const difference_type& __n) const
      { return __normal_iterator(_M_current + __n); }

      __normal_iterator&
      operator-=(const difference_type& __n)
      { _M_current -= __n; return *this; }

      __normal_iterator
      operator-(const difference_type& __n) const
      { return __normal_iterator(_M_current - __n); }

      const _Iterator&
      base() const
      { return _M_current; }
    };
# 730 "/usr/include/c++/4.2.1/bits/stl_iterator.h" 3
  template<typename _IteratorL, typename _IteratorR, typename _Container>
    inline bool
    operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
        const __normal_iterator<_IteratorR, _Container>& __rhs)
    { return __lhs.base() == __rhs.base(); }

  template<typename _Iterator, typename _Container>
    inline bool
    operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
        const __normal_iterator<_Iterator, _Container>& __rhs)
    { return __lhs.base() == __rhs.base(); }

  template<typename _IteratorL, typename _IteratorR, typename _Container>
    inline bool
    operator!=(const __normal_iterator<_IteratorL, _Container>& __lhs,
        const __normal_iterator<_IteratorR, _Container>& __rhs)
    { return __lhs.base() != __rhs.base(); }

  template<typename _Iterator, typename _Container>
    inline bool
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
        const __normal_iterator<_Iterator, _Container>& __rhs)
    { return __lhs.base() != __rhs.base(); }


  template<typename _IteratorL, typename _IteratorR, typename _Container>
    inline bool
    operator<(const __normal_iterator<_IteratorL, _Container>& __lhs,
       const __normal_iterator<_IteratorR, _Container>& __rhs)
    { return __lhs.base() < __rhs.base(); }

  template<typename _Iterator, typename _Container>
    inline bool
    operator<(const __normal_iterator<_Iterator, _Container>& __lhs,
       const __normal_iterator<_Iterator, _Container>& __rhs)
    { return __lhs.base() < __rhs.base(); }

  template<typename _IteratorL, typename _IteratorR, typename _Container>
    inline bool
    operator>(const __normal_iterator<_IteratorL, _Container>& __lhs,
       const __normal_iterator<_IteratorR, _Container>& __rhs)
    { return __lhs.base() > __rhs.base(); }

  template<typename _Iterator, typename _Container>
    inline bool
    operator>(const __normal_iterator<_Iterator, _Container>& __lhs,
       const __normal_iterator<_Iterator, _Container>& __rhs)
    { return __lhs.base() > __rhs.base(); }

  template<typename _IteratorL, typename _IteratorR, typename _Container>
    inline bool
    operator<=(const __normal_iterator<_IteratorL, _Container>& __lhs,
        const __normal_iterator<_IteratorR, _Container>& __rhs)
    { return __lhs.base() <= __rhs.base(); }

  template<typename _Iterator, typename _Container>
    inline bool
    operator<=(const __normal_iterator<_Iterator, _Container>& __lhs,
        const __normal_iterator<_Iterator, _Container>& __rhs)
    { return __lhs.base() <= __rhs.base(); }

  template<typename _IteratorL, typename _IteratorR, typename _Container>
    inline bool
    operator>=(const __normal_iterator<_IteratorL, _Container>& __lhs,
        const __normal_iterator<_IteratorR, _Container>& __rhs)
    { return __lhs.base() >= __rhs.base(); }

  template<typename _Iterator, typename _Container>
    inline bool
    operator>=(const __normal_iterator<_Iterator, _Container>& __lhs,
        const __normal_iterator<_Iterator, _Container>& __rhs)
    { return __lhs.base() >= __rhs.base(); }





  template<typename _IteratorL, typename _IteratorR, typename _Container>
    inline typename __normal_iterator<_IteratorL, _Container>::difference_type
    operator-(const __normal_iterator<_IteratorL, _Container>& __lhs,
       const __normal_iterator<_IteratorR, _Container>& __rhs)
    { return __lhs.base() - __rhs.base(); }

  template<typename _Iterator, typename _Container>
    inline typename __normal_iterator<_Iterator, _Container>::difference_type
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
       const __normal_iterator<_Iterator, _Container>& __rhs)
    { return __lhs.base() - __rhs.base(); }

  template<typename _Iterator, typename _Container>
    inline __normal_iterator<_Iterator, _Container>
    operator+(typename __normal_iterator<_Iterator, _Container>::difference_type
       __n, const __normal_iterator<_Iterator, _Container>& __i)
    { return __normal_iterator<_Iterator, _Container>(__i.base() + __n); }

}
# 77 "/usr/include/c++/4.2.1/bits/stl_algobase.h" 2 3

# 1 "/usr/include/c++/4.2.1/debug/debug.h" 1 3
# 47 "/usr/include/c++/4.2.1/debug/debug.h" 3
namespace std
{
  namespace __debug { }
}

namespace __gnu_cxx
{
  namespace __debug { };
}

namespace __gnu_debug
{
  using namespace std::__debug;
  using namespace __gnu_cxx::__debug;
}
# 79 "/usr/include/c++/4.2.1/bits/stl_algobase.h" 2 3

namespace std {
# 91 "/usr/include/c++/4.2.1/bits/stl_algobase.h" 3
  template<typename _Tp>
    inline void
    swap(_Tp& __a, _Tp& __b)
    {

     

      _Tp __tmp = __a;
      __a = __b;
      __b = __tmp;
    }




  template<bool _BoolType>
    struct __iter_swap
    {
      template<typename _ForwardIterator1, typename _ForwardIterator2>
        static void
        iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
        {
          typedef typename iterator_traits<_ForwardIterator1>::value_type
            _ValueType1;
          _ValueType1 __tmp = *__a;
          *__a = *__b;
          *__b = __tmp;
 }
    };

  template<>
    struct __iter_swap<true>
    {
      template<typename _ForwardIterator1, typename _ForwardIterator2>
        static void
        iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
        {
          swap(*__a, *__b);
        }
    };
# 141 "/usr/include/c++/4.2.1/bits/stl_algobase.h" 3
  template<typename _ForwardIterator1, typename _ForwardIterator2>
    inline void
    iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
    {
      typedef typename iterator_traits<_ForwardIterator1>::value_type
 _ValueType1;
      typedef typename iterator_traits<_ForwardIterator2>::value_type
 _ValueType2;


     

     

     

     


      typedef typename iterator_traits<_ForwardIterator1>::reference
 _ReferenceType1;
      typedef typename iterator_traits<_ForwardIterator2>::reference
 _ReferenceType2;
      std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value &&
 __are_same<_ValueType1 &, _ReferenceType1>::__value &&
 __are_same<_ValueType2 &, _ReferenceType2>::__value>::
 iter_swap(__a, __b);
    }
# 180 "/usr/include/c++/4.2.1/bits/stl_algobase.h" 3
  template<typename _Tp>
    inline const _Tp&
    min(const _Tp& __a, const _Tp& __b)
    {

     

      if (__b < __a)
 return __b;
      return __a;
    }
# 202 "/usr/include/c++/4.2.1/bits/stl_algobase.h" 3
  template<typename _Tp>
    inline const _Tp&
    max(const _Tp& __a, const _Tp& __b)
    {

     

      if (__a < __b)
 return __b;
      return __a;
    }
# 224 "/usr/include/c++/4.2.1/bits/stl_algobase.h" 3
  template<typename _Tp, typename _Compare>
    inline const _Tp&
    min(const _Tp& __a, const _Tp& __b, _Compare __comp)
    {

      if (__comp(__b, __a))
 return __b;
      return __a;
    }
# 244 "/usr/include/c++/4.2.1/bits/stl_algobase.h" 3
  template<typename _Tp, typename _Compare>
    inline const _Tp&
    max(const _Tp& __a, const _Tp& __b, _Compare __comp)
    {

      if (__comp(__a, __b))
 return __b;
      return __a;
    }







  template<bool, typename>
    struct __copy
    {
      template<typename _II, typename _OI>
        static _OI
        copy(_II __first, _II __last, _OI __result)
        {
   for (; __first != __last; ++__result, ++__first)
     *__result = *__first;
   return __result;
 }
    };

  template<bool _BoolType>
    struct __copy<_BoolType, random_access_iterator_tag>
    {
      template<typename _II, typename _OI>
        static _OI
        copy(_II __first, _II __last, _OI __result)
        {
   typedef typename iterator_traits<_II>::difference_type _Distance;
   for(_Distance __n = __last - __first; __n > 0; --__n)
     {
       *__result = *__first;
       ++__first;
       ++__result;
     }
   return __result;
 }
    };

  template<>
    struct __copy<true, random_access_iterator_tag>
    {
      template<typename _Tp>
        static _Tp*
        copy(const _Tp* __first, const _Tp* __last, _Tp* __result)
        {
   std::memmove(__result, __first, sizeof(_Tp) * (__last - __first));
   return __result + (__last - __first);
 }
    };

  template<typename _II, typename _OI>
    inline _OI
    __copy_aux(_II __first, _II __last, _OI __result)
    {
      typedef typename iterator_traits<_II>::value_type _ValueTypeI;
      typedef typename iterator_traits<_OI>::value_type _ValueTypeO;
      typedef typename iterator_traits<_II>::iterator_category _Category;
      const bool __simple = (__is_scalar<_ValueTypeI>::__value
                      && __is_pointer<_II>::__value
                      && __is_pointer<_OI>::__value
        && __are_same<_ValueTypeI, _ValueTypeO>::__value);

      return std::__copy<__simple, _Category>::copy(__first, __last, __result);
    }


  template<typename _CharT>
  typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
      ostreambuf_iterator<_CharT> >::__type
    __copy_aux(_CharT*, _CharT*, ostreambuf_iterator<_CharT>);

  template<typename _CharT>
    typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
        ostreambuf_iterator<_CharT> >::__type
    __copy_aux(const _CharT*, const _CharT*, ostreambuf_iterator<_CharT>);

  template<typename _CharT>
  typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, _CharT*>::__type
    __copy_aux(istreambuf_iterator<_CharT>, istreambuf_iterator<_CharT>,
        _CharT*);

  template<bool, bool>
    struct __copy_normal
    {
      template<typename _II, typename _OI>
        static _OI
        __copy_n(_II __first, _II __last, _OI __result)
        { return std::__copy_aux(__first, __last, __result); }
    };

  template<>
    struct __copy_normal<true, false>
    {
      template<typename _II, typename _OI>
        static _OI
        __copy_n(_II __first, _II __last, _OI __result)
        { return std::__copy_aux(__first.base(), __last.base(), __result); }
    };

  template<>
    struct __copy_normal<false, true>
    {
      template<typename _II, typename _OI>
        static _OI
        __copy_n(_II __first, _II __last, _OI __result)
        { return _OI(std::__copy_aux(__first, __last, __result.base())); }
    };

  template<>
    struct __copy_normal<true, true>
    {
      template<typename _II, typename _OI>
        static _OI
        __copy_n(_II __first, _II __last, _OI __result)
        { return _OI(std::__copy_aux(__first.base(), __last.base(),
         __result.base())); }
    };
# 387 "/usr/include/c++/4.2.1/bits/stl_algobase.h" 3
  template<typename _InputIterator, typename _OutputIterator>
    inline _OutputIterator
    copy(_InputIterator __first, _InputIterator __last,
  _OutputIterator __result)
    {

     
     

      ;

       const bool __in = __is_normal_iterator<_InputIterator>::__value;
       const bool __out = __is_normal_iterator<_OutputIterator>::__value;
       return std::__copy_normal<__in, __out>::__copy_n(__first, __last,
       __result);
    }


  template<typename _CharT>
    typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
                 ostreambuf_iterator<_CharT> >::__type
    copy(istreambuf_iterator<_CharT>, istreambuf_iterator<_CharT>,
  ostreambuf_iterator<_CharT>);

  template<bool, typename>
    struct __copy_backward
    {
      template<typename _BI1, typename _BI2>
        static _BI2
        __copy_b(_BI1 __first, _BI1 __last, _BI2 __result)
        {
   while (__first != __last)
     *--__result = *--__last;
   return __result;
 }
    };

  template<bool _BoolType>
    struct __copy_backward<_BoolType, random_access_iterator_tag>
    {
      template<typename _BI1, typename _BI2>
        static _BI2
        __copy_b(_BI1 __first, _BI1 __last, _BI2 __result)
        {
   typename iterator_traits<_BI1>::difference_type __n;
   for (__n = __last - __first; __n > 0; --__n)
     *--__result = *--__last;
   return __result;
 }
    };

  template<>
    struct __copy_backward<true, random_access_iterator_tag>
    {
      template<typename _Tp>
        static _Tp*
        __copy_b(const _Tp* __first, const _Tp* __last, _Tp* __result)
        {
   const ptrdiff_t _Num = __last - __first;
   std::memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
   return __result - _Num;
 }
    };

  template<typename _BI1, typename _BI2>
    inline _BI2
    __copy_backward_aux(_BI1 __first, _BI1 __last, _BI2 __result)
    {
      typedef typename iterator_traits<_BI1>::value_type _ValueType1;
      typedef typename iterator_traits<_BI2>::value_type _ValueType2;
      typedef typename iterator_traits<_BI1>::iterator_category _Category;
      const bool __simple = (__is_scalar<_ValueType1>::__value
                      && __is_pointer<_BI1>::__value
                      && __is_pointer<_BI2>::__value
        && __are_same<_ValueType1, _ValueType2>::__value);

      return std::__copy_backward<__simple, _Category>::__copy_b(__first,
         __last,
         __result);
    }

  template<bool, bool>
    struct __copy_backward_normal
    {
      template<typename _BI1, typename _BI2>
        static _BI2
        __copy_b_n(_BI1 __first, _BI1 __last, _BI2 __result)
        { return std::__copy_backward_aux(__first, __last, __result); }
    };

  template<>
    struct __copy_backward_normal<true, false>
    {
      template<typename _BI1, typename _BI2>
        static _BI2
        __copy_b_n(_BI1 __first, _BI1 __last, _BI2 __result)
        { return std::__copy_backward_aux(__first.base(), __last.base(),
       __result); }
    };

  template<>
    struct __copy_backward_normal<false, true>
    {
      template<typename _BI1, typename _BI2>
        static _BI2
        __copy_b_n(_BI1 __first, _BI1 __last, _BI2 __result)
        { return _BI2(std::__copy_backward_aux(__first, __last,
            __result.base())); }
    };

  template<>
    struct __copy_backward_normal<true, true>
    {
      template<typename _BI1, typename _BI2>
        static _BI2
        __copy_b_n(_BI1 __first, _BI1 __last, _BI2 __result)
        { return _BI2(std::__copy_backward_aux(__first.base(), __last.base(),
            __result.base())); }
    };
# 524 "/usr/include/c++/4.2.1/bits/stl_algobase.h" 3
  template <typename _BI1, typename _BI2>
    inline _BI2
    copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
    {

     
     
     


      ;

      const bool __bi1 = __is_normal_iterator<_BI1>::__value;
      const bool __bi2 = __is_normal_iterator<_BI2>::__value;
      return std::__copy_backward_normal<__bi1, __bi2>::__copy_b_n(__first,
           __last,
           __result);
    }

  template<bool>
    struct __fill
    {
      template<typename _ForwardIterator, typename _Tp>
        static void
        fill(_ForwardIterator __first, _ForwardIterator __last,
      const _Tp& __value)
        {
   for (; __first != __last; ++__first)
     *__first = __value;
 }
    };

  template<>
    struct __fill<true>
    {
      template<typename _ForwardIterator, typename _Tp>
        static void
        fill(_ForwardIterator __first, _ForwardIterator __last,
      const _Tp& __value)
        {
   const _Tp __tmp = __value;
   for (; __first != __last; ++__first)
     *__first = __tmp;
 }
    };
# 581 "/usr/include/c++/4.2.1/bits/stl_algobase.h" 3
  template<typename _ForwardIterator, typename _Tp>
    void
    fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)
    {

     

      ;

      const bool __scalar = __is_scalar<_Tp>::__value;
      std::__fill<__scalar>::fill(__first, __last, __value);
    }


  inline void
  fill(unsigned char* __first, unsigned char* __last, const unsigned char& __c)
  {
    ;
    const unsigned char __tmp = __c;
    std::memset(__first, __tmp, __last - __first);
  }

  inline void
  fill(signed char* __first, signed char* __last, const signed char& __c)
  {
    ;
    const signed char __tmp = __c;
    std::memset(__first, static_cast<unsigned char>(__tmp), __last - __first);
  }

  inline void
  fill(char* __first, char* __last, const char& __c)
  {
    ;
    const char __tmp = __c;
    std::memset(__first, static_cast<unsigned char>(__tmp), __last - __first);
  }

  template<bool>
    struct __fill_n
    {
      template<typename _OutputIterator, typename _Size, typename _Tp>
        static _OutputIterator
        fill_n(_OutputIterator __first, _Size __n, const _Tp& __value)
        {
   for (; __n > 0; --__n, ++__first)
     *__first = __value;
   return __first;
 }
    };

  template<>
    struct __fill_n<true>
    {
      template<typename _OutputIterator, typename _Size, typename _Tp>
        static _OutputIterator
        fill_n(_OutputIterator __first, _Size __n, const _Tp& __value)
        {
   const _Tp __tmp = __value;
   for (; __n > 0; --__n, ++__first)
     *__first = __tmp;
   return __first;
 }
    };
# 657 "/usr/include/c++/4.2.1/bits/stl_algobase.h" 3
  template<typename _OutputIterator, typename _Size, typename _Tp>
    _OutputIterator
    fill_n(_OutputIterator __first, _Size __n, const _Tp& __value)
    {

     

      const bool __scalar = __is_scalar<_Tp>::__value;
      return std::__fill_n<__scalar>::fill_n(__first, __n, __value);
    }

  template<typename _Size>
    inline unsigned char*
    fill_n(unsigned char* __first, _Size __n, const unsigned char& __c)
    {
      std::fill(__first, __first + __n, __c);
      return __first + __n;
    }

  template<typename _Size>
    inline signed char*
    fill_n(signed char* __first, _Size __n, const signed char& __c)
    {
      std::fill(__first, __first + __n, __c);
      return __first + __n;
    }

  template<typename _Size>
    inline char*
    fill_n(char* __first, _Size __n, const char& __c)
    {
      std::fill(__first, __first + __n, __c);
      return __first + __n;
    }
# 704 "/usr/include/c++/4.2.1/bits/stl_algobase.h" 3
  template<typename _InputIterator1, typename _InputIterator2>
    pair<_InputIterator1, _InputIterator2>
    mismatch(_InputIterator1 __first1, _InputIterator1 __last1,
      _InputIterator2 __first2)
    {

     
     
     


      ;

      while (__first1 != __last1 && *__first1 == *__first2)
        {
   ++__first1;
   ++__first2;
        }
      return pair<_InputIterator1, _InputIterator2>(__first1, __first2);
    }
# 739 "/usr/include/c++/4.2.1/bits/stl_algobase.h" 3
  template<typename _InputIterator1, typename _InputIterator2,
    typename _BinaryPredicate>
    pair<_InputIterator1, _InputIterator2>
    mismatch(_InputIterator1 __first1, _InputIterator1 __last1,
      _InputIterator2 __first2, _BinaryPredicate __binary_pred)
    {

     
     
      ;

      while (__first1 != __last1 && __binary_pred(*__first1, *__first2))
        {
   ++__first1;
   ++__first2;
        }
      return pair<_InputIterator1, _InputIterator2>(__first1, __first2);
    }
# 769 "/usr/include/c++/4.2.1/bits/stl_algobase.h" 3
  template<typename _InputIterator1, typename _InputIterator2>
    inline bool
    equal(_InputIterator1 __first1, _InputIterator1 __last1,
   _InputIterator2 __first2)
    {

     
     
     


      ;

      for (; __first1 != __last1; ++__first1, ++__first2)
 if (!(*__first1 == *__first2))
   return false;
      return true;
    }
# 801 "/usr/include/c++/4.2.1/bits/stl_algobase.h" 3
  template<typename _InputIterator1, typename _InputIterator2,
    typename _BinaryPredicate>
    inline bool
    equal(_InputIterator1 __first1, _InputIterator1 __last1,
   _InputIterator2 __first2,
   _BinaryPredicate __binary_pred)
    {

     
     
      ;

      for (; __first1 != __last1; ++__first1, ++__first2)
 if (!__binary_pred(*__first1, *__first2))
   return false;
      return true;
    }
# 833 "/usr/include/c++/4.2.1/bits/stl_algobase.h" 3
  template<typename _InputIterator1, typename _InputIterator2>
    bool
    lexicographical_compare(_InputIterator1 __first1, _InputIterator1 __last1,
       _InputIterator2 __first2, _InputIterator2 __last2)
    {

     
     
     


     


      ;
      ;

      for (; __first1 != __last1 && __first2 != __last2;
    ++__first1, ++__first2)
 {
   if (*__first1 < *__first2)
     return true;
   if (*__first2 < *__first1)
     return false;
 }
      return __first1 == __last1 && __first2 != __last2;
    }
# 873 "/usr/include/c++/4.2.1/bits/stl_algobase.h" 3
  template<typename _InputIterator1, typename _InputIterator2,
    typename _Compare>
    bool
    lexicographical_compare(_InputIterator1 __first1, _InputIterator1 __last1,
       _InputIterator2 __first2, _InputIterator2 __last2,
       _Compare __comp)
    {

     
     
      ;
      ;

      for (; __first1 != __last1 && __first2 != __last2;
    ++__first1, ++__first2)
 {
   if (__comp(*__first1, *__first2))
     return true;
   if (__comp(*__first2, *__first1))
     return false;
 }
      return __first1 == __last1 && __first2 != __last2;
    }

  inline bool
  lexicographical_compare(const unsigned char* __first1,
     const unsigned char* __last1,
     const unsigned char* __first2,
     const unsigned char* __last2)
  {
    ;
    ;

    const size_t __len1 = __last1 - __first1;
    const size_t __len2 = __last2 - __first2;
    const int __result = std::memcmp(__first1, __first2,
         std::min(__len1, __len2));
    return __result != 0 ? __result < 0 : __len1 < __len2;
  }

  inline bool
  lexicographical_compare(const char* __first1, const char* __last1,
     const char* __first2, const char* __last2)
  {
    ;
    ;


    return std::lexicographical_compare((const signed char*) __first1,
     (const signed char*) __last1,
     (const signed char*) __first2,
     (const signed char*) __last2);






  }

}
# 47 "/usr/include/c++/4.2.1/bits/char_traits.h" 2 3


namespace __gnu_cxx {
# 61 "/usr/include/c++/4.2.1/bits/char_traits.h" 3
  template <class _CharT>
    struct _Char_types
    {
      typedef unsigned long int_type;
      typedef std::streampos pos_type;
      typedef std::streamoff off_type;
      typedef std::mbstate_t state_type;
    };
# 86 "/usr/include/c++/4.2.1/bits/char_traits.h" 3
  template<typename _CharT>
    struct char_traits
    {
      typedef _CharT char_type;
      typedef typename _Char_types<_CharT>::int_type int_type;
      typedef typename _Char_types<_CharT>::pos_type pos_type;
      typedef typename _Char_types<_CharT>::off_type off_type;
      typedef typename _Char_types<_CharT>::state_type state_type;

      static void
      assign(char_type& __c1, const char_type& __c2)
      { __c1 = __c2; }

      static bool
      eq(const char_type& __c1, const char_type& __c2)
      { return __c1 == __c2; }

      static bool
      lt(const char_type& __c1, const char_type& __c2)
      { return __c1 < __c2; }

      static int
      compare(const char_type* __s1, const char_type* __s2, std::size_t __n);

      static std::size_t
      length(const char_type* __s);

      static const char_type*
      find(const char_type* __s, std::size_t __n, const char_type& __a);

      static char_type*
      move(char_type* __s1, const char_type* __s2, std::size_t __n);

      static char_type*
      copy(char_type* __s1, const char_type* __s2, std::size_t __n);

      static char_type*
      assign(char_type* __s, std::size_t __n, char_type __a);

      static char_type
      to_char_type(const int_type& __c)
      { return static_cast<char_type>(__c); }

      static int_type
      to_int_type(const char_type& __c)
      { return static_cast<int_type>(__c); }

      static bool
      eq_int_type(const int_type& __c1, const int_type& __c2)
      { return __c1 == __c2; }

      static int_type
      eof()
      { return static_cast<int_type>((-1)); }

      static int_type
      not_eof(const int_type& __c)
      { return !eq_int_type(__c, eof()) ? __c : to_int_type(char_type()); }
    };

  template<typename _CharT>
    int
    char_traits<_CharT>::
    compare(const char_type* __s1, const char_type* __s2, std::size_t __n)
    {
      for (std::size_t __i = 0; __i < __n; ++__i)
 if (lt(__s1[__i], __s2[__i]))
   return -1;
 else if (lt(__s2[__i], __s1[__i]))
   return 1;
      return 0;
    }

  template<typename _CharT>
    std::size_t
    char_traits<_CharT>::
    length(const char_type* __p)
    {
      std::size_t __i = 0;
      while (!eq(__p[__i], char_type()))
        ++__i;
      return __i;
    }

  template<typename _CharT>
    const typename char_traits<_CharT>::char_type*
    char_traits<_CharT>::
    find(const char_type* __s, std::size_t __n, const char_type& __a)
    {
      for (std::size_t __i = 0; __i < __n; ++__i)
        if (eq(__s[__i], __a))
          return __s + __i;
      return 0;
    }

  template<typename _CharT>
    typename char_traits<_CharT>::char_type*
    char_traits<_CharT>::
    move(char_type* __s1, const char_type* __s2, std::size_t __n)
    {
      return static_cast<_CharT*>(std::memmove(__s1, __s2,
            __n * sizeof(char_type)));
    }

  template<typename _CharT>
    typename char_traits<_CharT>::char_type*
    char_traits<_CharT>::
    copy(char_type* __s1, const char_type* __s2, std::size_t __n)
    {
      std::copy(__s2, __s2 + __n, __s1);
      return __s1;
    }

  template<typename _CharT>
    typename char_traits<_CharT>::char_type*
    char_traits<_CharT>::
    assign(char_type* __s, std::size_t __n, char_type __a)
    {
      std::fill_n(__s, __n, __a);
      return __s;
    }

}

namespace std {
# 225 "/usr/include/c++/4.2.1/bits/char_traits.h" 3
  template<class _CharT>
    struct char_traits : public __gnu_cxx::char_traits<_CharT>
    { };



  template<>
    struct char_traits<char>
    {
      typedef char char_type;
      typedef int int_type;
      typedef streampos pos_type;
      typedef streamoff off_type;
      typedef mbstate_t state_type;

      static void
      assign(char_type& __c1, const char_type& __c2)
      { __c1 = __c2; }

      static bool
      eq(const char_type& __c1, const char_type& __c2)
      { return __c1 == __c2; }

      static bool
      lt(const char_type& __c1, const char_type& __c2)
      { return __c1 < __c2; }

      static int
      compare(const char_type* __s1, const char_type* __s2, size_t __n)
      { return memcmp(__s1, __s2, __n); }

      static size_t
      length(const char_type* __s)
      { return strlen(__s); }

      static const char_type*
      find(const char_type* __s, size_t __n, const char_type& __a)
      { return static_cast<const char_type*>(memchr(__s, __a, __n)); }

      static char_type*
      move(char_type* __s1, const char_type* __s2, size_t __n)
      { return static_cast<char_type*>(memmove(__s1, __s2, __n)); }

      static char_type*
      copy(char_type* __s1, const char_type* __s2, size_t __n)
      { return static_cast<char_type*>(memcpy(__s1, __s2, __n)); }

      static char_type*
      assign(char_type* __s, size_t __n, char_type __a)
      { return static_cast<char_type*>(memset(__s, __a, __n)); }

      static char_type
      to_char_type(const int_type& __c)
      { return static_cast<char_type>(__c); }



      static int_type
      to_int_type(const char_type& __c)
      { return static_cast<int_type>(static_cast<unsigned char>(__c)); }

      static bool
      eq_int_type(const int_type& __c1, const int_type& __c2)
      { return __c1 == __c2; }

      static int_type
      eof() { return static_cast<int_type>((-1)); }

      static int_type
      not_eof(const int_type& __c)
      { return (__c == eof()) ? 0 : __c; }
  };




  template<>
    struct char_traits<wchar_t>
    {
      typedef wchar_t char_type;
      typedef wint_t int_type;
      typedef streamoff off_type;
      typedef wstreampos pos_type;
      typedef mbstate_t state_type;

      static void
      assign(char_type& __c1, const char_type& __c2)
      { __c1 = __c2; }

      static bool
      eq(const char_type& __c1, const char_type& __c2)
      { return __c1 == __c2; }

      static bool
      lt(const char_type& __c1, const char_type& __c2)
      { return __c1 < __c2; }

      static int
      compare(const char_type* __s1, const char_type* __s2, size_t __n)
      { return wmemcmp(__s1, __s2, __n); }

      static size_t
      length(const char_type* __s)
      { return wcslen(__s); }

      static const char_type*
      find(const char_type* __s, size_t __n, const char_type& __a)
      { return wmemchr(__s, __a, __n); }

      static char_type*
      move(char_type* __s1, const char_type* __s2, size_t __n)
      { return wmemmove(__s1, __s2, __n); }

      static char_type*
      copy(char_type* __s1, const char_type* __s2, size_t __n)
      { return wmemcpy(__s1, __s2, __n); }

      static char_type*
      assign(char_type* __s, size_t __n, char_type __a)
      { return wmemset(__s, __a, __n); }

      static char_type
      to_char_type(const int_type& __c) { return char_type(__c); }

      static int_type
      to_int_type(const char_type& __c) { return int_type(__c); }

      static bool
      eq_int_type(const int_type& __c1, const int_type& __c2)
      { return __c1 == __c2; }

      static int_type
      eof() { return static_cast<int_type>(((__darwin_wint_t)-1)); }

      static int_type
      not_eof(const int_type& __c)
      { return eq_int_type(__c, eof()) ? 0 : __c; }
  };


}
# 46 "/usr/include/c++/4.2.1/ios" 2 3

# 1 "/usr/include/c++/4.2.1/bits/localefwd.h" 1 3
# 43 "/usr/include/c++/4.2.1/bits/localefwd.h" 3
       
# 44 "/usr/include/c++/4.2.1/bits/localefwd.h" 3






namespace std {


  class locale;


  template<typename _CharT>
    inline bool
    isspace(_CharT, const locale&);

  template<typename _CharT>
    inline bool
    isprint(_CharT, const locale&);

  template<typename _CharT>
    inline bool
    iscntrl(_CharT, const locale&);

  template<typename _CharT>
    inline bool
    isupper(_CharT, const locale&);

  template<typename _CharT>
    inline bool
    islower(_CharT, const locale&);

  template<typename _CharT>
    inline bool
    isalpha(_CharT, const locale&);

  template<typename _CharT>
    inline bool
    isdigit(_CharT, const locale&);

  template<typename _CharT>
    inline bool
    ispunct(_CharT, const locale&);

  template<typename _CharT>
    inline bool
    isxdigit(_CharT, const locale&);

  template<typename _CharT>
    inline bool
    isalnum(_CharT, const locale&);

  template<typename _CharT>
    inline bool
    isgraph(_CharT, const locale&);

  template<typename _CharT>
    inline _CharT
    toupper(_CharT, const locale&);

  template<typename _CharT>
    inline _CharT
    tolower(_CharT, const locale&);


  class ctype_base;
  template<typename _CharT>
    class ctype;
  template<> class ctype<char>;

  template<> class ctype<wchar_t>;

  template<typename _CharT>
    class ctype_byname;


  class codecvt_base;
  class __enc_traits;
  template<typename _InternT, typename _ExternT, typename _StateT>
    class codecvt;
  template<> class codecvt<char, char, mbstate_t>;

  template<> class codecvt<wchar_t, char, mbstate_t>;

  template<typename _InternT, typename _ExternT, typename _StateT>
    class codecvt_byname;



  template<typename _CharT, typename _InIter = istreambuf_iterator<_CharT> >
    class num_get;
  template<typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT> >
    class num_put;

  template<typename _CharT> class numpunct;
  template<typename _CharT> class numpunct_byname;


  template<typename _CharT>
    class collate;
  template<typename _CharT> class
    collate_byname;


  class time_base;
  template<typename _CharT, typename _InIter = istreambuf_iterator<_CharT> >
    class time_get;
  template<typename _CharT, typename _InIter = istreambuf_iterator<_CharT> >
    class time_get_byname;
  template<typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT> >
    class time_put;
  template<typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT> >
    class time_put_byname;


  class money_base;

  template<typename _CharT, typename _InIter = istreambuf_iterator<_CharT> >
    class money_get;
  template<typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT> >
    class money_put;

  template<typename _CharT, bool _Intl = false>
    class moneypunct;
  template<typename _CharT, bool _Intl = false>
    class moneypunct_byname;


  class messages_base;
  template<typename _CharT>
    class messages;
  template<typename _CharT>
    class messages_byname;

  template<typename _Facet>
    bool
    has_facet(const locale& __loc) throw();

  template<typename _Facet>
    const _Facet&
    use_facet(const locale& __loc);

  template<typename _Facet>
    inline const _Facet&
    __check_facet(const _Facet* __f)
    {
      if (!__f)
 __throw_bad_cast();
      return *__f;
    }

}
# 48 "/usr/include/c++/4.2.1/ios" 2 3
# 1 "/usr/include/c++/4.2.1/bits/ios_base.h" 1 3
# 43 "/usr/include/c++/4.2.1/bits/ios_base.h" 3
       
# 44 "/usr/include/c++/4.2.1/bits/ios_base.h" 3

# 1 "/usr/include/c++/4.2.1/ext/atomicity.h" 1 3
# 40 "/usr/include/c++/4.2.1/ext/atomicity.h" 3
# 1 "/usr/include/c++/4.2.1/i686-apple-darwin10/x86_64/bits/atomic_word.h" 1 3
# 37 "/usr/include/c++/4.2.1/i686-apple-darwin10/x86_64/bits/atomic_word.h" 3
typedef int _Atomic_word;
# 41 "/usr/include/c++/4.2.1/ext/atomicity.h" 2 3

namespace __gnu_cxx {






  static inline _Atomic_word
  __exchange_and_add(volatile _Atomic_word* __mem, int __val)
  { return __sync_fetch_and_add(__mem, __val); }

  static inline void
  __atomic_add(volatile _Atomic_word* __mem, int __val)
  { __sync_fetch_and_add(__mem, __val); }
# 66 "/usr/include/c++/4.2.1/ext/atomicity.h" 3
  static inline _Atomic_word
  __exchange_and_add_single(_Atomic_word* __mem, int __val)
  {
    _Atomic_word __result = *__mem;
    *__mem += __val;
    return __result;
  }

  static inline void
  __atomic_add_single(_Atomic_word* __mem, int __val)
  { *__mem += __val; }

  static inline _Atomic_word
  __attribute__ ((__unused__))
  __exchange_and_add_dispatch(_Atomic_word* __mem, int __val)
  {

    if (__gthread_active_p())
      return __exchange_and_add(__mem, __val);
    else
      return __exchange_and_add_single(__mem, __val);



  }

  static inline void
  __attribute__ ((__unused__))
  __atomic_add_dispatch(_Atomic_word* __mem, int __val)
  {

    if (__gthread_active_p())
      __atomic_add(__mem, __val);
    else
      __atomic_add_single(__mem, __val);



  }

}
# 46 "/usr/include/c++/4.2.1/bits/ios_base.h" 2 3

# 1 "/usr/include/c++/4.2.1/bits/locale_classes.h" 1 3
# 43 "/usr/include/c++/4.2.1/bits/locale_classes.h" 3
       
# 44 "/usr/include/c++/4.2.1/bits/locale_classes.h" 3



# 1 "/usr/include/c++/4.2.1/string" 1 3
# 43 "/usr/include/c++/4.2.1/string" 3
       
# 44 "/usr/include/c++/4.2.1/string" 3




# 1 "/usr/include/c++/4.2.1/memory" 1 3
# 51 "/usr/include/c++/4.2.1/memory" 3
       
# 52 "/usr/include/c++/4.2.1/memory" 3


# 1 "/usr/include/c++/4.2.1/bits/allocator.h" 1 3
# 53 "/usr/include/c++/4.2.1/bits/allocator.h" 3
# 1 "/usr/include/c++/4.2.1/i686-apple-darwin10/x86_64/bits/c++allocator.h" 1 3
# 39 "/usr/include/c++/4.2.1/i686-apple-darwin10/x86_64/bits/c++allocator.h" 3
# 1 "/usr/include/c++/4.2.1/ext/new_allocator.h" 1 3
# 37 "/usr/include/c++/4.2.1/ext/new_allocator.h" 3
# 1 "/usr/include/c++/4.2.1/new" 1 3
# 47 "/usr/include/c++/4.2.1/new" 3
#pragma GCC visibility push(default)

extern "C++" {

namespace std
{





  class bad_alloc : public exception
  {
  public:
    bad_alloc() throw() { }



    virtual ~bad_alloc() throw();


    virtual const char* what() const throw();
  };

  struct nothrow_t { };

  extern const nothrow_t nothrow;



  typedef void (*new_handler)();



  new_handler set_new_handler(new_handler) throw();
}
# 95 "/usr/include/c++/4.2.1/new" 3
void* operator new(std::size_t) throw (std::bad_alloc);
void* operator new[](std::size_t) throw (std::bad_alloc);
void operator delete(void*) throw();
void operator delete[](void*) throw();
void* operator new(std::size_t, const std::nothrow_t&) throw();
void* operator new[](std::size_t, const std::nothrow_t&) throw();
void operator delete(void*, const std::nothrow_t&) throw();
void operator delete[](void*, const std::nothrow_t&) throw();


inline void* operator new(std::size_t, void* __p) throw() { return __p; }
inline void* operator new[](std::size_t, void* __p) throw() { return __p; }


inline void operator delete (void*, void*) throw() { }
inline void operator delete[](void*, void*) throw() { }

}

#pragma GCC visibility pop
# 38 "/usr/include/c++/4.2.1/ext/new_allocator.h" 2 3


namespace __gnu_cxx {

  using std::size_t;
  using std::ptrdiff_t;
# 52 "/usr/include/c++/4.2.1/ext/new_allocator.h" 3
  template<typename _Tp>
    class new_allocator
    {
    public:
      typedef size_t size_type;
      typedef ptrdiff_t difference_type;
      typedef _Tp* pointer;
      typedef const _Tp* const_pointer;
      typedef _Tp& reference;
      typedef const _Tp& const_reference;
      typedef _Tp value_type;

      template<typename _Tp1>
        struct rebind
        { typedef new_allocator<_Tp1> other; };

      new_allocator() throw() { }

      new_allocator(const new_allocator&) throw() { }

      template<typename _Tp1>
        new_allocator(const new_allocator<_Tp1>&) throw() { }

      ~new_allocator() throw() { }

      pointer
      address(reference __x) const { return &__x; }

      const_pointer
      address(const_reference __x) const { return &__x; }



      pointer
      allocate(size_type __n, const void* = 0)
      {
 if (__builtin_expect(__n > this->max_size(), false))
   std::__throw_bad_alloc();

 return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
      }


      void
      deallocate(pointer __p, size_type)
      { ::operator delete(__p); }

      size_type
      max_size() const throw()
      { return size_t(-1) / sizeof(_Tp); }



      void
      construct(pointer __p, const _Tp& __val)
      { ::new(__p) _Tp(__val); }

      void
      destroy(pointer __p) { __p->~_Tp(); }
    };

  template<typename _Tp>
    inline bool
    operator==(const new_allocator<_Tp>&, const new_allocator<_Tp>&)
    { return true; }

  template<typename _Tp>
    inline bool
    operator!=(const new_allocator<_Tp>&, const new_allocator<_Tp>&)
    { return false; }

}
# 40 "/usr/include/c++/4.2.1/i686-apple-darwin10/x86_64/bits/c++allocator.h" 2 3
# 54 "/usr/include/c++/4.2.1/bits/allocator.h" 2 3



namespace std {

  template<typename _Tp>
    class allocator;


  template<>
    class allocator<void>
    {
    public:
      typedef size_t size_type;
      typedef ptrdiff_t difference_type;
      typedef void* pointer;
      typedef const void* const_pointer;
      typedef void value_type;

      template<typename _Tp1>
        struct rebind
        { typedef allocator<_Tp1> other; };
    };







  template<typename _Tp>
    class allocator: public __gnu_cxx::new_allocator<_Tp>
    {
   public:
      typedef size_t size_type;
      typedef ptrdiff_t difference_type;
      typedef _Tp* pointer;
      typedef const _Tp* const_pointer;
      typedef _Tp& reference;
      typedef const _Tp& const_reference;
      typedef _Tp value_type;

      template<typename _Tp1>
        struct rebind
        { typedef allocator<_Tp1> other; };

      allocator() throw() { }

      allocator(const allocator& __a) throw()
      : __gnu_cxx::new_allocator<_Tp>(__a) { }

      template<typename _Tp1>
        allocator(const allocator<_Tp1>&) throw() { }

      ~allocator() throw() { }


    };

  template<typename _T1, typename _T2>
    inline bool
    operator==(const allocator<_T1>&, const allocator<_T2>&)
    { return true; }

  template<typename _T1, typename _T2>
    inline bool
    operator!=(const allocator<_T1>&, const allocator<_T2>&)
    { return false; }





  extern template class allocator<char>;
  extern template class allocator<wchar_t>;






  template<typename _Alloc, bool = std::__is_empty<_Alloc>::__value>
    struct __alloc_swap
    { static void _S_do_it(_Alloc&, _Alloc&) { } };

  template<typename _Alloc>
    struct __alloc_swap<_Alloc, false>
    {
      static void
      _S_do_it(_Alloc& __one, _Alloc& __two)
      {

 if (__one != __two)
   swap(__one, __two);
      }
    };

}
# 55 "/usr/include/c++/4.2.1/memory" 2 3
# 1 "/usr/include/c++/4.2.1/bits/stl_construct.h" 1 3
# 67 "/usr/include/c++/4.2.1/bits/stl_construct.h" 3
namespace std {







  template<typename _T1, typename _T2>
    inline void
    _Construct(_T1* __p, const _T2& __value)
    {


      ::new(static_cast<void*>(__p)) _T1(__value);
    }







  template<typename _T1>
    inline void
    _Construct(_T1* __p)
    {


      ::new(static_cast<void*>(__p)) _T1();
    }






  template<typename _Tp>
    inline void
    _Destroy(_Tp* __pointer)
    { __pointer->~_Tp(); }
# 116 "/usr/include/c++/4.2.1/bits/stl_construct.h" 3
  template<typename _ForwardIterator>
    inline void
    __destroy_aux(_ForwardIterator __first, _ForwardIterator __last,
    __false_type)
    {
      for (; __first != __last; ++__first)
 std::_Destroy(&*__first);
    }
# 134 "/usr/include/c++/4.2.1/bits/stl_construct.h" 3
  template<typename _ForwardIterator>
    inline void
    __destroy_aux(_ForwardIterator, _ForwardIterator, __true_type)
    { }
# 146 "/usr/include/c++/4.2.1/bits/stl_construct.h" 3
  template<typename _ForwardIterator>
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    {
      typedef typename iterator_traits<_ForwardIterator>::value_type
                       _Value_type;
      typedef typename std::__is_scalar<_Value_type>::__type
                _Has_trivial_destructor;

      std::__destroy_aux(__first, __last, _Has_trivial_destructor());
    }
# 166 "/usr/include/c++/4.2.1/bits/stl_construct.h" 3
  template <typename _Tp> class allocator;

  template<typename _ForwardIterator, typename _Allocator>
    void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
      _Allocator __alloc)
    {
      for (; __first != __last; ++__first)
 __alloc.destroy(&*__first);
    }

  template<typename _ForwardIterator, typename _Tp>
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
      allocator<_Tp>)
    {
      _Destroy(__first, __last);
    }

}
# 56 "/usr/include/c++/4.2.1/memory" 2 3

# 1 "/usr/include/c++/4.2.1/bits/stl_uninitialized.h" 1 3
# 67 "/usr/include/c++/4.2.1/bits/stl_uninitialized.h" 3
namespace std {


  template<typename _InputIterator, typename _ForwardIterator>
    inline _ForwardIterator
    __uninitialized_copy_aux(_InputIterator __first, _InputIterator __last,
        _ForwardIterator __result,
        __true_type)
    { return std::copy(__first, __last, __result); }

  template<typename _InputIterator, typename _ForwardIterator>
    inline _ForwardIterator
    __uninitialized_copy_aux(_InputIterator __first, _InputIterator __last,
        _ForwardIterator __result,
        __false_type)
    {
      _ForwardIterator __cur = __result;
      try
 {
   for (; __first != __last; ++__first, ++__cur)
     std::_Construct(&*__cur, *__first);
   return __cur;
 }
      catch(...)
 {
   std::_Destroy(__result, __cur);
   throw;
 }
    }
# 106 "/usr/include/c++/4.2.1/bits/stl_uninitialized.h" 3
  template<typename _InputIterator, typename _ForwardIterator>
    inline _ForwardIterator
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
         _ForwardIterator __result)
    {
      typedef typename iterator_traits<_ForwardIterator>::value_type _ValueType;
      typedef typename std::__is_scalar<_ValueType>::__type _Is_POD;
      return std::__uninitialized_copy_aux(__first, __last, __result,
        _Is_POD());
    }

  inline char*
  uninitialized_copy(const char* __first, const char* __last, char* __result)
  {
    std::memmove(__result, __first, __last - __first);
    return __result + (__last - __first);
  }

  inline wchar_t*
  uninitialized_copy(const wchar_t* __first, const wchar_t* __last,
       wchar_t* __result)
  {
    std::memmove(__result, __first, sizeof(wchar_t) * (__last - __first));
    return __result + (__last - __first);
  }



  template<typename _ForwardIterator, typename _Tp>
    inline void
    __uninitialized_fill_aux(_ForwardIterator __first,
        _ForwardIterator __last,
        const _Tp& __x, __true_type)
    { std::fill(__first, __last, __x); }

  template<typename _ForwardIterator, typename _Tp>
    void
    __uninitialized_fill_aux(_ForwardIterator __first, _ForwardIterator __last,
        const _Tp& __x, __false_type)
    {
      _ForwardIterator __cur = __first;
      try
 {
   for (; __cur != __last; ++__cur)
     std::_Construct(&*__cur, __x);
 }
      catch(...)
 {
   std::_Destroy(__first, __cur);
   throw;
 }
    }
# 168 "/usr/include/c++/4.2.1/bits/stl_uninitialized.h" 3
  template<typename _ForwardIterator, typename _Tp>
    inline void
    uninitialized_fill(_ForwardIterator __first, _ForwardIterator __last,
         const _Tp& __x)
    {
      typedef typename iterator_traits<_ForwardIterator>::value_type _ValueType;
      typedef typename std::__is_scalar<_ValueType>::__type _Is_POD;
      std::__uninitialized_fill_aux(__first, __last, __x, _Is_POD());
    }



  template<typename _ForwardIterator, typename _Size, typename _Tp>
    inline void
    __uninitialized_fill_n_aux(_ForwardIterator __first, _Size __n,
          const _Tp& __x, __true_type)
    { std::fill_n(__first, __n, __x); }

  template<typename _ForwardIterator, typename _Size, typename _Tp>
    void
    __uninitialized_fill_n_aux(_ForwardIterator __first, _Size __n,
          const _Tp& __x, __false_type)
    {
      _ForwardIterator __cur = __first;
      try
 {
   for (; __n > 0; --__n, ++__cur)
     std::_Construct(&*__cur, __x);
 }
      catch(...)
 {
   std::_Destroy(__first, __cur);
   throw;
 }
    }
# 213 "/usr/include/c++/4.2.1/bits/stl_uninitialized.h" 3
  template<typename _ForwardIterator, typename _Size, typename _Tp>
    inline void
    uninitialized_fill_n(_ForwardIterator __first, _Size __n, const _Tp& __x)
    {
      typedef typename iterator_traits<_ForwardIterator>::value_type _ValueType;
      typedef typename std::__is_scalar<_ValueType>::__type _Is_POD;
      std::__uninitialized_fill_n_aux(__first, __n, __x, _Is_POD());
    }







  template<typename _InputIterator, typename _ForwardIterator,
    typename _Allocator>
    _ForwardIterator
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
      _ForwardIterator __result,
      _Allocator __alloc)
    {
      _ForwardIterator __cur = __result;
      try
 {
   for (; __first != __last; ++__first, ++__cur)
     __alloc.construct(&*__cur, *__first);
   return __cur;
 }
      catch(...)
 {
   std::_Destroy(__result, __cur, __alloc);
   throw;
 }
    }

  template<typename _InputIterator, typename _ForwardIterator, typename _Tp>
    inline _ForwardIterator
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
      _ForwardIterator __result,
      allocator<_Tp>)
    { return std::uninitialized_copy(__first, __last, __result); }

  template<typename _ForwardIterator, typename _Tp, typename _Allocator>
    void
    __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last,
      const _Tp& __x, _Allocator __alloc)
    {
      _ForwardIterator __cur = __first;
      try
 {
   for (; __cur != __last; ++__cur)
     __alloc.construct(&*__cur, __x);
 }
      catch(...)
 {
   std::_Destroy(__first, __cur, __alloc);
   throw;
 }
    }

  template<typename _ForwardIterator, typename _Tp, typename _Tp2>
    inline void
    __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last,
      const _Tp& __x, allocator<_Tp2>)
    { std::uninitialized_fill(__first, __last, __x); }

  template<typename _ForwardIterator, typename _Size, typename _Tp,
    typename _Allocator>
    void
    __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n,
        const _Tp& __x,
        _Allocator __alloc)
    {
      _ForwardIterator __cur = __first;
      try
 {
   for (; __n > 0; --__n, ++__cur)
     __alloc.construct(&*__cur, __x);
 }
      catch(...)
 {
   std::_Destroy(__first, __cur, __alloc);
   throw;
 }
    }

  template<typename _ForwardIterator, typename _Size, typename _Tp,
    typename _Tp2>
    inline void
    __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n,
        const _Tp& __x,
        allocator<_Tp2>)
    { std::uninitialized_fill_n(__first, __n, __x); }
# 318 "/usr/include/c++/4.2.1/bits/stl_uninitialized.h" 3
  template<typename _InputIterator1, typename _InputIterator2,
    typename _ForwardIterator, typename _Allocator>
    inline _ForwardIterator
    __uninitialized_copy_copy(_InputIterator1 __first1,
         _InputIterator1 __last1,
         _InputIterator2 __first2,
         _InputIterator2 __last2,
         _ForwardIterator __result,
         _Allocator __alloc)
    {
      _ForwardIterator __mid = std::__uninitialized_copy_a(__first1, __last1,
          __result,
          __alloc);
      try
 {
   return std::__uninitialized_copy_a(__first2, __last2, __mid, __alloc);
 }
      catch(...)
 {
   std::_Destroy(__result, __mid, __alloc);
   throw;
 }
    }




  template<typename _ForwardIterator, typename _Tp, typename _InputIterator,
    typename _Allocator>
    inline _ForwardIterator
    __uninitialized_fill_copy(_ForwardIterator __result, _ForwardIterator __mid,
         const _Tp& __x, _InputIterator __first,
         _InputIterator __last,
         _Allocator __alloc)
    {
      std::__uninitialized_fill_a(__result, __mid, __x, __alloc);
      try
 {
   return std::__uninitialized_copy_a(__first, __last, __mid, __alloc);
 }
      catch(...)
 {
   std::_Destroy(__result, __mid, __alloc);
   throw;
 }
    }




  template<typename _InputIterator, typename _ForwardIterator, typename _Tp,
    typename _Allocator>
    inline void
    __uninitialized_copy_fill(_InputIterator __first1, _InputIterator __last1,
         _ForwardIterator __first2,
         _ForwardIterator __last2, const _Tp& __x,
         _Allocator __alloc)
    {
      _ForwardIterator __mid2 = std::__uninitialized_copy_a(__first1, __last1,
           __first2,
           __alloc);
      try
 {
   std::__uninitialized_fill_a(__mid2, __last2, __x, __alloc);
 }
      catch(...)
 {
   std::_Destroy(__first2, __mid2, __alloc);
   throw;
 }
    }

}
# 58 "/usr/include/c++/4.2.1/memory" 2 3
# 1 "/usr/include/c++/4.2.1/bits/stl_raw_storage_iter.h" 1 3
# 64 "/usr/include/c++/4.2.1/bits/stl_raw_storage_iter.h" 3
namespace std {





  template <class _ForwardIterator, class _Tp>
    class raw_storage_iterator
    : public iterator<output_iterator_tag, void, void, void, void>
    {
    protected:
      _ForwardIterator _M_iter;

    public:
      explicit
      raw_storage_iterator(_ForwardIterator __x)
      : _M_iter(__x) {}

      raw_storage_iterator&
      operator*() { return *this; }

      raw_storage_iterator&
      operator=(const _Tp& __element)
      {
 std::_Construct(&*_M_iter, __element);
 return *this;
      }

      raw_storage_iterator<_ForwardIterator, _Tp>&
      operator++()
      {
 ++_M_iter;
 return *this;
      }

      raw_storage_iterator<_ForwardIterator, _Tp>
      operator++(int)
      {
 raw_storage_iterator<_ForwardIterator, _Tp> __tmp = *this;
 ++_M_iter;
 return __tmp;
      }
    };

}
# 59 "/usr/include/c++/4.2.1/memory" 2 3

# 1 "/usr/include/c++/4.2.1/limits" 1 3
# 46 "/usr/include/c++/4.2.1/limits" 3
       
# 47 "/usr/include/c++/4.2.1/limits" 3
# 150 "/usr/include/c++/4.2.1/limits" 3
namespace std {






  enum float_round_style
  {
    round_indeterminate = -1,
    round_toward_zero = 0,
    round_to_nearest = 1,
    round_toward_infinity = 2,
    round_toward_neg_infinity = 3
  };







  enum float_denorm_style
  {

    denorm_indeterminate = -1,

    denorm_absent = 0,

    denorm_present = 1
  };
# 192 "/usr/include/c++/4.2.1/limits" 3
  struct __numeric_limits_base
  {


    static const bool is_specialized = false;




    static const int digits = 0;

    static const int digits10 = 0;

    static const bool is_signed = false;





    static const bool is_integer = false;




    static const bool is_exact = false;


    static const int radix = 0;



    static const int min_exponent = 0;


    static const int min_exponent10 = 0;



    static const int max_exponent = 0;


    static const int max_exponent10 = 0;


    static const bool has_infinity = false;


    static const bool has_quiet_NaN = false;


    static const bool has_signaling_NaN = false;

    static const float_denorm_style has_denorm = denorm_absent;


    static const bool has_denorm_loss = false;



    static const bool is_iec559 = false;



    static const bool is_bounded = false;




    static const bool is_modulo = false;


    static const bool traps = false;

    static const bool tinyness_before = false;



    static const float_round_style round_style = round_toward_zero;
  };
# 285 "/usr/include/c++/4.2.1/limits" 3
  template<typename _Tp>
    struct numeric_limits : public __numeric_limits_base
    {


      static _Tp min() throw() { return static_cast<_Tp>(0); }

      static _Tp max() throw() { return static_cast<_Tp>(0); }


      static _Tp epsilon() throw() { return static_cast<_Tp>(0); }

      static _Tp round_error() throw() { return static_cast<_Tp>(0); }

      static _Tp infinity() throw() { return static_cast<_Tp>(0); }

      static _Tp quiet_NaN() throw() { return static_cast<_Tp>(0); }


      static _Tp signaling_NaN() throw() { return static_cast<_Tp>(0); }



      static _Tp denorm_min() throw() { return static_cast<_Tp>(0); }
    };





  template<>
    struct numeric_limits<bool>
    {
      static const bool is_specialized = true;

      static bool min() throw()
      { return false; }
      static bool max() throw()
      { return true; }

      static const int digits = 1;
      static const int digits10 = 0;
      static const bool is_signed = false;
      static const bool is_integer = true;
      static const bool is_exact = true;
      static const int radix = 2;
      static bool epsilon() throw()
      { return false; }
      static bool round_error() throw()
      { return false; }

      static const int min_exponent = 0;
      static const int min_exponent10 = 0;
      static const int max_exponent = 0;
      static const int max_exponent10 = 0;

      static const bool has_infinity = false;
      static const bool has_quiet_NaN = false;
      static const bool has_signaling_NaN = false;
      static const float_denorm_style has_denorm = denorm_absent;
      static const bool has_denorm_loss = false;

      static bool infinity() throw()
      { return false; }
      static bool quiet_NaN() throw()
      { return false; }
      static bool signaling_NaN() throw()
      { return false; }
      static bool denorm_min() throw()
      { return false; }

      static const bool is_iec559 = false;
      static const bool is_bounded = true;
      static const bool is_modulo = false;




      static const bool traps = true;
      static const bool tinyness_before = false;
      static const float_round_style round_style = round_toward_zero;
    };


  template<>
    struct numeric_limits<char>
    {
      static const bool is_specialized = true;

      static char min() throw()
      { return (((char)(-1) < 0) ? (char)1 << (sizeof(char) * 8 - ((char)(-1) < 0)) : (char)0); }
      static char max() throw()
      { return (((char)(-1) < 0) ? ((char)1 << (sizeof(char) * 8 - ((char)(-1) < 0))) - 1 : ~(char)0); }

      static const int digits = (sizeof(char) * 8 - ((char)(-1) < 0));
      static const int digits10 = ((sizeof(char) * 8 - ((char)(-1) < 0)) * 643 / 2136);
      static const bool is_signed = ((char)(-1) < 0);
      static const bool is_integer = true;
      static const bool is_exact = true;
      static const int radix = 2;
      static char epsilon() throw()
      { return 0; }
      static char round_error() throw()
      { return 0; }

      static const int min_exponent = 0;
      static const int min_exponent10 = 0;
      static const int max_exponent = 0;
      static const int max_exponent10 = 0;

      static const bool has_infinity = false;
      static const bool has_quiet_NaN = false;
      static const bool has_signaling_NaN = false;
      static const float_denorm_style has_denorm = denorm_absent;
      static const bool has_denorm_loss = false;

      static char infinity() throw()
      { return char(); }
      static char quiet_NaN() throw()
      { return char(); }
      static char signaling_NaN() throw()
      { return char(); }
      static char denorm_min() throw()
      { return static_cast<char>(0); }

      static const bool is_iec559 = false;
      static const bool is_bounded = true;
      static const bool is_modulo = true;

      static const bool traps = true;
      static const bool tinyness_before = false;
      static const float_round_style round_style = round_toward_zero;
    };


  template<>
    struct numeric_limits<signed char>
    {
      static const bool is_specialized = true;

      static signed char min() throw()
      { return -127 - 1; }
      static signed char max() throw()
      { return 127; }

      static const int digits = (sizeof(signed char) * 8 - ((signed char)(-1) < 0));
      static const int digits10 = ((sizeof(signed char) * 8 - ((signed char)(-1) < 0)) * 643 / 2136);
      static const bool is_signed = true;
      static const bool is_integer = true;
      static const bool is_exact = true;
      static const int radix = 2;
      static signed char epsilon() throw()
      { return 0; }
      static signed char round_error() throw()
      { return 0; }

      static const int min_exponent = 0;
      static const int min_exponent10 = 0;
      static const int max_exponent = 0;
      static const int max_exponent10 = 0;

      static const bool has_infinity = false;
      static const bool has_quiet_NaN = false;
      static const bool has_signaling_NaN = false;
      static const float_denorm_style has_denorm = denorm_absent;
      static const bool has_denorm_loss = false;

      static signed char infinity() throw()
      { return static_cast<signed char>(0); }
      static signed char quiet_NaN() throw()
      { return static_cast<signed char>(0); }
      static signed char signaling_NaN() throw()
      { return static_cast<signed char>(0); }
      static signed char denorm_min() throw()
      { return static_cast<signed char>(0); }

      static const bool is_iec559 = false;
      static const bool is_bounded = true;
      static const bool is_modulo = true;

      static const bool traps = true;
      static const bool tinyness_before = false;
      static const float_round_style round_style = round_toward_zero;
    };


  template<>
    struct numeric_limits<unsigned char>
    {
      static const bool is_specialized = true;

      static unsigned char min() throw()
      { return 0; }
      static unsigned char max() throw()
      { return 127 * 2U + 1; }

      static const int digits = (sizeof(unsigned char) * 8 - ((unsigned char)(-1) < 0));
      static const int digits10 = ((sizeof(unsigned char) * 8 - ((unsigned char)(-1) < 0)) * 643 / 2136);
      static const bool is_signed = false;
      static const bool is_integer = true;
      static const bool is_exact = true;
      static const int radix = 2;
      static unsigned char epsilon() throw()
      { return 0; }
      static unsigned char round_error() throw()
      { return 0; }

      static const int min_exponent = 0;
      static const int min_exponent10 = 0;
      static const int max_exponent = 0;
      static const int max_exponent10 = 0;

      static const bool has_infinity = false;
      static const bool has_quiet_NaN = false;
      static const bool has_signaling_NaN = false;
      static const float_denorm_style has_denorm = denorm_absent;
      static const bool has_denorm_loss = false;

      static unsigned char infinity() throw()
      { return static_cast<unsigned char>(0); }
      static unsigned char quiet_NaN() throw()
      { return static_cast<unsigned char>(0); }
      static unsigned char signaling_NaN() throw()
      { return static_cast<unsigned char>(0); }
      static unsigned char denorm_min() throw()
      { return static_cast<unsigned char>(0); }

      static const bool is_iec559 = false;
      static const bool is_bounded = true;
      static const bool is_modulo = true;

      static const bool traps = true;
      static const bool tinyness_before = false;
      static const float_round_style round_style = round_toward_zero;
    };


  template<>
    struct numeric_limits<wchar_t>
    {
      static const bool is_specialized = true;

      static wchar_t min() throw()
      { return (((wchar_t)(-1) < 0) ? (wchar_t)1 << (sizeof(wchar_t) * 8 - ((wchar_t)(-1) < 0)) : (wchar_t)0); }
      static wchar_t max() throw()
      { return (((wchar_t)(-1) < 0) ? ((wchar_t)1 << (sizeof(wchar_t) * 8 - ((wchar_t)(-1) < 0))) - 1 : ~(wchar_t)0); }

      static const int digits = (sizeof(wchar_t) * 8 - ((wchar_t)(-1) < 0));
      static const int digits10 = ((sizeof(wchar_t) * 8 - ((wchar_t)(-1) < 0)) * 643 / 2136);
      static const bool is_signed = ((wchar_t)(-1) < 0);
      static const bool is_integer = true;
      static const bool is_exact = true;
      static const int radix = 2;
      static wchar_t epsilon() throw()
      { return 0; }
      static wchar_t round_error() throw()
      { return 0; }

      static const int min_exponent = 0;
      static const int min_exponent10 = 0;
      static const int max_exponent = 0;
      static const int max_exponent10 = 0;

      static const bool has_infinity = false;
      static const bool has_quiet_NaN = false;
      static const bool has_signaling_NaN = false;
      static const float_denorm_style has_denorm = denorm_absent;
      static const bool has_denorm_loss = false;

      static wchar_t infinity() throw()
      { return wchar_t(); }
      static wchar_t quiet_NaN() throw()
      { return wchar_t(); }
      static wchar_t signaling_NaN() throw()
      { return wchar_t(); }
      static wchar_t denorm_min() throw()
      { return wchar_t(); }

      static const bool is_iec559 = false;
      static const bool is_bounded = true;
      static const bool is_modulo = true;

      static const bool traps = true;
      static const bool tinyness_before = false;
      static const float_round_style round_style = round_toward_zero;
    };


  template<>
    struct numeric_limits<short>
    {
      static const bool is_specialized = true;

      static short min() throw()
      { return -32767 - 1; }
      static short max() throw()
      { return 32767; }

      static const int digits = (sizeof(short) * 8 - ((short)(-1) < 0));
      static const int digits10 = ((sizeof(short) * 8 - ((short)(-1) < 0)) * 643 / 2136);
      static const bool is_signed = true;
      static const bool is_integer = true;
      static const bool is_exact = true;
      static const int radix = 2;
      static short epsilon() throw()
      { return 0; }
      static short round_error() throw()
      { return 0; }

      static const int min_exponent = 0;
      static const int min_exponent10 = 0;
      static const int max_exponent = 0;
      static const int max_exponent10 = 0;

      static const bool has_infinity = false;
      static const bool has_quiet_NaN = false;
      static const bool has_signaling_NaN = false;
      static const float_denorm_style has_denorm = denorm_absent;
      static const bool has_denorm_loss = false;

      static short infinity() throw()
      { return short(); }
      static short quiet_NaN() throw()
      { return short(); }
      static short signaling_NaN() throw()
      { return short(); }
      static short denorm_min() throw()
      { return short(); }

      static const bool is_iec559 = false;
      static const bool is_bounded = true;
      static const bool is_modulo = true;

      static const bool traps = true;
      static const bool tinyness_before = false;
      static const float_round_style round_style = round_toward_zero;
    };


  template<>
    struct numeric_limits<unsigned short>
    {
      static const bool is_specialized = true;

      static unsigned short min() throw()
      { return 0; }
      static unsigned short max() throw()
      { return 32767 * 2U + 1; }

      static const int digits = (sizeof(unsigned short) * 8 - ((unsigned short)(-1) < 0));
      static const int digits10 = ((sizeof(unsigned short) * 8 - ((unsigned short)(-1) < 0)) * 643 / 2136);
      static const bool is_signed = false;
      static const bool is_integer = true;
      static const bool is_exact = true;
      static const int radix = 2;
      static unsigned short epsilon() throw()
      { return 0; }
      static unsigned short round_error() throw()
      { return 0; }

      static const int min_exponent = 0;
      static const int min_exponent10 = 0;
      static const int max_exponent = 0;
      static const int max_exponent10 = 0;

      static const bool has_infinity = false;
      static const bool has_quiet_NaN = false;
      static const bool has_signaling_NaN = false;
      static const float_denorm_style has_denorm = denorm_absent;
      static const bool has_denorm_loss = false;

      static unsigned short infinity() throw()
      { return static_cast<unsigned short>(0); }
      static unsigned short quiet_NaN() throw()
      { return static_cast<unsigned short>(0); }
      static unsigned short signaling_NaN() throw()
      { return static_cast<unsigned short>(0); }
      static unsigned short denorm_min() throw()
      { return static_cast<unsigned short>(0); }

      static const bool is_iec559 = false;
      static const bool is_bounded = true;
      static const bool is_modulo = true;

      static const bool traps = true;
      static const bool tinyness_before = false;
      static const float_round_style round_style = round_toward_zero;
    };


  template<>
    struct numeric_limits<int>
    {
      static const bool is_specialized = true;

      static int min() throw()
      { return -2147483647 - 1; }
      static int max() throw()
      { return 2147483647; }

      static const int digits = (sizeof(int) * 8 - ((int)(-1) < 0));
      static const int digits10 = ((sizeof(int) * 8 - ((int)(-1) < 0)) * 643 / 2136);
      static const bool is_signed = true;
      static const bool is_integer = true;
      static const bool is_exact = true;
      static const int radix = 2;
      static int epsilon() throw()
      { return 0; }
      static int round_error() throw()
      { return 0; }

      static const int min_exponent = 0;
      static const int min_exponent10 = 0;
      static const int max_exponent = 0;
      static const int max_exponent10 = 0;

      static const bool has_infinity = false;
      static const bool has_quiet_NaN = false;
      static const bool has_signaling_NaN = false;
      static const float_denorm_style has_denorm = denorm_absent;
      static const bool has_denorm_loss = false;

      static int infinity() throw()
      { return static_cast<int>(0); }
      static int quiet_NaN() throw()
      { return static_cast<int>(0); }
      static int signaling_NaN() throw()
      { return static_cast<int>(0); }
      static int denorm_min() throw()
      { return static_cast<int>(0); }

      static const bool is_iec559 = false;
      static const bool is_bounded = true;
      static const bool is_modulo = true;

      static const bool traps = true;
      static const bool tinyness_before = false;
      static const float_round_style round_style = round_toward_zero;
    };


  template<>
    struct numeric_limits<unsigned int>
    {
      static const bool is_specialized = true;

      static unsigned int min() throw()
      { return 0; }
      static unsigned int max() throw()
      { return 2147483647 * 2U + 1; }

      static const int digits = (sizeof(unsigned int) * 8 - ((unsigned int)(-1) < 0));
      static const int digits10 = ((sizeof(unsigned int) * 8 - ((unsigned int)(-1) < 0)) * 643 / 2136);
      static const bool is_signed = false;
      static const bool is_integer = true;
      static const bool is_exact = true;
      static const int radix = 2;
      static unsigned int epsilon() throw()
      { return 0; }
      static unsigned int round_error() throw()
      { return 0; }

      static const int min_exponent = 0;
      static const int min_exponent10 = 0;
      static const int max_exponent = 0;
      static const int max_exponent10 = 0;

      static const bool has_infinity = false;
      static const bool has_quiet_NaN = false;
      static const bool has_signaling_NaN = false;
      static const float_denorm_style has_denorm = denorm_absent;
      static const bool has_denorm_loss = false;

      static unsigned int infinity() throw()
      { return static_cast<unsigned int>(0); }
      static unsigned int quiet_NaN() throw()
      { return static_cast<unsigned int>(0); }
      static unsigned int signaling_NaN() throw()
      { return static_cast<unsigned int>(0); }
      static unsigned int denorm_min() throw()
      { return static_cast<unsigned int>(0); }

      static const bool is_iec559 = false;
      static const bool is_bounded = true;
      static const bool is_modulo = true;

      static const bool traps = true;
      static const bool tinyness_before = false;
      static const float_round_style round_style = round_toward_zero;
    };


  template<>
    struct numeric_limits<long>
    {
      static const bool is_specialized = true;

      static long min() throw()
      { return -9223372036854775807L - 1; }
      static long max() throw()
      { return 9223372036854775807L; }

      static const int digits = (sizeof(long) * 8 - ((long)(-1) < 0));
      static const int digits10 = ((sizeof(long) * 8 - ((long)(-1) < 0)) * 643 / 2136);
      static const bool is_signed = true;
      static const bool is_integer = true;
      static const bool is_exact = true;
      static const int radix = 2;
      static long epsilon() throw()
      { return 0; }
      static long round_error() throw()
      { return 0; }

      static const int min_exponent = 0;
      static const int min_exponent10 = 0;
      static const int max_exponent = 0;
      static const int max_exponent10 = 0;

      static const bool has_infinity = false;
      static const bool has_quiet_NaN = false;
      static const bool has_signaling_NaN = false;
      static const float_denorm_style has_denorm = denorm_absent;
      static const bool has_denorm_loss = false;

      static long infinity() throw()
      { return static_cast<long>(0); }
      static long quiet_NaN() throw()
      { return static_cast<long>(0); }
      static long signaling_NaN() throw()
      { return static_cast<long>(0); }
      static long denorm_min() throw()
      { return static_cast<long>(0); }

      static const bool is_iec559 = false;
      static const bool is_bounded = true;
      static const bool is_modulo = true;

      static const bool traps = true;
      static const bool tinyness_before = false;
      static const float_round_style round_style = round_toward_zero;
    };


  template<>
    struct numeric_limits<unsigned long>
    {
      static const bool is_specialized = true;

      static unsigned long min() throw()
      { return 0; }
      static unsigned long max() throw()
      { return 9223372036854775807L * 2UL + 1; }

      static const int digits = (sizeof(unsigned long) * 8 - ((unsigned long)(-1) < 0));
      static const int digits10 = ((sizeof(unsigned long) * 8 - ((unsigned long)(-1) < 0)) * 643 / 2136);
      static const bool is_signed = false;
      static const bool is_integer = true;
      static const bool is_exact = true;
      static const int radix = 2;
      static unsigned long epsilon() throw()
      { return 0; }
      static unsigned long round_error() throw()
      { return 0; }

      static const int min_exponent = 0;
      static const int min_exponent10 = 0;
      static const int max_exponent = 0;
      static const int max_exponent10 = 0;

      static const bool has_infinity = false;
      static const bool has_quiet_NaN = false;
      static const bool has_signaling_NaN = false;
      static const float_denorm_style has_denorm = denorm_absent;
      static const bool has_denorm_loss = false;

      static unsigned long infinity() throw()
      { return static_cast<unsigned long>(0); }
      static unsigned long quiet_NaN() throw()
      { return static_cast<unsigned long>(0); }
      static unsigned long signaling_NaN() throw()
      { return static_cast<unsigned long>(0); }
      static unsigned long denorm_min() throw()
      { return static_cast<unsigned long>(0); }

      static const bool is_iec559 = false;
      static const bool is_bounded = true;
      static const bool is_modulo = true;

      static const bool traps = true;
      static const bool tinyness_before = false;
      static const float_round_style round_style = round_toward_zero;
    };


  template<>
    struct numeric_limits<long long>
    {
      static const bool is_specialized = true;

      static long long min() throw()
      { return -9223372036854775807LL - 1; }
      static long long max() throw()
      { return 9223372036854775807LL; }

      static const int digits = (sizeof(long long) * 8 - ((long long)(-1) < 0));
      static const int digits10 = ((sizeof(long long) * 8 - ((long long)(-1) < 0)) * 643 / 2136);
      static const bool is_signed = true;
      static const bool is_integer = true;
      static const bool is_exact = true;
      static const int radix = 2;
      static long long epsilon() throw()
      { return 0; }
      static long long round_error() throw()
      { return 0; }

      static const int min_exponent = 0;
      static const int min_exponent10 = 0;
      static const int max_exponent = 0;
      static const int max_exponent10 = 0;

      static const bool has_infinity = false;
      static const bool has_quiet_NaN = false;
      static const bool has_signaling_NaN = false;
      static const float_denorm_style has_denorm = denorm_absent;
      static const bool has_denorm_loss = false;

      static long long infinity() throw()
      { return static_cast<long long>(0); }
      static long long quiet_NaN() throw()
      { return static_cast<long long>(0); }
      static long long signaling_NaN() throw()
      { return static_cast<long long>(0); }
      static long long denorm_min() throw()
      { return static_cast<long long>(0); }

      static const bool is_iec559 = false;
      static const bool is_bounded = true;
      static const bool is_modulo = true;

      static const bool traps = true;
      static const bool tinyness_before = false;
      static const float_round_style round_style = round_toward_zero;
    };


  template<>
    struct numeric_limits<unsigned long long>
    {
      static const bool is_specialized = true;

      static unsigned long long min() throw()
      { return 0; }
      static unsigned long long max() throw()
      { return 9223372036854775807LL * 2ULL + 1; }

      static const int digits = (sizeof(unsigned long long) * 8 - ((unsigned long long)(-1) < 0));
      static const int digits10 = ((sizeof(unsigned long long) * 8 - ((unsigned long long)(-1) < 0)) * 643 / 2136);
      static const bool is_signed = false;
      static const bool is_integer = true;
      static const bool is_exact = true;
      static const int radix = 2;
      static unsigned long long epsilon() throw()
      { return 0; }
      static unsigned long long round_error() throw()
      { return 0; }

      static const int min_exponent = 0;
      static const int min_exponent10 = 0;
      static const int max_exponent = 0;
      static const int max_exponent10 = 0;

      static const bool has_infinity = false;
      static const bool has_quiet_NaN = false;
      static const bool has_signaling_NaN = false;
      static const float_denorm_style has_denorm = denorm_absent;
      static const bool has_denorm_loss = false;

      static unsigned long long infinity() throw()
      { return static_cast<unsigned long long>(0); }
      static unsigned long long quiet_NaN() throw()
      { return static_cast<unsigned long long>(0); }
      static unsigned long long signaling_NaN() throw()
      { return static_cast<unsigned long long>(0); }
      static unsigned long long denorm_min() throw()
      { return static_cast<unsigned long long>(0); }

      static const bool is_iec559 = false;
      static const bool is_bounded = true;
      static const bool is_modulo = true;

      static const bool traps = true;
      static const bool tinyness_before = false;
      static const float_round_style round_style = round_toward_zero;
    };


  template<>
    struct numeric_limits<float>
    {
      static const bool is_specialized = true;

      static float min() throw()
      { return 1.17549435e-38F; }
      static float max() throw()
      { return 3.40282347e+38F; }

      static const int digits = 24;
      static const int digits10 = 6;
      static const bool is_signed = true;
      static const bool is_integer = false;
      static const bool is_exact = false;
      static const int radix = 2;
      static float epsilon() throw()
      { return 1.19209290e-7F; }
      static float round_error() throw()
      { return 0.5F; }

      static const int min_exponent = (-125);
      static const int min_exponent10 = (-37);
      static const int max_exponent = 128;
      static const int max_exponent10 = 38;

      static const bool has_infinity = 1;
      static const bool has_quiet_NaN = 1;
      static const bool has_signaling_NaN = has_quiet_NaN;
      static const float_denorm_style has_denorm
 = bool(1) ? denorm_present : denorm_absent;
      static const bool has_denorm_loss = false;

      static float infinity() throw()
      { return __builtin_huge_valf (); }
      static float quiet_NaN() throw()
      { return __builtin_nanf (""); }
      static float signaling_NaN() throw()
      { return __builtin_nansf (""); }
      static float denorm_min() throw()
      { return 1.40129846e-45F; }

      static const bool is_iec559
 = has_infinity && has_quiet_NaN && has_denorm == denorm_present;
      static const bool is_bounded = true;
      static const bool is_modulo = false;

      static const bool traps = false;
      static const bool tinyness_before = false;
      static const float_round_style round_style = round_to_nearest;
    };






  template<>
    struct numeric_limits<double>
    {
      static const bool is_specialized = true;

      static double min() throw()
      { return 2.2250738585072014e-308; }
      static double max() throw()
      { return 1.7976931348623157e+308; }

      static const int digits = 53;
      static const int digits10 = 15;
      static const bool is_signed = true;
      static const bool is_integer = false;
      static const bool is_exact = false;
      static const int radix = 2;
      static double epsilon() throw()
      { return 2.2204460492503131e-16; }
      static double round_error() throw()
      { return 0.5; }

      static const int min_exponent = (-1021);
      static const int min_exponent10 = (-307);
      static const int max_exponent = 1024;
      static const int max_exponent10 = 308;

      static const bool has_infinity = 1;
      static const bool has_quiet_NaN = 1;
      static const bool has_signaling_NaN = has_quiet_NaN;
      static const float_denorm_style has_denorm
 = bool(1) ? denorm_present : denorm_absent;
      static const bool has_denorm_loss = false;

      static double infinity() throw()
      { return __builtin_huge_val(); }
      static double quiet_NaN() throw()
      { return __builtin_nan (""); }
      static double signaling_NaN() throw()
      { return __builtin_nans (""); }
      static double denorm_min() throw()
      { return 4.9406564584124654e-324; }

      static const bool is_iec559
 = has_infinity && has_quiet_NaN && has_denorm == denorm_present;
      static const bool is_bounded = true;
      static const bool is_modulo = false;

      static const bool traps = false;
      static const bool tinyness_before = false;
      static const float_round_style round_style = round_to_nearest;
    };






  template<>
    struct numeric_limits<long double>
    {
      static const bool is_specialized = true;

      static long double min() throw()
      { return 3.36210314311209350626e-4932L; }
      static long double max() throw()
      { return 1.18973149535723176502e+4932L; }

      static const int digits = 64;
      static const int digits10 = 18;
      static const bool is_signed = true;
      static const bool is_integer = false;
      static const bool is_exact = false;
      static const int radix = 2;
      static long double epsilon() throw()
      { return 1.08420217248550443401e-19L; }
      static long double round_error() throw()
      { return 0.5L; }

      static const int min_exponent = (-16381);
      static const int min_exponent10 = (-4931);
      static const int max_exponent = 16384;
      static const int max_exponent10 = 4932;

      static const bool has_infinity = 1;
      static const bool has_quiet_NaN = 1;
      static const bool has_signaling_NaN = has_quiet_NaN;
      static const float_denorm_style has_denorm
 = bool(1) ? denorm_present : denorm_absent;
      static const bool has_denorm_loss
 = false;

      static long double infinity() throw()
      { return __builtin_huge_vall (); }
      static long double quiet_NaN() throw()
      { return __builtin_nanl (""); }
      static long double signaling_NaN() throw()
      { return __builtin_nansl (""); }
      static long double denorm_min() throw()
      { return 3.64519953188247460253e-4951L; }

      static const bool is_iec559
 = has_infinity && has_quiet_NaN && has_denorm == denorm_present;
      static const bool is_bounded = true;
      static const bool is_modulo = false;

      static const bool traps = false;
      static const bool tinyness_before = false;
      static const float_round_style round_style = round_to_nearest;
    };





}
# 61 "/usr/include/c++/4.2.1/memory" 2 3

namespace std {
# 72 "/usr/include/c++/4.2.1/memory" 3
  template<typename _Tp>
    pair<_Tp*, ptrdiff_t>
    __get_temporary_buffer(ptrdiff_t __len, _Tp*)
    {
      const ptrdiff_t __max = numeric_limits<ptrdiff_t>::max() / sizeof(_Tp);
      if (__len > __max)
 __len = __max;

      while (__len > 0)
 {
   _Tp* __tmp = static_cast<_Tp*>(::operator new(__len * sizeof(_Tp),
       nothrow));
   if (__tmp != 0)
     return pair<_Tp*, ptrdiff_t>(__tmp, __len);
   __len /= 2;
 }
      return pair<_Tp*, ptrdiff_t>(static_cast<_Tp*>(0), 0);
    }
# 108 "/usr/include/c++/4.2.1/memory" 3
  template<typename _Tp>
    inline pair<_Tp*, ptrdiff_t>
    get_temporary_buffer(ptrdiff_t __len)
    { return std::__get_temporary_buffer(__len, static_cast<_Tp*>(0)); }
# 120 "/usr/include/c++/4.2.1/memory" 3
  template<typename _Tp>
    void
    return_temporary_buffer(_Tp* __p)
    { ::operator delete(__p, nothrow); }
# 132 "/usr/include/c++/4.2.1/memory" 3
  template<typename _Tp1>
    struct auto_ptr_ref
    {
      _Tp1* _M_ptr;

      explicit
      auto_ptr_ref(_Tp1* __p): _M_ptr(__p) { }
    };
# 173 "/usr/include/c++/4.2.1/memory" 3
  template<typename _Tp>
    class auto_ptr
    {
    private:
      _Tp* _M_ptr;

    public:

      typedef _Tp element_type;







      explicit
      auto_ptr(element_type* __p = 0) throw() : _M_ptr(__p) { }
# 199 "/usr/include/c++/4.2.1/memory" 3
      auto_ptr(auto_ptr& __a) throw() : _M_ptr(__a.release()) { }
# 211 "/usr/include/c++/4.2.1/memory" 3
      template<typename _Tp1>
        auto_ptr(auto_ptr<_Tp1>& __a) throw() : _M_ptr(__a.release()) { }
# 222 "/usr/include/c++/4.2.1/memory" 3
      auto_ptr&
      operator=(auto_ptr& __a) throw()
      {
 reset(__a.release());
 return *this;
      }
# 239 "/usr/include/c++/4.2.1/memory" 3
      template<typename _Tp1>
        auto_ptr&
        operator=(auto_ptr<_Tp1>& __a) throw()
        {
   reset(__a.release());
   return *this;
 }
# 259 "/usr/include/c++/4.2.1/memory" 3
      ~auto_ptr() { delete _M_ptr; }
# 269 "/usr/include/c++/4.2.1/memory" 3
      element_type&
      operator*() const throw()
      {
 ;
 return *_M_ptr;
      }







      element_type*
      operator->() const throw()
      {
 ;
 return _M_ptr;
      }
# 299 "/usr/include/c++/4.2.1/memory" 3
      element_type*
      get() const throw() { return _M_ptr; }
# 313 "/usr/include/c++/4.2.1/memory" 3
      element_type*
      release() throw()
      {
 element_type* __tmp = _M_ptr;
 _M_ptr = 0;
 return __tmp;
      }
# 328 "/usr/include/c++/4.2.1/memory" 3
      void
      reset(element_type* __p = 0) throw()
      {
 if (__p != _M_ptr)
   {
     delete _M_ptr;
     _M_ptr = __p;
   }
      }
# 349 "/usr/include/c++/4.2.1/memory" 3
      auto_ptr(auto_ptr_ref<element_type> __ref) throw()
      : _M_ptr(__ref._M_ptr) { }

      auto_ptr&
      operator=(auto_ptr_ref<element_type> __ref) throw()
      {
 if (__ref._M_ptr != this->get())
   {
     delete _M_ptr;
     _M_ptr = __ref._M_ptr;
   }
 return *this;
      }

      template<typename _Tp1>
        operator auto_ptr_ref<_Tp1>() throw()
        { return auto_ptr_ref<_Tp1>(this->release()); }

      template<typename _Tp1>
        operator auto_ptr<_Tp1>() throw()
        { return auto_ptr<_Tp1>(this->release()); }
  };

}
# 49 "/usr/include/c++/4.2.1/string" 2 3


# 1 "/usr/include/c++/4.2.1/bits/ostream_insert.h" 1 3
# 38 "/usr/include/c++/4.2.1/bits/ostream_insert.h" 3
       
# 39 "/usr/include/c++/4.2.1/bits/ostream_insert.h" 3



namespace std {

  template<typename _CharT, typename _Traits>
    inline void
    __ostream_write(basic_ostream<_CharT, _Traits>& __out,
      const _CharT* __s, streamsize __n)
    {
      typedef basic_ostream<_CharT, _Traits> __ostream_type;
      typedef typename __ostream_type::ios_base __ios_base;

      const streamsize __put = __out.rdbuf()->sputn(__s, __n);
      if (__put != __n)
 __out.setstate(__ios_base::badbit);
    }

  template<typename _CharT, typename _Traits>
    inline void
    __ostream_fill(basic_ostream<_CharT, _Traits>& __out, streamsize __n)
    {
      typedef basic_ostream<_CharT, _Traits> __ostream_type;
      typedef typename __ostream_type::ios_base __ios_base;

      const _CharT __c = __out.fill();
      for (; __n > 0; --__n)
 {
   const typename _Traits::int_type __put = __out.rdbuf()->sputc(__c);
   if (_Traits::eq_int_type(__put, _Traits::eof()))
     {
       __out.setstate(__ios_base::badbit);
       break;
     }
 }
    }

  template<typename _CharT, typename _Traits>
    basic_ostream<_CharT, _Traits>&
    __ostream_insert(basic_ostream<_CharT, _Traits>& __out,
       const _CharT* __s, streamsize __n)
    {
      typedef basic_ostream<_CharT, _Traits> __ostream_type;
      typedef typename __ostream_type::ios_base __ios_base;

      typename __ostream_type::sentry __cerb(__out);
      if (__cerb)
 {
   try
     {
       const streamsize __w = __out.width();
       if (__w > __n)
  {
    const bool __left = ((__out.flags()
     & __ios_base::adjustfield)
           == __ios_base::left);
    if (!__left)
      __ostream_fill(__out, __w - __n);
    if (__out.good())
      __ostream_write(__out, __s, __n);
    if (__left && __out.good())
      __ostream_fill(__out, __w - __n);
  }
       else
  __ostream_write(__out, __s, __n);
       __out.width(0);
     }
   catch(...)
     { __out._M_setstate(__ios_base::badbit); }
 }
      return __out;
    }





  extern template ostream& __ostream_insert(ostream&, const char*, streamsize);


  extern template wostream& __ostream_insert(wostream&, const wchar_t*,
          streamsize);



}
# 52 "/usr/include/c++/4.2.1/string" 2 3

# 1 "/usr/include/c++/4.2.1/bits/stl_function.h" 1 3
# 64 "/usr/include/c++/4.2.1/bits/stl_function.h" 3
namespace std {
# 101 "/usr/include/c++/4.2.1/bits/stl_function.h" 3
  template <class _Arg, class _Result>
    struct unary_function
    {
      typedef _Arg argument_type;


      typedef _Result result_type;
    };




  template <class _Arg1, class _Arg2, class _Result>
    struct binary_function
    {
      typedef _Arg1 first_argument_type;


      typedef _Arg2 second_argument_type;
      typedef _Result result_type;
    };
# 133 "/usr/include/c++/4.2.1/bits/stl_function.h" 3
  template <class _Tp>
    struct plus : public binary_function<_Tp, _Tp, _Tp>
    {
      _Tp
      operator()(const _Tp& __x, const _Tp& __y) const
      { return __x + __y; }
    };


  template <class _Tp>
    struct minus : public binary_function<_Tp, _Tp, _Tp>
    {
      _Tp
      operator()(const _Tp& __x, const _Tp& __y) const
      { return __x - __y; }
    };


  template <class _Tp>
    struct multiplies : public binary_function<_Tp, _Tp, _Tp>
    {
      _Tp
      operator()(const _Tp& __x, const _Tp& __y) const
      { return __x * __y; }
    };


  template <class _Tp>
    struct divides : public binary_function<_Tp, _Tp, _Tp>
    {
      _Tp
      operator()(const _Tp& __x, const _Tp& __y) const
      { return __x / __y; }
    };


  template <class _Tp>
    struct modulus : public binary_function<_Tp, _Tp, _Tp>
    {
      _Tp
      operator()(const _Tp& __x, const _Tp& __y) const
      { return __x % __y; }
    };


  template <class _Tp>
    struct negate : public unary_function<_Tp, _Tp>
    {
      _Tp
      operator()(const _Tp& __x) const
      { return -__x; }
    };
# 195 "/usr/include/c++/4.2.1/bits/stl_function.h" 3
  template <class _Tp>
    struct equal_to : public binary_function<_Tp, _Tp, bool>
    {
      bool
      operator()(const _Tp& __x, const _Tp& __y) const
      { return __x == __y; }
    };


  template <class _Tp>
    struct not_equal_to : public binary_function<_Tp, _Tp, bool>
    {
      bool
      operator()(const _Tp& __x, const _Tp& __y) const
      { return __x != __y; }
    };


  template <class _Tp>
    struct greater : public binary_function<_Tp, _Tp, bool>
    {
      bool
      operator()(const _Tp& __x, const _Tp& __y) const
      { return __x > __y; }
    };


  template <class _Tp>
    struct less : public binary_function<_Tp, _Tp, bool>
    {
      bool
      operator()(const _Tp& __x, const _Tp& __y) const
      { return __x < __y; }
    };


  template <class _Tp>
    struct greater_equal : public binary_function<_Tp, _Tp, bool>
    {
      bool
      operator()(const _Tp& __x, const _Tp& __y) const
      { return __x >= __y; }
    };


  template <class _Tp>
    struct less_equal : public binary_function<_Tp, _Tp, bool>
    {
      bool
      operator()(const _Tp& __x, const _Tp& __y) const
      { return __x <= __y; }
    };
# 256 "/usr/include/c++/4.2.1/bits/stl_function.h" 3
  template <class _Tp>
    struct logical_and : public binary_function<_Tp, _Tp, bool>
    {
      bool
      operator()(const _Tp& __x, const _Tp& __y) const
      { return __x && __y; }
    };


  template <class _Tp>
    struct logical_or : public binary_function<_Tp, _Tp, bool>
    {
      bool
      operator()(const _Tp& __x, const _Tp& __y) const
      { return __x || __y; }
    };


  template <class _Tp>
    struct logical_not : public unary_function<_Tp, bool>
    {
      bool
      operator()(const _Tp& __x) const
      { return !__x; }
    };
# 311 "/usr/include/c++/4.2.1/bits/stl_function.h" 3
  template <class _Predicate>
    class unary_negate
    : public unary_function<typename _Predicate::argument_type, bool>
    {
    protected:
      _Predicate _M_pred;
    public:
      explicit
      unary_negate(const _Predicate& __x) : _M_pred(__x) {}

      bool
      operator()(const typename _Predicate::argument_type& __x) const
      { return !_M_pred(__x); }
    };


  template <class _Predicate>
    inline unary_negate<_Predicate>
    not1(const _Predicate& __pred)
    { return unary_negate<_Predicate>(__pred); }


  template <class _Predicate>
    class binary_negate
    : public binary_function<typename _Predicate::first_argument_type,
        typename _Predicate::second_argument_type,
        bool>
    {
    protected:
      _Predicate _M_pred;
    public:
      explicit
      binary_negate(const _Predicate& __x)
      : _M_pred(__x) { }

      bool
      operator()(const typename _Predicate::first_argument_type& __x,
   const typename _Predicate::second_argument_type& __y) const
      { return !_M_pred(__x, __y); }
    };


  template <class _Predicate>
    inline binary_negate<_Predicate>
    not2(const _Predicate& __pred)
    { return binary_negate<_Predicate>(__pred); }
# 391 "/usr/include/c++/4.2.1/bits/stl_function.h" 3
  template <class _Operation>
    class binder1st
    : public unary_function<typename _Operation::second_argument_type,
       typename _Operation::result_type>
    {
    protected:
      _Operation op;
      typename _Operation::first_argument_type value;
    public:
      binder1st(const _Operation& __x,
  const typename _Operation::first_argument_type& __y)
      : op(__x), value(__y) {}

      typename _Operation::result_type
      operator()(const typename _Operation::second_argument_type& __x) const
      { return op(value, __x); }



      typename _Operation::result_type
      operator()(typename _Operation::second_argument_type& __x) const
      { return op(value, __x); }
    };


  template <class _Operation, class _Tp>
    inline binder1st<_Operation>
    bind1st(const _Operation& __fn, const _Tp& __x)
    {
      typedef typename _Operation::first_argument_type _Arg1_type;
      return binder1st<_Operation>(__fn, _Arg1_type(__x));
    }


  template <class _Operation>
    class binder2nd
    : public unary_function<typename _Operation::first_argument_type,
       typename _Operation::result_type>
    {
    protected:
      _Operation op;
      typename _Operation::second_argument_type value;
    public:
      binder2nd(const _Operation& __x,
  const typename _Operation::second_argument_type& __y)
      : op(__x), value(__y) {}

      typename _Operation::result_type
      operator()(const typename _Operation::first_argument_type& __x) const
      { return op(__x, value); }



      typename _Operation::result_type
      operator()(typename _Operation::first_argument_type& __x) const
      { return op(__x, value); }
    };


  template <class _Operation, class _Tp>
    inline binder2nd<_Operation>
    bind2nd(const _Operation& __fn, const _Tp& __x)
    {
      typedef typename _Operation::second_argument_type _Arg2_type;
      return binder2nd<_Operation>(__fn, _Arg2_type(__x));
    }
# 480 "/usr/include/c++/4.2.1/bits/stl_function.h" 3
  template <class _Arg, class _Result>
    class pointer_to_unary_function : public unary_function<_Arg, _Result>
    {
    protected:
      _Result (*_M_ptr)(_Arg);
    public:
      pointer_to_unary_function() {}

      explicit
      pointer_to_unary_function(_Result (*__x)(_Arg))
      : _M_ptr(__x) {}

      _Result
      operator()(_Arg __x) const
      { return _M_ptr(__x); }
    };


  template <class _Arg, class _Result>
    inline pointer_to_unary_function<_Arg, _Result>
    ptr_fun(_Result (*__x)(_Arg))
    { return pointer_to_unary_function<_Arg, _Result>(__x); }


  template <class _Arg1, class _Arg2, class _Result>
    class pointer_to_binary_function
    : public binary_function<_Arg1, _Arg2, _Result>
    {
    protected:
      _Result (*_M_ptr)(_Arg1, _Arg2);
    public:
      pointer_to_binary_function() {}

      explicit
      pointer_to_binary_function(_Result (*__x)(_Arg1, _Arg2))
      : _M_ptr(__x) {}

      _Result
      operator()(_Arg1 __x, _Arg2 __y) const
      { return _M_ptr(__x, __y); }
    };


  template <class _Arg1, class _Arg2, class _Result>
    inline pointer_to_binary_function<_Arg1, _Arg2, _Result>
    ptr_fun(_Result (*__x)(_Arg1, _Arg2))
    { return pointer_to_binary_function<_Arg1, _Arg2, _Result>(__x); }


  template <class _Tp>
    struct _Identity : public unary_function<_Tp,_Tp>
    {
      _Tp&
      operator()(_Tp& __x) const
      { return __x; }

      const _Tp&
      operator()(const _Tp& __x) const
      { return __x; }
    };

  template <class _Pair>
    struct _Select1st : public unary_function<_Pair,
           typename _Pair::first_type>
    {
      typename _Pair::first_type&
      operator()(_Pair& __x) const
      { return __x.first; }

      const typename _Pair::first_type&
      operator()(const _Pair& __x) const
      { return __x.first; }
    };

  template <class _Pair>
    struct _Select2nd : public unary_function<_Pair,
           typename _Pair::second_type>
    {
      typename _Pair::second_type&
      operator()(_Pair& __x) const
      { return __x.second; }

      const typename _Pair::second_type&
      operator()(const _Pair& __x) const
      { return __x.second; }
    };
# 582 "/usr/include/c++/4.2.1/bits/stl_function.h" 3
  template <class _Ret, class _Tp>
    class mem_fun_t : public unary_function<_Tp*, _Ret>
    {
    public:
      explicit
      mem_fun_t(_Ret (_Tp::*__pf)())
      : _M_f(__pf) {}

      _Ret
      operator()(_Tp* __p) const
      { return (__p->*_M_f)(); }
    private:
      _Ret (_Tp::*_M_f)();
    };


  template <class _Ret, class _Tp>
    class const_mem_fun_t : public unary_function<const _Tp*, _Ret>
    {
    public:
      explicit
      const_mem_fun_t(_Ret (_Tp::*__pf)() const)
      : _M_f(__pf) {}

      _Ret
      operator()(const _Tp* __p) const
      { return (__p->*_M_f)(); }
    private:
      _Ret (_Tp::*_M_f)() const;
    };


  template <class _Ret, class _Tp>
    class mem_fun_ref_t : public unary_function<_Tp, _Ret>
    {
    public:
      explicit
      mem_fun_ref_t(_Ret (_Tp::*__pf)())
      : _M_f(__pf) {}

      _Ret
      operator()(_Tp& __r) const
      { return (__r.*_M_f)(); }
    private:
      _Ret (_Tp::*_M_f)();
  };


  template <class _Ret, class _Tp>
    class const_mem_fun_ref_t : public unary_function<_Tp, _Ret>
    {
    public:
      explicit
      const_mem_fun_ref_t(_Ret (_Tp::*__pf)() const)
      : _M_f(__pf) {}

      _Ret
      operator()(const _Tp& __r) const
      { return (__r.*_M_f)(); }
    private:
      _Ret (_Tp::*_M_f)() const;
    };


  template <class _Ret, class _Tp, class _Arg>
    class mem_fun1_t : public binary_function<_Tp*, _Arg, _Ret>
    {
    public:
      explicit
      mem_fun1_t(_Ret (_Tp::*__pf)(_Arg))
      : _M_f(__pf) {}

      _Ret
      operator()(_Tp* __p, _Arg __x) const
      { return (__p->*_M_f)(__x); }
    private:
      _Ret (_Tp::*_M_f)(_Arg);
    };


  template <class _Ret, class _Tp, class _Arg>
    class const_mem_fun1_t : public binary_function<const _Tp*, _Arg, _Ret>
    {
    public:
      explicit
      const_mem_fun1_t(_Ret (_Tp::*__pf)(_Arg) const)
      : _M_f(__pf) {}

      _Ret
      operator()(const _Tp* __p, _Arg __x) const
      { return (__p->*_M_f)(__x); }
    private:
      _Ret (_Tp::*_M_f)(_Arg) const;
    };


  template <class _Ret, class _Tp, class _Arg>
    class mem_fun1_ref_t : public binary_function<_Tp, _Arg, _Ret>
    {
    public:
      explicit
      mem_fun1_ref_t(_Ret (_Tp::*__pf)(_Arg))
      : _M_f(__pf) {}

      _Ret
      operator()(_Tp& __r, _Arg __x) const
      { return (__r.*_M_f)(__x); }
    private:
      _Ret (_Tp::*_M_f)(_Arg);
    };


  template <class _Ret, class _Tp, class _Arg>
    class const_mem_fun1_ref_t : public binary_function<_Tp, _Arg, _Ret>
    {
    public:
      explicit
      const_mem_fun1_ref_t(_Ret (_Tp::*__pf)(_Arg) const)
      : _M_f(__pf) {}

      _Ret
      operator()(const _Tp& __r, _Arg __x) const
      { return (__r.*_M_f)(__x); }
    private:
      _Ret (_Tp::*_M_f)(_Arg) const;
    };



  template <class _Ret, class _Tp>
    inline mem_fun_t<_Ret, _Tp>
    mem_fun(_Ret (_Tp::*__f)())
    { return mem_fun_t<_Ret, _Tp>(__f); }

  template <class _Ret, class _Tp>
    inline const_mem_fun_t<_Ret, _Tp>
    mem_fun(_Ret (_Tp::*__f)() const)
    { return const_mem_fun_t<_Ret, _Tp>(__f); }

  template <class _Ret, class _Tp>
    inline mem_fun_ref_t<_Ret, _Tp>
    mem_fun_ref(_Ret (_Tp::*__f)())
    { return mem_fun_ref_t<_Ret, _Tp>(__f); }

  template <class _Ret, class _Tp>
    inline const_mem_fun_ref_t<_Ret, _Tp>
    mem_fun_ref(_Ret (_Tp::*__f)() const)
    { return const_mem_fun_ref_t<_Ret, _Tp>(__f); }

  template <class _Ret, class _Tp, class _Arg>
    inline mem_fun1_t<_Ret, _Tp, _Arg>
    mem_fun(_Ret (_Tp::*__f)(_Arg))
    { return mem_fun1_t<_Ret, _Tp, _Arg>(__f); }

  template <class _Ret, class _Tp, class _Arg>
    inline const_mem_fun1_t<_Ret, _Tp, _Arg>
    mem_fun(_Ret (_Tp::*__f)(_Arg) const)
    { return const_mem_fun1_t<_Ret, _Tp, _Arg>(__f); }

  template <class _Ret, class _Tp, class _Arg>
    inline mem_fun1_ref_t<_Ret, _Tp, _Arg>
    mem_fun_ref(_Ret (_Tp::*__f)(_Arg))
    { return mem_fun1_ref_t<_Ret, _Tp, _Arg>(__f); }

  template <class _Ret, class _Tp, class _Arg>
    inline const_mem_fun1_ref_t<_Ret, _Tp, _Arg>
    mem_fun_ref(_Ret (_Tp::*__f)(_Arg) const)
    { return const_mem_fun1_ref_t<_Ret, _Tp, _Arg>(__f); }



}
# 54 "/usr/include/c++/4.2.1/string" 2 3
# 1 "/usr/include/c++/4.2.1/bits/basic_string.h" 1 3
# 44 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
       
# 45 "/usr/include/c++/4.2.1/bits/basic_string.h" 3




namespace std {
# 110 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
  template<typename _CharT, typename _Traits, typename _Alloc>
    class basic_string
    {
      typedef typename _Alloc::template rebind<_CharT>::other _CharT_alloc_type;


    public:
      typedef _Traits traits_type;
      typedef typename _Traits::char_type value_type;
      typedef _Alloc allocator_type;
      typedef typename _CharT_alloc_type::size_type size_type;
      typedef typename _CharT_alloc_type::difference_type difference_type;
      typedef typename _CharT_alloc_type::reference reference;
      typedef typename _CharT_alloc_type::const_reference const_reference;
      typedef typename _CharT_alloc_type::pointer pointer;
      typedef typename _CharT_alloc_type::const_pointer const_pointer;
      typedef __gnu_cxx::__normal_iterator<pointer, basic_string> iterator;
      typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
                                                            const_iterator;
      typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
      typedef std::reverse_iterator<iterator> reverse_iterator;

    private:
# 147 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      struct _Rep_base
      {
 size_type _M_length;
 size_type _M_capacity;
 _Atomic_word _M_refcount;
      };

      struct _Rep : _Rep_base
      {

 typedef typename _Alloc::template rebind<char>::other _Raw_bytes_alloc;
# 172 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
 static const size_type _S_max_size;
 static const _CharT _S_terminal;



        static size_type _S_empty_rep_storage[];

        static _Rep&
        _S_empty_rep()
        {



   void* __p = reinterpret_cast<void*>(&_S_empty_rep_storage);
   return *reinterpret_cast<_Rep*>(__p);
 }

        bool
 _M_is_leaked() const
        { return this->_M_refcount < 0; }

        bool
 _M_is_shared() const
        { return this->_M_refcount > 0; }

        void
 _M_set_leaked()
        { this->_M_refcount = -1; }

        void
 _M_set_sharable()
        { this->_M_refcount = 0; }

 void
 _M_set_length_and_sharable(size_type __n)
 {
   this->_M_set_sharable();
   this->_M_length = __n;
   traits_type::assign(this->_M_refdata()[__n], _S_terminal);


 }

 _CharT*
 _M_refdata() throw()
 { return reinterpret_cast<_CharT*>(this + 1); }

 _CharT*
 _M_grab(const _Alloc& __alloc1, const _Alloc& __alloc2)
 {
   return (!_M_is_leaked() && __alloc1 == __alloc2)
           ? _M_refcopy() : _M_clone(__alloc1);
 }


 static _Rep*
 _S_create(size_type, size_type, const _Alloc&);

 void
 _M_dispose(const _Alloc& __a)
 {

   if (__builtin_expect(this != &_S_empty_rep(), false))

     if (__gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount,
             -1) <= 0)
       _M_destroy(__a);
 }

 void
 _M_destroy(const _Alloc&) throw();

 _CharT*
 _M_refcopy() throw()
 {

   if (__builtin_expect(this != &_S_empty_rep(), false))

            __gnu_cxx::__atomic_add_dispatch(&this->_M_refcount, 1);
   return _M_refdata();
 }

 _CharT*
 _M_clone(const _Alloc&, size_type __res = 0);
      };


      struct _Alloc_hider : _Alloc
      {
 _Alloc_hider(_CharT* __dat, const _Alloc& __a)
 : _Alloc(__a), _M_p(__dat) { }

 _CharT* _M_p;
      };

    public:




      static const size_type npos = static_cast<size_type>(-1);

    private:

      mutable _Alloc_hider _M_dataplus;

      _CharT*
      _M_data() const
      { return _M_dataplus._M_p; }

      _CharT*
      _M_data(_CharT* __p)
      { return (_M_dataplus._M_p = __p); }

      _Rep*
      _M_rep() const
      { return &((reinterpret_cast<_Rep*> (_M_data()))[-1]); }



      iterator
      _M_ibegin() const
      { return iterator(_M_data()); }

      iterator
      _M_iend() const
      { return iterator(_M_data() + this->size()); }

      void
      _M_leak()
      {
 if (!_M_rep()->_M_is_leaked())
   _M_leak_hard();
      }

      size_type
      _M_check(size_type __pos, const char* __s) const
      {
 if (__pos > this->size())
   __throw_out_of_range((__s));
 return __pos;
      }

      void
      _M_check_length(size_type __n1, size_type __n2, const char* __s) const
      {
 if (this->max_size() - (this->size() - __n1) < __n2)
   __throw_length_error((__s));
      }


      size_type
      _M_limit(size_type __pos, size_type __off) const
      {
 const bool __testoff = __off < this->size() - __pos;
 return __testoff ? __off : this->size() - __pos;
      }


      bool
      _M_disjunct(const _CharT* __s) const
      {
 return (less<const _CharT*>()(__s, _M_data())
  || less<const _CharT*>()(_M_data() + this->size(), __s));
      }



      static void
      _M_copy(_CharT* __d, const _CharT* __s, size_type __n)
      {
 if (__n == 1)
   traits_type::assign(*__d, *__s);
 else
   traits_type::copy(__d, __s, __n);
      }

      static void
      _M_move(_CharT* __d, const _CharT* __s, size_type __n)
      {
 if (__n == 1)
   traits_type::assign(*__d, *__s);
 else
   traits_type::move(__d, __s, __n);
      }

      static void
      _M_assign(_CharT* __d, size_type __n, _CharT __c)
      {
 if (__n == 1)
   traits_type::assign(*__d, __c);
 else
   traits_type::assign(__d, __n, __c);
      }



      template<class _Iterator>
        static void
        _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
        {
   for (; __k1 != __k2; ++__k1, ++__p)
     traits_type::assign(*__p, *__k1);
 }

      static void
      _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2)
      { _S_copy_chars(__p, __k1.base(), __k2.base()); }

      static void
      _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
      { _S_copy_chars(__p, __k1.base(), __k2.base()); }

      static void
      _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2)
      { _M_copy(__p, __k1, __k2 - __k1); }

      static void
      _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
      { _M_copy(__p, __k1, __k2 - __k1); }

      static int
      _S_compare(size_type __x, size_type __y)
      {
         if (__x > __y)
            return 1;
         if (__x < __y)
            return -1;
         return 0;
      }

      void
      _M_mutate(size_type __pos, size_type __len1, size_type __len2);

      void
      _M_leak_hard();

      static _Rep&
      _S_empty_rep()
      { return _Rep::_S_empty_rep(); }

    public:







      inline
      basic_string();




      explicit
      basic_string(const _Alloc& __a);






      basic_string(const basic_string& __str);






      basic_string(const basic_string& __str, size_type __pos,
     size_type __n = npos);







      basic_string(const basic_string& __str, size_type __pos,
     size_type __n, const _Alloc& __a);
# 463 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      basic_string(const _CharT* __s, size_type __n,
     const _Alloc& __a = _Alloc());





      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc());






      basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc());







      template<class _InputIterator>
        basic_string(_InputIterator __beg, _InputIterator __end,
       const _Alloc& __a = _Alloc());




      ~basic_string()
      { _M_rep()->_M_dispose(this->get_allocator()); }





      basic_string&
      operator=(const basic_string& __str)
      { return this->assign(__str); }





      basic_string&
      operator=(const _CharT* __s)
      { return this->assign(__s); }
# 518 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      basic_string&
      operator=(_CharT __c)
      {
 this->assign(1, __c);
 return *this;
      }






      iterator
      begin()
      {
 _M_leak();
 return iterator(_M_data());
      }





      const_iterator
      begin() const
      { return const_iterator(_M_data()); }





      iterator
      end()
      {
 _M_leak();
 return iterator(_M_data() + this->size());
      }





      const_iterator
      end() const
      { return const_iterator(_M_data() + this->size()); }






      reverse_iterator
      rbegin()
      { return reverse_iterator(this->end()); }






      const_reverse_iterator
      rbegin() const
      { return const_reverse_iterator(this->end()); }






      reverse_iterator
      rend()
      { return reverse_iterator(this->begin()); }






      const_reverse_iterator
      rend() const
      { return const_reverse_iterator(this->begin()); }

    public:



      size_type
      size() const
      { return _M_rep()->_M_length; }



      size_type
      length() const
      { return _M_rep()->_M_length; }


      size_type
      max_size() const
      { return _Rep::_S_max_size; }
# 629 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      void
      resize(size_type __n, _CharT __c);
# 642 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      void
      resize(size_type __n)
      { this->resize(__n, _CharT()); }





      size_type
      capacity() const
      { return _M_rep()->_M_capacity; }
# 671 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      void
      reserve(size_type __res_arg = 0);




      void
      clear()
      { _M_mutate(0, this->size(), 0); }




      bool
      empty() const
      { return this->size() == 0; }
# 699 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      const_reference
      operator[] (size_type __pos) const
      {
 ;
 return _M_data()[__pos];
      }
# 716 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      reference
      operator[](size_type __pos)
      {

 ;

 ;
 _M_leak();
 return _M_data()[__pos];
      }
# 737 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      const_reference
      at(size_type __n) const
      {
 if (__n >= this->size())
   __throw_out_of_range(("basic_string::at"));
 return _M_data()[__n];
      }
# 756 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      reference
      at(size_type __n)
      {
 if (__n >= size())
   __throw_out_of_range(("basic_string::at"));
 _M_leak();
 return _M_data()[__n];
      }







      basic_string&
      operator+=(const basic_string& __str)
      { return this->append(__str); }






      basic_string&
      operator+=(const _CharT* __s)
      { return this->append(__s); }






      basic_string&
      operator+=(_CharT __c)
      {
 this->push_back(__c);
 return *this;
      }






      basic_string&
      append(const basic_string& __str);
# 816 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      basic_string&
      append(const basic_string& __str, size_type __pos, size_type __n);







      basic_string&
      append(const _CharT* __s, size_type __n);






      basic_string&
      append(const _CharT* __s)
      {
 ;
 return this->append(__s, traits_type::length(__s));
      }
# 848 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      basic_string&
      append(size_type __n, _CharT __c);
# 859 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      template<class _InputIterator>
        basic_string&
        append(_InputIterator __first, _InputIterator __last)
        { return this->replace(_M_iend(), _M_iend(), __first, __last); }





      void
      push_back(_CharT __c)
      {
 const size_type __len = 1 + this->size();
 if (__len > this->capacity() || _M_rep()->_M_is_shared())
   this->reserve(__len);
 traits_type::assign(_M_data()[this->size()], __c);
 _M_rep()->_M_set_length_and_sharable(__len);
      }






      basic_string&
      assign(const basic_string& __str);
# 898 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      basic_string&
      assign(const basic_string& __str, size_type __pos, size_type __n)
      { return this->assign(__str._M_data()
       + __str._M_check(__pos, "basic_string::assign"),
       __str._M_limit(__pos, __n)); }
# 914 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      basic_string&
      assign(const _CharT* __s, size_type __n);
# 926 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      basic_string&
      assign(const _CharT* __s)
      {
 ;
 return this->assign(__s, traits_type::length(__s));
      }
# 942 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      basic_string&
      assign(size_type __n, _CharT __c)
      { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
# 954 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      template<class _InputIterator>
        basic_string&
        assign(_InputIterator __first, _InputIterator __last)
        { return this->replace(_M_ibegin(), _M_iend(), __first, __last); }
# 971 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      void
      insert(iterator __p, size_type __n, _CharT __c)
      { this->replace(__p, __p, __n, __c); }
# 986 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      template<class _InputIterator>
        void
        insert(iterator __p, _InputIterator __beg, _InputIterator __end)
        { this->replace(__p, __p, __beg, __end); }
# 1002 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      basic_string&
      insert(size_type __pos1, const basic_string& __str)
      { return this->insert(__pos1, __str, size_type(0), __str.size()); }
# 1024 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      basic_string&
      insert(size_type __pos1, const basic_string& __str,
      size_type __pos2, size_type __n)
      { return this->insert(__pos1, __str._M_data()
       + __str._M_check(__pos2, "basic_string::insert"),
       __str._M_limit(__pos2, __n)); }
# 1047 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      basic_string&
      insert(size_type __pos, const _CharT* __s, size_type __n);
# 1065 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      basic_string&
      insert(size_type __pos, const _CharT* __s)
      {
 ;
 return this->insert(__pos, __s, traits_type::length(__s));
      }
# 1088 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      basic_string&
      insert(size_type __pos, size_type __n, _CharT __c)
      { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
         size_type(0), __n, __c); }
# 1105 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      iterator
      insert(iterator __p, _CharT __c)
      {
 ;
 const size_type __pos = __p - _M_ibegin();
 _M_replace_aux(__pos, size_type(0), size_type(1), __c);
 _M_rep()->_M_set_leaked();
 return iterator(_M_data() + __pos);
      }
# 1129 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      basic_string&
      erase(size_type __pos = 0, size_type __n = npos)
      {
 _M_mutate(_M_check(__pos, "basic_string::erase"),
    _M_limit(__pos, __n), size_type(0));
 return *this;
      }
# 1145 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      iterator
      erase(iterator __position)
      {
 ;

 const size_type __pos = __position - _M_ibegin();
 _M_mutate(__pos, size_type(1), size_type(0));
 _M_rep()->_M_set_leaked();
 return iterator(_M_data() + __pos);
      }
# 1165 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      iterator
      erase(iterator __first, iterator __last)
      {
 ;

        const size_type __pos = __first - _M_ibegin();
 _M_mutate(__pos, __last - __first, size_type(0));
 _M_rep()->_M_set_leaked();
 return iterator(_M_data() + __pos);
      }
# 1192 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      basic_string&
      replace(size_type __pos, size_type __n, const basic_string& __str)
      { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
# 1214 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      basic_string&
      replace(size_type __pos1, size_type __n1, const basic_string& __str,
       size_type __pos2, size_type __n2)
      { return this->replace(__pos1, __n1, __str._M_data()
        + __str._M_check(__pos2, "basic_string::replace"),
        __str._M_limit(__pos2, __n2)); }
# 1238 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      basic_string&
      replace(size_type __pos, size_type __n1, const _CharT* __s,
       size_type __n2);
# 1257 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      basic_string&
      replace(size_type __pos, size_type __n1, const _CharT* __s)
      {
 ;
 return this->replace(__pos, __n1, __s, traits_type::length(__s));
      }
# 1280 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      basic_string&
      replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
      { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
         _M_limit(__pos, __n1), __n2, __c); }
# 1298 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      basic_string&
      replace(iterator __i1, iterator __i2, const basic_string& __str)
      { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
# 1316 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      basic_string&
      replace(iterator __i1, iterator __i2, const _CharT* __s, size_type __n)
      {
 ;

 return this->replace(__i1 - _M_ibegin(), __i2 - __i1, __s, __n);
      }
# 1337 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      basic_string&
      replace(iterator __i1, iterator __i2, const _CharT* __s)
      {
 ;
 return this->replace(__i1, __i2, __s, traits_type::length(__s));
      }
# 1358 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      basic_string&
      replace(iterator __i1, iterator __i2, size_type __n, _CharT __c)
      {
 ;

 return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __c);
      }
# 1380 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      template<class _InputIterator>
        basic_string&
        replace(iterator __i1, iterator __i2,
  _InputIterator __k1, _InputIterator __k2)
        {
   ;

   ;
   typedef typename std::__is_integer<_InputIterator>::__type _Integral;
   return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
 }



      basic_string&
      replace(iterator __i1, iterator __i2, _CharT* __k1, _CharT* __k2)
      {
 ;

 ;
 return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
        __k1, __k2 - __k1);
      }

      basic_string&
      replace(iterator __i1, iterator __i2,
       const _CharT* __k1, const _CharT* __k2)
      {
 ;

 ;
 return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
        __k1, __k2 - __k1);
      }

      basic_string&
      replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2)
      {
 ;

 ;
 return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
        __k1.base(), __k2 - __k1);
      }

      basic_string&
      replace(iterator __i1, iterator __i2,
       const_iterator __k1, const_iterator __k2)
      {
 ;

 ;
 return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
        __k1.base(), __k2 - __k1);
      }

    private:
      template<class _Integer>
 basic_string&
 _M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n,
       _Integer __val, __true_type)
        { return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __val); }

      template<class _InputIterator>
 basic_string&
 _M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1,
       _InputIterator __k2, __false_type);

      basic_string&
      _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
       _CharT __c);

      basic_string&
      _M_replace_safe(size_type __pos1, size_type __n1, const _CharT* __s,
        size_type __n2);



      template<class _InIterator>
        static _CharT*
        _S_construct_aux(_InIterator __beg, _InIterator __end,
    const _Alloc& __a, __false_type)
 {
          typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
          return _S_construct(__beg, __end, __a, _Tag());
 }

      template<class _InIterator>
        static _CharT*
        _S_construct_aux(_InIterator __beg, _InIterator __end,
    const _Alloc& __a, __true_type)
 { return _S_construct(static_cast<size_type>(__beg),
         static_cast<value_type>(__end), __a); }

      template<class _InIterator>
        static _CharT*
        _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a)
 {
   typedef typename std::__is_integer<_InIterator>::__type _Integral;
   return _S_construct_aux(__beg, __end, __a, _Integral());
        }


      template<class _InIterator>
        static _CharT*
         _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a,
        input_iterator_tag);



      template<class _FwdIterator>
        static _CharT*
        _S_construct(_FwdIterator __beg, _FwdIterator __end, const _Alloc& __a,
       forward_iterator_tag);

      static _CharT*
      _S_construct(size_type __req, _CharT __c, const _Alloc& __a);

    public:
# 1511 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      size_type
      copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
# 1521 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      void
      swap(basic_string& __s);
# 1531 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      const _CharT*
      c_str() const
      { return _M_data(); }







      const _CharT*
      data() const
      { return _M_data(); }




      allocator_type
      get_allocator() const
      { return _M_dataplus; }
# 1563 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      size_type
      find(const _CharT* __s, size_type __pos, size_type __n) const;
# 1576 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      size_type
      find(const basic_string& __str, size_type __pos = 0) const
      { return this->find(__str.data(), __pos, __str.size()); }
# 1590 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      size_type
      find(const _CharT* __s, size_type __pos = 0) const
      {
 ;
 return this->find(__s, __pos, traits_type::length(__s));
      }
# 1607 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      size_type
      find(_CharT __c, size_type __pos = 0) const;
# 1620 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      size_type
      rfind(const basic_string& __str, size_type __pos = npos) const
      { return this->rfind(__str.data(), __pos, __str.size()); }
# 1635 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      size_type
      rfind(const _CharT* __s, size_type __pos, size_type __n) const;
# 1648 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      size_type
      rfind(const _CharT* __s, size_type __pos = npos) const
      {
 ;
 return this->rfind(__s, __pos, traits_type::length(__s));
      }
# 1665 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      size_type
      rfind(_CharT __c, size_type __pos = npos) const;
# 1678 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      size_type
      find_first_of(const basic_string& __str, size_type __pos = 0) const
      { return this->find_first_of(__str.data(), __pos, __str.size()); }
# 1693 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      size_type
      find_first_of(const _CharT* __s, size_type __pos, size_type __n) const;
# 1706 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      size_type
      find_first_of(const _CharT* __s, size_type __pos = 0) const
      {
 ;
 return this->find_first_of(__s, __pos, traits_type::length(__s));
      }
# 1725 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      size_type
      find_first_of(_CharT __c, size_type __pos = 0) const
      { return this->find(__c, __pos); }
# 1739 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      size_type
      find_last_of(const basic_string& __str, size_type __pos = npos) const
      { return this->find_last_of(__str.data(), __pos, __str.size()); }
# 1754 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      size_type
      find_last_of(const _CharT* __s, size_type __pos, size_type __n) const;
# 1767 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      size_type
      find_last_of(const _CharT* __s, size_type __pos = npos) const
      {
 ;
 return this->find_last_of(__s, __pos, traits_type::length(__s));
      }
# 1786 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      size_type
      find_last_of(_CharT __c, size_type __pos = npos) const
      { return this->rfind(__c, __pos); }
# 1800 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      size_type
      find_first_not_of(const basic_string& __str, size_type __pos = 0) const
      { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
# 1815 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      size_type
      find_first_not_of(const _CharT* __s, size_type __pos,
   size_type __n) const;
# 1829 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      size_type
      find_first_not_of(const _CharT* __s, size_type __pos = 0) const
      {
 ;
 return this->find_first_not_of(__s, __pos, traits_type::length(__s));
      }
# 1846 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      size_type
      find_first_not_of(_CharT __c, size_type __pos = 0) const;
# 1859 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      size_type
      find_last_not_of(const basic_string& __str, size_type __pos = npos) const
      { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
# 1875 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      size_type
      find_last_not_of(const _CharT* __s, size_type __pos,
         size_type __n) const;
# 1888 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      size_type
      find_last_not_of(const _CharT* __s, size_type __pos = npos) const
      {
 ;
 return this->find_last_not_of(__s, __pos, traits_type::length(__s));
      }
# 1905 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      size_type
      find_last_not_of(_CharT __c, size_type __pos = npos) const;
# 1920 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      basic_string
      substr(size_type __pos = 0, size_type __n = npos) const
      { return basic_string(*this,
       _M_check(__pos, "basic_string::substr"), __n); }
# 1938 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      int
      compare(const basic_string& __str) const
      {
 const size_type __size = this->size();
 const size_type __osize = __str.size();
 const size_type __len = std::min(__size, __osize);

 int __r = traits_type::compare(_M_data(), __str.data(), __len);
 if (!__r)
   __r = _S_compare(__size, __osize);
 return __r;
      }
# 1968 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      int
      compare(size_type __pos, size_type __n, const basic_string& __str) const;
# 1992 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      int
      compare(size_type __pos1, size_type __n1, const basic_string& __str,
       size_type __pos2, size_type __n2) const;
# 2010 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      int
      compare(const _CharT* __s) const;
# 2033 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      int
      compare(size_type __pos, size_type __n1, const _CharT* __s) const;
# 2058 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
      int
      compare(size_type __pos, size_type __n1, const _CharT* __s,
       size_type __n2) const;
  };

  template<typename _CharT, typename _Traits, typename _Alloc>
    inline basic_string<_CharT, _Traits, _Alloc>::
    basic_string()

    : _M_dataplus(_S_empty_rep()._M_refdata(), _Alloc()) { }
# 2079 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_string<_CharT, _Traits, _Alloc>
    operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    {
      basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
      __str.append(__rhs);
      return __str;
    }







  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_string<_CharT,_Traits,_Alloc>
    operator+(const _CharT* __lhs,
       const basic_string<_CharT,_Traits,_Alloc>& __rhs);







  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_string<_CharT,_Traits,_Alloc>
    operator+(_CharT __lhs, const basic_string<_CharT,_Traits,_Alloc>& __rhs);







  template<typename _CharT, typename _Traits, typename _Alloc>
    inline basic_string<_CharT, _Traits, _Alloc>
    operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      const _CharT* __rhs)
    {
      basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
      __str.append(__rhs);
      return __str;
    }







  template<typename _CharT, typename _Traits, typename _Alloc>
    inline basic_string<_CharT, _Traits, _Alloc>
    operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)
    {
      typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
      typedef typename __string_type::size_type __size_type;
      __string_type __str(__lhs);
      __str.append(__size_type(1), __rhs);
      return __str;
    }
# 2150 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
        const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    { return __lhs.compare(__rhs) == 0; }







  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator==(const _CharT* __lhs,
        const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    { return __rhs.compare(__lhs) == 0; }







  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
        const _CharT* __rhs)
    { return __lhs.compare(__rhs) == 0; }
# 2187 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
        const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    { return __rhs.compare(__lhs) != 0; }







  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator!=(const _CharT* __lhs,
        const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    { return __rhs.compare(__lhs) != 0; }







  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
        const _CharT* __rhs)
    { return __lhs.compare(__rhs) != 0; }
# 2224 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    { return __lhs.compare(__rhs) < 0; }







  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
       const _CharT* __rhs)
    { return __lhs.compare(__rhs) < 0; }







  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator<(const _CharT* __lhs,
       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    { return __rhs.compare(__lhs) > 0; }
# 2261 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    { return __lhs.compare(__rhs) > 0; }







  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
       const _CharT* __rhs)
    { return __lhs.compare(__rhs) > 0; }







  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator>(const _CharT* __lhs,
       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    { return __rhs.compare(__lhs) < 0; }
# 2298 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator<=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
        const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    { return __lhs.compare(__rhs) <= 0; }







  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator<=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
        const _CharT* __rhs)
    { return __lhs.compare(__rhs) <= 0; }







  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator<=(const _CharT* __lhs,
        const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    { return __rhs.compare(__lhs) >= 0; }
# 2335 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator>=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
        const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    { return __lhs.compare(__rhs) >= 0; }







  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator>=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
        const _CharT* __rhs)
    { return __lhs.compare(__rhs) >= 0; }







  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator>=(const _CharT* __lhs,
      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    { return __rhs.compare(__lhs) <= 0; }
# 2372 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline void
    swap(basic_string<_CharT, _Traits, _Alloc>& __lhs,
  basic_string<_CharT, _Traits, _Alloc>& __rhs)
    { __lhs.swap(__rhs); }
# 2389 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_istream<_CharT, _Traits>&
    operator>>(basic_istream<_CharT, _Traits>& __is,
        basic_string<_CharT, _Traits, _Alloc>& __str);

  template<>
    basic_istream<char>&
    operator>>(basic_istream<char>& __is, basic_string<char>& __str);
# 2407 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline basic_ostream<_CharT, _Traits>&
    operator<<(basic_ostream<_CharT, _Traits>& __os,
        const basic_string<_CharT, _Traits, _Alloc>& __str)
    {


      return __ostream_insert(__os, __str.data(), __str.size());
    }
# 2430 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_istream<_CharT, _Traits>&
    getline(basic_istream<_CharT, _Traits>& __is,
     basic_string<_CharT, _Traits, _Alloc>& __str, _CharT __delim);
# 2447 "/usr/include/c++/4.2.1/bits/basic_string.h" 3
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline basic_istream<_CharT, _Traits>&
    getline(basic_istream<_CharT, _Traits>& __is,
     basic_string<_CharT, _Traits, _Alloc>& __str)
    { return getline(__is, __str, __is.widen('\n')); }

  template<>
    basic_istream<char>&
    getline(basic_istream<char>& __in, basic_string<char>& __str,
     char __delim);


  template<>
    basic_istream<wchar_t>&
    getline(basic_istream<wchar_t>& __in, basic_string<wchar_t>& __str,
     wchar_t __delim);


}
# 55 "/usr/include/c++/4.2.1/string" 2 3


# 1 "/usr/include/c++/4.2.1/algorithm" 1 3
# 63 "/usr/include/c++/4.2.1/algorithm" 3
       
# 64 "/usr/include/c++/4.2.1/algorithm" 3




# 1 "/usr/include/c++/4.2.1/bits/stl_algo.h" 1 3
# 65 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
# 1 "/usr/include/c++/4.2.1/bits/stl_heap.h" 1 3
# 65 "/usr/include/c++/4.2.1/bits/stl_heap.h" 3
namespace std {




  template<typename _RandomAccessIterator, typename _Distance>
    bool
    __is_heap(_RandomAccessIterator __first, _Distance __n)
    {
      _Distance __parent = 0;
      for (_Distance __child = 1; __child < __n; ++__child)
 {
   if (__first[__parent] < __first[__child])
     return false;
   if ((__child & 1) == 0)
     ++__parent;
 }
      return true;
    }

  template<typename _RandomAccessIterator, typename _Distance,
           typename _StrictWeakOrdering>
    bool
    __is_heap(_RandomAccessIterator __first, _StrictWeakOrdering __comp,
       _Distance __n)
    {
      _Distance __parent = 0;
      for (_Distance __child = 1; __child < __n; ++__child)
 {
   if (__comp(__first[__parent], __first[__child]))
     return false;
   if ((__child & 1) == 0)
     ++__parent;
 }
      return true;
    }

  template<typename _RandomAccessIterator>
    bool
    __is_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)
    { return std::__is_heap(__first, std::distance(__first, __last)); }

  template<typename _RandomAccessIterator, typename _StrictWeakOrdering>
    bool
    __is_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,
     _StrictWeakOrdering __comp)
    { return std::__is_heap(__first, __comp, std::distance(__first, __last)); }



  template<typename _RandomAccessIterator, typename _Distance, typename _Tp>
    void
    __push_heap(_RandomAccessIterator __first,
  _Distance __holeIndex, _Distance __topIndex, _Tp __value)
    {
      _Distance __parent = (__holeIndex - 1) / 2;
      while (__holeIndex > __topIndex && *(__first + __parent) < __value)
 {
   *(__first + __holeIndex) = *(__first + __parent);
   __holeIndex = __parent;
   __parent = (__holeIndex - 1) / 2;
 }
      *(__first + __holeIndex) = __value;
    }
# 139 "/usr/include/c++/4.2.1/bits/stl_heap.h" 3
  template<typename _RandomAccessIterator>
    inline void
    push_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
   _ValueType;
      typedef typename iterator_traits<_RandomAccessIterator>::difference_type
   _DistanceType;


     

     
      ;


      std::__push_heap(__first, _DistanceType((__last - __first) - 1),
         _DistanceType(0), _ValueType(*(__last - 1)));
    }

  template<typename _RandomAccessIterator, typename _Distance, typename _Tp,
     typename _Compare>
    void
    __push_heap(_RandomAccessIterator __first, _Distance __holeIndex,
  _Distance __topIndex, _Tp __value, _Compare __comp)
    {
      _Distance __parent = (__holeIndex - 1) / 2;
      while (__holeIndex > __topIndex
      && __comp(*(__first + __parent), __value))
 {
   *(__first + __holeIndex) = *(__first + __parent);
   __holeIndex = __parent;
   __parent = (__holeIndex - 1) / 2;
 }
      *(__first + __holeIndex) = __value;
    }
# 187 "/usr/include/c++/4.2.1/bits/stl_heap.h" 3
  template<typename _RandomAccessIterator, typename _Compare>
    inline void
    push_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,
       _Compare __comp)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
   _ValueType;
      typedef typename iterator_traits<_RandomAccessIterator>::difference_type
   _DistanceType;


     

      ;
      ;

      std::__push_heap(__first, _DistanceType((__last - __first) - 1),
         _DistanceType(0), _ValueType(*(__last - 1)), __comp);
    }

  template<typename _RandomAccessIterator, typename _Distance, typename _Tp>
    void
    __adjust_heap(_RandomAccessIterator __first, _Distance __holeIndex,
    _Distance __len, _Tp __value)
    {
      const _Distance __topIndex = __holeIndex;
      _Distance __secondChild = 2 * __holeIndex + 2;
      while (__secondChild < __len)
 {
   if (*(__first + __secondChild) < *(__first + (__secondChild - 1)))
     __secondChild--;
   *(__first + __holeIndex) = *(__first + __secondChild);
   __holeIndex = __secondChild;
   __secondChild = 2 * (__secondChild + 1);
 }
      if (__secondChild == __len)
 {
   *(__first + __holeIndex) = *(__first + (__secondChild - 1));
   __holeIndex = __secondChild - 1;
 }
      std::__push_heap(__first, __holeIndex, __topIndex, __value);
    }

  template<typename _RandomAccessIterator, typename _Tp>
    inline void
    __pop_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,
        _RandomAccessIterator __result, _Tp __value)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::difference_type
 _Distance;
      *__result = *__first;
      std::__adjust_heap(__first, _Distance(0), _Distance(__last - __first),
    __value);
    }
# 251 "/usr/include/c++/4.2.1/bits/stl_heap.h" 3
  template<typename _RandomAccessIterator>
    inline void
    pop_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
 _ValueType;


     

     
      ;
      ;

      std::__pop_heap(__first, __last - 1, __last - 1,
        _ValueType(*(__last - 1)));
    }

  template<typename _RandomAccessIterator, typename _Distance,
    typename _Tp, typename _Compare>
    void
    __adjust_heap(_RandomAccessIterator __first, _Distance __holeIndex,
    _Distance __len, _Tp __value, _Compare __comp)
    {
      const _Distance __topIndex = __holeIndex;
      _Distance __secondChild = 2 * __holeIndex + 2;
      while (__secondChild < __len)
 {
   if (__comp(*(__first + __secondChild),
       *(__first + (__secondChild - 1))))
     __secondChild--;
   *(__first + __holeIndex) = *(__first + __secondChild);
   __holeIndex = __secondChild;
   __secondChild = 2 * (__secondChild + 1);
 }
      if (__secondChild == __len)
 {
   *(__first + __holeIndex) = *(__first + (__secondChild - 1));
   __holeIndex = __secondChild - 1;
 }
      std::__push_heap(__first, __holeIndex, __topIndex, __value, __comp);
    }

  template<typename _RandomAccessIterator, typename _Tp, typename _Compare>
    inline void
    __pop_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,
        _RandomAccessIterator __result, _Tp __value, _Compare __comp)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::difference_type
 _Distance;
      *__result = *__first;
      std::__adjust_heap(__first, _Distance(0), _Distance(__last - __first),
    __value, __comp);
    }
# 317 "/usr/include/c++/4.2.1/bits/stl_heap.h" 3
  template<typename _RandomAccessIterator, typename _Compare>
    inline void
    pop_heap(_RandomAccessIterator __first,
      _RandomAccessIterator __last, _Compare __comp)
    {

     

      ;
      ;

      typedef typename iterator_traits<_RandomAccessIterator>::value_type
 _ValueType;
      std::__pop_heap(__first, __last - 1, __last - 1,
        _ValueType(*(__last - 1)), __comp);
    }
# 342 "/usr/include/c++/4.2.1/bits/stl_heap.h" 3
  template<typename _RandomAccessIterator>
    void
    make_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
   _ValueType;
      typedef typename iterator_traits<_RandomAccessIterator>::difference_type
   _DistanceType;


     

     
      ;

      if (__last - __first < 2)
 return;

      const _DistanceType __len = __last - __first;
      _DistanceType __parent = (__len - 2) / 2;
      while (true)
 {
   std::__adjust_heap(__first, __parent, __len,
        _ValueType(*(__first + __parent)));
   if (__parent == 0)
     return;
   __parent--;
 }
    }
# 382 "/usr/include/c++/4.2.1/bits/stl_heap.h" 3
  template<typename _RandomAccessIterator, typename _Compare>
    inline void
    make_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,
       _Compare __comp)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
   _ValueType;
      typedef typename iterator_traits<_RandomAccessIterator>::difference_type
   _DistanceType;


     

      ;

      if (__last - __first < 2)
 return;

      const _DistanceType __len = __last - __first;
      _DistanceType __parent = (__len - 2) / 2;
      while (true)
 {
   std::__adjust_heap(__first, __parent, __len,
        _ValueType(*(__first + __parent)), __comp);
   if (__parent == 0)
     return;
   __parent--;
 }
    }
# 420 "/usr/include/c++/4.2.1/bits/stl_heap.h" 3
  template<typename _RandomAccessIterator>
    void
    sort_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)
    {

     

     

      ;


      while (__last - __first > 1)
 std::pop_heap(__first, _RandomAccessIterator(__last--));
    }
# 446 "/usr/include/c++/4.2.1/bits/stl_heap.h" 3
  template<typename _RandomAccessIterator, typename _Compare>
    void
    sort_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,
       _Compare __comp)
    {

     

      ;
      ;

      while (__last - __first > 1)
 std::pop_heap(__first, _RandomAccessIterator(__last--), __comp);
    }

}
# 66 "/usr/include/c++/4.2.1/bits/stl_algo.h" 2 3
# 1 "/usr/include/c++/4.2.1/bits/stl_tempbuf.h" 1 3
# 67 "/usr/include/c++/4.2.1/bits/stl_tempbuf.h" 3
namespace std {
# 76 "/usr/include/c++/4.2.1/bits/stl_tempbuf.h" 3
  template<typename _ForwardIterator, typename _Tp>
    class _Temporary_buffer
    {

     

    public:
      typedef _Tp value_type;
      typedef value_type* pointer;
      typedef pointer iterator;
      typedef ptrdiff_t size_type;

    protected:
      size_type _M_original_len;
      size_type _M_len;
      pointer _M_buffer;

      void
      _M_initialize_buffer(const _Tp&, __true_type) { }

      void
      _M_initialize_buffer(const _Tp& __val, __false_type)
      { std::uninitialized_fill_n(_M_buffer, _M_len, __val); }

    public:

      size_type
      size() const
      { return _M_len; }


      size_type
      requested_size() const
      { return _M_original_len; }


      iterator
      begin()
      { return _M_buffer; }


      iterator
      end()
      { return _M_buffer + _M_len; }





      _Temporary_buffer(_ForwardIterator __first, _ForwardIterator __last);

      ~_Temporary_buffer()
      {
 std::_Destroy(_M_buffer, _M_buffer + _M_len);
 std::return_temporary_buffer(_M_buffer);
      }

    private:

      _Temporary_buffer(const _Temporary_buffer&);

      void
      operator=(const _Temporary_buffer&);
    };


  template<typename _ForwardIterator, typename _Tp>
    _Temporary_buffer<_ForwardIterator, _Tp>::
    _Temporary_buffer(_ForwardIterator __first, _ForwardIterator __last)
    : _M_original_len(std::distance(__first, __last)),
      _M_len(0), _M_buffer(0)
    {

      typedef typename std::__is_scalar<_Tp>::__type _Trivial;

      try
 {
   pair<pointer, size_type> __p(get_temporary_buffer<
           value_type>(_M_original_len));
   _M_buffer = __p.first;
   _M_len = __p.second;
   if (_M_len > 0)
     _M_initialize_buffer(*__first, _Trivial());
 }
      catch(...)
 {
   std::return_temporary_buffer(_M_buffer);
   _M_buffer = 0;
   _M_len = 0;
   throw;
 }
    }

}
# 67 "/usr/include/c++/4.2.1/bits/stl_algo.h" 2 3




namespace std {
# 85 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _Tp>
    inline const _Tp&
    __median(const _Tp& __a, const _Tp& __b, const _Tp& __c)
    {

     
      if (__a < __b)
 if (__b < __c)
   return __b;
 else if (__a < __c)
   return __c;
 else
   return __a;
      else if (__a < __c)
 return __a;
      else if (__b < __c)
 return __c;
      else
 return __b;
    }
# 119 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _Tp, typename _Compare>
    inline const _Tp&
    __median(const _Tp& __a, const _Tp& __b, const _Tp& __c, _Compare __comp)
    {

     
      if (__comp(__a, __b))
 if (__comp(__b, __c))
   return __b;
 else if (__comp(__a, __c))
   return __c;
 else
   return __a;
      else if (__comp(__a, __c))
 return __a;
      else if (__comp(__b, __c))
 return __c;
      else
 return __b;
    }
# 151 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _Function>
    _Function
    for_each(_InputIterator __first, _InputIterator __last, _Function __f)
    {

     
      ;
      for ( ; __first != __last; ++__first)
 __f(*__first);
      return __f;
    }






  template<typename _InputIterator, typename _Tp>
    inline _InputIterator
    __find(_InputIterator __first, _InputIterator __last,
    const _Tp& __val, input_iterator_tag)
    {
      while (__first != __last && !(*__first == __val))
 ++__first;
      return __first;
    }






  template<typename _InputIterator, typename _Predicate>
    inline _InputIterator
    __find_if(_InputIterator __first, _InputIterator __last,
       _Predicate __pred, input_iterator_tag)
    {
      while (__first != __last && !__pred(*__first))
 ++__first;
      return __first;
    }






  template<typename _RandomAccessIterator, typename _Tp>
    _RandomAccessIterator
    __find(_RandomAccessIterator __first, _RandomAccessIterator __last,
    const _Tp& __val, random_access_iterator_tag)
    {
      typename iterator_traits<_RandomAccessIterator>::difference_type
 __trip_count = (__last - __first) >> 2;

      for ( ; __trip_count > 0 ; --__trip_count)
 {
   if (*__first == __val)
     return __first;
   ++__first;

   if (*__first == __val)
     return __first;
   ++__first;

   if (*__first == __val)
     return __first;
   ++__first;

   if (*__first == __val)
     return __first;
   ++__first;
 }

      switch (__last - __first)
 {
 case 3:
   if (*__first == __val)
     return __first;
   ++__first;
 case 2:
   if (*__first == __val)
     return __first;
   ++__first;
 case 1:
   if (*__first == __val)
     return __first;
   ++__first;
 case 0:
 default:
   return __last;
 }
    }






  template<typename _RandomAccessIterator, typename _Predicate>
    _RandomAccessIterator
    __find_if(_RandomAccessIterator __first, _RandomAccessIterator __last,
       _Predicate __pred, random_access_iterator_tag)
    {
      typename iterator_traits<_RandomAccessIterator>::difference_type
 __trip_count = (__last - __first) >> 2;

      for ( ; __trip_count > 0 ; --__trip_count)
 {
   if (__pred(*__first))
     return __first;
   ++__first;

   if (__pred(*__first))
     return __first;
   ++__first;

   if (__pred(*__first))
     return __first;
   ++__first;

   if (__pred(*__first))
     return __first;
   ++__first;
 }

      switch (__last - __first)
 {
 case 3:
   if (__pred(*__first))
     return __first;
   ++__first;
 case 2:
   if (__pred(*__first))
     return __first;
   ++__first;
 case 1:
   if (__pred(*__first))
     return __first;
   ++__first;
 case 0:
 default:
   return __last;
 }
    }






  template<typename _CharT>
    typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
        istreambuf_iterator<_CharT> >::__type
    find(istreambuf_iterator<_CharT>, istreambuf_iterator<_CharT>,
  const _CharT&);
# 316 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _Tp>
    inline _InputIterator
    find(_InputIterator __first, _InputIterator __last,
  const _Tp& __val)
    {

     
     

      ;
      return std::__find(__first, __last, __val,
           std::__iterator_category(__first));
    }
# 338 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _Predicate>
    inline _InputIterator
    find_if(_InputIterator __first, _InputIterator __last,
     _Predicate __pred)
    {

     
     

      ;
      return std::__find_if(__first, __last, __pred,
       std::__iterator_category(__first));
    }
# 360 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _ForwardIterator>
    _ForwardIterator
    adjacent_find(_ForwardIterator __first, _ForwardIterator __last)
    {

     
     

      ;
      if (__first == __last)
 return __last;
      _ForwardIterator __next = __first;
      while(++__next != __last)
 {
   if (*__first == *__next)
     return __first;
   __first = __next;
 }
      return __last;
    }
# 391 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _BinaryPredicate>
    _ForwardIterator
    adjacent_find(_ForwardIterator __first, _ForwardIterator __last,
    _BinaryPredicate __binary_pred)
    {

     
     


      ;
      if (__first == __last)
 return __last;
      _ForwardIterator __next = __first;
      while(++__next != __last)
 {
   if (__binary_pred(*__first, *__next))
     return __first;
   __first = __next;
 }
      return __last;
    }
# 422 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _Tp>
    typename iterator_traits<_InputIterator>::difference_type
    count(_InputIterator __first, _InputIterator __last, const _Tp& __value)
    {

     
     

      ;
      typename iterator_traits<_InputIterator>::difference_type __n = 0;
      for ( ; __first != __last; ++__first)
 if (*__first == __value)
   ++__n;
      return __n;
    }
# 446 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _Predicate>
    typename iterator_traits<_InputIterator>::difference_type
    count_if(_InputIterator __first, _InputIterator __last, _Predicate __pred)
    {

     
     

      ;
      typename iterator_traits<_InputIterator>::difference_type __n = 0;
      for ( ; __first != __last; ++__first)
 if (__pred(*__first))
   ++__n;
      return __n;
    }
# 485 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _ForwardIterator1, typename _ForwardIterator2>
    _ForwardIterator1
    search(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
    _ForwardIterator2 __first2, _ForwardIterator2 __last2)
    {

     
     
     


      ;
      ;

      if (__first1 == __last1 || __first2 == __last2)
 return __first1;


      _ForwardIterator2 __tmp(__first2);
      ++__tmp;
      if (__tmp == __last2)
 return std::find(__first1, __last1, *__first2);


      _ForwardIterator2 __p1, __p;
      __p1 = __first2; ++__p1;
      _ForwardIterator1 __current = __first1;

      while (__first1 != __last1)
 {
   __first1 = std::find(__first1, __last1, *__first2);
   if (__first1 == __last1)
     return __last1;

   __p = __p1;
   __current = __first1;
   if (++__current == __last1)
     return __last1;

   while (*__current == *__p)
     {
       if (++__p == __last2)
  return __first1;
       if (++__current == __last1)
  return __last1;
     }
   ++__first1;
 }
      return __first1;
    }
# 556 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _ForwardIterator1, typename _ForwardIterator2,
    typename _BinaryPredicate>
    _ForwardIterator1
    search(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
    _ForwardIterator2 __first2, _ForwardIterator2 __last2,
    _BinaryPredicate __predicate)
    {

     
     
     


      ;
      ;


      if (__first1 == __last1 || __first2 == __last2)
 return __first1;


      _ForwardIterator2 __tmp(__first2);
      ++__tmp;
      if (__tmp == __last2)
 {
   while (__first1 != __last1 && !__predicate(*__first1, *__first2))
     ++__first1;
   return __first1;
 }


      _ForwardIterator2 __p1, __p;
      __p1 = __first2; ++__p1;
      _ForwardIterator1 __current = __first1;

      while (__first1 != __last1)
 {
   while (__first1 != __last1)
     {
       if (__predicate(*__first1, *__first2))
  break;
       ++__first1;
     }
   while (__first1 != __last1 && !__predicate(*__first1, *__first2))
     ++__first1;
   if (__first1 == __last1)
     return __last1;

   __p = __p1;
   __current = __first1;
   if (++__current == __last1)
     return __last1;

   while (__predicate(*__current, *__p))
     {
       if (++__p == __last2)
  return __first1;
       if (++__current == __last1)
  return __last1;
     }
   ++__first1;
 }
      return __first1;
    }
# 628 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Integer, typename _Tp>
    _ForwardIterator
    __search_n(_ForwardIterator __first, _ForwardIterator __last,
        _Integer __count, const _Tp& __val,
        std::forward_iterator_tag)
    {
      __first = std::find(__first, __last, __val);
      while (__first != __last)
 {
   typename iterator_traits<_ForwardIterator>::difference_type
     __n = __count;
   _ForwardIterator __i = __first;
   ++__i;
   while (__i != __last && __n != 1 && *__i == __val)
     {
       ++__i;
       --__n;
     }
   if (__n == 1)
     return __first;
   if (__i == __last)
     return __last;
   __first = std::find(++__i, __last, __val);
 }
      return __last;
    }
# 662 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _RandomAccessIter, typename _Integer, typename _Tp>
    _RandomAccessIter
    __search_n(_RandomAccessIter __first, _RandomAccessIter __last,
        _Integer __count, const _Tp& __val,
        std::random_access_iterator_tag)
    {

      typedef typename std::iterator_traits<_RandomAccessIter>::difference_type
 _DistanceType;

      _DistanceType __tailSize = __last - __first;
      const _DistanceType __pattSize = __count;

      if (__tailSize < __pattSize)
        return __last;

      const _DistanceType __skipOffset = __pattSize - 1;
      _RandomAccessIter __lookAhead = __first + __skipOffset;
      __tailSize -= __pattSize;

      while (1)
 {


   while (!(*__lookAhead == __val))
     {
       if (__tailSize < __pattSize)
  return __last;
       __lookAhead += __pattSize;
       __tailSize -= __pattSize;
     }
   _DistanceType __remainder = __skipOffset;
   for (_RandomAccessIter __backTrack = __lookAhead - 1;
        *__backTrack == __val; --__backTrack)
     {
       if (--__remainder == 0)
  return (__lookAhead - __skipOffset);
     }
   if (__remainder > __tailSize)
     return __last;
   __lookAhead += __remainder;
   __tailSize -= __remainder;
 }
    }
# 720 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Integer, typename _Tp>
    _ForwardIterator
    search_n(_ForwardIterator __first, _ForwardIterator __last,
      _Integer __count, const _Tp& __val)
    {

     
     

      ;

      if (__count <= 0)
 return __first;
      if (__count == 1)
 return std::find(__first, __last, __val);
      return std::__search_n(__first, __last, __count, __val,
        std::__iterator_category(__first));
    }
# 747 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Integer, typename _Tp,
           typename _BinaryPredicate>
    _ForwardIterator
    __search_n(_ForwardIterator __first, _ForwardIterator __last,
        _Integer __count, const _Tp& __val,
        _BinaryPredicate __binary_pred, std::forward_iterator_tag)
    {
      while (__first != __last && !__binary_pred(*__first, __val))
        ++__first;

      while (__first != __last)
 {
   typename iterator_traits<_ForwardIterator>::difference_type
     __n = __count;
   _ForwardIterator __i = __first;
   ++__i;
   while (__i != __last && __n != 1 && __binary_pred(*__i, __val))
     {
       ++__i;
       --__n;
     }
   if (__n == 1)
     return __first;
   if (__i == __last)
     return __last;
   __first = ++__i;
   while (__first != __last && !__binary_pred(*__first, __val))
     ++__first;
 }
      return __last;
    }
# 787 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _RandomAccessIter, typename _Integer, typename _Tp,
    typename _BinaryPredicate>
    _RandomAccessIter
    __search_n(_RandomAccessIter __first, _RandomAccessIter __last,
        _Integer __count, const _Tp& __val,
        _BinaryPredicate __binary_pred, std::random_access_iterator_tag)
    {

      typedef typename std::iterator_traits<_RandomAccessIter>::difference_type
 _DistanceType;

      _DistanceType __tailSize = __last - __first;
      const _DistanceType __pattSize = __count;

      if (__tailSize < __pattSize)
        return __last;

      const _DistanceType __skipOffset = __pattSize - 1;
      _RandomAccessIter __lookAhead = __first + __skipOffset;
      __tailSize -= __pattSize;

      while (1)
 {


   while (!__binary_pred(*__lookAhead, __val))
     {
       if (__tailSize < __pattSize)
  return __last;
       __lookAhead += __pattSize;
       __tailSize -= __pattSize;
     }
   _DistanceType __remainder = __skipOffset;
   for (_RandomAccessIter __backTrack = __lookAhead - 1;
        __binary_pred(*__backTrack, __val); --__backTrack)
     {
       if (--__remainder == 0)
  return (__lookAhead - __skipOffset);
     }
   if (__remainder > __tailSize)
     return __last;
   __lookAhead += __remainder;
   __tailSize -= __remainder;
 }
    }
# 848 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Integer, typename _Tp,
           typename _BinaryPredicate>
    _ForwardIterator
    search_n(_ForwardIterator __first, _ForwardIterator __last,
      _Integer __count, const _Tp& __val,
      _BinaryPredicate __binary_pred)
    {

     
     

      ;

      if (__count <= 0)
 return __first;
      if (__count == 1)
 {
   while (__first != __last && !__binary_pred(*__first, __val))
     ++__first;
   return __first;
 }
      return std::__search_n(__first, __last, __count, __val, __binary_pred,
        std::__iterator_category(__first));
    }
# 884 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _ForwardIterator1, typename _ForwardIterator2>
    _ForwardIterator2
    swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
  _ForwardIterator2 __first2)
    {

     

     

     


     


      ;

      for ( ; __first1 != __last1; ++__first1, ++__first2)
 std::iter_swap(__first1, __first2);
      return __first2;
    }
# 922 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _OutputIterator,
    typename _UnaryOperation>
    _OutputIterator
    transform(_InputIterator __first, _InputIterator __last,
       _OutputIterator __result, _UnaryOperation __unary_op)
    {

     
     


      ;

      for ( ; __first != __last; ++__first, ++__result)
 *__result = __unary_op(*__first);
      return __result;
    }
# 957 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator, typename _BinaryOperation>
    _OutputIterator
    transform(_InputIterator1 __first1, _InputIterator1 __last1,
       _InputIterator2 __first2, _OutputIterator __result,
       _BinaryOperation __binary_op)
    {

     
     
     


      ;

      for ( ; __first1 != __last1; ++__first1, ++__first2, ++__result)
 *__result = __binary_op(*__first1, *__first2);
      return __result;
    }
# 989 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Tp>
    void
    replace(_ForwardIterator __first, _ForwardIterator __last,
     const _Tp& __old_value, const _Tp& __new_value)
    {

     

     

     

      ;

      for ( ; __first != __last; ++__first)
 if (*__first == __old_value)
   *__first = __new_value;
    }
# 1020 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Predicate, typename _Tp>
    void
    replace_if(_ForwardIterator __first, _ForwardIterator __last,
        _Predicate __pred, const _Tp& __new_value)
    {

     

     

     

      ;

      for ( ; __first != __last; ++__first)
 if (__pred(*__first))
   *__first = __new_value;
    }
# 1053 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _OutputIterator, typename _Tp>
    _OutputIterator
    replace_copy(_InputIterator __first, _InputIterator __last,
   _OutputIterator __result,
   const _Tp& __old_value, const _Tp& __new_value)
    {

     
     

     

      ;

      for ( ; __first != __last; ++__first, ++__result)
 if (*__first == __old_value)
   *__result = __new_value;
 else
   *__result = *__first;
      return __result;
    }
# 1089 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _OutputIterator,
    typename _Predicate, typename _Tp>
    _OutputIterator
    replace_copy_if(_InputIterator __first, _InputIterator __last,
      _OutputIterator __result,
      _Predicate __pred, const _Tp& __new_value)
    {

     
     

     

      ;

      for ( ; __first != __last; ++__first, ++__result)
 if (__pred(*__first))
   *__result = __new_value;
 else
   *__result = *__first;
      return __result;
    }
# 1123 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Generator>
    void
    generate(_ForwardIterator __first, _ForwardIterator __last,
      _Generator __gen)
    {

     
     

      ;

      for ( ; __first != __last; ++__first)
 *__first = __gen();
    }
# 1149 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _OutputIterator, typename _Size, typename _Generator>
    _OutputIterator
    generate_n(_OutputIterator __first, _Size __n, _Generator __gen)
    {

     



      for ( ; __n > 0; --__n, ++__first)
 *__first = __gen();
      return __first;
    }
# 1176 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _OutputIterator, typename _Tp>
    _OutputIterator
    remove_copy(_InputIterator __first, _InputIterator __last,
  _OutputIterator __result, const _Tp& __value)
    {

     
     

     

      ;

      for ( ; __first != __last; ++__first)
 if (!(*__first == __value))
   {
     *__result = *__first;
     ++__result;
   }
      return __result;
    }
# 1212 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _OutputIterator,
    typename _Predicate>
    _OutputIterator
    remove_copy_if(_InputIterator __first, _InputIterator __last,
     _OutputIterator __result, _Predicate __pred)
    {

     
     

     

      ;

      for ( ; __first != __last; ++__first)
 if (!__pred(*__first))
   {
     *__result = *__first;
     ++__result;
   }
      return __result;
    }
# 1251 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Tp>
    _ForwardIterator
    remove(_ForwardIterator __first, _ForwardIterator __last,
    const _Tp& __value)
    {

     

     

      ;

      __first = std::find(__first, __last, __value);
      _ForwardIterator __i = __first;
      return __first == __last ? __first
          : std::remove_copy(++__i, __last,
        __first, __value);
    }
# 1286 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Predicate>
    _ForwardIterator
    remove_if(_ForwardIterator __first, _ForwardIterator __last,
       _Predicate __pred)
    {

     

     

      ;

      __first = std::find_if(__first, __last, __pred);
      _ForwardIterator __i = __first;
      return __first == __last ? __first
          : std::remove_copy_if(++__i, __last,
           __first, __pred);
    }
# 1312 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _OutputIterator>
    _OutputIterator
    __unique_copy(_ForwardIterator __first, _ForwardIterator __last,
    _OutputIterator __result,
    forward_iterator_tag, output_iterator_tag)
    {

      _ForwardIterator __next = __first;
      *__result = *__first;
      while (++__next != __last)
 if (!(*__first == *__next))
   {
     __first = __next;
     *++__result = *__first;
   }
      return ++__result;
    }
# 1337 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _OutputIterator>
    _OutputIterator
    __unique_copy(_InputIterator __first, _InputIterator __last,
    _OutputIterator __result,
    input_iterator_tag, output_iterator_tag)
    {

      typename iterator_traits<_InputIterator>::value_type __value = *__first;
      *__result = __value;
      while (++__first != __last)
 if (!(__value == *__first))
   {
     __value = *__first;
     *++__result = __value;
   }
      return ++__result;
    }
# 1362 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _ForwardIterator>
    _ForwardIterator
    __unique_copy(_InputIterator __first, _InputIterator __last,
    _ForwardIterator __result,
    input_iterator_tag, forward_iterator_tag)
    {

      *__result = *__first;
      while (++__first != __last)
 if (!(*__result == *__first))
   *++__result = *__first;
      return ++__result;
    }
# 1384 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _OutputIterator,
    typename _BinaryPredicate>
    _OutputIterator
    __unique_copy(_ForwardIterator __first, _ForwardIterator __last,
    _OutputIterator __result, _BinaryPredicate __binary_pred,
    forward_iterator_tag, output_iterator_tag)
    {

     



      _ForwardIterator __next = __first;
      *__result = *__first;
      while (++__next != __last)
 if (!__binary_pred(*__first, *__next))
   {
     __first = __next;
     *++__result = *__first;
   }
      return ++__result;
    }
# 1415 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _OutputIterator,
    typename _BinaryPredicate>
    _OutputIterator
    __unique_copy(_InputIterator __first, _InputIterator __last,
    _OutputIterator __result, _BinaryPredicate __binary_pred,
    input_iterator_tag, output_iterator_tag)
    {

     



      typename iterator_traits<_InputIterator>::value_type __value = *__first;
      *__result = __value;
      while (++__first != __last)
 if (!__binary_pred(__value, *__first))
   {
     __value = *__first;
     *++__result = __value;
   }
      return ++__result;
    }
# 1446 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _ForwardIterator,
    typename _BinaryPredicate>
    _ForwardIterator
    __unique_copy(_InputIterator __first, _InputIterator __last,
    _ForwardIterator __result, _BinaryPredicate __binary_pred,
    input_iterator_tag, forward_iterator_tag)
    {

     



      *__result = *__first;
      while (++__first != __last)
 if (!__binary_pred(*__result, *__first))
   *++__result = *__first;
      return ++__result;
    }
# 1487 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _OutputIterator>
    inline _OutputIterator
    unique_copy(_InputIterator __first, _InputIterator __last,
  _OutputIterator __result)
    {

     
     

     

      ;

      if (__first == __last)
 return __result;
      return std::__unique_copy(__first, __last, __result,
    std::__iterator_category(__first),
    std::__iterator_category(__result));
    }
# 1527 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _OutputIterator,
    typename _BinaryPredicate>
    inline _OutputIterator
    unique_copy(_InputIterator __first, _InputIterator __last,
  _OutputIterator __result,
  _BinaryPredicate __binary_pred)
    {

     
     

      ;

      if (__first == __last)
 return __result;
      return std::__unique_copy(__first, __last, __result, __binary_pred,
    std::__iterator_category(__first),
    std::__iterator_category(__result));
    }
# 1560 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _ForwardIterator>
    _ForwardIterator
    unique(_ForwardIterator __first, _ForwardIterator __last)
    {

     

     

      ;


      __first = std::adjacent_find(__first, __last);
      if (__first == __last)
 return __last;


      _ForwardIterator __dest = __first;
      ++__first;
      while (++__first != __last)
 if (!(*__dest == *__first))
   *++__dest = *__first;
      return ++__dest;
    }
# 1599 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _BinaryPredicate>
    _ForwardIterator
    unique(_ForwardIterator __first, _ForwardIterator __last,
           _BinaryPredicate __binary_pred)
    {

     

     


      ;


      __first = std::adjacent_find(__first, __last, __binary_pred);
      if (__first == __last)
 return __last;


      _ForwardIterator __dest = __first;
      ++__first;
      while (++__first != __last)
 if (!__binary_pred(*__dest, *__first))
   *++__dest = *__first;
      return ++__dest;
    }
# 1633 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _BidirectionalIterator>
    void
    __reverse(_BidirectionalIterator __first, _BidirectionalIterator __last,
       bidirectional_iterator_tag)
    {
      while (true)
 if (__first == __last || __first == --__last)
   return;
 else
   {
     std::iter_swap(__first, __last);
     ++__first;
   }
    }
# 1655 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _RandomAccessIterator>
    void
    __reverse(_RandomAccessIterator __first, _RandomAccessIterator __last,
       random_access_iterator_tag)
    {
      if (__first == __last)
 return;
      --__last;
      while (__first < __last)
 {
   std::iter_swap(__first, __last);
   ++__first;
   --__last;
 }
    }
# 1682 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _BidirectionalIterator>
    inline void
    reverse(_BidirectionalIterator __first, _BidirectionalIterator __last)
    {

     

      ;
      std::__reverse(__first, __last, std::__iterator_category(__first));
    }
# 1708 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _BidirectionalIterator, typename _OutputIterator>
    _OutputIterator
    reverse_copy(_BidirectionalIterator __first, _BidirectionalIterator __last,
        _OutputIterator __result)
    {

     

     

      ;

      while (__first != __last)
 {
   --__last;
   *__result = *__last;
   ++__result;
 }
      return __result;
    }
# 1736 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _EuclideanRingElement>
    _EuclideanRingElement
    __gcd(_EuclideanRingElement __m, _EuclideanRingElement __n)
    {
      while (__n != 0)
 {
   _EuclideanRingElement __t = __m % __n;
   __m = __n;
   __n = __t;
 }
      return __m;
    }






  template<typename _ForwardIterator>
    void
    __rotate(_ForwardIterator __first,
      _ForwardIterator __middle,
      _ForwardIterator __last,
      forward_iterator_tag)
    {
      if (__first == __middle || __last == __middle)
 return;

      _ForwardIterator __first2 = __middle;
      do
 {
   swap(*__first, *__first2);
   ++__first;
   ++__first2;
   if (__first == __middle)
     __middle = __first2;
 }
      while (__first2 != __last);

      __first2 = __middle;

      while (__first2 != __last)
 {
   swap(*__first, *__first2);
   ++__first;
   ++__first2;
   if (__first == __middle)
     __middle = __first2;
   else if (__first2 == __last)
     __first2 = __middle;
 }
    }






  template<typename _BidirectionalIterator>
    void
    __rotate(_BidirectionalIterator __first,
      _BidirectionalIterator __middle,
      _BidirectionalIterator __last,
       bidirectional_iterator_tag)
    {

     


      if (__first == __middle || __last == __middle)
 return;

      std::__reverse(__first, __middle, bidirectional_iterator_tag());
      std::__reverse(__middle, __last, bidirectional_iterator_tag());

      while (__first != __middle && __middle != __last)
 {
   swap(*__first, *--__last);
   ++__first;
 }

      if (__first == __middle)
 std::__reverse(__middle, __last, bidirectional_iterator_tag());
      else
 std::__reverse(__first, __middle, bidirectional_iterator_tag());
    }






  template<typename _RandomAccessIterator>
    void
    __rotate(_RandomAccessIterator __first,
      _RandomAccessIterator __middle,
      _RandomAccessIterator __last,
      random_access_iterator_tag)
    {

     


      if (__first == __middle || __last == __middle)
 return;

      typedef typename iterator_traits<_RandomAccessIterator>::difference_type
 _Distance;
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
 _ValueType;

      const _Distance __n = __last - __first;
      const _Distance __k = __middle - __first;
      const _Distance __l = __n - __k;

      if (__k == __l)
 {
   std::swap_ranges(__first, __middle, __middle);
   return;
 }

      const _Distance __d = __gcd(__n, __k);

      for (_Distance __i = 0; __i < __d; __i++)
 {
   _ValueType __tmp = *__first;
   _RandomAccessIterator __p = __first;

   if (__k < __l)
     {
       for (_Distance __j = 0; __j < __l / __d; __j++)
  {
    if (__p > __first + __l)
      {
        *__p = *(__p - __l);
        __p -= __l;
      }

    *__p = *(__p + __k);
    __p += __k;
  }
     }
   else
     {
       for (_Distance __j = 0; __j < __k / __d - 1; __j ++)
  {
    if (__p < __last - __k)
      {
        *__p = *(__p + __k);
        __p += __k;
      }
    *__p = * (__p - __l);
    __p -= __l;
  }
     }

   *__p = __tmp;
   ++__first;
 }
    }
# 1915 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _ForwardIterator>
    inline void
    rotate(_ForwardIterator __first, _ForwardIterator __middle,
    _ForwardIterator __last)
    {

     

      ;
      ;

      typedef typename iterator_traits<_ForwardIterator>::iterator_category
 _IterType;
      std::__rotate(__first, __middle, __last, _IterType());
    }
# 1948 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _OutputIterator>
    _OutputIterator
    rotate_copy(_ForwardIterator __first, _ForwardIterator __middle,
                _ForwardIterator __last, _OutputIterator __result)
    {

     
     

      ;
      ;

      return std::copy(__first, __middle,
                       std::copy(__middle, __last, __result));
    }
# 1974 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _RandomAccessIterator>
    inline void
    random_shuffle(_RandomAccessIterator __first, _RandomAccessIterator __last)
    {

     

      ;

      if (__first != __last)
 for (_RandomAccessIterator __i = __first + 1; __i != __last; ++__i)
   std::iter_swap(__i, __first + (std::rand() % ((__i - __first) + 1)));
    }
# 2001 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _RandomAccessIterator, typename _RandomNumberGenerator>
    void
    random_shuffle(_RandomAccessIterator __first, _RandomAccessIterator __last,
     _RandomNumberGenerator& __rand)
    {

     

      ;

      if (__first == __last)
 return;
      for (_RandomAccessIterator __i = __first + 1; __i != __last; ++__i)
 std::iter_swap(__i, __first + __rand((__i - __first) + 1));
    }







  template<typename _ForwardIterator, typename _Predicate>
    _ForwardIterator
    __partition(_ForwardIterator __first, _ForwardIterator __last,
  _Predicate __pred,
  forward_iterator_tag)
    {
      if (__first == __last)
 return __first;

      while (__pred(*__first))
 if (++__first == __last)
   return __first;

      _ForwardIterator __next = __first;

      while (++__next != __last)
 if (__pred(*__next))
   {
     swap(*__first, *__next);
     ++__first;
   }

      return __first;
    }






  template<typename _BidirectionalIterator, typename _Predicate>
    _BidirectionalIterator
    __partition(_BidirectionalIterator __first, _BidirectionalIterator __last,
  _Predicate __pred,
  bidirectional_iterator_tag)
    {
      while (true)
 {
   while (true)
     if (__first == __last)
       return __first;
     else if (__pred(*__first))
       ++__first;
     else
       break;
   --__last;
   while (true)
     if (__first == __last)
       return __first;
     else if (!__pred(*__last))
       --__last;
     else
       break;
   std::iter_swap(__first, __last);
   ++__first;
 }
    }
# 2095 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Predicate>
    inline _ForwardIterator
    partition(_ForwardIterator __first, _ForwardIterator __last,
       _Predicate __pred)
    {

     

     

      ;

      return std::__partition(__first, __last, __pred,
         std::__iterator_category(__first));
    }







  template<typename _ForwardIterator, typename _Predicate, typename _Distance>
    _ForwardIterator
    __inplace_stable_partition(_ForwardIterator __first,
          _ForwardIterator __last,
          _Predicate __pred, _Distance __len)
    {
      if (__len == 1)
 return __pred(*__first) ? __last : __first;
      _ForwardIterator __middle = __first;
      std::advance(__middle, __len / 2);
      _ForwardIterator __begin = std::__inplace_stable_partition(__first,
         __middle,
         __pred,
         __len / 2);
      _ForwardIterator __end = std::__inplace_stable_partition(__middle, __last,
              __pred,
              __len
              - __len / 2);
      std::rotate(__begin, __middle, __end);
      std::advance(__begin, std::distance(__middle, __end));
      return __begin;
    }






  template<typename _ForwardIterator, typename _Pointer, typename _Predicate,
    typename _Distance>
    _ForwardIterator
    __stable_partition_adaptive(_ForwardIterator __first,
    _ForwardIterator __last,
    _Predicate __pred, _Distance __len,
    _Pointer __buffer,
    _Distance __buffer_size)
    {
      if (__len <= __buffer_size)
 {
   _ForwardIterator __result1 = __first;
   _Pointer __result2 = __buffer;
   for ( ; __first != __last ; ++__first)
     if (__pred(*__first))
       {
  *__result1 = *__first;
  ++__result1;
       }
     else
       {
  *__result2 = *__first;
  ++__result2;
       }
   std::copy(__buffer, __result2, __result1);
   return __result1;
 }
      else
 {
   _ForwardIterator __middle = __first;
   std::advance(__middle, __len / 2);
   _ForwardIterator __begin =
     std::__stable_partition_adaptive(__first, __middle, __pred,
          __len / 2, __buffer,
          __buffer_size);
   _ForwardIterator __end =
     std::__stable_partition_adaptive(__middle, __last, __pred,
          __len - __len / 2,
          __buffer, __buffer_size);
   std::rotate(__begin, __middle, __end);
   std::advance(__begin, std::distance(__middle, __end));
   return __begin;
 }
    }
# 2206 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Predicate>
    _ForwardIterator
    stable_partition(_ForwardIterator __first, _ForwardIterator __last,
       _Predicate __pred)
    {

     

     

      ;

      if (__first == __last)
 return __first;
      else
 {
   typedef typename iterator_traits<_ForwardIterator>::value_type
     _ValueType;
   typedef typename iterator_traits<_ForwardIterator>::difference_type
     _DistanceType;

   _Temporary_buffer<_ForwardIterator, _ValueType> __buf(__first,
        __last);
 if (__buf.size() > 0)
   return
     std::__stable_partition_adaptive(__first, __last, __pred,
       _DistanceType(__buf.requested_size()),
       __buf.begin(), __buf.size());
 else
   return
     std::__inplace_stable_partition(__first, __last, __pred,
      _DistanceType(__buf.requested_size()));
 }
    }






  template<typename _RandomAccessIterator, typename _Tp>
    _RandomAccessIterator
    __unguarded_partition(_RandomAccessIterator __first,
     _RandomAccessIterator __last, _Tp __pivot)
    {
      while (true)
 {
   while (*__first < __pivot)
     ++__first;
   --__last;
   while (__pivot < *__last)
     --__last;
   if (!(__first < __last))
     return __first;
   std::iter_swap(__first, __last);
   ++__first;
 }
    }






  template<typename _RandomAccessIterator, typename _Tp, typename _Compare>
    _RandomAccessIterator
    __unguarded_partition(_RandomAccessIterator __first,
     _RandomAccessIterator __last,
     _Tp __pivot, _Compare __comp)
    {
      while (true)
 {
   while (__comp(*__first, __pivot))
     ++__first;
   --__last;
   while (__comp(__pivot, *__last))
     --__last;
   if (!(__first < __last))
     return __first;
   std::iter_swap(__first, __last);
   ++__first;
 }
    }







  enum { _S_threshold = 16 };






  template<typename _RandomAccessIterator, typename _Tp>
    void
    __unguarded_linear_insert(_RandomAccessIterator __last, _Tp __val)
    {
      _RandomAccessIterator __next = __last;
      --__next;
      while (__val < *__next)
 {
   *__last = *__next;
   __last = __next;
   --__next;
 }
      *__last = __val;
    }






  template<typename _RandomAccessIterator, typename _Tp, typename _Compare>
    void
    __unguarded_linear_insert(_RandomAccessIterator __last, _Tp __val,
         _Compare __comp)
    {
      _RandomAccessIterator __next = __last;
      --__next;
      while (__comp(__val, *__next))
 {
   *__last = *__next;
   __last = __next;
   --__next;
 }
      *__last = __val;
    }






  template<typename _RandomAccessIterator>
    void
    __insertion_sort(_RandomAccessIterator __first,
       _RandomAccessIterator __last)
    {
      if (__first == __last)
 return;

      for (_RandomAccessIterator __i = __first + 1; __i != __last; ++__i)
 {
   typename iterator_traits<_RandomAccessIterator>::value_type
     __val = *__i;
   if (__val < *__first)
     {
       std::copy_backward(__first, __i, __i + 1);
       *__first = __val;
     }
   else
     std::__unguarded_linear_insert(__i, __val);
 }
    }






  template<typename _RandomAccessIterator, typename _Compare>
    void
    __insertion_sort(_RandomAccessIterator __first,
       _RandomAccessIterator __last, _Compare __comp)
    {
      if (__first == __last) return;

      for (_RandomAccessIterator __i = __first + 1; __i != __last; ++__i)
 {
   typename iterator_traits<_RandomAccessIterator>::value_type
     __val = *__i;
   if (__comp(__val, *__first))
     {
       std::copy_backward(__first, __i, __i + 1);
       *__first = __val;
     }
   else
     std::__unguarded_linear_insert(__i, __val, __comp);
 }
    }






  template<typename _RandomAccessIterator>
    inline void
    __unguarded_insertion_sort(_RandomAccessIterator __first,
          _RandomAccessIterator __last)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
 _ValueType;

      for (_RandomAccessIterator __i = __first; __i != __last; ++__i)
 std::__unguarded_linear_insert(__i, _ValueType(*__i));
    }






  template<typename _RandomAccessIterator, typename _Compare>
    inline void
    __unguarded_insertion_sort(_RandomAccessIterator __first,
          _RandomAccessIterator __last, _Compare __comp)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
 _ValueType;

      for (_RandomAccessIterator __i = __first; __i != __last; ++__i)
 std::__unguarded_linear_insert(__i, _ValueType(*__i), __comp);
    }






  template<typename _RandomAccessIterator>
    void
    __final_insertion_sort(_RandomAccessIterator __first,
      _RandomAccessIterator __last)
    {
      if (__last - __first > int(_S_threshold))
 {
   std::__insertion_sort(__first, __first + int(_S_threshold));
   std::__unguarded_insertion_sort(__first + int(_S_threshold), __last);
 }
      else
 std::__insertion_sort(__first, __last);
    }






  template<typename _RandomAccessIterator, typename _Compare>
    void
    __final_insertion_sort(_RandomAccessIterator __first,
      _RandomAccessIterator __last, _Compare __comp)
    {
      if (__last - __first > int(_S_threshold))
 {
   std::__insertion_sort(__first, __first + int(_S_threshold), __comp);
   std::__unguarded_insertion_sort(__first + int(_S_threshold), __last,
       __comp);
 }
      else
 std::__insertion_sort(__first, __last, __comp);
    }






  template<typename _RandomAccessIterator>
    void
    __heap_select(_RandomAccessIterator __first,
    _RandomAccessIterator __middle,
    _RandomAccessIterator __last)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
 _ValueType;

      std::make_heap(__first, __middle);
      for (_RandomAccessIterator __i = __middle; __i < __last; ++__i)
 if (*__i < *__first)
   std::__pop_heap(__first, __middle, __i, _ValueType(*__i));
    }






  template<typename _RandomAccessIterator, typename _Compare>
    void
    __heap_select(_RandomAccessIterator __first,
    _RandomAccessIterator __middle,
    _RandomAccessIterator __last, _Compare __comp)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
 _ValueType;

      std::make_heap(__first, __middle, __comp);
      for (_RandomAccessIterator __i = __middle; __i < __last; ++__i)
 if (__comp(*__i, *__first))
   std::__pop_heap(__first, __middle, __i, _ValueType(*__i), __comp);
    }






  template<typename _Size>
    inline _Size
    __lg(_Size __n)
    {
      _Size __k;
      for (__k = 0; __n != 1; __n >>= 1)
 ++__k;
      return __k;
    }
# 2535 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _RandomAccessIterator>
    inline void
    partial_sort(_RandomAccessIterator __first,
   _RandomAccessIterator __middle,
   _RandomAccessIterator __last)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
 _ValueType;


     

     
      ;
      ;

      std::__heap_select(__first, __middle, __last);
      std::sort_heap(__first, __middle);
    }
# 2573 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _RandomAccessIterator, typename _Compare>
    inline void
    partial_sort(_RandomAccessIterator __first,
   _RandomAccessIterator __middle,
   _RandomAccessIterator __last,
   _Compare __comp)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
 _ValueType;


     

     

      ;
      ;

      std::__heap_select(__first, __middle, __last, __comp);
      std::sort_heap(__first, __middle, __comp);
    }
# 2612 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _RandomAccessIterator>
    _RandomAccessIterator
    partial_sort_copy(_InputIterator __first, _InputIterator __last,
        _RandomAccessIterator __result_first,
        _RandomAccessIterator __result_last)
    {
      typedef typename iterator_traits<_InputIterator>::value_type
 _InputValueType;
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
 _OutputValueType;
      typedef typename iterator_traits<_RandomAccessIterator>::difference_type
 _DistanceType;


     
     

     

     
      ;
      ;

      if (__result_first == __result_last)
 return __result_last;
      _RandomAccessIterator __result_real_last = __result_first;
      while(__first != __last && __result_real_last != __result_last)
 {
   *__result_real_last = *__first;
   ++__result_real_last;
   ++__first;
 }
      std::make_heap(__result_first, __result_real_last);
      while (__first != __last)
 {
   if (*__first < *__result_first)
     std::__adjust_heap(__result_first, _DistanceType(0),
          _DistanceType(__result_real_last
          - __result_first),
          _InputValueType(*__first));
   ++__first;
 }
      std::sort_heap(__result_first, __result_real_last);
      return __result_real_last;
    }
# 2677 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _RandomAccessIterator, typename _Compare>
    _RandomAccessIterator
    partial_sort_copy(_InputIterator __first, _InputIterator __last,
        _RandomAccessIterator __result_first,
        _RandomAccessIterator __result_last,
        _Compare __comp)
    {
      typedef typename iterator_traits<_InputIterator>::value_type
 _InputValueType;
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
 _OutputValueType;
      typedef typename iterator_traits<_RandomAccessIterator>::difference_type
 _DistanceType;


     
     

     

     

     

      ;
      ;

      if (__result_first == __result_last)
 return __result_last;
      _RandomAccessIterator __result_real_last = __result_first;
      while(__first != __last && __result_real_last != __result_last)
 {
   *__result_real_last = *__first;
   ++__result_real_last;
   ++__first;
 }
      std::make_heap(__result_first, __result_real_last, __comp);
      while (__first != __last)
 {
   if (__comp(*__first, *__result_first))
     std::__adjust_heap(__result_first, _DistanceType(0),
          _DistanceType(__result_real_last
          - __result_first),
          _InputValueType(*__first),
          __comp);
   ++__first;
 }
      std::sort_heap(__result_first, __result_real_last, __comp);
      return __result_real_last;
    }






  template<typename _RandomAccessIterator, typename _Size>
    void
    __introsort_loop(_RandomAccessIterator __first,
       _RandomAccessIterator __last,
       _Size __depth_limit)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
 _ValueType;

      while (__last - __first > int(_S_threshold))
 {
   if (__depth_limit == 0)
     {
       std::partial_sort(__first, __last, __last);
       return;
     }
   --__depth_limit;
   _RandomAccessIterator __cut =
     std::__unguarded_partition(__first, __last,
           _ValueType(std::__median(*__first,
        *(__first
          + (__last
             - __first)
          / 2),
        *(__last
          - 1))));
   std::__introsort_loop(__cut, __last, __depth_limit);
   __last = __cut;
 }
    }






  template<typename _RandomAccessIterator, typename _Size, typename _Compare>
    void
    __introsort_loop(_RandomAccessIterator __first,
       _RandomAccessIterator __last,
       _Size __depth_limit, _Compare __comp)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
 _ValueType;

      while (__last - __first > int(_S_threshold))
 {
   if (__depth_limit == 0)
     {
       std::partial_sort(__first, __last, __last, __comp);
       return;
     }
   --__depth_limit;
   _RandomAccessIterator __cut =
     std::__unguarded_partition(__first, __last,
           _ValueType(std::__median(*__first,
        *(__first
          + (__last
             - __first)
          / 2),
        *(__last - 1),
        __comp)),
           __comp);
   std::__introsort_loop(__cut, __last, __depth_limit, __comp);
   __last = __cut;
 }
    }
# 2814 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _RandomAccessIterator>
    inline void
    sort(_RandomAccessIterator __first, _RandomAccessIterator __last)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
 _ValueType;


     

     
      ;

      if (__first != __last)
 {
   std::__introsort_loop(__first, __last,
    std::__lg(__last - __first) * 2);
   std::__final_insertion_sort(__first, __last);
 }
    }
# 2849 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _RandomAccessIterator, typename _Compare>
    inline void
    sort(_RandomAccessIterator __first, _RandomAccessIterator __last,
  _Compare __comp)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
 _ValueType;


     

     

      ;

      if (__first != __last)
 {
   std::__introsort_loop(__first, __last,
    std::__lg(__last - __first) * 2, __comp);
   std::__final_insertion_sort(__first, __last, __comp);
 }
    }
# 2882 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Tp>
    _ForwardIterator
    lower_bound(_ForwardIterator __first, _ForwardIterator __last,
  const _Tp& __val)
    {
      typedef typename iterator_traits<_ForwardIterator>::value_type
 _ValueType;
      typedef typename iterator_traits<_ForwardIterator>::difference_type
 _DistanceType;


     
     
      ;

      _DistanceType __len = std::distance(__first, __last);
      _DistanceType __half;
      _ForwardIterator __middle;

      while (__len > 0)
 {
   __half = __len >> 1;
   __middle = __first;
   std::advance(__middle, __half);
   if (*__middle < __val)
     {
       __first = __middle;
       ++__first;
       __len = __len - __half - 1;
     }
   else
     __len = __half;
 }
      return __first;
    }
# 2932 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Tp, typename _Compare>
    _ForwardIterator
    lower_bound(_ForwardIterator __first, _ForwardIterator __last,
  const _Tp& __val, _Compare __comp)
    {
      typedef typename iterator_traits<_ForwardIterator>::value_type
 _ValueType;
      typedef typename iterator_traits<_ForwardIterator>::difference_type
 _DistanceType;


     
     

      ;

      _DistanceType __len = std::distance(__first, __last);
      _DistanceType __half;
      _ForwardIterator __middle;

      while (__len > 0)
 {
   __half = __len >> 1;
   __middle = __first;
   std::advance(__middle, __half);
   if (__comp(*__middle, __val))
     {
       __first = __middle;
       ++__first;
       __len = __len - __half - 1;
     }
   else
     __len = __half;
 }
      return __first;
    }
# 2979 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Tp>
    _ForwardIterator
    upper_bound(_ForwardIterator __first, _ForwardIterator __last,
  const _Tp& __val)
    {
      typedef typename iterator_traits<_ForwardIterator>::value_type
 _ValueType;
      typedef typename iterator_traits<_ForwardIterator>::difference_type
 _DistanceType;


     
     
      ;

      _DistanceType __len = std::distance(__first, __last);
      _DistanceType __half;
      _ForwardIterator __middle;

      while (__len > 0)
 {
   __half = __len >> 1;
   __middle = __first;
   std::advance(__middle, __half);
   if (__val < *__middle)
     __len = __half;
   else
     {
       __first = __middle;
       ++__first;
       __len = __len - __half - 1;
     }
 }
      return __first;
    }
# 3029 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Tp, typename _Compare>
    _ForwardIterator
    upper_bound(_ForwardIterator __first, _ForwardIterator __last,
  const _Tp& __val, _Compare __comp)
    {
      typedef typename iterator_traits<_ForwardIterator>::value_type
 _ValueType;
      typedef typename iterator_traits<_ForwardIterator>::difference_type
 _DistanceType;


     
     

      ;

      _DistanceType __len = std::distance(__first, __last);
      _DistanceType __half;
      _ForwardIterator __middle;

      while (__len > 0)
 {
   __half = __len >> 1;
   __middle = __first;
   std::advance(__middle, __half);
   if (__comp(__val, *__middle))
     __len = __half;
   else
     {
       __first = __middle;
       ++__first;
       __len = __len - __half - 1;
     }
 }
      return __first;
    }






  template<typename _BidirectionalIterator, typename _Distance>
    void
    __merge_without_buffer(_BidirectionalIterator __first,
      _BidirectionalIterator __middle,
      _BidirectionalIterator __last,
      _Distance __len1, _Distance __len2)
    {
      if (__len1 == 0 || __len2 == 0)
 return;
      if (__len1 + __len2 == 2)
 {
   if (*__middle < *__first)
     std::iter_swap(__first, __middle);
   return;
 }
      _BidirectionalIterator __first_cut = __first;
      _BidirectionalIterator __second_cut = __middle;
      _Distance __len11 = 0;
      _Distance __len22 = 0;
      if (__len1 > __len2)
 {
   __len11 = __len1 / 2;
   std::advance(__first_cut, __len11);
   __second_cut = std::lower_bound(__middle, __last, *__first_cut);
   __len22 = std::distance(__middle, __second_cut);
 }
      else
 {
   __len22 = __len2 / 2;
   std::advance(__second_cut, __len22);
   __first_cut = std::upper_bound(__first, __middle, *__second_cut);
   __len11 = std::distance(__first, __first_cut);
 }
      std::rotate(__first_cut, __middle, __second_cut);
      _BidirectionalIterator __new_middle = __first_cut;
      std::advance(__new_middle, std::distance(__middle, __second_cut));
      std::__merge_without_buffer(__first, __first_cut, __new_middle,
      __len11, __len22);
      std::__merge_without_buffer(__new_middle, __second_cut, __last,
      __len1 - __len11, __len2 - __len22);
    }






  template<typename _BidirectionalIterator, typename _Distance,
    typename _Compare>
    void
    __merge_without_buffer(_BidirectionalIterator __first,
                           _BidirectionalIterator __middle,
      _BidirectionalIterator __last,
      _Distance __len1, _Distance __len2,
      _Compare __comp)
    {
      if (__len1 == 0 || __len2 == 0)
 return;
      if (__len1 + __len2 == 2)
 {
   if (__comp(*__middle, *__first))
     std::iter_swap(__first, __middle);
   return;
 }
      _BidirectionalIterator __first_cut = __first;
      _BidirectionalIterator __second_cut = __middle;
      _Distance __len11 = 0;
      _Distance __len22 = 0;
      if (__len1 > __len2)
 {
   __len11 = __len1 / 2;
   std::advance(__first_cut, __len11);
   __second_cut = std::lower_bound(__middle, __last, *__first_cut,
       __comp);
   __len22 = std::distance(__middle, __second_cut);
 }
      else
 {
   __len22 = __len2 / 2;
   std::advance(__second_cut, __len22);
   __first_cut = std::upper_bound(__first, __middle, *__second_cut,
      __comp);
   __len11 = std::distance(__first, __first_cut);
 }
      std::rotate(__first_cut, __middle, __second_cut);
      _BidirectionalIterator __new_middle = __first_cut;
      std::advance(__new_middle, std::distance(__middle, __second_cut));
      std::__merge_without_buffer(__first, __first_cut, __new_middle,
      __len11, __len22, __comp);
      std::__merge_without_buffer(__new_middle, __second_cut, __last,
      __len1 - __len11, __len2 - __len22, __comp);
    }






  template<typename _RandomAccessIterator>
    void
    __inplace_stable_sort(_RandomAccessIterator __first,
     _RandomAccessIterator __last)
    {
      if (__last - __first < 15)
 {
   std::__insertion_sort(__first, __last);
   return;
 }
      _RandomAccessIterator __middle = __first + (__last - __first) / 2;
      std::__inplace_stable_sort(__first, __middle);
      std::__inplace_stable_sort(__middle, __last);
      std::__merge_without_buffer(__first, __middle, __last,
      __middle - __first,
      __last - __middle);
    }






  template<typename _RandomAccessIterator, typename _Compare>
    void
    __inplace_stable_sort(_RandomAccessIterator __first,
     _RandomAccessIterator __last, _Compare __comp)
    {
      if (__last - __first < 15)
 {
   std::__insertion_sort(__first, __last, __comp);
   return;
 }
      _RandomAccessIterator __middle = __first + (__last - __first) / 2;
      std::__inplace_stable_sort(__first, __middle, __comp);
      std::__inplace_stable_sort(__middle, __last, __comp);
      std::__merge_without_buffer(__first, __middle, __last,
      __middle - __first,
      __last - __middle,
      __comp);
    }
# 3227 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator>
    _OutputIterator
    merge(_InputIterator1 __first1, _InputIterator1 __last1,
   _InputIterator2 __first2, _InputIterator2 __last2,
   _OutputIterator __result)
    {
      typedef typename iterator_traits<_InputIterator1>::value_type
 _ValueType1;
      typedef typename iterator_traits<_InputIterator2>::value_type
 _ValueType2;


     
     
     

     

     
      ;
      ;

      while (__first1 != __last1 && __first2 != __last2)
 {
   if (*__first2 < *__first1)
     {
       *__result = *__first2;
       ++__first2;
     }
   else
     {
       *__result = *__first1;
       ++__first1;
     }
   ++__result;
 }
      return std::copy(__first2, __last2, std::copy(__first1, __last1,
          __result));
    }
# 3288 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator, typename _Compare>
    _OutputIterator
    merge(_InputIterator1 __first1, _InputIterator1 __last1,
   _InputIterator2 __first2, _InputIterator2 __last2,
   _OutputIterator __result, _Compare __comp)
    {
      typedef typename iterator_traits<_InputIterator1>::value_type
 _ValueType1;
      typedef typename iterator_traits<_InputIterator2>::value_type
 _ValueType2;


     
     
     

     

     

      ;
      ;

      while (__first1 != __last1 && __first2 != __last2)
 {
   if (__comp(*__first2, *__first1))
     {
       *__result = *__first2;
       ++__first2;
     }
   else
     {
       *__result = *__first1;
       ++__first1;
     }
   ++__result;
 }
      return std::copy(__first2, __last2, std::copy(__first1, __last1,
          __result));
    }

  template<typename _RandomAccessIterator1, typename _RandomAccessIterator2,
    typename _Distance>
    void
    __merge_sort_loop(_RandomAccessIterator1 __first,
        _RandomAccessIterator1 __last,
        _RandomAccessIterator2 __result,
        _Distance __step_size)
    {
      const _Distance __two_step = 2 * __step_size;

      while (__last - __first >= __two_step)
 {
   __result = std::merge(__first, __first + __step_size,
    __first + __step_size, __first + __two_step,
    __result);
   __first += __two_step;
 }

      __step_size = std::min(_Distance(__last - __first), __step_size);
      std::merge(__first, __first + __step_size, __first + __step_size, __last,
   __result);
    }

  template<typename _RandomAccessIterator1, typename _RandomAccessIterator2,
    typename _Distance, typename _Compare>
    void
    __merge_sort_loop(_RandomAccessIterator1 __first,
        _RandomAccessIterator1 __last,
        _RandomAccessIterator2 __result, _Distance __step_size,
        _Compare __comp)
    {
      const _Distance __two_step = 2 * __step_size;

      while (__last - __first >= __two_step)
 {
   __result = std::merge(__first, __first + __step_size,
    __first + __step_size, __first + __two_step,
    __result,
    __comp);
   __first += __two_step;
 }
      __step_size = std::min(_Distance(__last - __first), __step_size);

      std::merge(__first, __first + __step_size,
   __first + __step_size, __last,
   __result,
   __comp);
    }

  enum { _S_chunk_size = 7 };

  template<typename _RandomAccessIterator, typename _Distance>
    void
    __chunk_insertion_sort(_RandomAccessIterator __first,
      _RandomAccessIterator __last,
      _Distance __chunk_size)
    {
      while (__last - __first >= __chunk_size)
 {
   std::__insertion_sort(__first, __first + __chunk_size);
   __first += __chunk_size;
 }
      std::__insertion_sort(__first, __last);
    }

  template<typename _RandomAccessIterator, typename _Distance, typename _Compare>
    void
    __chunk_insertion_sort(_RandomAccessIterator __first,
      _RandomAccessIterator __last,
      _Distance __chunk_size, _Compare __comp)
    {
      while (__last - __first >= __chunk_size)
 {
   std::__insertion_sort(__first, __first + __chunk_size, __comp);
   __first += __chunk_size;
 }
      std::__insertion_sort(__first, __last, __comp);
    }

  template<typename _RandomAccessIterator, typename _Pointer>
    void
    __merge_sort_with_buffer(_RandomAccessIterator __first,
        _RandomAccessIterator __last,
                             _Pointer __buffer)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::difference_type
 _Distance;

      const _Distance __len = __last - __first;
      const _Pointer __buffer_last = __buffer + __len;

      _Distance __step_size = _S_chunk_size;
      std::__chunk_insertion_sort(__first, __last, __step_size);

      while (__step_size < __len)
 {
   std::__merge_sort_loop(__first, __last, __buffer, __step_size);
   __step_size *= 2;
   std::__merge_sort_loop(__buffer, __buffer_last, __first, __step_size);
   __step_size *= 2;
 }
    }

  template<typename _RandomAccessIterator, typename _Pointer, typename _Compare>
    void
    __merge_sort_with_buffer(_RandomAccessIterator __first,
        _RandomAccessIterator __last,
                             _Pointer __buffer, _Compare __comp)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::difference_type
 _Distance;

      const _Distance __len = __last - __first;
      const _Pointer __buffer_last = __buffer + __len;

      _Distance __step_size = _S_chunk_size;
      std::__chunk_insertion_sort(__first, __last, __step_size, __comp);

      while (__step_size < __len)
 {
   std::__merge_sort_loop(__first, __last, __buffer,
     __step_size, __comp);
   __step_size *= 2;
   std::__merge_sort_loop(__buffer, __buffer_last, __first,
     __step_size, __comp);
   __step_size *= 2;
 }
    }






  template<typename _BidirectionalIterator1, typename _BidirectionalIterator2,
    typename _BidirectionalIterator3>
    _BidirectionalIterator3
    __merge_backward(_BidirectionalIterator1 __first1,
       _BidirectionalIterator1 __last1,
       _BidirectionalIterator2 __first2,
       _BidirectionalIterator2 __last2,
       _BidirectionalIterator3 __result)
    {
      if (__first1 == __last1)
 return std::copy_backward(__first2, __last2, __result);
      if (__first2 == __last2)
 return std::copy_backward(__first1, __last1, __result);
      --__last1;
      --__last2;
      while (true)
 {
   if (*__last2 < *__last1)
     {
       *--__result = *__last1;
       if (__first1 == __last1)
  return std::copy_backward(__first2, ++__last2, __result);
       --__last1;
     }
   else
     {
       *--__result = *__last2;
       if (__first2 == __last2)
  return std::copy_backward(__first1, ++__last1, __result);
       --__last2;
     }
 }
    }






  template<typename _BidirectionalIterator1, typename _BidirectionalIterator2,
    typename _BidirectionalIterator3, typename _Compare>
    _BidirectionalIterator3
    __merge_backward(_BidirectionalIterator1 __first1,
       _BidirectionalIterator1 __last1,
       _BidirectionalIterator2 __first2,
       _BidirectionalIterator2 __last2,
       _BidirectionalIterator3 __result,
       _Compare __comp)
    {
      if (__first1 == __last1)
 return std::copy_backward(__first2, __last2, __result);
      if (__first2 == __last2)
 return std::copy_backward(__first1, __last1, __result);
      --__last1;
      --__last2;
      while (true)
 {
   if (__comp(*__last2, *__last1))
     {
       *--__result = *__last1;
       if (__first1 == __last1)
  return std::copy_backward(__first2, ++__last2, __result);
       --__last1;
     }
   else
     {
       *--__result = *__last2;
       if (__first2 == __last2)
  return std::copy_backward(__first1, ++__last1, __result);
       --__last2;
     }
 }
    }






  template<typename _BidirectionalIterator1, typename _BidirectionalIterator2,
    typename _Distance>
    _BidirectionalIterator1
    __rotate_adaptive(_BidirectionalIterator1 __first,
        _BidirectionalIterator1 __middle,
        _BidirectionalIterator1 __last,
        _Distance __len1, _Distance __len2,
        _BidirectionalIterator2 __buffer,
        _Distance __buffer_size)
    {
      _BidirectionalIterator2 __buffer_end;
      if (__len1 > __len2 && __len2 <= __buffer_size)
 {
   __buffer_end = std::copy(__middle, __last, __buffer);
   std::copy_backward(__first, __middle, __last);
   return std::copy(__buffer, __buffer_end, __first);
 }
      else if (__len1 <= __buffer_size)
 {
   __buffer_end = std::copy(__first, __middle, __buffer);
   std::copy(__middle, __last, __first);
   return std::copy_backward(__buffer, __buffer_end, __last);
 }
      else
 {
   std::rotate(__first, __middle, __last);
   std::advance(__first, std::distance(__middle, __last));
   return __first;
 }
    }






  template<typename _BidirectionalIterator, typename _Distance,
    typename _Pointer>
    void
    __merge_adaptive(_BidirectionalIterator __first,
                     _BidirectionalIterator __middle,
       _BidirectionalIterator __last,
       _Distance __len1, _Distance __len2,
       _Pointer __buffer, _Distance __buffer_size)
    {
      if (__len1 <= __len2 && __len1 <= __buffer_size)
 {
   _Pointer __buffer_end = std::copy(__first, __middle, __buffer);
   std::merge(__buffer, __buffer_end, __middle, __last, __first);
 }
      else if (__len2 <= __buffer_size)
 {
   _Pointer __buffer_end = std::copy(__middle, __last, __buffer);
   std::__merge_backward(__first, __middle, __buffer,
    __buffer_end, __last);
 }
      else
 {
   _BidirectionalIterator __first_cut = __first;
   _BidirectionalIterator __second_cut = __middle;
   _Distance __len11 = 0;
   _Distance __len22 = 0;
   if (__len1 > __len2)
     {
       __len11 = __len1 / 2;
       std::advance(__first_cut, __len11);
       __second_cut = std::lower_bound(__middle, __last,
           *__first_cut);
       __len22 = std::distance(__middle, __second_cut);
     }
   else
     {
       __len22 = __len2 / 2;
       std::advance(__second_cut, __len22);
       __first_cut = std::upper_bound(__first, __middle,
          *__second_cut);
       __len11 = std::distance(__first, __first_cut);
     }
   _BidirectionalIterator __new_middle =
     std::__rotate_adaptive(__first_cut, __middle, __second_cut,
       __len1 - __len11, __len22, __buffer,
       __buffer_size);
   std::__merge_adaptive(__first, __first_cut, __new_middle, __len11,
    __len22, __buffer, __buffer_size);
   std::__merge_adaptive(__new_middle, __second_cut, __last,
    __len1 - __len11,
    __len2 - __len22, __buffer, __buffer_size);
 }
    }






  template<typename _BidirectionalIterator, typename _Distance, typename _Pointer,
    typename _Compare>
    void
    __merge_adaptive(_BidirectionalIterator __first,
                     _BidirectionalIterator __middle,
       _BidirectionalIterator __last,
       _Distance __len1, _Distance __len2,
       _Pointer __buffer, _Distance __buffer_size,
       _Compare __comp)
    {
      if (__len1 <= __len2 && __len1 <= __buffer_size)
 {
   _Pointer __buffer_end = std::copy(__first, __middle, __buffer);
   std::merge(__buffer, __buffer_end, __middle, __last, __first, __comp);
 }
      else if (__len2 <= __buffer_size)
 {
   _Pointer __buffer_end = std::copy(__middle, __last, __buffer);
   std::__merge_backward(__first, __middle, __buffer, __buffer_end,
    __last, __comp);
 }
      else
 {
   _BidirectionalIterator __first_cut = __first;
   _BidirectionalIterator __second_cut = __middle;
   _Distance __len11 = 0;
   _Distance __len22 = 0;
   if (__len1 > __len2)
     {
       __len11 = __len1 / 2;
       std::advance(__first_cut, __len11);
       __second_cut = std::lower_bound(__middle, __last, *__first_cut,
           __comp);
       __len22 = std::distance(__middle, __second_cut);
     }
   else
     {
       __len22 = __len2 / 2;
       std::advance(__second_cut, __len22);
       __first_cut = std::upper_bound(__first, __middle, *__second_cut,
          __comp);
       __len11 = std::distance(__first, __first_cut);
     }
   _BidirectionalIterator __new_middle =
     std::__rotate_adaptive(__first_cut, __middle, __second_cut,
       __len1 - __len11, __len22, __buffer,
       __buffer_size);
   std::__merge_adaptive(__first, __first_cut, __new_middle, __len11,
    __len22, __buffer, __buffer_size, __comp);
   std::__merge_adaptive(__new_middle, __second_cut, __last,
    __len1 - __len11,
    __len2 - __len22, __buffer,
    __buffer_size, __comp);
 }
    }
# 3711 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _BidirectionalIterator>
    void
    inplace_merge(_BidirectionalIterator __first,
    _BidirectionalIterator __middle,
    _BidirectionalIterator __last)
    {
      typedef typename iterator_traits<_BidirectionalIterator>::value_type
          _ValueType;
      typedef typename iterator_traits<_BidirectionalIterator>::difference_type
          _DistanceType;


     

     
      ;
      ;

      if (__first == __middle || __middle == __last)
 return;

      _DistanceType __len1 = std::distance(__first, __middle);
      _DistanceType __len2 = std::distance(__middle, __last);

      _Temporary_buffer<_BidirectionalIterator, _ValueType> __buf(__first,
          __last);
      if (__buf.begin() == 0)
 std::__merge_without_buffer(__first, __middle, __last, __len1, __len2);
      else
 std::__merge_adaptive(__first, __middle, __last, __len1, __len2,
         __buf.begin(), _DistanceType(__buf.size()));
    }
# 3765 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _BidirectionalIterator, typename _Compare>
    void
    inplace_merge(_BidirectionalIterator __first,
    _BidirectionalIterator __middle,
    _BidirectionalIterator __last,
    _Compare __comp)
    {
      typedef typename iterator_traits<_BidirectionalIterator>::value_type
          _ValueType;
      typedef typename iterator_traits<_BidirectionalIterator>::difference_type
          _DistanceType;


     

     

      ;
      ;

      if (__first == __middle || __middle == __last)
 return;

      const _DistanceType __len1 = std::distance(__first, __middle);
      const _DistanceType __len2 = std::distance(__middle, __last);

      _Temporary_buffer<_BidirectionalIterator, _ValueType> __buf(__first,
          __last);
      if (__buf.begin() == 0)
 std::__merge_without_buffer(__first, __middle, __last, __len1,
        __len2, __comp);
      else
 std::__merge_adaptive(__first, __middle, __last, __len1, __len2,
         __buf.begin(), _DistanceType(__buf.size()),
         __comp);
    }

  template<typename _RandomAccessIterator, typename _Pointer,
    typename _Distance>
    void
    __stable_sort_adaptive(_RandomAccessIterator __first,
      _RandomAccessIterator __last,
                           _Pointer __buffer, _Distance __buffer_size)
    {
      const _Distance __len = (__last - __first + 1) / 2;
      const _RandomAccessIterator __middle = __first + __len;
      if (__len > __buffer_size)
 {
   std::__stable_sort_adaptive(__first, __middle,
          __buffer, __buffer_size);
   std::__stable_sort_adaptive(__middle, __last,
          __buffer, __buffer_size);
 }
      else
 {
   std::__merge_sort_with_buffer(__first, __middle, __buffer);
   std::__merge_sort_with_buffer(__middle, __last, __buffer);
 }
      std::__merge_adaptive(__first, __middle, __last,
       _Distance(__middle - __first),
       _Distance(__last - __middle),
       __buffer, __buffer_size);
    }

  template<typename _RandomAccessIterator, typename _Pointer,
    typename _Distance, typename _Compare>
    void
    __stable_sort_adaptive(_RandomAccessIterator __first,
      _RandomAccessIterator __last,
                           _Pointer __buffer, _Distance __buffer_size,
                           _Compare __comp)
    {
      const _Distance __len = (__last - __first + 1) / 2;
      const _RandomAccessIterator __middle = __first + __len;
      if (__len > __buffer_size)
 {
   std::__stable_sort_adaptive(__first, __middle, __buffer,
          __buffer_size, __comp);
   std::__stable_sort_adaptive(__middle, __last, __buffer,
          __buffer_size, __comp);
 }
      else
 {
   std::__merge_sort_with_buffer(__first, __middle, __buffer, __comp);
   std::__merge_sort_with_buffer(__middle, __last, __buffer, __comp);
 }
      std::__merge_adaptive(__first, __middle, __last,
       _Distance(__middle - __first),
       _Distance(__last - __middle),
       __buffer, __buffer_size,
       __comp);
    }
# 3874 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _RandomAccessIterator>
    inline void
    stable_sort(_RandomAccessIterator __first, _RandomAccessIterator __last)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
 _ValueType;
      typedef typename iterator_traits<_RandomAccessIterator>::difference_type
 _DistanceType;


     

     
      ;

      _Temporary_buffer<_RandomAccessIterator, _ValueType> __buf(__first,
         __last);
      if (__buf.begin() == 0)
 std::__inplace_stable_sort(__first, __last);
      else
 std::__stable_sort_adaptive(__first, __last, __buf.begin(),
        _DistanceType(__buf.size()));
    }
# 3915 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _RandomAccessIterator, typename _Compare>
    inline void
    stable_sort(_RandomAccessIterator __first, _RandomAccessIterator __last,
  _Compare __comp)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
 _ValueType;
      typedef typename iterator_traits<_RandomAccessIterator>::difference_type
 _DistanceType;


     

     


      ;

      _Temporary_buffer<_RandomAccessIterator, _ValueType> __buf(__first,
         __last);
      if (__buf.begin() == 0)
 std::__inplace_stable_sort(__first, __last, __comp);
      else
 std::__stable_sort_adaptive(__first, __last, __buf.begin(),
        _DistanceType(__buf.size()), __comp);
    }


  template<typename _RandomAccessIterator, typename _Size>
    void
    __introselect(_RandomAccessIterator __first, _RandomAccessIterator __nth,
    _RandomAccessIterator __last, _Size __depth_limit)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
 _ValueType;

      while (__last - __first > 3)
 {
   if (__depth_limit == 0)
     {
       std::__heap_select(__first, __nth + 1, __last);

       std::iter_swap(__first, __nth);
       return;
     }
   --__depth_limit;
   _RandomAccessIterator __cut =
     std::__unguarded_partition(__first, __last,
           _ValueType(std::__median(*__first,
        *(__first
          + (__last
             - __first)
          / 2),
        *(__last
          - 1))));
   if (__cut <= __nth)
     __first = __cut;
   else
     __last = __cut;
 }
      std::__insertion_sort(__first, __last);
    }

  template<typename _RandomAccessIterator, typename _Size, typename _Compare>
    void
    __introselect(_RandomAccessIterator __first, _RandomAccessIterator __nth,
    _RandomAccessIterator __last, _Size __depth_limit,
    _Compare __comp)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
 _ValueType;

      while (__last - __first > 3)
 {
   if (__depth_limit == 0)
     {
       std::__heap_select(__first, __nth + 1, __last, __comp);

       std::iter_swap(__first, __nth);
       return;
     }
   --__depth_limit;
   _RandomAccessIterator __cut =
     std::__unguarded_partition(__first, __last,
           _ValueType(std::__median(*__first,
        *(__first
          + (__last
             - __first)
          / 2),
        *(__last - 1),
        __comp)),
           __comp);
   if (__cut <= __nth)
     __first = __cut;
   else
     __last = __cut;
 }
      std::__insertion_sort(__first, __last, __comp);
    }
# 4030 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _RandomAccessIterator>
    inline void
    nth_element(_RandomAccessIterator __first, _RandomAccessIterator __nth,
  _RandomAccessIterator __last)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
 _ValueType;


     

     
      ;
      ;

      if (__first == __last || __nth == __last)
 return;

      std::__introselect(__first, __nth, __last,
    std::__lg(__last - __first) * 2);
    }
# 4068 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _RandomAccessIterator, typename _Compare>
    inline void
    nth_element(_RandomAccessIterator __first, _RandomAccessIterator __nth,
  _RandomAccessIterator __last, _Compare __comp)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
 _ValueType;


     

     

      ;
      ;

      if (__first == __last || __nth == __last)
 return;

      std::__introselect(__first, __nth, __last,
    std::__lg(__last - __first) * 2, __comp);
    }
# 4107 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Tp>
    pair<_ForwardIterator, _ForwardIterator>
    equal_range(_ForwardIterator __first, _ForwardIterator __last,
  const _Tp& __val)
    {
      typedef typename iterator_traits<_ForwardIterator>::value_type
 _ValueType;
      typedef typename iterator_traits<_ForwardIterator>::difference_type
 _DistanceType;


     
     
     
      ;

      _DistanceType __len = std::distance(__first, __last);
      _DistanceType __half;
      _ForwardIterator __middle, __left, __right;

      while (__len > 0)
 {
   __half = __len >> 1;
   __middle = __first;
   std::advance(__middle, __half);
   if (*__middle < __val)
     {
       __first = __middle;
       ++__first;
       __len = __len - __half - 1;
     }
   else if (__val < *__middle)
     __len = __half;
   else
     {
       __left = std::lower_bound(__first, __middle, __val);
       std::advance(__first, __len);
       __right = std::upper_bound(++__middle, __first, __val);
       return pair<_ForwardIterator, _ForwardIterator>(__left, __right);
     }
 }
      return pair<_ForwardIterator, _ForwardIterator>(__first, __first);
    }
# 4168 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Tp, typename _Compare>
    pair<_ForwardIterator, _ForwardIterator>
    equal_range(_ForwardIterator __first, _ForwardIterator __last,
  const _Tp& __val,
  _Compare __comp)
    {
      typedef typename iterator_traits<_ForwardIterator>::value_type
 _ValueType;
      typedef typename iterator_traits<_ForwardIterator>::difference_type
 _DistanceType;


     
     

     

      ;

      _DistanceType __len = std::distance(__first, __last);
      _DistanceType __half;
      _ForwardIterator __middle, __left, __right;

      while (__len > 0)
 {
   __half = __len >> 1;
   __middle = __first;
   std::advance(__middle, __half);
   if (__comp(*__middle, __val))
     {
       __first = __middle;
       ++__first;
       __len = __len - __half - 1;
     }
   else if (__comp(__val, *__middle))
     __len = __half;
   else
     {
       __left = std::lower_bound(__first, __middle, __val, __comp);
       std::advance(__first, __len);
       __right = std::upper_bound(++__middle, __first, __val, __comp);
       return pair<_ForwardIterator, _ForwardIterator>(__left, __right);
     }
 }
      return pair<_ForwardIterator, _ForwardIterator>(__first, __first);
    }
# 4226 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Tp>
    bool
    binary_search(_ForwardIterator __first, _ForwardIterator __last,
                  const _Tp& __val)
    {
      typedef typename iterator_traits<_ForwardIterator>::value_type
 _ValueType;


     
     
      ;

      _ForwardIterator __i = std::lower_bound(__first, __last, __val);
      return __i != __last && !(__val < *__i);
    }
# 4258 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Tp, typename _Compare>
    bool
    binary_search(_ForwardIterator __first, _ForwardIterator __last,
                  const _Tp& __val, _Compare __comp)
    {
      typedef typename iterator_traits<_ForwardIterator>::value_type
 _ValueType;


     
     

      ;

      _ForwardIterator __i = std::lower_bound(__first, __last, __val, __comp);
      return __i != __last && !__comp(__val, *__i);
    }
# 4297 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _InputIterator1, typename _InputIterator2>
    bool
    includes(_InputIterator1 __first1, _InputIterator1 __last1,
      _InputIterator2 __first2, _InputIterator2 __last2)
    {
      typedef typename iterator_traits<_InputIterator1>::value_type
 _ValueType1;
      typedef typename iterator_traits<_InputIterator2>::value_type
 _ValueType2;


     
     
     
     
      ;
      ;

      while (__first1 != __last1 && __first2 != __last2)
 if (*__first2 < *__first1)
   return false;
 else if(*__first1 < *__first2)
   ++__first1;
 else
   ++__first1, ++__first2;

      return __first2 == __last2;
    }
# 4345 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _InputIterator1, typename _InputIterator2,
    typename _Compare>
    bool
    includes(_InputIterator1 __first1, _InputIterator1 __last1,
      _InputIterator2 __first2, _InputIterator2 __last2, _Compare __comp)
    {
      typedef typename iterator_traits<_InputIterator1>::value_type
 _ValueType1;
      typedef typename iterator_traits<_InputIterator2>::value_type
 _ValueType2;


     
     
     

     

      ;
      ;

      while (__first1 != __last1 && __first2 != __last2)
 if (__comp(*__first2, *__first1))
   return false;
 else if(__comp(*__first1, *__first2))
   ++__first1;
 else
   ++__first1, ++__first2;

      return __first2 == __last2;
    }
# 4394 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator>
    _OutputIterator
    set_union(_InputIterator1 __first1, _InputIterator1 __last1,
       _InputIterator2 __first2, _InputIterator2 __last2,
       _OutputIterator __result)
    {
      typedef typename iterator_traits<_InputIterator1>::value_type
 _ValueType1;
      typedef typename iterator_traits<_InputIterator2>::value_type
 _ValueType2;


     
     
     

     

     
     
      ;
      ;

      while (__first1 != __last1 && __first2 != __last2)
 {
   if (*__first1 < *__first2)
     {
       *__result = *__first1;
       ++__first1;
     }
   else if (*__first2 < *__first1)
     {
       *__result = *__first2;
       ++__first2;
     }
   else
     {
       *__result = *__first1;
       ++__first1;
       ++__first2;
     }
   ++__result;
 }
      return std::copy(__first2, __last2, std::copy(__first1, __last1,
          __result));
    }
# 4460 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator, typename _Compare>
    _OutputIterator
    set_union(_InputIterator1 __first1, _InputIterator1 __last1,
       _InputIterator2 __first2, _InputIterator2 __last2,
       _OutputIterator __result, _Compare __comp)
    {
      typedef typename iterator_traits<_InputIterator1>::value_type
 _ValueType1;
      typedef typename iterator_traits<_InputIterator2>::value_type
 _ValueType2;


     
     
     

     

     

     

      ;
      ;

      while (__first1 != __last1 && __first2 != __last2)
 {
   if (__comp(*__first1, *__first2))
     {
       *__result = *__first1;
       ++__first1;
     }
   else if (__comp(*__first2, *__first1))
     {
       *__result = *__first2;
       ++__first2;
     }
   else
     {
       *__result = *__first1;
       ++__first1;
       ++__first2;
     }
   ++__result;
 }
      return std::copy(__first2, __last2, std::copy(__first1, __last1,
          __result));
    }
# 4526 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator>
    _OutputIterator
    set_intersection(_InputIterator1 __first1, _InputIterator1 __last1,
       _InputIterator2 __first2, _InputIterator2 __last2,
       _OutputIterator __result)
    {
      typedef typename iterator_traits<_InputIterator1>::value_type
 _ValueType1;
      typedef typename iterator_traits<_InputIterator2>::value_type
 _ValueType2;


     
     
     

     
     
      ;
      ;

      while (__first1 != __last1 && __first2 != __last2)
 if (*__first1 < *__first2)
   ++__first1;
 else if (*__first2 < *__first1)
   ++__first2;
 else
   {
     *__result = *__first1;
     ++__first1;
     ++__first2;
     ++__result;
   }
      return __result;
    }
# 4582 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator, typename _Compare>
    _OutputIterator
    set_intersection(_InputIterator1 __first1, _InputIterator1 __last1,
       _InputIterator2 __first2, _InputIterator2 __last2,
       _OutputIterator __result, _Compare __comp)
    {
      typedef typename iterator_traits<_InputIterator1>::value_type
 _ValueType1;
      typedef typename iterator_traits<_InputIterator2>::value_type
 _ValueType2;


     
     
     

     

     

      ;
      ;

      while (__first1 != __last1 && __first2 != __last2)
 if (__comp(*__first1, *__first2))
   ++__first1;
 else if (__comp(*__first2, *__first1))
   ++__first2;
 else
   {
     *__result = *__first1;
     ++__first1;
     ++__first2;
     ++__result;
   }
      return __result;
    }
# 4639 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator>
    _OutputIterator
    set_difference(_InputIterator1 __first1, _InputIterator1 __last1,
     _InputIterator2 __first2, _InputIterator2 __last2,
     _OutputIterator __result)
    {
      typedef typename iterator_traits<_InputIterator1>::value_type
 _ValueType1;
      typedef typename iterator_traits<_InputIterator2>::value_type
 _ValueType2;


     
     
     

     
     
      ;
      ;

      while (__first1 != __last1 && __first2 != __last2)
 if (*__first1 < *__first2)
   {
     *__result = *__first1;
     ++__first1;
     ++__result;
   }
 else if (*__first2 < *__first1)
   ++__first2;
 else
   {
     ++__first1;
     ++__first2;
   }
      return std::copy(__first1, __last1, __result);
    }
# 4699 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator, typename _Compare>
    _OutputIterator
    set_difference(_InputIterator1 __first1, _InputIterator1 __last1,
     _InputIterator2 __first2, _InputIterator2 __last2,
     _OutputIterator __result, _Compare __comp)
    {
      typedef typename iterator_traits<_InputIterator1>::value_type
 _ValueType1;
      typedef typename iterator_traits<_InputIterator2>::value_type
 _ValueType2;


     
     
     

     

     

      ;
      ;

      while (__first1 != __last1 && __first2 != __last2)
 if (__comp(*__first1, *__first2))
   {
     *__result = *__first1;
     ++__first1;
     ++__result;
   }
 else if (__comp(*__first2, *__first1))
   ++__first2;
 else
   {
     ++__first1;
     ++__first2;
   }
      return std::copy(__first1, __last1, __result);
    }
# 4756 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator>
    _OutputIterator
    set_symmetric_difference(_InputIterator1 __first1, _InputIterator1 __last1,
        _InputIterator2 __first2, _InputIterator2 __last2,
        _OutputIterator __result)
    {
      typedef typename iterator_traits<_InputIterator1>::value_type
 _ValueType1;
      typedef typename iterator_traits<_InputIterator2>::value_type
 _ValueType2;


     
     
     

     

     
     
      ;
      ;

      while (__first1 != __last1 && __first2 != __last2)
 if (*__first1 < *__first2)
   {
     *__result = *__first1;
     ++__first1;
     ++__result;
   }
 else if (*__first2 < *__first1)
   {
     *__result = *__first2;
     ++__first2;
     ++__result;
   }
 else
   {
     ++__first1;
     ++__first2;
   }
      return std::copy(__first2, __last2, std::copy(__first1,
          __last1, __result));
    }
# 4821 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator, typename _Compare>
    _OutputIterator
    set_symmetric_difference(_InputIterator1 __first1, _InputIterator1 __last1,
        _InputIterator2 __first2, _InputIterator2 __last2,
        _OutputIterator __result,
        _Compare __comp)
    {
      typedef typename iterator_traits<_InputIterator1>::value_type
 _ValueType1;
      typedef typename iterator_traits<_InputIterator2>::value_type
 _ValueType2;


     
     
     

     

     

     

      ;
      ;

      while (__first1 != __last1 && __first2 != __last2)
 if (__comp(*__first1, *__first2))
   {
     *__result = *__first1;
     ++__first1;
     ++__result;
   }
 else if (__comp(*__first2, *__first1))
   {
     *__result = *__first2;
     ++__first2;
     ++__result;
   }
 else
   {
     ++__first1;
     ++__first2;
   }
      return std::copy(__first2, __last2, std::copy(__first1,
          __last1, __result));
    }
# 4879 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _ForwardIterator>
    _ForwardIterator
    max_element(_ForwardIterator __first, _ForwardIterator __last)
    {

     
     

      ;

      if (__first == __last)
 return __first;
      _ForwardIterator __result = __first;
      while (++__first != __last)
 if (*__result < *__first)
   __result = __first;
      return __result;
    }
# 4906 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Compare>
    _ForwardIterator
    max_element(_ForwardIterator __first, _ForwardIterator __last,
  _Compare __comp)
    {

     
     


      ;

      if (__first == __last) return __first;
      _ForwardIterator __result = __first;
      while (++__first != __last)
 if (__comp(*__result, *__first)) __result = __first;
      return __result;
    }







  template<typename _ForwardIterator>
    _ForwardIterator
    min_element(_ForwardIterator __first, _ForwardIterator __last)
    {

     
     

      ;

      if (__first == __last)
 return __first;
      _ForwardIterator __result = __first;
      while (++__first != __last)
 if (*__first < *__result)
   __result = __first;
      return __result;
    }
# 4958 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Compare>
    _ForwardIterator
    min_element(_ForwardIterator __first, _ForwardIterator __last,
  _Compare __comp)
    {

     
     


      ;

      if (__first == __last)
 return __first;
      _ForwardIterator __result = __first;
      while (++__first != __last)
 if (__comp(*__first, *__result))
   __result = __first;
      return __result;
    }
# 4993 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _BidirectionalIterator>
    bool
    next_permutation(_BidirectionalIterator __first,
       _BidirectionalIterator __last)
    {

     

     

      ;

      if (__first == __last)
 return false;
      _BidirectionalIterator __i = __first;
      ++__i;
      if (__i == __last)
 return false;
      __i = __last;
      --__i;

      for(;;)
 {
   _BidirectionalIterator __ii = __i;
   --__i;
   if (*__i < *__ii)
     {
       _BidirectionalIterator __j = __last;
       while (!(*__i < *--__j))
  {}
       std::iter_swap(__i, __j);
       std::reverse(__ii, __last);
       return true;
     }
   if (__i == __first)
     {
       std::reverse(__first, __last);
       return false;
     }
 }
    }
# 5049 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _BidirectionalIterator, typename _Compare>
    bool
    next_permutation(_BidirectionalIterator __first,
       _BidirectionalIterator __last, _Compare __comp)
    {

     

     


      ;

      if (__first == __last)
 return false;
      _BidirectionalIterator __i = __first;
      ++__i;
      if (__i == __last)
 return false;
      __i = __last;
      --__i;

      for(;;)
 {
   _BidirectionalIterator __ii = __i;
   --__i;
   if (__comp(*__i, *__ii))
     {
       _BidirectionalIterator __j = __last;
       while (!__comp(*__i, *--__j))
  {}
       std::iter_swap(__i, __j);
       std::reverse(__ii, __last);
       return true;
     }
   if (__i == __first)
     {
       std::reverse(__first, __last);
       return false;
     }
 }
    }
# 5104 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _BidirectionalIterator>
    bool
    prev_permutation(_BidirectionalIterator __first,
       _BidirectionalIterator __last)
    {

     

     

      ;

      if (__first == __last)
 return false;
      _BidirectionalIterator __i = __first;
      ++__i;
      if (__i == __last)
 return false;
      __i = __last;
      --__i;

      for(;;)
 {
   _BidirectionalIterator __ii = __i;
   --__i;
   if (*__ii < *__i)
     {
       _BidirectionalIterator __j = __last;
       while (!(*--__j < *__i))
  {}
       std::iter_swap(__i, __j);
       std::reverse(__ii, __last);
       return true;
     }
   if (__i == __first)
     {
       std::reverse(__first, __last);
       return false;
     }
 }
    }
# 5160 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _BidirectionalIterator, typename _Compare>
    bool
    prev_permutation(_BidirectionalIterator __first,
       _BidirectionalIterator __last, _Compare __comp)
    {

     

     


      ;

      if (__first == __last)
 return false;
      _BidirectionalIterator __i = __first;
      ++__i;
      if (__i == __last)
 return false;
      __i = __last;
      --__i;

      for(;;)
 {
   _BidirectionalIterator __ii = __i;
   --__i;
   if (__comp(*__ii, *__i))
     {
       _BidirectionalIterator __j = __last;
       while (!__comp(*--__j, *__i))
  {}
       std::iter_swap(__i, __j);
       std::reverse(__ii, __last);
       return true;
     }
   if (__i == __first)
     {
       std::reverse(__first, __last);
       return false;
     }
 }
    }
# 5219 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _ForwardIterator>
    _InputIterator
    find_first_of(_InputIterator __first1, _InputIterator __last1,
    _ForwardIterator __first2, _ForwardIterator __last2)
    {

     
     
     


      ;
      ;

      for ( ; __first1 != __last1; ++__first1)
 for (_ForwardIterator __iter = __first2; __iter != __last2; ++__iter)
   if (*__first1 == *__iter)
     return __first1;
      return __last1;
    }
# 5255 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _ForwardIterator,
    typename _BinaryPredicate>
    _InputIterator
    find_first_of(_InputIterator __first1, _InputIterator __last1,
    _ForwardIterator __first2, _ForwardIterator __last2,
    _BinaryPredicate __comp)
    {

     
     
     


      ;
      ;

      for ( ; __first1 != __last1; ++__first1)
 for (_ForwardIterator __iter = __first2; __iter != __last2; ++__iter)
   if (__comp(*__first1, *__iter))
     return __first1;
      return __last1;
    }
# 5285 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _ForwardIterator1, typename _ForwardIterator2>
    _ForwardIterator1
    __find_end(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
        _ForwardIterator2 __first2, _ForwardIterator2 __last2,
        forward_iterator_tag, forward_iterator_tag)
    {
      if (__first2 == __last2)
 return __last1;
      else
 {
   _ForwardIterator1 __result = __last1;
   while (1)
     {
       _ForwardIterator1 __new_result
  = std::search(__first1, __last1, __first2, __last2);
       if (__new_result == __last1)
  return __result;
       else
  {
    __result = __new_result;
    __first1 = __new_result;
    ++__first1;
  }
     }
 }
    }

  template<typename _ForwardIterator1, typename _ForwardIterator2,
    typename _BinaryPredicate>
    _ForwardIterator1
    __find_end(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
        _ForwardIterator2 __first2, _ForwardIterator2 __last2,
        forward_iterator_tag, forward_iterator_tag,
        _BinaryPredicate __comp)
    {
      if (__first2 == __last2)
 return __last1;
      else
 {
   _ForwardIterator1 __result = __last1;
   while (1)
     {
       _ForwardIterator1 __new_result
  = std::search(__first1, __last1, __first2, __last2, __comp);
       if (__new_result == __last1)
  return __result;
       else
  {
    __result = __new_result;
    __first1 = __new_result;
    ++__first1;
  }
     }
 }
    }


  template<typename _BidirectionalIterator1, typename _BidirectionalIterator2>
    _BidirectionalIterator1
    __find_end(_BidirectionalIterator1 __first1,
        _BidirectionalIterator1 __last1,
        _BidirectionalIterator2 __first2,
        _BidirectionalIterator2 __last2,
        bidirectional_iterator_tag, bidirectional_iterator_tag)
    {

     

     


      typedef reverse_iterator<_BidirectionalIterator1> _RevIterator1;
      typedef reverse_iterator<_BidirectionalIterator2> _RevIterator2;

      _RevIterator1 __rlast1(__first1);
      _RevIterator2 __rlast2(__first2);
      _RevIterator1 __rresult = std::search(_RevIterator1(__last1), __rlast1,
         _RevIterator2(__last2), __rlast2);

      if (__rresult == __rlast1)
 return __last1;
      else
 {
   _BidirectionalIterator1 __result = __rresult.base();
   std::advance(__result, -std::distance(__first2, __last2));
   return __result;
 }
    }

  template<typename _BidirectionalIterator1, typename _BidirectionalIterator2,
    typename _BinaryPredicate>
    _BidirectionalIterator1
    __find_end(_BidirectionalIterator1 __first1,
        _BidirectionalIterator1 __last1,
        _BidirectionalIterator2 __first2,
        _BidirectionalIterator2 __last2,
        bidirectional_iterator_tag, bidirectional_iterator_tag,
        _BinaryPredicate __comp)
    {

     

     


      typedef reverse_iterator<_BidirectionalIterator1> _RevIterator1;
      typedef reverse_iterator<_BidirectionalIterator2> _RevIterator2;

      _RevIterator1 __rlast1(__first1);
      _RevIterator2 __rlast2(__first2);
      _RevIterator1 __rresult = std::search(_RevIterator1(__last1), __rlast1,
         _RevIterator2(__last2), __rlast2,
         __comp);

      if (__rresult == __rlast1)
 return __last1;
      else
 {
   _BidirectionalIterator1 __result = __rresult.base();
   std::advance(__result, -std::distance(__first2, __last2));
   return __result;
 }
    }
# 5435 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _ForwardIterator1, typename _ForwardIterator2>
    inline _ForwardIterator1
    find_end(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
      _ForwardIterator2 __first2, _ForwardIterator2 __last2)
    {

     
     
     


      ;
      ;

      return std::__find_end(__first1, __last1, __first2, __last2,
        std::__iterator_category(__first1),
        std::__iterator_category(__first2));
    }
# 5480 "/usr/include/c++/4.2.1/bits/stl_algo.h" 3
  template<typename _ForwardIterator1, typename _ForwardIterator2,
    typename _BinaryPredicate>
    inline _ForwardIterator1
    find_end(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
      _ForwardIterator2 __first2, _ForwardIterator2 __last2,
      _BinaryPredicate __comp)
    {

     
     
     


      ;
      ;

      return std::__find_end(__first1, __last1, __first2, __last2,
        std::__iterator_category(__first1),
        std::__iterator_category(__first2),
        __comp);
    }

}
# 69 "/usr/include/c++/4.2.1/algorithm" 2 3
# 58 "/usr/include/c++/4.2.1/string" 2 3
# 1 "/usr/include/c++/4.2.1/bits/basic_string.tcc" 1 3
# 47 "/usr/include/c++/4.2.1/bits/basic_string.tcc" 3
       
# 48 "/usr/include/c++/4.2.1/bits/basic_string.tcc" 3

namespace std {

  template<typename _Type>
    inline bool
    __is_null_pointer(_Type* __ptr)
    { return __ptr == 0; }

  template<typename _Type>
    inline bool
    __is_null_pointer(_Type)
    { return false; }

  template<typename _CharT, typename _Traits, typename _Alloc>
    const typename basic_string<_CharT, _Traits, _Alloc>::size_type
    basic_string<_CharT, _Traits, _Alloc>::
    _Rep::_S_max_size = (((npos - sizeof(_Rep_base))/sizeof(_CharT)) - 1) / 4;

  template<typename _CharT, typename _Traits, typename _Alloc>
    const _CharT
    basic_string<_CharT, _Traits, _Alloc>::
    _Rep::_S_terminal = _CharT();

  template<typename _CharT, typename _Traits, typename _Alloc>
    const typename basic_string<_CharT, _Traits, _Alloc>::size_type
    basic_string<_CharT, _Traits, _Alloc>::npos;



  template<typename _CharT, typename _Traits, typename _Alloc>
    typename basic_string<_CharT, _Traits, _Alloc>::size_type
    basic_string<_CharT, _Traits, _Alloc>::_Rep::_S_empty_rep_storage[
    (sizeof(_Rep_base) + sizeof(_CharT) + sizeof(size_type) - 1) /
      sizeof(size_type)];





  template<typename _CharT, typename _Traits, typename _Alloc>
    template<typename _InIterator>
      _CharT*
      basic_string<_CharT, _Traits, _Alloc>::
      _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a,
     input_iterator_tag)
      {

 if (__beg == __end && __a == _Alloc())
   return _S_empty_rep()._M_refdata();


 _CharT __buf[128];
 size_type __len = 0;
 while (__beg != __end && __len < sizeof(__buf) / sizeof(_CharT))
   {
     __buf[__len++] = *__beg;
     ++__beg;
   }
 _Rep* __r = _Rep::_S_create(__len, size_type(0), __a);
 _M_copy(__r->_M_refdata(), __buf, __len);
 try
   {
     while (__beg != __end)
       {
  if (__len == __r->_M_capacity)
    {

      _Rep* __another = _Rep::_S_create(__len + 1, __len, __a);
      _M_copy(__another->_M_refdata(), __r->_M_refdata(), __len);
      __r->_M_destroy(__a);
      __r = __another;
    }
  __r->_M_refdata()[__len++] = *__beg;
  ++__beg;
       }
   }
 catch(...)
   {
     __r->_M_destroy(__a);
     throw;
   }
 __r->_M_set_length_and_sharable(__len);
 return __r->_M_refdata();
      }

  template<typename _CharT, typename _Traits, typename _Alloc>
    template <typename _InIterator>
      _CharT*
      basic_string<_CharT, _Traits, _Alloc>::
      _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a,
     forward_iterator_tag)
      {

 if (__beg == __end && __a == _Alloc())
   return _S_empty_rep()._M_refdata();


 if (__builtin_expect(__is_null_pointer(__beg) && __beg != __end, 0))
   __throw_logic_error(("basic_string::_S_construct NULL not valid"));

 const size_type __dnew = static_cast<size_type>(std::distance(__beg,
              __end));

 _Rep* __r = _Rep::_S_create(__dnew, size_type(0), __a);
 try
   { _S_copy_chars(__r->_M_refdata(), __beg, __end); }
 catch(...)
   {
     __r->_M_destroy(__a);
     throw;
   }
 __r->_M_set_length_and_sharable(__dnew);
 return __r->_M_refdata();
      }

  template<typename _CharT, typename _Traits, typename _Alloc>
    _CharT*
    basic_string<_CharT, _Traits, _Alloc>::
    _S_construct(size_type __n, _CharT __c, const _Alloc& __a)
    {

      if (__n == 0 && __a == _Alloc())
 return _S_empty_rep()._M_refdata();


      _Rep* __r = _Rep::_S_create(__n, size_type(0), __a);
      if (__n)
 _M_assign(__r->_M_refdata(), __n, __c);

      __r->_M_set_length_and_sharable(__n);
      return __r->_M_refdata();
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_string<_CharT, _Traits, _Alloc>::
    basic_string(const basic_string& __str)
    : _M_dataplus(__str._M_rep()->_M_grab(_Alloc(__str.get_allocator()),
       __str.get_allocator()),
    __str.get_allocator())
    { }

  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_string<_CharT, _Traits, _Alloc>::
    basic_string(const _Alloc& __a)
    : _M_dataplus(_S_construct(size_type(), _CharT(), __a), __a)
    { }

  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_string<_CharT, _Traits, _Alloc>::
    basic_string(const basic_string& __str, size_type __pos, size_type __n)
    : _M_dataplus(_S_construct(__str._M_data()
          + __str._M_check(__pos,
      "basic_string::basic_string"),
          __str._M_data() + __str._M_limit(__pos, __n)
          + __pos, _Alloc()), _Alloc())
    { }

  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_string<_CharT, _Traits, _Alloc>::
    basic_string(const basic_string& __str, size_type __pos,
   size_type __n, const _Alloc& __a)
    : _M_dataplus(_S_construct(__str._M_data()
          + __str._M_check(__pos,
      "basic_string::basic_string"),
          __str._M_data() + __str._M_limit(__pos, __n)
          + __pos, __a), __a)
    { }


  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_string<_CharT, _Traits, _Alloc>::
    basic_string(const _CharT* __s, size_type __n, const _Alloc& __a)
    : _M_dataplus(_S_construct(__s, __s + __n, __a), __a)
    { }


  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_string<_CharT, _Traits, _Alloc>::
    basic_string(const _CharT* __s, const _Alloc& __a)
    : _M_dataplus(_S_construct(__s, __s ? __s + traits_type::length(__s) :
          __s + npos, __a), __a)
    { }

  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_string<_CharT, _Traits, _Alloc>::
    basic_string(size_type __n, _CharT __c, const _Alloc& __a)
    : _M_dataplus(_S_construct(__n, __c, __a), __a)
    { }


  template<typename _CharT, typename _Traits, typename _Alloc>
    template<typename _InputIterator>
    basic_string<_CharT, _Traits, _Alloc>::
    basic_string(_InputIterator __beg, _InputIterator __end, const _Alloc& __a)
    : _M_dataplus(_S_construct(__beg, __end, __a), __a)
    { }

  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_string<_CharT, _Traits, _Alloc>&
    basic_string<_CharT, _Traits, _Alloc>::
    assign(const basic_string& __str)
    {
      if (_M_rep() != __str._M_rep())
 {

   const allocator_type __a = this->get_allocator();
   _CharT* __tmp = __str._M_rep()->_M_grab(__a, __str.get_allocator());
   _M_rep()->_M_dispose(__a);
   _M_data(__tmp);
 }
      return *this;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_string<_CharT, _Traits, _Alloc>&
    basic_string<_CharT, _Traits, _Alloc>::
    assign(const _CharT* __s, size_type __n)
    {
      ;
      _M_check_length(this->size(), __n, "basic_string::assign");
      if (_M_disjunct(__s) || _M_rep()->_M_is_shared())
 return _M_replace_safe(size_type(0), this->size(), __s, __n);
      else
 {

   const size_type __pos = __s - _M_data();
   if (__pos >= __n)
     _M_copy(_M_data(), __s, __n);
   else if (__pos)
     _M_move(_M_data(), __s, __n);
   _M_rep()->_M_set_length_and_sharable(__n);
   return *this;
 }
     }

  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_string<_CharT, _Traits, _Alloc>&
    basic_string<_CharT, _Traits, _Alloc>::
    append(size_type __n, _CharT __c)
    {
      if (__n)
 {
   _M_check_length(size_type(0), __n, "basic_string::append");
   const size_type __len = __n + this->size();
   if (__len > this->capacity() || _M_rep()->_M_is_shared())
     this->reserve(__len);
   _M_assign(_M_data() + this->size(), __n, __c);
   _M_rep()->_M_set_length_and_sharable(__len);
 }
      return *this;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_string<_CharT, _Traits, _Alloc>&
    basic_string<_CharT, _Traits, _Alloc>::
    append(const _CharT* __s, size_type __n)
    {
      ;
      if (__n)
 {
   _M_check_length(size_type(0), __n, "basic_string::append");
   const size_type __len = __n + this->size();
   if (__len > this->capacity() || _M_rep()->_M_is_shared())
     {
       if (_M_disjunct(__s))
  this->reserve(__len);
       else
  {
    const size_type __off = __s - _M_data();
    this->reserve(__len);
    __s = _M_data() + __off;
  }
     }
   _M_copy(_M_data() + this->size(), __s, __n);
   _M_rep()->_M_set_length_and_sharable(__len);
 }
      return *this;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_string<_CharT, _Traits, _Alloc>&
    basic_string<_CharT, _Traits, _Alloc>::
    append(const basic_string& __str)
    {
      const size_type __size = __str.size();
      if (__size)
 {
   const size_type __len = __size + this->size();
   if (__len > this->capacity() || _M_rep()->_M_is_shared())
     this->reserve(__len);
   _M_copy(_M_data() + this->size(), __str._M_data(), __size);
   _M_rep()->_M_set_length_and_sharable(__len);
 }
      return *this;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_string<_CharT, _Traits, _Alloc>&
    basic_string<_CharT, _Traits, _Alloc>::
    append(const basic_string& __str, size_type __pos, size_type __n)
    {
      __str._M_check(__pos, "basic_string::append");
      __n = __str._M_limit(__pos, __n);
      if (__n)
 {
   const size_type __len = __n + this->size();
   if (__len > this->capacity() || _M_rep()->_M_is_shared())
     this->reserve(__len);
   _M_copy(_M_data() + this->size(), __str._M_data() + __pos, __n);
   _M_rep()->_M_set_length_and_sharable(__len);
 }
      return *this;
    }

   template<typename _CharT, typename _Traits, typename _Alloc>
     basic_string<_CharT, _Traits, _Alloc>&
     basic_string<_CharT, _Traits, _Alloc>::
     insert(size_type __pos, const _CharT* __s, size_type __n)
     {
       ;
       _M_check(__pos, "basic_string::insert");
       _M_check_length(size_type(0), __n, "basic_string::insert");
       if (_M_disjunct(__s) || _M_rep()->_M_is_shared())
         return _M_replace_safe(__pos, size_type(0), __s, __n);
       else
         {

           const size_type __off = __s - _M_data();
           _M_mutate(__pos, 0, __n);
           __s = _M_data() + __off;
           _CharT* __p = _M_data() + __pos;
           if (__s + __n <= __p)
             _M_copy(__p, __s, __n);
           else if (__s >= __p)
             _M_copy(__p, __s + __n, __n);
           else
             {
        const size_type __nleft = __p - __s;
               _M_copy(__p, __s, __nleft);
               _M_copy(__p + __nleft, __p + __n, __n - __nleft);
             }
           return *this;
         }
     }

   template<typename _CharT, typename _Traits, typename _Alloc>
     basic_string<_CharT, _Traits, _Alloc>&
     basic_string<_CharT, _Traits, _Alloc>::
     replace(size_type __pos, size_type __n1, const _CharT* __s,
      size_type __n2)
     {
       ;
       _M_check(__pos, "basic_string::replace");
       __n1 = _M_limit(__pos, __n1);
       _M_check_length(__n1, __n2, "basic_string::replace");
       bool __left;
       if (_M_disjunct(__s) || _M_rep()->_M_is_shared())
         return _M_replace_safe(__pos, __n1, __s, __n2);
       else if ((__left = __s + __n2 <= _M_data() + __pos)
  || _M_data() + __pos + __n1 <= __s)
  {

    size_type __off = __s - _M_data();
    __left ? __off : (__off += __n2 - __n1);
    _M_mutate(__pos, __n1, __n2);
    _M_copy(_M_data() + __pos, _M_data() + __off, __n2);
    return *this;
  }
       else
  {

    const basic_string __tmp(__s, __n2);
    return _M_replace_safe(__pos, __n1, __tmp._M_data(), __n2);
  }
     }

  template<typename _CharT, typename _Traits, typename _Alloc>
    void
    basic_string<_CharT, _Traits, _Alloc>::_Rep::
    _M_destroy(const _Alloc& __a) throw ()
    {
      const size_type __size = sizeof(_Rep_base) +
                        (this->_M_capacity + 1) * sizeof(_CharT);
      _Raw_bytes_alloc(__a).deallocate(reinterpret_cast<char*>(this), __size);
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    void
    basic_string<_CharT, _Traits, _Alloc>::
    _M_leak_hard()
    {

      if (_M_rep() == &_S_empty_rep())
 return;

      if (_M_rep()->_M_is_shared())
 _M_mutate(0, 0, 0);
      _M_rep()->_M_set_leaked();
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    void
    basic_string<_CharT, _Traits, _Alloc>::
    _M_mutate(size_type __pos, size_type __len1, size_type __len2)
    {
      const size_type __old_size = this->size();
      const size_type __new_size = __old_size + __len2 - __len1;
      const size_type __how_much = __old_size - __pos - __len1;

      if (__new_size > this->capacity() || _M_rep()->_M_is_shared())
 {

   const allocator_type __a = get_allocator();
   _Rep* __r = _Rep::_S_create(__new_size, this->capacity(), __a);

   if (__pos)
     _M_copy(__r->_M_refdata(), _M_data(), __pos);
   if (__how_much)
     _M_copy(__r->_M_refdata() + __pos + __len2,
      _M_data() + __pos + __len1, __how_much);

   _M_rep()->_M_dispose(__a);
   _M_data(__r->_M_refdata());
 }
      else if (__how_much && __len1 != __len2)
 {

   _M_move(_M_data() + __pos + __len2,
    _M_data() + __pos + __len1, __how_much);
 }
      _M_rep()->_M_set_length_and_sharable(__new_size);
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    void
    basic_string<_CharT, _Traits, _Alloc>::
    reserve(size_type __res)
    {
      if (__res != this->capacity() || _M_rep()->_M_is_shared())
        {

   if (__res < this->size())
     __res = this->size();
   const allocator_type __a = get_allocator();
   _CharT* __tmp = _M_rep()->_M_clone(__a, __res - this->size());
   _M_rep()->_M_dispose(__a);
   _M_data(__tmp);
        }
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    void
    basic_string<_CharT, _Traits, _Alloc>::
    swap(basic_string& __s)
    {
      if (_M_rep()->_M_is_leaked())
 _M_rep()->_M_set_sharable();
      if (__s._M_rep()->_M_is_leaked())
 __s._M_rep()->_M_set_sharable();
      if (this->get_allocator() == __s.get_allocator())
 {
   _CharT* __tmp = _M_data();
   _M_data(__s._M_data());
   __s._M_data(__tmp);
 }

      else
 {
   const basic_string __tmp1(_M_ibegin(), _M_iend(),
        __s.get_allocator());
   const basic_string __tmp2(__s._M_ibegin(), __s._M_iend(),
        this->get_allocator());
   *this = __tmp2;
   __s = __tmp1;
 }
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    typename basic_string<_CharT, _Traits, _Alloc>::_Rep*
    basic_string<_CharT, _Traits, _Alloc>::_Rep::
    _S_create(size_type __capacity, size_type __old_capacity,
       const _Alloc& __alloc)
    {


      if (__capacity > _S_max_size)
 __throw_length_error(("basic_string::_S_create"));
# 559 "/usr/include/c++/4.2.1/bits/basic_string.tcc" 3
      const size_type __pagesize = 4096;
      const size_type __malloc_header_size = 4 * sizeof(void*);







      if (__capacity > __old_capacity && __capacity < 2 * __old_capacity)
 __capacity = 2 * __old_capacity;




      size_type __size = (__capacity + 1) * sizeof(_CharT) + sizeof(_Rep);

      const size_type __adj_size = __size + __malloc_header_size;
      if (__adj_size > __pagesize && __capacity > __old_capacity)
 {
   const size_type __extra = __pagesize - __adj_size % __pagesize;
   __capacity += __extra / sizeof(_CharT);

   if (__capacity > _S_max_size)
     __capacity = _S_max_size;
   __size = (__capacity + 1) * sizeof(_CharT) + sizeof(_Rep);
 }



      void* __place = _Raw_bytes_alloc(__alloc).allocate(__size);
      _Rep *__p = new (__place) _Rep;
      __p->_M_capacity = __capacity;







      __p->_M_set_sharable();
      return __p;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    _CharT*
    basic_string<_CharT, _Traits, _Alloc>::_Rep::
    _M_clone(const _Alloc& __alloc, size_type __res)
    {

      const size_type __requested_cap = this->_M_length + __res;
      _Rep* __r = _Rep::_S_create(__requested_cap, this->_M_capacity,
      __alloc);
      if (this->_M_length)
 _M_copy(__r->_M_refdata(), _M_refdata(), this->_M_length);

      __r->_M_set_length_and_sharable(this->_M_length);
      return __r->_M_refdata();
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    void
    basic_string<_CharT, _Traits, _Alloc>::
    resize(size_type __n, _CharT __c)
    {
      const size_type __size = this->size();
      _M_check_length(__size, __n, "basic_string::resize");
      if (__size < __n)
 this->append(__n - __size, __c);
      else if (__n < __size)
 this->erase(__n);

    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    template<typename _InputIterator>
      basic_string<_CharT, _Traits, _Alloc>&
      basic_string<_CharT, _Traits, _Alloc>::
      _M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1,
     _InputIterator __k2, __false_type)
      {
 const basic_string __s(__k1, __k2);
 const size_type __n1 = __i2 - __i1;
 _M_check_length(__n1, __s.size(), "basic_string::_M_replace_dispatch");
 return _M_replace_safe(__i1 - _M_ibegin(), __n1, __s._M_data(),
          __s.size());
      }

  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_string<_CharT, _Traits, _Alloc>&
    basic_string<_CharT, _Traits, _Alloc>::
    _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
     _CharT __c)
    {
      _M_check_length(__n1, __n2, "basic_string::_M_replace_aux");
      _M_mutate(__pos1, __n1, __n2);
      if (__n2)
 _M_assign(_M_data() + __pos1, __n2, __c);
      return *this;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_string<_CharT, _Traits, _Alloc>&
    basic_string<_CharT, _Traits, _Alloc>::
    _M_replace_safe(size_type __pos1, size_type __n1, const _CharT* __s,
      size_type __n2)
    {
      _M_mutate(__pos1, __n1, __n2);
      if (__n2)
 _M_copy(_M_data() + __pos1, __s, __n2);
      return *this;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_string<_CharT, _Traits, _Alloc>
    operator+(const _CharT* __lhs,
       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    {
      ;
      typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
      typedef typename __string_type::size_type __size_type;
      const __size_type __len = _Traits::length(__lhs);
      __string_type __str;
      __str.reserve(__len + __rhs.size());
      __str.append(__lhs, __len);
      __str.append(__rhs);
      return __str;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_string<_CharT, _Traits, _Alloc>
    operator+(_CharT __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    {
      typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
      typedef typename __string_type::size_type __size_type;
      __string_type __str;
      const __size_type __len = __rhs.size();
      __str.reserve(__len + 1);
      __str.append(__size_type(1), __lhs);
      __str.append(__rhs);
      return __str;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    typename basic_string<_CharT, _Traits, _Alloc>::size_type
    basic_string<_CharT, _Traits, _Alloc>::
    copy(_CharT* __s, size_type __n, size_type __pos) const
    {
      _M_check(__pos, "basic_string::copy");
      __n = _M_limit(__pos, __n);
      ;
      if (__n)
 _M_copy(__s, _M_data() + __pos, __n);

      return __n;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    typename basic_string<_CharT, _Traits, _Alloc>::size_type
    basic_string<_CharT, _Traits, _Alloc>::
    find(const _CharT* __s, size_type __pos, size_type __n) const
    {
      ;
      const size_type __size = this->size();
      const _CharT* __data = _M_data();

      if (__n == 0)
 return __pos <= __size ? __pos : npos;

      if (__n <= __size)
 {
   for (; __pos <= __size - __n; ++__pos)
     if (traits_type::eq(__data[__pos], __s[0])
  && traits_type::compare(__data + __pos + 1,
     __s + 1, __n - 1) == 0)
       return __pos;
 }
      return npos;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    typename basic_string<_CharT, _Traits, _Alloc>::size_type
    basic_string<_CharT, _Traits, _Alloc>::
    find(_CharT __c, size_type __pos) const
    {
      size_type __ret = npos;
      const size_type __size = this->size();
      if (__pos < __size)
 {
   const _CharT* __data = _M_data();
   const size_type __n = __size - __pos;
   const _CharT* __p = traits_type::find(__data + __pos, __n, __c);
   if (__p)
     __ret = __p - __data;
 }
      return __ret;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    typename basic_string<_CharT, _Traits, _Alloc>::size_type
    basic_string<_CharT, _Traits, _Alloc>::
    rfind(const _CharT* __s, size_type __pos, size_type __n) const
    {
      ;
      const size_type __size = this->size();
      if (__n <= __size)
 {
   __pos = std::min(size_type(__size - __n), __pos);
   const _CharT* __data = _M_data();
   do
     {
       if (traits_type::compare(__data + __pos, __s, __n) == 0)
  return __pos;
     }
   while (__pos-- > 0);
 }
      return npos;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    typename basic_string<_CharT, _Traits, _Alloc>::size_type
    basic_string<_CharT, _Traits, _Alloc>::
    rfind(_CharT __c, size_type __pos) const
    {
      size_type __size = this->size();
      if (__size)
 {
   if (--__size > __pos)
     __size = __pos;
   for (++__size; __size-- > 0; )
     if (traits_type::eq(_M_data()[__size], __c))
       return __size;
 }
      return npos;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    typename basic_string<_CharT, _Traits, _Alloc>::size_type
    basic_string<_CharT, _Traits, _Alloc>::
    find_first_of(const _CharT* __s, size_type __pos, size_type __n) const
    {
      ;
      for (; __n && __pos < this->size(); ++__pos)
 {
   const _CharT* __p = traits_type::find(__s, __n, _M_data()[__pos]);
   if (__p)
     return __pos;
 }
      return npos;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    typename basic_string<_CharT, _Traits, _Alloc>::size_type
    basic_string<_CharT, _Traits, _Alloc>::
    find_last_of(const _CharT* __s, size_type __pos, size_type __n) const
    {
      ;
      size_type __size = this->size();
      if (__size && __n)
 {
   if (--__size > __pos)
     __size = __pos;
   do
     {
       if (traits_type::find(__s, __n, _M_data()[__size]))
  return __size;
     }
   while (__size-- != 0);
 }
      return npos;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    typename basic_string<_CharT, _Traits, _Alloc>::size_type
    basic_string<_CharT, _Traits, _Alloc>::
    find_first_not_of(const _CharT* __s, size_type __pos, size_type __n) const
    {
      ;
      for (; __pos < this->size(); ++__pos)
 if (!traits_type::find(__s, __n, _M_data()[__pos]))
   return __pos;
      return npos;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    typename basic_string<_CharT, _Traits, _Alloc>::size_type
    basic_string<_CharT, _Traits, _Alloc>::
    find_first_not_of(_CharT __c, size_type __pos) const
    {
      for (; __pos < this->size(); ++__pos)
 if (!traits_type::eq(_M_data()[__pos], __c))
   return __pos;
      return npos;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    typename basic_string<_CharT, _Traits, _Alloc>::size_type
    basic_string<_CharT, _Traits, _Alloc>::
    find_last_not_of(const _CharT* __s, size_type __pos, size_type __n) const
    {
      ;
      size_type __size = this->size();
      if (__size)
 {
   if (--__size > __pos)
     __size = __pos;
   do
     {
       if (!traits_type::find(__s, __n, _M_data()[__size]))
  return __size;
     }
   while (__size--);
 }
      return npos;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    typename basic_string<_CharT, _Traits, _Alloc>::size_type
    basic_string<_CharT, _Traits, _Alloc>::
    find_last_not_of(_CharT __c, size_type __pos) const
    {
      size_type __size = this->size();
      if (__size)
 {
   if (--__size > __pos)
     __size = __pos;
   do
     {
       if (!traits_type::eq(_M_data()[__size], __c))
  return __size;
     }
   while (__size--);
 }
      return npos;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    int
    basic_string<_CharT, _Traits, _Alloc>::
    compare(size_type __pos, size_type __n, const basic_string& __str) const
    {
      _M_check(__pos, "basic_string::compare");
      __n = _M_limit(__pos, __n);
      const size_type __osize = __str.size();
      const size_type __len = std::min(__n, __osize);
      int __r = traits_type::compare(_M_data() + __pos, __str.data(), __len);
      if (!__r)
 __r = _S_compare(__n, __osize);
      return __r;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    int
    basic_string<_CharT, _Traits, _Alloc>::
    compare(size_type __pos1, size_type __n1, const basic_string& __str,
     size_type __pos2, size_type __n2) const
    {
      _M_check(__pos1, "basic_string::compare");
      __str._M_check(__pos2, "basic_string::compare");
      __n1 = _M_limit(__pos1, __n1);
      __n2 = __str._M_limit(__pos2, __n2);
      const size_type __len = std::min(__n1, __n2);
      int __r = traits_type::compare(_M_data() + __pos1,
         __str.data() + __pos2, __len);
      if (!__r)
 __r = _S_compare(__n1, __n2);
      return __r;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    int
    basic_string<_CharT, _Traits, _Alloc>::
    compare(const _CharT* __s) const
    {
      ;
      const size_type __size = this->size();
      const size_type __osize = traits_type::length(__s);
      const size_type __len = std::min(__size, __osize);
      int __r = traits_type::compare(_M_data(), __s, __len);
      if (!__r)
 __r = _S_compare(__size, __osize);
      return __r;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    int
    basic_string <_CharT, _Traits, _Alloc>::
    compare(size_type __pos, size_type __n1, const _CharT* __s) const
    {
      ;
      _M_check(__pos, "basic_string::compare");
      __n1 = _M_limit(__pos, __n1);
      const size_type __osize = traits_type::length(__s);
      const size_type __len = std::min(__n1, __osize);
      int __r = traits_type::compare(_M_data() + __pos, __s, __len);
      if (!__r)
 __r = _S_compare(__n1, __osize);
      return __r;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    int
    basic_string <_CharT, _Traits, _Alloc>::
    compare(size_type __pos, size_type __n1, const _CharT* __s,
     size_type __n2) const
    {
      ;
      _M_check(__pos, "basic_string::compare");
      __n1 = _M_limit(__pos, __n1);
      const size_type __len = std::min(__n1, __n2);
      int __r = traits_type::compare(_M_data() + __pos, __s, __len);
      if (!__r)
 __r = _S_compare(__n1, __n2);
      return __r;
    }





  extern template class basic_string<char>;
  extern template
    basic_istream<char>&
    operator>>(basic_istream<char>&, string&);
  extern template
    basic_ostream<char>&
    operator<<(basic_ostream<char>&, const string&);
  extern template
    basic_istream<char>&
    getline(basic_istream<char>&, string&, char);
  extern template
    basic_istream<char>&
    getline(basic_istream<char>&, string&);


  extern template class basic_string<wchar_t>;
  extern template
    basic_istream<wchar_t>&
    operator>>(basic_istream<wchar_t>&, wstring&);
  extern template
    basic_ostream<wchar_t>&
    operator<<(basic_ostream<wchar_t>&, const wstring&);
  extern template
    basic_istream<wchar_t>&
    getline(basic_istream<wchar_t>&, wstring&, wchar_t);
  extern template
    basic_istream<wchar_t>&
    getline(basic_istream<wchar_t>&, wstring&);



}
# 59 "/usr/include/c++/4.2.1/string" 2 3
# 48 "/usr/include/c++/4.2.1/bits/locale_classes.h" 2 3


namespace std {
# 66 "/usr/include/c++/4.2.1/bits/locale_classes.h" 3
  class locale
  {
  public:


    typedef int category;


    class facet;
    class id;
    class _Impl;

    friend class facet;
    friend class _Impl;

    template<typename _Facet>
      friend bool
      has_facet(const locale&) throw();

    template<typename _Facet>
      friend const _Facet&
      use_facet(const locale&);

    template<typename _Cache>
      friend struct __use_cache;
# 104 "/usr/include/c++/4.2.1/bits/locale_classes.h" 3
    static const category none = 0;
    static const category ctype = 1L << 0;
    static const category numeric = 1L << 1;
    static const category collate = 1L << 2;
    static const category time = 1L << 3;
    static const category monetary = 1L << 4;
    static const category messages = 1L << 5;
    static const category all = (ctype | numeric | collate |
        time | monetary | messages);
# 123 "/usr/include/c++/4.2.1/bits/locale_classes.h" 3
    locale() throw();
# 132 "/usr/include/c++/4.2.1/bits/locale_classes.h" 3
    locale(const locale& __other) throw();
# 142 "/usr/include/c++/4.2.1/bits/locale_classes.h" 3
    explicit
    locale(const char* __s);
# 157 "/usr/include/c++/4.2.1/bits/locale_classes.h" 3
    locale(const locale& __base, const char* __s, category __cat);
# 170 "/usr/include/c++/4.2.1/bits/locale_classes.h" 3
    locale(const locale& __base, const locale& __add, category __cat);
# 182 "/usr/include/c++/4.2.1/bits/locale_classes.h" 3
    template<typename _Facet>
      locale(const locale& __other, _Facet* __f);


    ~locale() throw();
# 196 "/usr/include/c++/4.2.1/bits/locale_classes.h" 3
    const locale&
    operator=(const locale& __other) throw();
# 211 "/usr/include/c++/4.2.1/bits/locale_classes.h" 3
    template<typename _Facet>
      locale
      combine(const locale& __other) const;






    string
    name() const;
# 230 "/usr/include/c++/4.2.1/bits/locale_classes.h" 3
    bool
    operator==(const locale& __other) const throw ();







    inline bool
    operator!=(const locale& __other) const throw ()
    { return !(this->operator==(__other)); }
# 258 "/usr/include/c++/4.2.1/bits/locale_classes.h" 3
    template<typename _Char, typename _Traits, typename _Alloc>
      bool
      operator()(const basic_string<_Char, _Traits, _Alloc>& __s1,
   const basic_string<_Char, _Traits, _Alloc>& __s2) const;
# 274 "/usr/include/c++/4.2.1/bits/locale_classes.h" 3
    static locale
    global(const locale&);




    static const locale&
    classic();

  private:

    _Impl* _M_impl;


    static _Impl* _S_classic;


    static _Impl* _S_global;





    static const char* const* const _S_categories;
# 309 "/usr/include/c++/4.2.1/bits/locale_classes.h" 3
    enum { _S_categories_size = 6 + 0 };


    static __gthread_once_t _S_once;


    explicit
    locale(_Impl*) throw();

    static void
    _S_initialize();

    static void
    _S_initialize_once();

    static category
    _S_normalize_category(category);

    void
    _M_coalesce(const locale& __base, const locale& __add, category __cat);
  };
# 342 "/usr/include/c++/4.2.1/bits/locale_classes.h" 3
  class locale::facet
  {
  private:
    friend class locale;
    friend class locale::_Impl;

    mutable _Atomic_word _M_refcount;


    static __c_locale _S_c_locale;


    static const char _S_c_name[2];


    static __gthread_once_t _S_once;


    static void
    _S_initialize_once();

  protected:
# 373 "/usr/include/c++/4.2.1/bits/locale_classes.h" 3
    explicit
    facet(size_t __refs = 0) throw() : _M_refcount(__refs ? 1 : 0)
    { }


    virtual
    ~facet();

    static void
    _S_create_c_locale(__c_locale& __cloc, const char* __s,
         __c_locale __old = 0);

    static __c_locale
    _S_clone_c_locale(__c_locale& __cloc);

    static void
    _S_destroy_c_locale(__c_locale& __cloc);



    static __c_locale
    _S_get_c_locale();

    static const char*
    _S_get_c_name();

  private:
    inline void
    _M_add_reference() const throw()
    { __gnu_cxx::__atomic_add_dispatch(&_M_refcount, 1); }

    inline void
    _M_remove_reference() const throw()
    {
      if (__gnu_cxx::__exchange_and_add_dispatch(&_M_refcount, -1) == 1)
 {
   try
     { delete this; }
   catch (...)
     { }
 }
    }

    facet(const facet&);

    facet&
    operator=(const facet&);
  };
# 433 "/usr/include/c++/4.2.1/bits/locale_classes.h" 3
  class locale::id
  {
  private:
    friend class locale;
    friend class locale::_Impl;

    template<typename _Facet>
      friend const _Facet&
      use_facet(const locale&);

    template<typename _Facet>
      friend bool
      has_facet(const locale&) throw ();




    mutable size_t _M_index;


    static _Atomic_word _S_refcount;

    void
    operator=(const id&);

    id(const id&);

  public:



    id() { }

    size_t
    _M_id() const;
  };



  class locale::_Impl
  {
  public:

    friend class locale;
    friend class locale::facet;

    template<typename _Facet>
      friend bool
      has_facet(const locale&) throw();

    template<typename _Facet>
      friend const _Facet&
      use_facet(const locale&);

    template<typename _Cache>
      friend struct __use_cache;

  private:

    _Atomic_word _M_refcount;
    const facet** _M_facets;
    size_t _M_facets_size;
    const facet** _M_caches;
    char** _M_names;
    static const locale::id* const _S_id_ctype[];
    static const locale::id* const _S_id_numeric[];
    static const locale::id* const _S_id_collate[];
    static const locale::id* const _S_id_time[];
    static const locale::id* const _S_id_monetary[];
    static const locale::id* const _S_id_messages[];
    static const locale::id* const* const _S_facet_categories[];

    inline void
    _M_add_reference() throw()
    { __gnu_cxx::__atomic_add_dispatch(&_M_refcount, 1); }

    inline void
    _M_remove_reference() throw()
    {
      if (__gnu_cxx::__exchange_and_add_dispatch(&_M_refcount, -1) == 1)
 {
   try
     { delete this; }
   catch(...)
     { }
 }
    }

    _Impl(const _Impl&, size_t);
    _Impl(const char*, size_t);
    _Impl(size_t) throw();

   ~_Impl() throw();

    _Impl(const _Impl&);

    void
    operator=(const _Impl&);

    inline bool
    _M_check_same_name()
    {
      bool __ret = true;
      if (_M_names[1])

 for (size_t __i = 0; __ret && __i < _S_categories_size - 1; ++__i)
   __ret = std::strcmp(_M_names[__i], _M_names[__i + 1]) == 0;
      return __ret;
    }

    void
    _M_replace_categories(const _Impl*, category);

    void
    _M_replace_category(const _Impl*, const locale::id* const*);

    void
    _M_replace_facet(const _Impl*, const locale::id*);

    void
    _M_install_facet(const locale::id*, const facet*);

    template<typename _Facet>
      inline void
      _M_init_facet(_Facet* __facet)
      { _M_install_facet(&_Facet::id, __facet); }

    void
    _M_install_cache(const facet*, size_t);
  };

  template<typename _Facet>
    locale::locale(const locale& __other, _Facet* __f)
    {
      _M_impl = new _Impl(*__other._M_impl, 1);

      try
 { _M_impl->_M_install_facet(&_Facet::id, __f); }
      catch(...)
 {
   _M_impl->_M_remove_reference();
   throw;
 }
      delete [] _M_impl->_M_names[0];
      _M_impl->_M_names[0] = 0;
    }

}
# 48 "/usr/include/c++/4.2.1/bits/ios_base.h" 2 3

namespace std {





  enum _Ios_Fmtflags
    {
      _S_boolalpha = 1L << 0,
      _S_dec = 1L << 1,
      _S_fixed = 1L << 2,
      _S_hex = 1L << 3,
      _S_internal = 1L << 4,
      _S_left = 1L << 5,
      _S_oct = 1L << 6,
      _S_right = 1L << 7,
      _S_scientific = 1L << 8,
      _S_showbase = 1L << 9,
      _S_showpoint = 1L << 10,
      _S_showpos = 1L << 11,
      _S_skipws = 1L << 12,
      _S_unitbuf = 1L << 13,
      _S_uppercase = 1L << 14,
      _S_adjustfield = _S_left | _S_right | _S_internal,
      _S_basefield = _S_dec | _S_oct | _S_hex,
      _S_floatfield = _S_scientific | _S_fixed,
      _S_ios_fmtflags_end = 1L << 16
    };

  inline _Ios_Fmtflags
  operator&(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
  { return _Ios_Fmtflags(static_cast<int>(__a) & static_cast<int>(__b)); }

  inline _Ios_Fmtflags
  operator|(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
  { return _Ios_Fmtflags(static_cast<int>(__a) | static_cast<int>(__b)); }

  inline _Ios_Fmtflags
  operator^(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
  { return _Ios_Fmtflags(static_cast<int>(__a) ^ static_cast<int>(__b)); }

  inline _Ios_Fmtflags&
  operator|=(_Ios_Fmtflags& __a, _Ios_Fmtflags __b)
  { return __a = __a | __b; }

  inline _Ios_Fmtflags&
  operator&=(_Ios_Fmtflags& __a, _Ios_Fmtflags __b)
  { return __a = __a & __b; }

  inline _Ios_Fmtflags&
  operator^=(_Ios_Fmtflags& __a, _Ios_Fmtflags __b)
  { return __a = __a ^ __b; }

  inline _Ios_Fmtflags
  operator~(_Ios_Fmtflags __a)
  { return _Ios_Fmtflags(~static_cast<int>(__a)); }


  enum _Ios_Openmode
    {
      _S_app = 1L << 0,
      _S_ate = 1L << 1,
      _S_bin = 1L << 2,
      _S_in = 1L << 3,
      _S_out = 1L << 4,
      _S_trunc = 1L << 5,
      _S_ios_openmode_end = 1L << 16
    };

  inline _Ios_Openmode
  operator&(_Ios_Openmode __a, _Ios_Openmode __b)
  { return _Ios_Openmode(static_cast<int>(__a) & static_cast<int>(__b)); }

  inline _Ios_Openmode
  operator|(_Ios_Openmode __a, _Ios_Openmode __b)
  { return _Ios_Openmode(static_cast<int>(__a) | static_cast<int>(__b)); }

  inline _Ios_Openmode
  operator^(_Ios_Openmode __a, _Ios_Openmode __b)
  { return _Ios_Openmode(static_cast<int>(__a) ^ static_cast<int>(__b)); }

  inline _Ios_Openmode&
  operator|=(_Ios_Openmode& __a, _Ios_Openmode __b)
  { return __a = __a | __b; }

  inline _Ios_Openmode&
  operator&=(_Ios_Openmode& __a, _Ios_Openmode __b)
  { return __a = __a & __b; }

  inline _Ios_Openmode&
  operator^=(_Ios_Openmode& __a, _Ios_Openmode __b)
  { return __a = __a ^ __b; }

  inline _Ios_Openmode
  operator~(_Ios_Openmode __a)
  { return _Ios_Openmode(~static_cast<int>(__a)); }


  enum _Ios_Iostate
    {
      _S_goodbit = 0,
      _S_badbit = 1L << 0,
      _S_eofbit = 1L << 1,
      _S_failbit = 1L << 2,
      _S_ios_iostate_end = 1L << 16
    };

  inline _Ios_Iostate
  operator&(_Ios_Iostate __a, _Ios_Iostate __b)
  { return _Ios_Iostate(static_cast<int>(__a) & static_cast<int>(__b)); }

  inline _Ios_Iostate
  operator|(_Ios_Iostate __a, _Ios_Iostate __b)
  { return _Ios_Iostate(static_cast<int>(__a) | static_cast<int>(__b)); }

  inline _Ios_Iostate
  operator^(_Ios_Iostate __a, _Ios_Iostate __b)
  { return _Ios_Iostate(static_cast<int>(__a) ^ static_cast<int>(__b)); }

  inline _Ios_Iostate&
  operator|=(_Ios_Iostate& __a, _Ios_Iostate __b)
  { return __a = __a | __b; }

  inline _Ios_Iostate&
  operator&=(_Ios_Iostate& __a, _Ios_Iostate __b)
  { return __a = __a & __b; }

  inline _Ios_Iostate&
  operator^=(_Ios_Iostate& __a, _Ios_Iostate __b)
  { return __a = __a ^ __b; }

  inline _Ios_Iostate
  operator~(_Ios_Iostate __a)
  { return _Ios_Iostate(~static_cast<int>(__a)); }

  enum _Ios_Seekdir
    {
      _S_beg = 0,
      _S_cur = 1,
      _S_end = 2,
      _S_ios_seekdir_end = 1L << 16
    };
# 201 "/usr/include/c++/4.2.1/bits/ios_base.h" 3
  class ios_base
  {
  public:



    class failure : public exception
    {
    public:


      explicit
      failure(const string& __str) throw();



      virtual
      ~failure() throw();

      virtual const char*
      what() const throw();

    private:
      string _M_msg;
    };
# 253 "/usr/include/c++/4.2.1/bits/ios_base.h" 3
    typedef _Ios_Fmtflags fmtflags;


    static const fmtflags boolalpha = _S_boolalpha;


    static const fmtflags dec = _S_dec;


    static const fmtflags fixed = _S_fixed;


    static const fmtflags hex = _S_hex;




    static const fmtflags internal = _S_internal;



    static const fmtflags left = _S_left;


    static const fmtflags oct = _S_oct;



    static const fmtflags right = _S_right;


    static const fmtflags scientific = _S_scientific;



    static const fmtflags showbase = _S_showbase;



    static const fmtflags showpoint = _S_showpoint;


    static const fmtflags showpos = _S_showpos;


    static const fmtflags skipws = _S_skipws;


    static const fmtflags unitbuf = _S_unitbuf;



    static const fmtflags uppercase = _S_uppercase;


    static const fmtflags adjustfield = _S_adjustfield;


    static const fmtflags basefield = _S_basefield;


    static const fmtflags floatfield = _S_floatfield;
# 328 "/usr/include/c++/4.2.1/bits/ios_base.h" 3
    typedef _Ios_Iostate iostate;



    static const iostate badbit = _S_badbit;


    static const iostate eofbit = _S_eofbit;




    static const iostate failbit = _S_failbit;


    static const iostate goodbit = _S_goodbit;
# 359 "/usr/include/c++/4.2.1/bits/ios_base.h" 3
    typedef _Ios_Openmode openmode;


    static const openmode app = _S_app;


    static const openmode ate = _S_ate;





    static const openmode binary = _S_bin;


    static const openmode in = _S_in;


    static const openmode out = _S_out;


    static const openmode trunc = _S_trunc;
# 392 "/usr/include/c++/4.2.1/bits/ios_base.h" 3
    typedef _Ios_Seekdir seekdir;


    static const seekdir beg = _S_beg;


    static const seekdir cur = _S_cur;


    static const seekdir end = _S_end;


    typedef int io_state;
    typedef int open_mode;
    typedef int seek_dir;

    typedef std::streampos streampos;
    typedef std::streamoff streamoff;
# 418 "/usr/include/c++/4.2.1/bits/ios_base.h" 3
    enum event
    {
      erase_event,
      imbue_event,
      copyfmt_event
    };
# 435 "/usr/include/c++/4.2.1/bits/ios_base.h" 3
    typedef void (*event_callback) (event, ios_base&, int);
# 447 "/usr/include/c++/4.2.1/bits/ios_base.h" 3
    void
    register_callback(event_callback __fn, int __index);

  protected:






    streamsize _M_precision;
    streamsize _M_width;
    fmtflags _M_flags;
    iostate _M_exception;
    iostate _M_streambuf_state;




    struct _Callback_list
    {

      _Callback_list* _M_next;
      ios_base::event_callback _M_fn;
      int _M_index;
      _Atomic_word _M_refcount;

      _Callback_list(ios_base::event_callback __fn, int __index,
       _Callback_list* __cb)
      : _M_next(__cb), _M_fn(__fn), _M_index(__index), _M_refcount(0) { }

      void
      _M_add_reference() { __gnu_cxx::__atomic_add_dispatch(&_M_refcount, 1); }


      int
      _M_remove_reference()
      { return __gnu_cxx::__exchange_and_add_dispatch(&_M_refcount, -1); }
    };

     _Callback_list* _M_callbacks;

    void
    _M_call_callbacks(event __ev) throw();

    void
    _M_dispose_callbacks(void);


    struct _Words
    {
      void* _M_pword;
      long _M_iword;
      _Words() : _M_pword(0), _M_iword(0) { }
    };


    _Words _M_word_zero;



    enum { _S_local_word_size = 8 };
    _Words _M_local_word[_S_local_word_size];


    int _M_word_size;
    _Words* _M_word;

    _Words&
    _M_grow_words(int __index, bool __iword);


    locale _M_ios_locale;

    void
    _M_init();

  public:





    class Init
    {
      friend class ios_base;
    public:
      Init();
      ~Init();

    private:
      static _Atomic_word _S_refcount;
      static bool _S_synced_with_stdio;
    };






    inline fmtflags
    flags() const { return _M_flags; }
# 557 "/usr/include/c++/4.2.1/bits/ios_base.h" 3
    inline fmtflags
    flags(fmtflags __fmtfl)
    {
      fmtflags __old = _M_flags;
      _M_flags = __fmtfl;
      return __old;
    }
# 573 "/usr/include/c++/4.2.1/bits/ios_base.h" 3
    inline fmtflags
    setf(fmtflags __fmtfl)
    {
      fmtflags __old = _M_flags;
      _M_flags |= __fmtfl;
      return __old;
    }
# 590 "/usr/include/c++/4.2.1/bits/ios_base.h" 3
    inline fmtflags
    setf(fmtflags __fmtfl, fmtflags __mask)
    {
      fmtflags __old = _M_flags;
      _M_flags &= ~__mask;
      _M_flags |= (__fmtfl & __mask);
      return __old;
    }







    inline void
    unsetf(fmtflags __mask) { _M_flags &= ~__mask; }
# 617 "/usr/include/c++/4.2.1/bits/ios_base.h" 3
    inline streamsize
    precision() const { return _M_precision; }






    inline streamsize
    precision(streamsize __prec)
    {
      streamsize __old = _M_precision;
      _M_precision = __prec;
      return __old;
    }







    inline streamsize
    width() const { return _M_width; }






    inline streamsize
    width(streamsize __wide)
    {
      streamsize __old = _M_width;
      _M_width = __wide;
      return __old;
    }
# 666 "/usr/include/c++/4.2.1/bits/ios_base.h" 3
    static bool
    sync_with_stdio(bool __sync = true);
# 678 "/usr/include/c++/4.2.1/bits/ios_base.h" 3
    locale
    imbue(const locale& __loc);
# 689 "/usr/include/c++/4.2.1/bits/ios_base.h" 3
    inline locale
    getloc() const { return _M_ios_locale; }
# 699 "/usr/include/c++/4.2.1/bits/ios_base.h" 3
    inline const locale&
    _M_getloc() const { return _M_ios_locale; }
# 717 "/usr/include/c++/4.2.1/bits/ios_base.h" 3
    static int
    xalloc() throw();
# 733 "/usr/include/c++/4.2.1/bits/ios_base.h" 3
    inline long&
    iword(int __ix)
    {
      _Words& __word = (__ix < _M_word_size)
   ? _M_word[__ix] : _M_grow_words(__ix, true);
      return __word._M_iword;
    }
# 754 "/usr/include/c++/4.2.1/bits/ios_base.h" 3
    inline void*&
    pword(int __ix)
    {
      _Words& __word = (__ix < _M_word_size)
   ? _M_word[__ix] : _M_grow_words(__ix, false);
      return __word._M_pword;
    }
# 771 "/usr/include/c++/4.2.1/bits/ios_base.h" 3
    virtual ~ios_base();

  protected:
    ios_base();



  private:
    ios_base(const ios_base&);

    ios_base&
    operator=(const ios_base&);
  };



  inline ios_base&
  boolalpha(ios_base& __base)
  {
    __base.setf(ios_base::boolalpha);
    return __base;
  }


  inline ios_base&
  noboolalpha(ios_base& __base)
  {
    __base.unsetf(ios_base::boolalpha);
    return __base;
  }


  inline ios_base&
  showbase(ios_base& __base)
  {
    __base.setf(ios_base::showbase);
    return __base;
  }


  inline ios_base&
  noshowbase(ios_base& __base)
  {
    __base.unsetf(ios_base::showbase);
    return __base;
  }


  inline ios_base&
  showpoint(ios_base& __base)
  {
    __base.setf(ios_base::showpoint);
    return __base;
  }


  inline ios_base&
  noshowpoint(ios_base& __base)
  {
    __base.unsetf(ios_base::showpoint);
    return __base;
  }


  inline ios_base&
  showpos(ios_base& __base)
  {
    __base.setf(ios_base::showpos);
    return __base;
  }


  inline ios_base&
  noshowpos(ios_base& __base)
  {
    __base.unsetf(ios_base::showpos);
    return __base;
  }


  inline ios_base&
  skipws(ios_base& __base)
  {
    __base.setf(ios_base::skipws);
    return __base;
  }


  inline ios_base&
  noskipws(ios_base& __base)
  {
    __base.unsetf(ios_base::skipws);
    return __base;
  }


  inline ios_base&
  uppercase(ios_base& __base)
  {
    __base.setf(ios_base::uppercase);
    return __base;
  }


  inline ios_base&
  nouppercase(ios_base& __base)
  {
    __base.unsetf(ios_base::uppercase);
    return __base;
  }


  inline ios_base&
  unitbuf(ios_base& __base)
  {
     __base.setf(ios_base::unitbuf);
     return __base;
  }


  inline ios_base&
  nounitbuf(ios_base& __base)
  {
     __base.unsetf(ios_base::unitbuf);
     return __base;
  }



  inline ios_base&
  internal(ios_base& __base)
  {
     __base.setf(ios_base::internal, ios_base::adjustfield);
     return __base;
  }


  inline ios_base&
  left(ios_base& __base)
  {
    __base.setf(ios_base::left, ios_base::adjustfield);
    return __base;
  }


  inline ios_base&
  right(ios_base& __base)
  {
    __base.setf(ios_base::right, ios_base::adjustfield);
    return __base;
  }



  inline ios_base&
  dec(ios_base& __base)
  {
    __base.setf(ios_base::dec, ios_base::basefield);
    return __base;
  }


  inline ios_base&
  hex(ios_base& __base)
  {
    __base.setf(ios_base::hex, ios_base::basefield);
    return __base;
  }


  inline ios_base&
  oct(ios_base& __base)
  {
    __base.setf(ios_base::oct, ios_base::basefield);
    return __base;
  }



  inline ios_base&
  fixed(ios_base& __base)
  {
    __base.setf(ios_base::fixed, ios_base::floatfield);
    return __base;
  }


  inline ios_base&
  scientific(ios_base& __base)
  {
    __base.setf(ios_base::scientific, ios_base::floatfield);
    return __base;
  }

}
# 49 "/usr/include/c++/4.2.1/ios" 2 3
# 1 "/usr/include/c++/4.2.1/streambuf" 1 3
# 42 "/usr/include/c++/4.2.1/streambuf" 3
       
# 43 "/usr/include/c++/4.2.1/streambuf" 3
# 51 "/usr/include/c++/4.2.1/streambuf" 3
namespace std {






  template<typename _CharT, typename _Traits>
    streamsize
    __copy_streambufs_eof(basic_streambuf<_CharT, _Traits>*,
     basic_streambuf<_CharT, _Traits>*, bool&);
# 123 "/usr/include/c++/4.2.1/streambuf" 3
  template<typename _CharT, typename _Traits>
    class basic_streambuf
    {
    public:






      typedef _CharT char_type;
      typedef _Traits traits_type;
      typedef typename traits_type::int_type int_type;
      typedef typename traits_type::pos_type pos_type;
      typedef typename traits_type::off_type off_type;
# 146 "/usr/include/c++/4.2.1/streambuf" 3
      typedef basic_streambuf<char_type, traits_type> __streambuf_type;


      friend class basic_ios<char_type, traits_type>;
      friend class basic_istream<char_type, traits_type>;
      friend class basic_ostream<char_type, traits_type>;
      friend class istreambuf_iterator<char_type, traits_type>;
      friend class ostreambuf_iterator<char_type, traits_type>;

      friend streamsize
      __copy_streambufs_eof<>(__streambuf_type*, __streambuf_type*, bool&);

      template<typename _CharT2>
        friend typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value,
            _CharT2*>::__type
        __copy_aux(istreambuf_iterator<_CharT2>,
     istreambuf_iterator<_CharT2>, _CharT2*);

      template<typename _CharT2>
        friend typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value,
      istreambuf_iterator<_CharT2> >::__type
        find(istreambuf_iterator<_CharT2>, istreambuf_iterator<_CharT2>,
      const _CharT2&);

      template<typename _CharT2, typename _Traits2>
        friend basic_istream<_CharT2, _Traits2>&
        operator>>(basic_istream<_CharT2, _Traits2>&, _CharT2*);

      template<typename _CharT2, typename _Traits2, typename _Alloc>
        friend basic_istream<_CharT2, _Traits2>&
        operator>>(basic_istream<_CharT2, _Traits2>&,
     basic_string<_CharT2, _Traits2, _Alloc>&);

      template<typename _CharT2, typename _Traits2, typename _Alloc>
        friend basic_istream<_CharT2, _Traits2>&
        getline(basic_istream<_CharT2, _Traits2>&,
  basic_string<_CharT2, _Traits2, _Alloc>&, _CharT2);

    protected:
# 195 "/usr/include/c++/4.2.1/streambuf" 3
      char_type* _M_in_beg;
      char_type* _M_in_cur;
      char_type* _M_in_end;
      char_type* _M_out_beg;
      char_type* _M_out_cur;
      char_type* _M_out_end;






      locale _M_buf_locale;

  public:

      virtual
      ~basic_streambuf()
      { }
# 223 "/usr/include/c++/4.2.1/streambuf" 3
      locale
      pubimbue(const locale &__loc)
      {
 locale __tmp(this->getloc());
 this->imbue(__loc);
 _M_buf_locale = __loc;
 return __tmp;
      }
# 240 "/usr/include/c++/4.2.1/streambuf" 3
      locale
      getloc() const
      { return _M_buf_locale; }
# 253 "/usr/include/c++/4.2.1/streambuf" 3
      __streambuf_type*
      pubsetbuf(char_type* __s, streamsize __n)
      { return this->setbuf(__s, __n); }

      pos_type
      pubseekoff(off_type __off, ios_base::seekdir __way,
   ios_base::openmode __mode = ios_base::in | ios_base::out)
      { return this->seekoff(__off, __way, __mode); }

      pos_type
      pubseekpos(pos_type __sp,
   ios_base::openmode __mode = ios_base::in | ios_base::out)
      { return this->seekpos(__sp, __mode); }

      int
      pubsync() { return this->sync(); }
# 280 "/usr/include/c++/4.2.1/streambuf" 3
      streamsize
      in_avail()
      {
 const streamsize __ret = this->egptr() - this->gptr();
 return __ret ? __ret : this->showmanyc();
      }
# 294 "/usr/include/c++/4.2.1/streambuf" 3
      int_type
      snextc()
      {
 int_type __ret = traits_type::eof();
 if (__builtin_expect(!traits_type::eq_int_type(this->sbumpc(),
             __ret), true))
   __ret = this->sgetc();
 return __ret;
      }
# 312 "/usr/include/c++/4.2.1/streambuf" 3
      int_type
      sbumpc()
      {
 int_type __ret;
 if (__builtin_expect(this->gptr() < this->egptr(), true))
   {
     __ret = traits_type::to_int_type(*this->gptr());
     this->gbump(1);
   }
 else
   __ret = this->uflow();
 return __ret;
      }
# 334 "/usr/include/c++/4.2.1/streambuf" 3
      int_type
      sgetc()
      {
 int_type __ret;
 if (__builtin_expect(this->gptr() < this->egptr(), true))
   __ret = traits_type::to_int_type(*this->gptr());
 else
   __ret = this->underflow();
 return __ret;
      }
# 353 "/usr/include/c++/4.2.1/streambuf" 3
      streamsize
      sgetn(char_type* __s, streamsize __n)
      { return this->xsgetn(__s, __n); }
# 367 "/usr/include/c++/4.2.1/streambuf" 3
      int_type
      sputbackc(char_type __c)
      {
 int_type __ret;
 const bool __testpos = this->eback() < this->gptr();
 if (__builtin_expect(!__testpos ||
        !traits_type::eq(__c, this->gptr()[-1]), false))
   __ret = this->pbackfail(traits_type::to_int_type(__c));
 else
   {
     this->gbump(-1);
     __ret = traits_type::to_int_type(*this->gptr());
   }
 return __ret;
      }
# 392 "/usr/include/c++/4.2.1/streambuf" 3
      int_type
      sungetc()
      {
 int_type __ret;
 if (__builtin_expect(this->eback() < this->gptr(), true))
   {
     this->gbump(-1);
     __ret = traits_type::to_int_type(*this->gptr());
   }
 else
   __ret = this->pbackfail();
 return __ret;
      }
# 419 "/usr/include/c++/4.2.1/streambuf" 3
      int_type
      sputc(char_type __c)
      {
 int_type __ret;
 if (__builtin_expect(this->pptr() < this->epptr(), true))
   {
     *this->pptr() = __c;
     this->pbump(1);
     __ret = traits_type::to_int_type(__c);
   }
 else
   __ret = this->overflow(traits_type::to_int_type(__c));
 return __ret;
      }
# 445 "/usr/include/c++/4.2.1/streambuf" 3
      streamsize
      sputn(const char_type* __s, streamsize __n)
      { return this->xsputn(__s, __n); }

    protected:
# 459 "/usr/include/c++/4.2.1/streambuf" 3
      basic_streambuf()
      : _M_in_beg(0), _M_in_cur(0), _M_in_end(0),
      _M_out_beg(0), _M_out_cur(0), _M_out_end(0),
      _M_buf_locale(locale())
      { }
# 477 "/usr/include/c++/4.2.1/streambuf" 3
      char_type*
      eback() const { return _M_in_beg; }

      char_type*
      gptr() const { return _M_in_cur; }

      char_type*
      egptr() const { return _M_in_end; }
# 493 "/usr/include/c++/4.2.1/streambuf" 3
      void
      gbump(int __n) { _M_in_cur += __n; }
# 504 "/usr/include/c++/4.2.1/streambuf" 3
      void
      setg(char_type* __gbeg, char_type* __gnext, char_type* __gend)
      {
 _M_in_beg = __gbeg;
 _M_in_cur = __gnext;
 _M_in_end = __gend;
      }
# 524 "/usr/include/c++/4.2.1/streambuf" 3
      char_type*
      pbase() const { return _M_out_beg; }

      char_type*
      pptr() const { return _M_out_cur; }

      char_type*
      epptr() const { return _M_out_end; }
# 540 "/usr/include/c++/4.2.1/streambuf" 3
      void
      pbump(int __n) { _M_out_cur += __n; }
# 550 "/usr/include/c++/4.2.1/streambuf" 3
      void
      setp(char_type* __pbeg, char_type* __pend)
      {
 _M_out_beg = _M_out_cur = __pbeg;
 _M_out_end = __pend;
      }
# 571 "/usr/include/c++/4.2.1/streambuf" 3
      virtual void
      imbue(const locale&)
      { }
# 586 "/usr/include/c++/4.2.1/streambuf" 3
      virtual basic_streambuf<char_type,_Traits>*
      setbuf(char_type*, streamsize)
      { return this; }
# 597 "/usr/include/c++/4.2.1/streambuf" 3
      virtual pos_type
      seekoff(off_type, ios_base::seekdir,
       ios_base::openmode = ios_base::in | ios_base::out)
      { return pos_type(off_type(-1)); }
# 609 "/usr/include/c++/4.2.1/streambuf" 3
      virtual pos_type
      seekpos(pos_type,
       ios_base::openmode = ios_base::in | ios_base::out)
      { return pos_type(off_type(-1)); }
# 622 "/usr/include/c++/4.2.1/streambuf" 3
      virtual int
      sync() { return 0; }
# 644 "/usr/include/c++/4.2.1/streambuf" 3
      virtual streamsize
      showmanyc() { return 0; }
# 660 "/usr/include/c++/4.2.1/streambuf" 3
      virtual streamsize
      xsgetn(char_type* __s, streamsize __n);
# 682 "/usr/include/c++/4.2.1/streambuf" 3
      virtual int_type
      underflow()
      { return traits_type::eof(); }
# 695 "/usr/include/c++/4.2.1/streambuf" 3
      virtual int_type
      uflow()
      {
 int_type __ret = traits_type::eof();
 const bool __testeof = traits_type::eq_int_type(this->underflow(),
       __ret);
 if (!__testeof)
   {
     __ret = traits_type::to_int_type(*this->gptr());
     this->gbump(1);
   }
 return __ret;
      }
# 719 "/usr/include/c++/4.2.1/streambuf" 3
      virtual int_type
      pbackfail(int_type = traits_type::eof())
      { return traits_type::eof(); }
# 737 "/usr/include/c++/4.2.1/streambuf" 3
      virtual streamsize
      xsputn(const char_type* __s, streamsize __n);
# 762 "/usr/include/c++/4.2.1/streambuf" 3
      virtual int_type
      overflow(int_type = traits_type::eof())
      { return traits_type::eof(); }
# 791 "/usr/include/c++/4.2.1/streambuf" 3
    private:


      basic_streambuf(const __streambuf_type& __sb)
      : _M_in_beg(__sb._M_in_beg), _M_in_cur(__sb._M_in_cur),
      _M_in_end(__sb._M_in_end), _M_out_beg(__sb._M_out_beg),
      _M_out_cur(__sb._M_out_cur), _M_out_end(__sb._M_out_cur),
      _M_buf_locale(__sb._M_buf_locale)
      { }

      __streambuf_type&
      operator=(const __streambuf_type&) { return *this; };
    };


  template<>
    streamsize
    __copy_streambufs_eof(basic_streambuf<char>* __sbin,
     basic_streambuf<char>* __sbout, bool& __ineof);

  template<>
    streamsize
    __copy_streambufs_eof(basic_streambuf<wchar_t>* __sbin,
     basic_streambuf<wchar_t>* __sbout, bool& __ineof);


}


# 1 "/usr/include/c++/4.2.1/bits/streambuf.tcc" 1 3
# 43 "/usr/include/c++/4.2.1/bits/streambuf.tcc" 3
       
# 44 "/usr/include/c++/4.2.1/bits/streambuf.tcc" 3

namespace std {

  template<typename _CharT, typename _Traits>
    streamsize
    basic_streambuf<_CharT, _Traits>::
    xsgetn(char_type* __s, streamsize __n)
    {
      streamsize __ret = 0;
      while (__ret < __n)
 {
   const streamsize __buf_len = this->egptr() - this->gptr();
   if (__buf_len)
     {
       const streamsize __remaining = __n - __ret;
       const streamsize __len = std::min(__buf_len, __remaining);
       traits_type::copy(__s, this->gptr(), __len);
       __ret += __len;
       __s += __len;
       this->gbump(__len);
     }

   if (__ret < __n)
     {
       const int_type __c = this->uflow();
       if (!traits_type::eq_int_type(__c, traits_type::eof()))
  {
    traits_type::assign(*__s++, traits_type::to_char_type(__c));
    ++__ret;
  }
       else
  break;
     }
 }
      return __ret;
    }

  template<typename _CharT, typename _Traits>
    streamsize
    basic_streambuf<_CharT, _Traits>::
    xsputn(const char_type* __s, streamsize __n)
    {
      streamsize __ret = 0;
      while (__ret < __n)
 {
   const streamsize __buf_len = this->epptr() - this->pptr();
   if (__buf_len)
     {
       const streamsize __remaining = __n - __ret;
       const streamsize __len = std::min(__buf_len, __remaining);
       traits_type::copy(this->pptr(), __s, __len);
       __ret += __len;
       __s += __len;
       this->pbump(__len);
     }

   if (__ret < __n)
     {
       int_type __c = this->overflow(traits_type::to_int_type(*__s));
       if (!traits_type::eq_int_type(__c, traits_type::eof()))
  {
    ++__ret;
    ++__s;
  }
       else
  break;
     }
 }
      return __ret;
    }




  template<typename _CharT, typename _Traits>
    streamsize
    __copy_streambufs_eof(basic_streambuf<_CharT, _Traits>* __sbin,
     basic_streambuf<_CharT, _Traits>* __sbout,
     bool& __ineof)
    {
      streamsize __ret = 0;
      __ineof = true;
      typename _Traits::int_type __c = __sbin->sgetc();
      while (!_Traits::eq_int_type(__c, _Traits::eof()))
 {
   __c = __sbout->sputc(_Traits::to_char_type(__c));
   if (_Traits::eq_int_type(__c, _Traits::eof()))
     {
       __ineof = false;
       break;
     }
   ++__ret;
   __c = __sbin->snextc();
 }
      return __ret;
    }

  template<typename _CharT, typename _Traits>
    inline streamsize
    __copy_streambufs(basic_streambuf<_CharT, _Traits>* __sbin,
        basic_streambuf<_CharT, _Traits>* __sbout)
    {
      bool __ineof;
      return __copy_streambufs_eof(__sbin, __sbout, __ineof);
    }





  extern template class basic_streambuf<char>;
  extern template
    streamsize
    __copy_streambufs(basic_streambuf<char>*,
        basic_streambuf<char>*);
  extern template
    streamsize
    __copy_streambufs_eof(basic_streambuf<char>*,
     basic_streambuf<char>*, bool&);


  extern template class basic_streambuf<wchar_t>;
  extern template
    streamsize
    __copy_streambufs(basic_streambuf<wchar_t>*,
        basic_streambuf<wchar_t>*);
  extern template
    streamsize
    __copy_streambufs_eof(basic_streambuf<wchar_t>*,
     basic_streambuf<wchar_t>*, bool&);



}
# 821 "/usr/include/c++/4.2.1/streambuf" 2 3
# 50 "/usr/include/c++/4.2.1/ios" 2 3
# 1 "/usr/include/c++/4.2.1/bits/basic_ios.h" 1 3
# 39 "/usr/include/c++/4.2.1/bits/basic_ios.h" 3
       
# 40 "/usr/include/c++/4.2.1/bits/basic_ios.h" 3

# 1 "/usr/include/c++/4.2.1/bits/streambuf_iterator.h" 1 3
# 39 "/usr/include/c++/4.2.1/bits/streambuf_iterator.h" 3
       
# 40 "/usr/include/c++/4.2.1/bits/streambuf_iterator.h" 3




namespace std {



  template<typename _CharT, typename _Traits>
    class istreambuf_iterator
    : public iterator<input_iterator_tag, _CharT, typename _Traits::off_type,
        _CharT*, _CharT&>
    {
    public:



      typedef _CharT char_type;
      typedef _Traits traits_type;
      typedef typename _Traits::int_type int_type;
      typedef basic_streambuf<_CharT, _Traits> streambuf_type;
      typedef basic_istream<_CharT, _Traits> istream_type;


      template<typename _CharT2>
 friend typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value,
                      ostreambuf_iterator<_CharT2> >::__type
 copy(istreambuf_iterator<_CharT2>, istreambuf_iterator<_CharT2>,
      ostreambuf_iterator<_CharT2>);

      template<typename _CharT2>
 friend typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value,
            _CharT2*>::__type
 __copy_aux(istreambuf_iterator<_CharT2>, istreambuf_iterator<_CharT2>,
     _CharT2*);

      template<typename _CharT2>
 friend typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value,
               istreambuf_iterator<_CharT2> >::__type
 find(istreambuf_iterator<_CharT2>, istreambuf_iterator<_CharT2>,
      const _CharT2&);

    private:







      mutable streambuf_type* _M_sbuf;
      mutable int_type _M_c;

    public:

      istreambuf_iterator() throw()
      : _M_sbuf(0), _M_c(traits_type::eof()) { }


      istreambuf_iterator(istream_type& __s) throw()
      : _M_sbuf(__s.rdbuf()), _M_c(traits_type::eof()) { }


      istreambuf_iterator(streambuf_type* __s) throw()
      : _M_sbuf(__s), _M_c(traits_type::eof()) { }




      char_type
      operator*() const
      {







 return traits_type::to_char_type(_M_get());
      }


      istreambuf_iterator&
      operator++()
      {
 ;


 if (_M_sbuf)
   {
     _M_sbuf->sbumpc();
     _M_c = traits_type::eof();
   }
 return *this;
      }


      istreambuf_iterator
      operator++(int)
      {
 ;



 istreambuf_iterator __old = *this;
 if (_M_sbuf)
   {
     __old._M_c = _M_sbuf->sbumpc();
     _M_c = traits_type::eof();
   }
 return __old;
      }





      bool
      equal(const istreambuf_iterator& __b) const
      {
 const bool __thiseof = _M_at_eof();
 const bool __beof = __b._M_at_eof();
 return (__thiseof && __beof || (!__thiseof && !__beof));
      }

    private:
      int_type
      _M_get() const
      {
 const int_type __eof = traits_type::eof();
 int_type __ret = __eof;
 if (_M_sbuf)
   {
     if (!traits_type::eq_int_type(_M_c, __eof))
       __ret = _M_c;
     else if (!traits_type::eq_int_type((__ret = _M_sbuf->sgetc()),
            __eof))
       _M_c = __ret;
     else
       _M_sbuf = 0;
   }
 return __ret;
      }

      bool
      _M_at_eof() const
      {
 const int_type __eof = traits_type::eof();
 return traits_type::eq_int_type(_M_get(), __eof);
      }
    };

  template<typename _CharT, typename _Traits>
    inline bool
    operator==(const istreambuf_iterator<_CharT, _Traits>& __a,
        const istreambuf_iterator<_CharT, _Traits>& __b)
    { return __a.equal(__b); }

  template<typename _CharT, typename _Traits>
    inline bool
    operator!=(const istreambuf_iterator<_CharT, _Traits>& __a,
        const istreambuf_iterator<_CharT, _Traits>& __b)
    { return !__a.equal(__b); }


  template<typename _CharT, typename _Traits>
    class ostreambuf_iterator
    : public iterator<output_iterator_tag, void, void, void, void>
    {
    public:



      typedef _CharT char_type;
      typedef _Traits traits_type;
      typedef basic_streambuf<_CharT, _Traits> streambuf_type;
      typedef basic_ostream<_CharT, _Traits> ostream_type;


      template<typename _CharT2>
 friend typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value,
                      ostreambuf_iterator<_CharT2> >::__type
 copy(istreambuf_iterator<_CharT2>, istreambuf_iterator<_CharT2>,
      ostreambuf_iterator<_CharT2>);

    private:
      streambuf_type* _M_sbuf;
      bool _M_failed;

    public:

      ostreambuf_iterator(ostream_type& __s) throw ()
      : _M_sbuf(__s.rdbuf()), _M_failed(!_M_sbuf) { }


      ostreambuf_iterator(streambuf_type* __s) throw ()
      : _M_sbuf(__s), _M_failed(!_M_sbuf) { }


      ostreambuf_iterator&
      operator=(_CharT __c)
      {
 if (!_M_failed &&
     _Traits::eq_int_type(_M_sbuf->sputc(__c), _Traits::eof()))
   _M_failed = true;
 return *this;
      }


      ostreambuf_iterator&
      operator*()
      { return *this; }


      ostreambuf_iterator&
      operator++(int)
      { return *this; }


      ostreambuf_iterator&
      operator++()
      { return *this; }


      bool
      failed() const throw()
      { return _M_failed; }

      ostreambuf_iterator&
      _M_put(const _CharT* __ws, streamsize __len)
      {
 if (__builtin_expect(!_M_failed, true)
     && __builtin_expect(this->_M_sbuf->sputn(__ws, __len) != __len,
    false))
   _M_failed = true;
 return *this;
      }
    };


  template<typename _CharT>
    typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
                           ostreambuf_iterator<_CharT> >::__type
    copy(istreambuf_iterator<_CharT> __first,
  istreambuf_iterator<_CharT> __last,
  ostreambuf_iterator<_CharT> __result)
    {
      if (__first._M_sbuf && !__last._M_sbuf && !__result._M_failed)
 {
   bool __ineof;
   __copy_streambufs_eof(__first._M_sbuf, __result._M_sbuf, __ineof);
   if (!__ineof)
     __result._M_failed = true;
 }
      return __result;
    }

  template<typename _CharT>
    typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
            ostreambuf_iterator<_CharT> >::__type
    __copy_aux(_CharT* __first, _CharT* __last,
        ostreambuf_iterator<_CharT> __result)
    {
      const streamsize __num = __last - __first;
      if (__num > 0)
 __result._M_put(__first, __num);
      return __result;
    }

  template<typename _CharT>
    typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
        ostreambuf_iterator<_CharT> >::__type
    __copy_aux(const _CharT* __first, const _CharT* __last,
        ostreambuf_iterator<_CharT> __result)
    {
      const streamsize __num = __last - __first;
      if (__num > 0)
 __result._M_put(__first, __num);
      return __result;
    }

  template<typename _CharT>
    typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
            _CharT*>::__type
    __copy_aux(istreambuf_iterator<_CharT> __first,
        istreambuf_iterator<_CharT> __last, _CharT* __result)
    {
      typedef istreambuf_iterator<_CharT> __is_iterator_type;
      typedef typename __is_iterator_type::traits_type traits_type;
      typedef typename __is_iterator_type::streambuf_type streambuf_type;
      typedef typename traits_type::int_type int_type;

      if (__first._M_sbuf && !__last._M_sbuf)
 {
   streambuf_type* __sb = __first._M_sbuf;
   int_type __c = __sb->sgetc();
   while (!traits_type::eq_int_type(__c, traits_type::eof()))
     {
       const streamsize __n = __sb->egptr() - __sb->gptr();
       if (__n > 1)
  {
    traits_type::copy(__result, __sb->gptr(), __n);
    __sb->gbump(__n);
    __result += __n;
    __c = __sb->underflow();
  }
       else
  {
    *__result++ = traits_type::to_char_type(__c);
    __c = __sb->snextc();
  }
     }
 }
      return __result;
    }

  template<typename _CharT>
    typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
          istreambuf_iterator<_CharT> >::__type
    find(istreambuf_iterator<_CharT> __first,
  istreambuf_iterator<_CharT> __last, const _CharT& __val)
    {
      typedef istreambuf_iterator<_CharT> __is_iterator_type;
      typedef typename __is_iterator_type::traits_type traits_type;
      typedef typename __is_iterator_type::streambuf_type streambuf_type;
      typedef typename traits_type::int_type int_type;

      if (__first._M_sbuf && !__last._M_sbuf)
 {
   const int_type __ival = traits_type::to_int_type(__val);
   streambuf_type* __sb = __first._M_sbuf;
   int_type __c = __sb->sgetc();
   while (!traits_type::eq_int_type(__c, traits_type::eof())
   && !traits_type::eq_int_type(__c, __ival))
     {
       streamsize __n = __sb->egptr() - __sb->gptr();
       if (__n > 1)
  {
    const _CharT* __p = traits_type::find(__sb->gptr(),
       __n, __val);
    if (__p)
      __n = __p - __sb->gptr();
    __sb->gbump(__n);
    __c = __sb->sgetc();
  }
       else
  __c = __sb->snextc();
     }

   if (!traits_type::eq_int_type(__c, traits_type::eof()))
     __first._M_c = __c;
   else
     __first._M_sbuf = 0;
 }
      return __first;
    }

}
# 42 "/usr/include/c++/4.2.1/bits/basic_ios.h" 2 3


# 1 "/usr/include/c++/4.2.1/bits/locale_facets.h" 1 3
# 43 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
       
# 44 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3


# 1 "/usr/include/c++/4.2.1/cwctype" 1 3
# 48 "/usr/include/c++/4.2.1/cwctype" 3
       
# 49 "/usr/include/c++/4.2.1/cwctype" 3




# 1 "/usr/include/wctype.h" 1 3 4
# 39 "/usr/include/wctype.h" 3 4
typedef __darwin_wctrans_t wctrans_t;
# 62 "/usr/include/wctype.h" 3 4
static inline int
iswblank(wint_t _wc)
{
 return (__istype(_wc, 0x00020000L));
}


static inline int
iswascii(wint_t _wc)
{
 return ((_wc & ~0x7F) == 0);
}

static inline int
iswhexnumber(wint_t _wc)
{
 return (__istype(_wc, 0x00010000L));
}

static inline int
iswideogram(wint_t _wc)
{
 return (__istype(_wc, 0x00080000L));
}

static inline int
iswnumber(wint_t _wc)
{
 return (__istype(_wc, 0x00000400L));
}

static inline int
iswphonogram(wint_t _wc)
{
 return (__istype(_wc, 0x00200000L));
}

static inline int
iswrune(wint_t _wc)
{
 return (__istype(_wc, 0xFFFFFFF0L));
}

static inline int
iswspecial(wint_t _wc)
{
 return (__istype(_wc, 0x00100000L));
}
# 130 "/usr/include/wctype.h" 3 4
extern "C" {

wint_t nextwctype(wint_t, wctype_t);

wint_t towctrans(wint_t, wctrans_t);
wctrans_t
 wctrans(const char *);
}
# 54 "/usr/include/c++/4.2.1/cwctype" 2 3
# 80 "/usr/include/c++/4.2.1/cwctype" 3
namespace std {

  using ::wint_t;

  using ::wctype_t;
  using ::wctrans_t;

  using ::iswalnum;
  using ::iswalpha;

  using ::iswblank;

  using ::iswcntrl;
  using ::iswctype;
  using ::iswdigit;
  using ::iswgraph;
  using ::iswlower;
  using ::iswprint;
  using ::iswpunct;
  using ::iswspace;
  using ::iswupper;
  using ::iswxdigit;
  using ::towctrans;
  using ::towlower;
  using ::towupper;
  using ::wctrans;
  using ::wctype;

}
# 47 "/usr/include/c++/4.2.1/bits/locale_facets.h" 2 3
# 1 "/usr/include/c++/4.2.1/i686-apple-darwin10/x86_64/bits/ctype_base.h" 1 3
# 38 "/usr/include/c++/4.2.1/i686-apple-darwin10/x86_64/bits/ctype_base.h" 3
namespace std {


  struct ctype_base
  {

    typedef const int* __to_type;

    typedef unsigned long mask;


    static const mask upper = 0x00008000L;
    static const mask lower = 0x00001000L;
    static const mask alpha = 0x00000100L;
    static const mask digit = 0x00000400L;
    static const mask xdigit = 0x00010000L;
    static const mask space = 0x00004000L;
    static const mask print = 0x00040000L;
    static const mask graph = 0x00000100L | 0x00000400L | 0x00002000L;
    static const mask cntrl = 0x00000200L;
    static const mask punct = 0x00002000L;
    static const mask alnum = 0x00000100L | 0x00000400L;
# 74 "/usr/include/c++/4.2.1/i686-apple-darwin10/x86_64/bits/ctype_base.h" 3
  };

}
# 48 "/usr/include/c++/4.2.1/bits/locale_facets.h" 2 3





namespace std {
# 65 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
  template<typename _Tv>
    void
    __convert_to_v(const char* __in, _Tv& __out, ios_base::iostate& __err,
     const __c_locale& __cloc);


  template<>
    void
    __convert_to_v(const char*, float&, ios_base::iostate&,
     const __c_locale&);

  template<>
    void
    __convert_to_v(const char*, double&, ios_base::iostate&,
     const __c_locale&);

  template<>
    void
    __convert_to_v(const char*, long double&, ios_base::iostate&,
     const __c_locale&);



  template<typename _CharT, typename _Traits>
    struct __pad
    {
      static void
      _S_pad(ios_base& __io, _CharT __fill, _CharT* __news,
      const _CharT* __olds, const streamsize __newlen,
      const streamsize __oldlen, const bool __num);
    };






  template<typename _CharT>
    _CharT*
    __add_grouping(_CharT* __s, _CharT __sep,
     const char* __gbeg, size_t __gsize,
     const _CharT* __first, const _CharT* __last);




  template<typename _CharT>
    inline
    ostreambuf_iterator<_CharT>
    __write(ostreambuf_iterator<_CharT> __s, const _CharT* __ws, int __len)
    {
      __s._M_put(__ws, __len);
      return __s;
    }


  template<typename _CharT, typename _OutIter>
    inline
    _OutIter
    __write(_OutIter __s, const _CharT* __ws, int __len)
    {
      for (int __j = 0; __j < __len; __j++, ++__s)
 *__s = __ws[__j];
      return __s;
    }
# 145 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
  template<typename _CharT>
    class __ctype_abstract_base : public locale::facet, public ctype_base
    {
    public:


      typedef _CharT char_type;
# 163 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      bool
      is(mask __m, char_type __c) const
      { return this->do_is(__m, __c); }
# 180 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      const char_type*
      is(const char_type *__lo, const char_type *__hi, mask *__vec) const
      { return this->do_is(__lo, __hi, __vec); }
# 196 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      const char_type*
      scan_is(mask __m, const char_type* __lo, const char_type* __hi) const
      { return this->do_scan_is(__m, __lo, __hi); }
# 212 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      const char_type*
      scan_not(mask __m, const char_type* __lo, const char_type* __hi) const
      { return this->do_scan_not(__m, __lo, __hi); }
# 226 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      char_type
      toupper(char_type __c) const
      { return this->do_toupper(__c); }
# 241 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      const char_type*
      toupper(char_type *__lo, const char_type* __hi) const
      { return this->do_toupper(__lo, __hi); }
# 255 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      char_type
      tolower(char_type __c) const
      { return this->do_tolower(__c); }
# 270 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      const char_type*
      tolower(char_type* __lo, const char_type* __hi) const
      { return this->do_tolower(__lo, __hi); }
# 287 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      char_type
      widen(char __c) const
      { return this->do_widen(__c); }
# 306 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      const char*
      widen(const char* __lo, const char* __hi, char_type* __to) const
      { return this->do_widen(__lo, __hi, __to); }
# 325 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      char
      narrow(char_type __c, char __dfault) const
      { return this->do_narrow(__c, __dfault); }
# 347 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      const char_type*
      narrow(const char_type* __lo, const char_type* __hi,
       char __dfault, char *__to) const
      { return this->do_narrow(__lo, __hi, __dfault, __to); }

    protected:
      explicit
      __ctype_abstract_base(size_t __refs = 0): facet(__refs) { }

      virtual
      ~__ctype_abstract_base() { }
# 372 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual bool
      do_is(mask __m, char_type __c) const = 0;
# 391 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual const char_type*
      do_is(const char_type* __lo, const char_type* __hi,
     mask* __vec) const = 0;
# 410 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual const char_type*
      do_scan_is(mask __m, const char_type* __lo,
   const char_type* __hi) const = 0;
# 429 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual const char_type*
      do_scan_not(mask __m, const char_type* __lo,
    const char_type* __hi) const = 0;
# 447 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual char_type
      do_toupper(char_type) const = 0;
# 464 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual const char_type*
      do_toupper(char_type* __lo, const char_type* __hi) const = 0;
# 480 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual char_type
      do_tolower(char_type) const = 0;
# 497 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual const char_type*
      do_tolower(char_type* __lo, const char_type* __hi) const = 0;
# 516 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual char_type
      do_widen(char) const = 0;
# 537 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual const char*
      do_widen(const char* __lo, const char* __hi,
        char_type* __dest) const = 0;
# 559 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual char
      do_narrow(char_type, char __dfault) const = 0;
# 583 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual const char_type*
      do_narrow(const char_type* __lo, const char_type* __hi,
  char __dfault, char* __dest) const = 0;
    };
# 606 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
  template<typename _CharT>
    class ctype : public __ctype_abstract_base<_CharT>
    {
    public:

      typedef _CharT char_type;
      typedef typename __ctype_abstract_base<_CharT>::mask mask;


      static locale::id id;

      explicit
      ctype(size_t __refs = 0) : __ctype_abstract_base<_CharT>(__refs) { }

   protected:
      virtual
      ~ctype();

      virtual bool
      do_is(mask __m, char_type __c) const;

      virtual const char_type*
      do_is(const char_type* __lo, const char_type* __hi, mask* __vec) const;

      virtual const char_type*
      do_scan_is(mask __m, const char_type* __lo, const char_type* __hi) const;

      virtual const char_type*
      do_scan_not(mask __m, const char_type* __lo,
    const char_type* __hi) const;

      virtual char_type
      do_toupper(char_type __c) const;

      virtual const char_type*
      do_toupper(char_type* __lo, const char_type* __hi) const;

      virtual char_type
      do_tolower(char_type __c) const;

      virtual const char_type*
      do_tolower(char_type* __lo, const char_type* __hi) const;

      virtual char_type
      do_widen(char __c) const;

      virtual const char*
      do_widen(const char* __lo, const char* __hi, char_type* __dest) const;

      virtual char
      do_narrow(char_type, char __dfault) const;

      virtual const char_type*
      do_narrow(const char_type* __lo, const char_type* __hi,
  char __dfault, char* __dest) const;
    };

  template<typename _CharT>
    locale::id ctype<_CharT>::id;
# 675 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
  template<>
    class ctype<char> : public locale::facet, public ctype_base
    {
    public:


      typedef char char_type;

    protected:

      __c_locale _M_c_locale_ctype;
      bool _M_del;
      __to_type _M_toupper;
      __to_type _M_tolower;
      const mask* _M_table;
      mutable char _M_widen_ok;
      mutable char _M_widen[1 + static_cast<unsigned char>(-1)];
      mutable char _M_narrow[1 + static_cast<unsigned char>(-1)];
      mutable char _M_narrow_ok;


    public:

      static locale::id id;

      static const size_t table_size = 1 + static_cast<unsigned char>(-1);
# 712 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      explicit
      ctype(const mask* __table = 0, bool __del = false, size_t __refs = 0);
# 725 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      explicit
      ctype(__c_locale __cloc, const mask* __table = 0, bool __del = false,
     size_t __refs = 0);
# 738 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      inline bool
      is(mask __m, char __c) const;
# 753 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      inline const char*
      is(const char* __lo, const char* __hi, mask* __vec) const;
# 767 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      inline const char*
      scan_is(mask __m, const char* __lo, const char* __hi) const;
# 781 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      inline const char*
      scan_not(mask __m, const char* __lo, const char* __hi) const;
# 796 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      char_type
      toupper(char_type __c) const
      { return this->do_toupper(__c); }
# 813 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      const char_type*
      toupper(char_type *__lo, const char_type* __hi) const
      { return this->do_toupper(__lo, __hi); }
# 829 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      char_type
      tolower(char_type __c) const
      { return this->do_tolower(__c); }
# 846 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      const char_type*
      tolower(char_type* __lo, const char_type* __hi) const
      { return this->do_tolower(__lo, __hi); }
# 866 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      char_type
      widen(char __c) const
      {
 if (_M_widen_ok)
   return _M_widen[static_cast<unsigned char>(__c)];
 this->_M_widen_init();
 return this->do_widen(__c);
      }
# 893 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      const char*
      widen(const char* __lo, const char* __hi, char_type* __to) const
      {
 if (_M_widen_ok == 1)
   {
     memcpy(__to, __lo, __hi - __lo);
     return __hi;
   }
 if (!_M_widen_ok)
   _M_widen_init();
 return this->do_widen(__lo, __hi, __to);
      }
# 924 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      char
      narrow(char_type __c, char __dfault) const
      {
 if (_M_narrow[static_cast<unsigned char>(__c)])
   return _M_narrow[static_cast<unsigned char>(__c)];
 const char __t = do_narrow(__c, __dfault);
 if (__t != __dfault)
   _M_narrow[static_cast<unsigned char>(__c)] = __t;
 return __t;
      }
# 957 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      const char_type*
      narrow(const char_type* __lo, const char_type* __hi,
      char __dfault, char *__to) const
      {
 if (__builtin_expect(_M_narrow_ok == 1, true))
   {
     memcpy(__to, __lo, __hi - __lo);
     return __hi;
   }
 if (!_M_narrow_ok)
   _M_narrow_init();
 return this->do_narrow(__lo, __hi, __dfault, __to);
      }

    protected:


      const mask*
      table() const throw()
      { return _M_table; }


      static const mask*
      classic_table() throw();







      virtual
      ~ctype();
# 1004 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual char_type
      do_toupper(char_type) const;
# 1021 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual const char_type*
      do_toupper(char_type* __lo, const char_type* __hi) const;
# 1037 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual char_type
      do_tolower(char_type) const;
# 1054 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual const char_type*
      do_tolower(char_type* __lo, const char_type* __hi) const;
# 1074 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual char_type
      do_widen(char __c) const
      { return __c; }
# 1097 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual const char*
      do_widen(const char* __lo, const char* __hi, char_type* __dest) const
      {
 memcpy(__dest, __lo, __hi - __lo);
 return __hi;
      }
# 1123 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual char
      do_narrow(char_type __c, char) const
      { return __c; }
# 1149 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual const char_type*
      do_narrow(const char_type* __lo, const char_type* __hi,
  char, char* __dest) const
      {
 memcpy(__dest, __lo, __hi - __lo);
 return __hi;
      }

    private:

      void _M_widen_init() const
      {
 char __tmp[sizeof(_M_widen)];
 for (size_t __i = 0; __i < sizeof(_M_widen); ++__i)
   __tmp[__i] = __i;
 do_widen(__tmp, __tmp + sizeof(__tmp), _M_widen);

 _M_widen_ok = 1;

 if (memcmp(__tmp, _M_widen, sizeof(_M_widen)))
   _M_widen_ok = 2;
      }




      void _M_narrow_init() const
      {
 char __tmp[sizeof(_M_narrow)];
 for (size_t __i = 0; __i < sizeof(_M_narrow); ++__i)
   __tmp[__i] = __i;
 do_narrow(__tmp, __tmp + sizeof(__tmp), 0, _M_narrow);

 _M_narrow_ok = 1;
 if (memcmp(__tmp, _M_narrow, sizeof(_M_narrow)))
   _M_narrow_ok = 2;
 else
   {


     char __c;
     do_narrow(__tmp, __tmp + 1, 1, &__c);
     if (__c == 1)
       _M_narrow_ok = 2;
   }
      }
    };

  template<>
    const ctype<char>&
    use_facet<ctype<char> >(const locale& __loc);
# 1213 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
  template<>
    class ctype<wchar_t> : public __ctype_abstract_base<wchar_t>
    {
    public:


      typedef wchar_t char_type;
      typedef wctype_t __wmask_type;

    protected:
      __c_locale _M_c_locale_ctype;


      bool _M_narrow_ok;
      char _M_narrow[128];
      wint_t _M_widen[1 + static_cast<unsigned char>(-1)];


      mask _M_bit[16];
      __wmask_type _M_wmask[16];

    public:


      static locale::id id;
# 1246 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      explicit
      ctype(size_t __refs = 0);
# 1257 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      explicit
      ctype(__c_locale __cloc, size_t __refs = 0);

    protected:
      __wmask_type
      _M_convert_to_wmask(const mask __m) const;


      virtual
      ~ctype();
# 1281 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual bool
      do_is(mask __m, char_type __c) const;
# 1300 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual const char_type*
      do_is(const char_type* __lo, const char_type* __hi, mask* __vec) const;
# 1318 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual const char_type*
      do_scan_is(mask __m, const char_type* __lo, const char_type* __hi) const;
# 1336 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual const char_type*
      do_scan_not(mask __m, const char_type* __lo,
    const char_type* __hi) const;
# 1353 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual char_type
      do_toupper(char_type) const;
# 1370 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual const char_type*
      do_toupper(char_type* __lo, const char_type* __hi) const;
# 1386 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual char_type
      do_tolower(char_type) const;
# 1403 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual const char_type*
      do_tolower(char_type* __lo, const char_type* __hi) const;
# 1423 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual char_type
      do_widen(char) const;
# 1445 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual const char*
      do_widen(const char* __lo, const char* __hi, char_type* __dest) const;
# 1468 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual char
      do_narrow(char_type, char __dfault) const;
# 1494 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual const char_type*
      do_narrow(const char_type* __lo, const char_type* __hi,
  char __dfault, char* __dest) const;


      void
      _M_initialize_ctype();
    };

  template<>
    const ctype<wchar_t>&
    use_facet<ctype<wchar_t> >(const locale& __loc);



  template<typename _CharT>
    class ctype_byname : public ctype<_CharT>
    {
    public:
      typedef _CharT char_type;

      explicit
      ctype_byname(const char* __s, size_t __refs = 0);

    protected:
      virtual
      ~ctype_byname() { };
    };


  template<>
    ctype_byname<char>::ctype_byname(const char*, size_t refs);

  template<>
    ctype_byname<wchar_t>::ctype_byname(const char*, size_t refs);

}


# 1 "/usr/include/c++/4.2.1/i686-apple-darwin10/x86_64/bits/ctype_inline.h" 1 3
# 42 "/usr/include/c++/4.2.1/i686-apple-darwin10/x86_64/bits/ctype_inline.h" 3
namespace std {

  bool
  ctype<char>::
  is(mask __m, char __c) const
  {
    if (_M_table)
      return _M_table[static_cast<unsigned char>(__c)] & __m;
    else
      return __istype(__c, __m);
  }

  const char*
  ctype<char>::
  is(const char* __low, const char* __high, mask* __vec) const
  {
    if (_M_table)
      while (__low < __high)
 *__vec++ = _M_table[static_cast<unsigned char>(*__low++)];
    else
      for (;__low < __high; ++__vec, ++__low)
 {

   *__vec = __maskrune (*__low, upper | lower | alpha | digit | xdigit
          | space | print | graph | cntrl | punct | alnum);
# 83 "/usr/include/c++/4.2.1/i686-apple-darwin10/x86_64/bits/ctype_inline.h" 3
 }
    return __high;
  }

  const char*
  ctype<char>::
  scan_is(mask __m, const char* __low, const char* __high) const
  {
    if (_M_table)
      while (__low < __high
      && !(_M_table[static_cast<unsigned char>(*__low)] & __m))
 ++__low;
    else
      while (__low < __high && !this->is(__m, *__low))
 ++__low;
    return __low;
  }

  const char*
  ctype<char>::
  scan_not(mask __m, const char* __low, const char* __high) const
  {
    if (_M_table)
      while (__low < __high
      && (_M_table[static_cast<unsigned char>(*__low)] & __m) != 0)
 ++__low;
    else
      while (__low < __high && this->is(__m, *__low) != 0)
 ++__low;
    return __low;
  }


  inline bool
  ctype<wchar_t>::
  do_is(mask __m, wchar_t __c) const
  {
    return __istype (__c, __m);
  }

  inline const wchar_t*
  ctype<wchar_t>::
  do_is(const wchar_t* __lo, const wchar_t* __hi, mask* __vec) const
  {
    for (; __lo < __hi; ++__vec, ++__lo)
      *__vec = __maskrune (*__lo, upper | lower | alpha | digit | xdigit
      | space | print | graph | cntrl | punct | alnum);
    return __hi;
  }

  inline const wchar_t*
  ctype<wchar_t>::
  do_scan_is(mask __m, const wchar_t* __lo, const wchar_t* __hi) const
  {
    while (__lo < __hi && ! __istype (*__lo, __m))
      ++__lo;
    return __lo;
  }

  inline const wchar_t*
  ctype<wchar_t>::
  do_scan_not(mask __m, const char_type* __lo, const char_type* __hi) const
  {
    while (__lo < __hi && __istype (*__lo, __m))
      ++__lo;
    return __lo;
  }


}
# 1534 "/usr/include/c++/4.2.1/bits/locale_facets.h" 2 3


# 1 "/usr/include/c++/4.2.1/bits/codecvt.h" 1 3
# 45 "/usr/include/c++/4.2.1/bits/codecvt.h" 3
       
# 46 "/usr/include/c++/4.2.1/bits/codecvt.h" 3

namespace std {


  class codecvt_base
  {
  public:
    enum result
    {
      ok,
      partial,
      error,
      noconv
    };
  };
# 71 "/usr/include/c++/4.2.1/bits/codecvt.h" 3
  template<typename _InternT, typename _ExternT, typename _StateT>
    class __codecvt_abstract_base
    : public locale::facet, public codecvt_base
    {
    public:

      typedef codecvt_base::result result;
      typedef _InternT intern_type;
      typedef _ExternT extern_type;
      typedef _StateT state_type;
# 119 "/usr/include/c++/4.2.1/bits/codecvt.h" 3
      result
      out(state_type& __state, const intern_type* __from,
   const intern_type* __from_end, const intern_type*& __from_next,
   extern_type* __to, extern_type* __to_end,
   extern_type*& __to_next) const
      {
 return this->do_out(__state, __from, __from_end, __from_next,
       __to, __to_end, __to_next);
      }
# 158 "/usr/include/c++/4.2.1/bits/codecvt.h" 3
      result
      unshift(state_type& __state, extern_type* __to, extern_type* __to_end,
       extern_type*& __to_next) const
      { return this->do_unshift(__state, __to,__to_end,__to_next); }
# 199 "/usr/include/c++/4.2.1/bits/codecvt.h" 3
      result
      in(state_type& __state, const extern_type* __from,
  const extern_type* __from_end, const extern_type*& __from_next,
  intern_type* __to, intern_type* __to_end,
  intern_type*& __to_next) const
      {
 return this->do_in(__state, __from, __from_end, __from_next,
      __to, __to_end, __to_next);
      }

      int
      encoding() const throw()
      { return this->do_encoding(); }

      bool
      always_noconv() const throw()
      { return this->do_always_noconv(); }

      int
      length(state_type& __state, const extern_type* __from,
      const extern_type* __end, size_t __max) const
      { return this->do_length(__state, __from, __end, __max); }

      int
      max_length() const throw()
      { return this->do_max_length(); }

    protected:
      explicit
      __codecvt_abstract_base(size_t __refs = 0) : locale::facet(__refs) { }

      virtual
      ~__codecvt_abstract_base() { }
# 240 "/usr/include/c++/4.2.1/bits/codecvt.h" 3
      virtual result
      do_out(state_type& __state, const intern_type* __from,
      const intern_type* __from_end, const intern_type*& __from_next,
      extern_type* __to, extern_type* __to_end,
      extern_type*& __to_next) const = 0;

      virtual result
      do_unshift(state_type& __state, extern_type* __to,
   extern_type* __to_end, extern_type*& __to_next) const = 0;

      virtual result
      do_in(state_type& __state, const extern_type* __from,
     const extern_type* __from_end, const extern_type*& __from_next,
     intern_type* __to, intern_type* __to_end,
     intern_type*& __to_next) const = 0;

      virtual int
      do_encoding() const throw() = 0;

      virtual bool
      do_always_noconv() const throw() = 0;

      virtual int
      do_length(state_type&, const extern_type* __from,
  const extern_type* __end, size_t __max) const = 0;

      virtual int
      do_max_length() const throw() = 0;
    };



  template<typename _InternT, typename _ExternT, typename _StateT>
    class codecvt
    : public __codecvt_abstract_base<_InternT, _ExternT, _StateT>
    {
    public:

      typedef codecvt_base::result result;
      typedef _InternT intern_type;
      typedef _ExternT extern_type;
      typedef _StateT state_type;

    protected:
      __c_locale _M_c_locale_codecvt;

    public:
      static locale::id id;

      explicit
      codecvt(size_t __refs = 0)
      : __codecvt_abstract_base<_InternT, _ExternT, _StateT> (__refs) { }

      explicit
      codecvt(__c_locale __cloc, size_t __refs = 0);

    protected:
      virtual
      ~codecvt() { }

      virtual result
      do_out(state_type& __state, const intern_type* __from,
      const intern_type* __from_end, const intern_type*& __from_next,
      extern_type* __to, extern_type* __to_end,
      extern_type*& __to_next) const;

      virtual result
      do_unshift(state_type& __state, extern_type* __to,
   extern_type* __to_end, extern_type*& __to_next) const;

      virtual result
      do_in(state_type& __state, const extern_type* __from,
     const extern_type* __from_end, const extern_type*& __from_next,
     intern_type* __to, intern_type* __to_end,
     intern_type*& __to_next) const;

      virtual int
      do_encoding() const throw();

      virtual bool
      do_always_noconv() const throw();

      virtual int
      do_length(state_type&, const extern_type* __from,
  const extern_type* __end, size_t __max) const;

      virtual int
      do_max_length() const throw();
    };

  template<typename _InternT, typename _ExternT, typename _StateT>
    locale::id codecvt<_InternT, _ExternT, _StateT>::id;


  template<>
    class codecvt<char, char, mbstate_t>
    : public __codecvt_abstract_base<char, char, mbstate_t>
    {
    public:

      typedef char intern_type;
      typedef char extern_type;
      typedef mbstate_t state_type;

    protected:
      __c_locale _M_c_locale_codecvt;

    public:
      static locale::id id;

      explicit
      codecvt(size_t __refs = 0);

      explicit
      codecvt(__c_locale __cloc, size_t __refs = 0);

    protected:
      virtual
      ~codecvt();

      virtual result
      do_out(state_type& __state, const intern_type* __from,
      const intern_type* __from_end, const intern_type*& __from_next,
      extern_type* __to, extern_type* __to_end,
      extern_type*& __to_next) const;

      virtual result
      do_unshift(state_type& __state, extern_type* __to,
   extern_type* __to_end, extern_type*& __to_next) const;

      virtual result
      do_in(state_type& __state, const extern_type* __from,
     const extern_type* __from_end, const extern_type*& __from_next,
     intern_type* __to, intern_type* __to_end,
     intern_type*& __to_next) const;

      virtual int
      do_encoding() const throw();

      virtual bool
      do_always_noconv() const throw();

      virtual int
      do_length(state_type&, const extern_type* __from,
  const extern_type* __end, size_t __max) const;

      virtual int
      do_max_length() const throw();
  };



  template<>
    class codecvt<wchar_t, char, mbstate_t>
    : public __codecvt_abstract_base<wchar_t, char, mbstate_t>
    {
    public:

      typedef wchar_t intern_type;
      typedef char extern_type;
      typedef mbstate_t state_type;

    protected:
      __c_locale _M_c_locale_codecvt;

    public:
      static locale::id id;

      explicit
      codecvt(size_t __refs = 0);

      explicit
      codecvt(__c_locale __cloc, size_t __refs = 0);

    protected:
      virtual
      ~codecvt();

      virtual result
      do_out(state_type& __state, const intern_type* __from,
      const intern_type* __from_end, const intern_type*& __from_next,
      extern_type* __to, extern_type* __to_end,
      extern_type*& __to_next) const;

      virtual result
      do_unshift(state_type& __state,
   extern_type* __to, extern_type* __to_end,
   extern_type*& __to_next) const;

      virtual result
      do_in(state_type& __state,
      const extern_type* __from, const extern_type* __from_end,
      const extern_type*& __from_next,
      intern_type* __to, intern_type* __to_end,
      intern_type*& __to_next) const;

      virtual
      int do_encoding() const throw();

      virtual
      bool do_always_noconv() const throw();

      virtual
      int do_length(state_type&, const extern_type* __from,
      const extern_type* __end, size_t __max) const;

      virtual int
      do_max_length() const throw();
    };



  template<typename _InternT, typename _ExternT, typename _StateT>
    class codecvt_byname : public codecvt<_InternT, _ExternT, _StateT>
    {
    public:
      explicit
      codecvt_byname(const char* __s, size_t __refs = 0)
      : codecvt<_InternT, _ExternT, _StateT>(__refs)
      {
 if (std::strcmp(__s, "C") != 0 && std::strcmp(__s, "POSIX") != 0)
   {
     this->_S_destroy_c_locale(this->_M_c_locale_codecvt);
     this->_S_create_c_locale(this->_M_c_locale_codecvt, __s);
   }
      }

    protected:
      virtual
      ~codecvt_byname() { }
    };

}
# 1537 "/usr/include/c++/4.2.1/bits/locale_facets.h" 2 3

namespace std {


  class __num_base
  {
  public:


    enum
      {
        _S_ominus,
        _S_oplus,
        _S_ox,
        _S_oX,
        _S_odigits,
        _S_odigits_end = _S_odigits + 16,
        _S_oudigits = _S_odigits_end,
        _S_oudigits_end = _S_oudigits + 16,
        _S_oe = _S_odigits + 14,
        _S_oE = _S_oudigits + 14,
 _S_oend = _S_oudigits_end
      };






    static const char* _S_atoms_out;



    static const char* _S_atoms_in;

    enum
    {
      _S_iminus,
      _S_iplus,
      _S_ix,
      _S_iX,
      _S_izero,
      _S_ie = _S_izero + 14,
      _S_iE = _S_izero + 20,
      _S_iend = 26
    };



    static void
    _S_format_float(const ios_base& __io, char* __fptr, char __mod);
  };

  template<typename _CharT>
    struct __numpunct_cache : public locale::facet
    {
      const char* _M_grouping;
      size_t _M_grouping_size;
      bool _M_use_grouping;
      const _CharT* _M_truename;
      size_t _M_truename_size;
      const _CharT* _M_falsename;
      size_t _M_falsename_size;
      _CharT _M_decimal_point;
      _CharT _M_thousands_sep;





      _CharT _M_atoms_out[__num_base::_S_oend];





      _CharT _M_atoms_in[__num_base::_S_iend];

      bool _M_allocated;

      __numpunct_cache(size_t __refs = 0) : facet(__refs),
      _M_grouping(__null), _M_grouping_size(0), _M_use_grouping(false),
      _M_truename(__null), _M_truename_size(0), _M_falsename(__null),
      _M_falsename_size(0), _M_decimal_point(_CharT()),
      _M_thousands_sep(_CharT()), _M_allocated(false)
      { }

      ~__numpunct_cache();

      void
      _M_cache(const locale& __loc);

    private:
      __numpunct_cache&
      operator=(const __numpunct_cache&);

      explicit
      __numpunct_cache(const __numpunct_cache&);
    };

  template<typename _CharT>
    __numpunct_cache<_CharT>::~__numpunct_cache()
    {
      if (_M_allocated)
 {
   delete [] _M_grouping;
   delete [] _M_truename;
   delete [] _M_falsename;
 }
    }
# 1661 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
  template<typename _CharT>
    class numpunct : public locale::facet
    {
    public:



      typedef _CharT char_type;
      typedef basic_string<_CharT> string_type;

      typedef __numpunct_cache<_CharT> __cache_type;

    protected:
      __cache_type* _M_data;

    public:

      static locale::id id;






      explicit
      numpunct(size_t __refs = 0) : facet(__refs), _M_data(__null)
      { _M_initialize_numpunct(); }
# 1698 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      explicit
      numpunct(__cache_type* __cache, size_t __refs = 0)
      : facet(__refs), _M_data(__cache)
      { _M_initialize_numpunct(); }
# 1712 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      explicit
      numpunct(__c_locale __cloc, size_t __refs = 0)
      : facet(__refs), _M_data(__null)
      { _M_initialize_numpunct(__cloc); }
# 1726 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      char_type
      decimal_point() const
      { return this->do_decimal_point(); }
# 1739 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      char_type
      thousands_sep() const
      { return this->do_thousands_sep(); }
# 1770 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      string
      grouping() const
      { return this->do_grouping(); }
# 1783 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      string_type
      truename() const
      { return this->do_truename(); }
# 1796 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      string_type
      falsename() const
      { return this->do_falsename(); }

    protected:

      virtual
      ~numpunct();
# 1813 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual char_type
      do_decimal_point() const
      { return _M_data->_M_decimal_point; }
# 1825 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual char_type
      do_thousands_sep() const
      { return _M_data->_M_thousands_sep; }
# 1838 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual string
      do_grouping() const
      { return _M_data->_M_grouping; }
# 1851 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual string_type
      do_truename() const
      { return _M_data->_M_truename; }
# 1864 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual string_type
      do_falsename() const
      { return _M_data->_M_falsename; }


      void
      _M_initialize_numpunct(__c_locale __cloc = __null);
    };

  template<typename _CharT>
    locale::id numpunct<_CharT>::id;

  template<>
    numpunct<char>::~numpunct();

  template<>
    void
    numpunct<char>::_M_initialize_numpunct(__c_locale __cloc);


  template<>
    numpunct<wchar_t>::~numpunct();

  template<>
    void
    numpunct<wchar_t>::_M_initialize_numpunct(__c_locale __cloc);



  template<typename _CharT>
    class numpunct_byname : public numpunct<_CharT>
    {
    public:
      typedef _CharT char_type;
      typedef basic_string<_CharT> string_type;

      explicit
      numpunct_byname(const char* __s, size_t __refs = 0)
      : numpunct<_CharT>(__refs)
      {
 if (std::strcmp(__s, "C") != 0 && std::strcmp(__s, "POSIX") != 0)
   {
     __c_locale __tmp;
     this->_S_create_c_locale(__tmp, __s);
     this->_M_initialize_numpunct(__tmp);
     this->_S_destroy_c_locale(__tmp);
   }
      }

    protected:
      virtual
      ~numpunct_byname() { }
    };


# 1931 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
  template<typename _CharT, typename _InIter>
    class num_get : public locale::facet
    {
    public:



      typedef _CharT char_type;
      typedef _InIter iter_type;



      static locale::id id;
# 1952 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      explicit
      num_get(size_t __refs = 0) : facet(__refs) { }
# 1978 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      iter_type
      get(iter_type __in, iter_type __end, ios_base& __io,
   ios_base::iostate& __err, bool& __v) const
      { return this->do_get(__in, __end, __io, __err, __v); }
# 2014 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      iter_type
      get(iter_type __in, iter_type __end, ios_base& __io,
   ios_base::iostate& __err, long& __v) const
      { return this->do_get(__in, __end, __io, __err, __v); }

      iter_type
      get(iter_type __in, iter_type __end, ios_base& __io,
   ios_base::iostate& __err, unsigned short& __v) const
      { return this->do_get(__in, __end, __io, __err, __v); }

      iter_type
      get(iter_type __in, iter_type __end, ios_base& __io,
   ios_base::iostate& __err, unsigned int& __v) const
      { return this->do_get(__in, __end, __io, __err, __v); }

      iter_type
      get(iter_type __in, iter_type __end, ios_base& __io,
   ios_base::iostate& __err, unsigned long& __v) const
      { return this->do_get(__in, __end, __io, __err, __v); }


      iter_type
      get(iter_type __in, iter_type __end, ios_base& __io,
   ios_base::iostate& __err, long long& __v) const
      { return this->do_get(__in, __end, __io, __err, __v); }

      iter_type
      get(iter_type __in, iter_type __end, ios_base& __io,
   ios_base::iostate& __err, unsigned long long& __v) const
      { return this->do_get(__in, __end, __io, __err, __v); }
# 2073 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      iter_type
      get(iter_type __in, iter_type __end, ios_base& __io,
   ios_base::iostate& __err, float& __v) const
      { return this->do_get(__in, __end, __io, __err, __v); }

      iter_type
      get(iter_type __in, iter_type __end, ios_base& __io,
   ios_base::iostate& __err, double& __v) const
      { return this->do_get(__in, __end, __io, __err, __v); }

      iter_type
      get(iter_type __in, iter_type __end, ios_base& __io,
   ios_base::iostate& __err, long double& __v) const
      { return this->do_get(__in, __end, __io, __err, __v); }
# 2115 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      iter_type
      get(iter_type __in, iter_type __end, ios_base& __io,
   ios_base::iostate& __err, void*& __v) const
      { return this->do_get(__in, __end, __io, __err, __v); }

    protected:

      virtual ~num_get() { }

      iter_type
      _M_extract_float(iter_type, iter_type, ios_base&, ios_base::iostate&,
         string& __xtrc) const;

      template<typename _ValueT>
        iter_type
        _M_extract_int(iter_type, iter_type, ios_base&, ios_base::iostate&,
         _ValueT& __v) const;

      template<typename _CharT2>
      typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type
        _M_find(const _CharT2*, size_t __len, _CharT2 __c) const
        {
   int __ret = -1;
   if (__len <= 10)
     {
       if (__c >= _CharT2('0') && __c < _CharT2(_CharT2('0') + __len))
  __ret = __c - _CharT2('0');
     }
   else
     {
       if (__c >= _CharT2('0') && __c <= _CharT2('9'))
  __ret = __c - _CharT2('0');
       else if (__c >= _CharT2('a') && __c <= _CharT2('f'))
  __ret = 10 + (__c - _CharT2('a'));
       else if (__c >= _CharT2('A') && __c <= _CharT2('F'))
  __ret = 10 + (__c - _CharT2('A'));
     }
   return __ret;
 }

      template<typename _CharT2>
      typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value,
          int>::__type
        _M_find(const _CharT2* __zero, size_t __len, _CharT2 __c) const
        {
   int __ret = -1;
   const char_type* __q = char_traits<_CharT2>::find(__zero, __len, __c);
   if (__q)
     {
       __ret = __q - __zero;
       if (__ret > 15)
  __ret -= 6;
     }
   return __ret;
 }
# 2186 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual iter_type
      do_get(iter_type, iter_type, ios_base&, ios_base::iostate&, bool&) const;


      virtual iter_type
      do_get(iter_type, iter_type, ios_base&, ios_base::iostate&, long&) const;

      virtual iter_type
      do_get(iter_type, iter_type, ios_base&, ios_base::iostate& __err,
       unsigned short&) const;

      virtual iter_type
      do_get(iter_type, iter_type, ios_base&, ios_base::iostate& __err,
      unsigned int&) const;

      virtual iter_type
      do_get(iter_type, iter_type, ios_base&, ios_base::iostate& __err,
      unsigned long&) const;


      virtual iter_type
      do_get(iter_type, iter_type, ios_base&, ios_base::iostate& __err,
      long long&) const;

      virtual iter_type
      do_get(iter_type, iter_type, ios_base&, ios_base::iostate& __err,
      unsigned long long&) const;


      virtual iter_type
      do_get(iter_type, iter_type, ios_base&, ios_base::iostate& __err,
      float&) const;

      virtual iter_type
      do_get(iter_type, iter_type, ios_base&, ios_base::iostate& __err,
      double&) const;







      virtual iter_type
      do_get(iter_type, iter_type, ios_base&, ios_base::iostate& __err,
      long double&) const;


      virtual iter_type
      do_get(iter_type, iter_type, ios_base&, ios_base::iostate& __err,
      void*&) const;
# 2245 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
    };

  template<typename _CharT, typename _InIter>
    locale::id num_get<_CharT, _InIter>::id;
# 2262 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
  template<typename _CharT, typename _OutIter>
    class num_put : public locale::facet
    {
    public:



      typedef _CharT char_type;
      typedef _OutIter iter_type;



      static locale::id id;
# 2283 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      explicit
      num_put(size_t __refs = 0) : facet(__refs) { }
# 2301 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      iter_type
      put(iter_type __s, ios_base& __f, char_type __fill, bool __v) const
      { return this->do_put(__s, __f, __fill, __v); }
# 2343 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      iter_type
      put(iter_type __s, ios_base& __f, char_type __fill, long __v) const
      { return this->do_put(__s, __f, __fill, __v); }

      iter_type
      put(iter_type __s, ios_base& __f, char_type __fill,
   unsigned long __v) const
      { return this->do_put(__s, __f, __fill, __v); }


      iter_type
      put(iter_type __s, ios_base& __f, char_type __fill, long long __v) const
      { return this->do_put(__s, __f, __fill, __v); }

      iter_type
      put(iter_type __s, ios_base& __f, char_type __fill,
   unsigned long long __v) const
      { return this->do_put(__s, __f, __fill, __v); }
# 2406 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      iter_type
      put(iter_type __s, ios_base& __f, char_type __fill, double __v) const
      { return this->do_put(__s, __f, __fill, __v); }

      iter_type
      put(iter_type __s, ios_base& __f, char_type __fill,
   long double __v) const
      { return this->do_put(__s, __f, __fill, __v); }
# 2431 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      iter_type
      put(iter_type __s, ios_base& __f, char_type __fill,
   const void* __v) const
      { return this->do_put(__s, __f, __fill, __v); }

    protected:
      template<typename _ValueT>
        iter_type
        _M_insert_float(iter_type, ios_base& __io, char_type __fill,
   char __mod, _ValueT __v) const;

      void
      _M_group_float(const char* __grouping, size_t __grouping_size,
       char_type __sep, const char_type* __p, char_type* __new,
       char_type* __cs, int& __len) const;

      template<typename _ValueT>
        iter_type
        _M_insert_int(iter_type, ios_base& __io, char_type __fill,
        _ValueT __v) const;

      void
      _M_group_int(const char* __grouping, size_t __grouping_size,
     char_type __sep, ios_base& __io, char_type* __new,
     char_type* __cs, int& __len) const;

      void
      _M_pad(char_type __fill, streamsize __w, ios_base& __io,
      char_type* __new, const char_type* __cs, int& __len) const;


      virtual
      ~num_put() { };
# 2479 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual iter_type
      do_put(iter_type, ios_base&, char_type __fill, bool __v) const;

      virtual iter_type
      do_put(iter_type, ios_base&, char_type __fill, long __v) const;

      virtual iter_type
      do_put(iter_type, ios_base&, char_type __fill, unsigned long) const;


      virtual iter_type
      do_put(iter_type, ios_base&, char_type __fill, long long __v) const;

      virtual iter_type
      do_put(iter_type, ios_base&, char_type __fill, unsigned long long) const;


      virtual iter_type
      do_put(iter_type, ios_base&, char_type __fill, double __v) const;






      virtual iter_type
      do_put(iter_type, ios_base&, char_type __fill, long double __v) const;


      virtual iter_type
      do_put(iter_type, ios_base&, char_type __fill, const void* __v) const;







    };

  template <typename _CharT, typename _OutIter>
    locale::id num_put<_CharT, _OutIter>::id;


# 2536 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
  template<typename _CharT>
    class collate : public locale::facet
    {
    public:



      typedef _CharT char_type;
      typedef basic_string<_CharT> string_type;


    protected:


      __c_locale _M_c_locale_collate;

    public:

      static locale::id id;
# 2563 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      explicit
      collate(size_t __refs = 0)
      : facet(__refs), _M_c_locale_collate(_S_get_c_locale())
      { }
# 2577 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      explicit
      collate(__c_locale __cloc, size_t __refs = 0)
      : facet(__refs), _M_c_locale_collate(_S_clone_c_locale(__cloc))
      { }
# 2594 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      int
      compare(const _CharT* __lo1, const _CharT* __hi1,
       const _CharT* __lo2, const _CharT* __hi2) const
      { return this->do_compare(__lo1, __hi1, __lo2, __hi2); }
# 2613 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      string_type
      transform(const _CharT* __lo, const _CharT* __hi) const
      { return this->do_transform(__lo, __hi); }
# 2627 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      long
      hash(const _CharT* __lo, const _CharT* __hi) const
      { return this->do_hash(__lo, __hi); }


      int
      _M_compare(const _CharT*, const _CharT*) const;

      size_t
      _M_transform(_CharT*, const _CharT*, size_t) const;

  protected:

      virtual
      ~collate()
      { _S_destroy_c_locale(_M_c_locale_collate); }
# 2656 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual int
      do_compare(const _CharT* __lo1, const _CharT* __hi1,
   const _CharT* __lo2, const _CharT* __hi2) const;
# 2672 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual string_type
      do_transform(const _CharT* __lo, const _CharT* __hi) const;
# 2685 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual long
      do_hash(const _CharT* __lo, const _CharT* __hi) const;
    };

  template<typename _CharT>
    locale::id collate<_CharT>::id;


  template<>
    int
    collate<char>::_M_compare(const char*, const char*) const;

  template<>
    size_t
    collate<char>::_M_transform(char*, const char*, size_t) const;


  template<>
    int
    collate<wchar_t>::_M_compare(const wchar_t*, const wchar_t*) const;

  template<>
    size_t
    collate<wchar_t>::_M_transform(wchar_t*, const wchar_t*, size_t) const;



  template<typename _CharT>
    class collate_byname : public collate<_CharT>
    {
    public:


      typedef _CharT char_type;
      typedef basic_string<_CharT> string_type;


      explicit
      collate_byname(const char* __s, size_t __refs = 0)
      : collate<_CharT>(__refs)
      {
 if (std::strcmp(__s, "C") != 0 && std::strcmp(__s, "POSIX") != 0)
   {
     this->_S_destroy_c_locale(this->_M_c_locale_collate);
     this->_S_create_c_locale(this->_M_c_locale_collate, __s);
   }
      }

    protected:
      virtual
      ~collate_byname() { }
    };
# 2745 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
  class time_base
  {
  public:
    enum dateorder { no_order, dmy, mdy, ymd, ydm };
  };

  template<typename _CharT>
    struct __timepunct_cache : public locale::facet
    {

      static const _CharT* _S_timezones[14];

      const _CharT* _M_date_format;
      const _CharT* _M_date_era_format;
      const _CharT* _M_time_format;
      const _CharT* _M_time_era_format;
      const _CharT* _M_date_time_format;
      const _CharT* _M_date_time_era_format;
      const _CharT* _M_am;
      const _CharT* _M_pm;
      const _CharT* _M_am_pm_format;


      const _CharT* _M_day1;
      const _CharT* _M_day2;
      const _CharT* _M_day3;
      const _CharT* _M_day4;
      const _CharT* _M_day5;
      const _CharT* _M_day6;
      const _CharT* _M_day7;


      const _CharT* _M_aday1;
      const _CharT* _M_aday2;
      const _CharT* _M_aday3;
      const _CharT* _M_aday4;
      const _CharT* _M_aday5;
      const _CharT* _M_aday6;
      const _CharT* _M_aday7;


      const _CharT* _M_month01;
      const _CharT* _M_month02;
      const _CharT* _M_month03;
      const _CharT* _M_month04;
      const _CharT* _M_month05;
      const _CharT* _M_month06;
      const _CharT* _M_month07;
      const _CharT* _M_month08;
      const _CharT* _M_month09;
      const _CharT* _M_month10;
      const _CharT* _M_month11;
      const _CharT* _M_month12;


      const _CharT* _M_amonth01;
      const _CharT* _M_amonth02;
      const _CharT* _M_amonth03;
      const _CharT* _M_amonth04;
      const _CharT* _M_amonth05;
      const _CharT* _M_amonth06;
      const _CharT* _M_amonth07;
      const _CharT* _M_amonth08;
      const _CharT* _M_amonth09;
      const _CharT* _M_amonth10;
      const _CharT* _M_amonth11;
      const _CharT* _M_amonth12;

      bool _M_allocated;

      __timepunct_cache(size_t __refs = 0) : facet(__refs),
      _M_date_format(__null), _M_date_era_format(__null), _M_time_format(__null),
      _M_time_era_format(__null), _M_date_time_format(__null),
      _M_date_time_era_format(__null), _M_am(__null), _M_pm(__null),
      _M_am_pm_format(__null), _M_day1(__null), _M_day2(__null), _M_day3(__null),
      _M_day4(__null), _M_day5(__null), _M_day6(__null), _M_day7(__null),
      _M_aday1(__null), _M_aday2(__null), _M_aday3(__null), _M_aday4(__null),
      _M_aday5(__null), _M_aday6(__null), _M_aday7(__null), _M_month01(__null),
      _M_month02(__null), _M_month03(__null), _M_month04(__null), _M_month05(__null),
      _M_month06(__null), _M_month07(__null), _M_month08(__null), _M_month09(__null),
      _M_month10(__null), _M_month11(__null), _M_month12(__null), _M_amonth01(__null),
      _M_amonth02(__null), _M_amonth03(__null), _M_amonth04(__null),
      _M_amonth05(__null), _M_amonth06(__null), _M_amonth07(__null),
      _M_amonth08(__null), _M_amonth09(__null), _M_amonth10(__null),
      _M_amonth11(__null), _M_amonth12(__null), _M_allocated(false)
      { }

      ~__timepunct_cache();

      void
      _M_cache(const locale& __loc);

    private:
      __timepunct_cache&
      operator=(const __timepunct_cache&);

      explicit
      __timepunct_cache(const __timepunct_cache&);
    };

  template<typename _CharT>
    __timepunct_cache<_CharT>::~__timepunct_cache()
    {
      if (_M_allocated)
 {

 }
    }


  template<>
    const char*
    __timepunct_cache<char>::_S_timezones[14];


  template<>
    const wchar_t*
    __timepunct_cache<wchar_t>::_S_timezones[14];



  template<typename _CharT>
    const _CharT* __timepunct_cache<_CharT>::_S_timezones[14];

  template<typename _CharT>
    class __timepunct : public locale::facet
    {
    public:

      typedef _CharT __char_type;
      typedef basic_string<_CharT> __string_type;
      typedef __timepunct_cache<_CharT> __cache_type;

    protected:
      __cache_type* _M_data;
      __c_locale _M_c_locale_timepunct;
      const char* _M_name_timepunct;

    public:

      static locale::id id;

      explicit
      __timepunct(size_t __refs = 0);

      explicit
      __timepunct(__cache_type* __cache, size_t __refs = 0);
# 2903 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      explicit
      __timepunct(__c_locale __cloc, const char* __s, size_t __refs = 0);



      void
      _M_put(_CharT* __s, size_t __maxlen, const _CharT* __format,
      const tm* __tm) const;

      void
      _M_date_formats(const _CharT** __date) const
      {

 __date[0] = _M_data->_M_date_format;
 __date[1] = _M_data->_M_date_era_format;
      }

      void
      _M_time_formats(const _CharT** __time) const
      {

 __time[0] = _M_data->_M_time_format;
 __time[1] = _M_data->_M_time_era_format;
      }

      void
      _M_date_time_formats(const _CharT** __dt) const
      {

 __dt[0] = _M_data->_M_date_time_format;
 __dt[1] = _M_data->_M_date_time_era_format;
      }

      void
      _M_am_pm_format(const _CharT* __ampm) const
      { __ampm = _M_data->_M_am_pm_format; }

      void
      _M_am_pm(const _CharT** __ampm) const
      {
 __ampm[0] = _M_data->_M_am;
 __ampm[1] = _M_data->_M_pm;
      }

      void
      _M_days(const _CharT** __days) const
      {
 __days[0] = _M_data->_M_day1;
 __days[1] = _M_data->_M_day2;
 __days[2] = _M_data->_M_day3;
 __days[3] = _M_data->_M_day4;
 __days[4] = _M_data->_M_day5;
 __days[5] = _M_data->_M_day6;
 __days[6] = _M_data->_M_day7;
      }

      void
      _M_days_abbreviated(const _CharT** __days) const
      {
 __days[0] = _M_data->_M_aday1;
 __days[1] = _M_data->_M_aday2;
 __days[2] = _M_data->_M_aday3;
 __days[3] = _M_data->_M_aday4;
 __days[4] = _M_data->_M_aday5;
 __days[5] = _M_data->_M_aday6;
 __days[6] = _M_data->_M_aday7;
      }

      void
      _M_months(const _CharT** __months) const
      {
 __months[0] = _M_data->_M_month01;
 __months[1] = _M_data->_M_month02;
 __months[2] = _M_data->_M_month03;
 __months[3] = _M_data->_M_month04;
 __months[4] = _M_data->_M_month05;
 __months[5] = _M_data->_M_month06;
 __months[6] = _M_data->_M_month07;
 __months[7] = _M_data->_M_month08;
 __months[8] = _M_data->_M_month09;
 __months[9] = _M_data->_M_month10;
 __months[10] = _M_data->_M_month11;
 __months[11] = _M_data->_M_month12;
      }

      void
      _M_months_abbreviated(const _CharT** __months) const
      {
 __months[0] = _M_data->_M_amonth01;
 __months[1] = _M_data->_M_amonth02;
 __months[2] = _M_data->_M_amonth03;
 __months[3] = _M_data->_M_amonth04;
 __months[4] = _M_data->_M_amonth05;
 __months[5] = _M_data->_M_amonth06;
 __months[6] = _M_data->_M_amonth07;
 __months[7] = _M_data->_M_amonth08;
 __months[8] = _M_data->_M_amonth09;
 __months[9] = _M_data->_M_amonth10;
 __months[10] = _M_data->_M_amonth11;
 __months[11] = _M_data->_M_amonth12;
      }

    protected:
      virtual
      ~__timepunct();


      void
      _M_initialize_timepunct(__c_locale __cloc = __null);
    };

  template<typename _CharT>
    locale::id __timepunct<_CharT>::id;


  template<>
    void
    __timepunct<char>::_M_initialize_timepunct(__c_locale __cloc);

  template<>
    void
    __timepunct<char>::_M_put(char*, size_t, const char*, const tm*) const;


  template<>
    void
    __timepunct<wchar_t>::_M_initialize_timepunct(__c_locale __cloc);

  template<>
    void
    __timepunct<wchar_t>::_M_put(wchar_t*, size_t, const wchar_t*,
     const tm*) const;


}


# 1 "/usr/include/c++/4.2.1/i686-apple-darwin10/x86_64/bits/time_members.h" 1 3
# 42 "/usr/include/c++/4.2.1/i686-apple-darwin10/x86_64/bits/time_members.h" 3
namespace std {

  template<typename _CharT>
    __timepunct<_CharT>::__timepunct(size_t __refs)
    : facet(__refs), _M_data(__null)
    {
      _M_name_timepunct = _S_get_c_name();
      _M_initialize_timepunct();
    }

  template<typename _CharT>
    __timepunct<_CharT>::__timepunct(__cache_type* __cache, size_t __refs)
    : facet(__refs), _M_data(__cache)
    {
      _M_name_timepunct = _S_get_c_name();
      _M_initialize_timepunct();
    }

  template<typename _CharT>
    __timepunct<_CharT>::__timepunct(__c_locale __cloc, const char* __s,
         size_t __refs)
    : facet(__refs), _M_data(__null)
    {
      const size_t __len = std::strlen(__s) + 1;
      char* __tmp = new char[__len];
      std::memcpy(__tmp, __s, __len);
      _M_name_timepunct = __tmp;

      try
 { _M_initialize_timepunct(__cloc); }
      catch(...)
 {
   delete [] _M_name_timepunct;
   throw;
 }
    }

  template<typename _CharT>
    __timepunct<_CharT>::~__timepunct()
    {
      if (_M_name_timepunct != _S_get_c_name())
 delete [] _M_name_timepunct;
      delete _M_data;
      _S_destroy_c_locale(_M_c_locale_timepunct);
    }

}
# 3041 "/usr/include/c++/4.2.1/bits/locale_facets.h" 2 3

namespace std {
# 3056 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
  template<typename _CharT, typename _InIter>
    class time_get : public locale::facet, public time_base
    {
    public:



      typedef _CharT char_type;
      typedef _InIter iter_type;

      typedef basic_string<_CharT> __string_type;


      static locale::id id;
# 3078 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      explicit
      time_get(size_t __refs = 0)
      : facet (__refs) { }
# 3095 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      dateorder
      date_order() const
      { return this->do_date_order(); }
# 3119 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      iter_type
      get_time(iter_type __beg, iter_type __end, ios_base& __io,
        ios_base::iostate& __err, tm* __tm) const
      { return this->do_get_time(__beg, __end, __io, __err, __tm); }
# 3144 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      iter_type
      get_date(iter_type __beg, iter_type __end, ios_base& __io,
        ios_base::iostate& __err, tm* __tm) const
      { return this->do_get_date(__beg, __end, __io, __err, __tm); }
# 3172 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      iter_type
      get_weekday(iter_type __beg, iter_type __end, ios_base& __io,
    ios_base::iostate& __err, tm* __tm) const
      { return this->do_get_weekday(__beg, __end, __io, __err, __tm); }
# 3201 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      iter_type
      get_monthname(iter_type __beg, iter_type __end, ios_base& __io,
      ios_base::iostate& __err, tm* __tm) const
      { return this->do_get_monthname(__beg, __end, __io, __err, __tm); }
# 3227 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      iter_type
      get_year(iter_type __beg, iter_type __end, ios_base& __io,
        ios_base::iostate& __err, tm* __tm) const
      { return this->do_get_year(__beg, __end, __io, __err, __tm); }

    protected:

      virtual
      ~time_get() { }
# 3247 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual dateorder
      do_date_order() const;
# 3265 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual iter_type
      do_get_time(iter_type __beg, iter_type __end, ios_base& __io,
    ios_base::iostate& __err, tm* __tm) const;
# 3284 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual iter_type
      do_get_date(iter_type __beg, iter_type __end, ios_base& __io,
    ios_base::iostate& __err, tm* __tm) const;
# 3303 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual iter_type
      do_get_weekday(iter_type __beg, iter_type __end, ios_base&,
       ios_base::iostate& __err, tm* __tm) const;
# 3322 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual iter_type
      do_get_monthname(iter_type __beg, iter_type __end, ios_base&,
         ios_base::iostate& __err, tm* __tm) const;
# 3341 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual iter_type
      do_get_year(iter_type __beg, iter_type __end, ios_base& __io,
    ios_base::iostate& __err, tm* __tm) const;


      iter_type
      _M_extract_num(iter_type __beg, iter_type __end, int& __member,
       int __min, int __max, size_t __len,
       ios_base& __io, ios_base::iostate& __err) const;



      iter_type
      _M_extract_name(iter_type __beg, iter_type __end, int& __member,
        const _CharT** __names, size_t __indexlen,
        ios_base& __io, ios_base::iostate& __err) const;


      iter_type
      _M_extract_via_format(iter_type __beg, iter_type __end, ios_base& __io,
       ios_base::iostate& __err, tm* __tm,
       const _CharT* __format) const;
    };

  template<typename _CharT, typename _InIter>
    locale::id time_get<_CharT, _InIter>::id;


  template<typename _CharT, typename _InIter>
    class time_get_byname : public time_get<_CharT, _InIter>
    {
    public:

      typedef _CharT char_type;
      typedef _InIter iter_type;

      explicit
      time_get_byname(const char*, size_t __refs = 0)
      : time_get<_CharT, _InIter>(__refs) { }

    protected:
      virtual
      ~time_get_byname() { }
    };
# 3397 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
  template<typename _CharT, typename _OutIter>
    class time_put : public locale::facet
    {
    public:



      typedef _CharT char_type;
      typedef _OutIter iter_type;



      static locale::id id;
# 3418 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      explicit
      time_put(size_t __refs = 0)
      : facet(__refs) { }
# 3437 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      iter_type
      put(iter_type __s, ios_base& __io, char_type __fill, const tm* __tm,
   const _CharT* __beg, const _CharT* __end) const;
# 3457 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      iter_type
      put(iter_type __s, ios_base& __io, char_type __fill,
   const tm* __tm, char __format, char __mod = 0) const
      { return this->do_put(__s, __io, __fill, __tm, __format, __mod); }

    protected:

      virtual
      ~time_put()
      { }
# 3484 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual iter_type
      do_put(iter_type __s, ios_base& __io, char_type __fill, const tm* __tm,
      char __format, char __mod) const;
    };

  template<typename _CharT, typename _OutIter>
    locale::id time_put<_CharT, _OutIter>::id;


  template<typename _CharT, typename _OutIter>
    class time_put_byname : public time_put<_CharT, _OutIter>
    {
    public:

      typedef _CharT char_type;
      typedef _OutIter iter_type;

      explicit
      time_put_byname(const char*, size_t __refs = 0)
      : time_put<_CharT, _OutIter>(__refs)
      { };

    protected:
      virtual
      ~time_put_byname() { }
    };
# 3522 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
  class money_base
  {
  public:
    enum part { none, space, symbol, sign, value };
    struct pattern { char field[4]; };

    static const pattern _S_default_pattern;

    enum
    {
      _S_minus,
      _S_zero,
      _S_end = 11
    };



    static const char* _S_atoms;



    static pattern
    _S_construct_pattern(char __precedes, char __space, char __posn);
  };

  template<typename _CharT, bool _Intl>
    struct __moneypunct_cache : public locale::facet
    {
      const char* _M_grouping;
      size_t _M_grouping_size;
      bool _M_use_grouping;
      _CharT _M_decimal_point;
      _CharT _M_thousands_sep;
      const _CharT* _M_curr_symbol;
      size_t _M_curr_symbol_size;
      const _CharT* _M_positive_sign;
      size_t _M_positive_sign_size;
      const _CharT* _M_negative_sign;
      size_t _M_negative_sign_size;
      int _M_frac_digits;
      money_base::pattern _M_pos_format;
      money_base::pattern _M_neg_format;




      _CharT _M_atoms[money_base::_S_end];

      bool _M_allocated;

      __moneypunct_cache(size_t __refs = 0) : facet(__refs),
      _M_grouping(__null), _M_grouping_size(0), _M_use_grouping(false),
      _M_decimal_point(_CharT()), _M_thousands_sep(_CharT()),
      _M_curr_symbol(__null), _M_curr_symbol_size(0),
      _M_positive_sign(__null), _M_positive_sign_size(0),
      _M_negative_sign(__null), _M_negative_sign_size(0),
      _M_frac_digits(0),
      _M_pos_format(money_base::pattern()),
      _M_neg_format(money_base::pattern()), _M_allocated(false)
      { }

      ~__moneypunct_cache();

      void
      _M_cache(const locale& __loc);

    private:
      __moneypunct_cache&
      operator=(const __moneypunct_cache&);

      explicit
      __moneypunct_cache(const __moneypunct_cache&);
    };

  template<typename _CharT, bool _Intl>
    __moneypunct_cache<_CharT, _Intl>::~__moneypunct_cache()
    {
      if (_M_allocated)
 {
   delete [] _M_grouping;
   delete [] _M_curr_symbol;
   delete [] _M_positive_sign;
   delete [] _M_negative_sign;
 }
    }







  template<typename _CharT, bool _Intl>
    class moneypunct : public locale::facet, public money_base
    {
    public:



      typedef _CharT char_type;
      typedef basic_string<_CharT> string_type;

      typedef __moneypunct_cache<_CharT, _Intl> __cache_type;

    private:
      __cache_type* _M_data;

    public:


      static const bool intl = _Intl;

      static locale::id id;
# 3643 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      explicit
      moneypunct(size_t __refs = 0) : facet(__refs), _M_data(__null)
      { _M_initialize_moneypunct(); }
# 3655 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      explicit
      moneypunct(__cache_type* __cache, size_t __refs = 0)
      : facet(__refs), _M_data(__cache)
      { _M_initialize_moneypunct(); }
# 3670 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      explicit
      moneypunct(__c_locale __cloc, const char* __s, size_t __refs = 0)
      : facet(__refs), _M_data(__null)
      { _M_initialize_moneypunct(__cloc, __s); }
# 3684 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      char_type
      decimal_point() const
      { return this->do_decimal_point(); }
# 3697 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      char_type
      thousands_sep() const
      { return this->do_thousands_sep(); }
# 3726 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      string
      grouping() const
      { return this->do_grouping(); }
# 3739 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      string_type
      curr_symbol() const
      { return this->do_curr_symbol(); }
# 3756 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      string_type
      positive_sign() const
      { return this->do_positive_sign(); }
# 3773 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      string_type
      negative_sign() const
      { return this->do_negative_sign(); }
# 3789 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      int
      frac_digits() const
      { return this->do_frac_digits(); }
# 3824 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      pattern
      pos_format() const
      { return this->do_pos_format(); }

      pattern
      neg_format() const
      { return this->do_neg_format(); }


    protected:

      virtual
      ~moneypunct();
# 3846 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual char_type
      do_decimal_point() const
      { return _M_data->_M_decimal_point; }
# 3858 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual char_type
      do_thousands_sep() const
      { return _M_data->_M_thousands_sep; }
# 3871 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual string
      do_grouping() const
      { return _M_data->_M_grouping; }
# 3884 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual string_type
      do_curr_symbol() const
      { return _M_data->_M_curr_symbol; }
# 3897 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual string_type
      do_positive_sign() const
      { return _M_data->_M_positive_sign; }
# 3910 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual string_type
      do_negative_sign() const
      { return _M_data->_M_negative_sign; }
# 3924 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual int
      do_frac_digits() const
      { return _M_data->_M_frac_digits; }
# 3938 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual pattern
      do_pos_format() const
      { return _M_data->_M_pos_format; }
# 3952 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual pattern
      do_neg_format() const
      { return _M_data->_M_neg_format; }


       void
       _M_initialize_moneypunct(__c_locale __cloc = __null,
    const char* __name = __null);
    };

  template<typename _CharT, bool _Intl>
    locale::id moneypunct<_CharT, _Intl>::id;

  template<typename _CharT, bool _Intl>
    const bool moneypunct<_CharT, _Intl>::intl;

  template<>
    moneypunct<char, true>::~moneypunct();

  template<>
    moneypunct<char, false>::~moneypunct();

  template<>
    void
    moneypunct<char, true>::_M_initialize_moneypunct(__c_locale, const char*);

  template<>
    void
    moneypunct<char, false>::_M_initialize_moneypunct(__c_locale, const char*);


  template<>
    moneypunct<wchar_t, true>::~moneypunct();

  template<>
    moneypunct<wchar_t, false>::~moneypunct();

  template<>
    void
    moneypunct<wchar_t, true>::_M_initialize_moneypunct(__c_locale,
       const char*);

  template<>
    void
    moneypunct<wchar_t, false>::_M_initialize_moneypunct(__c_locale,
        const char*);



  template<typename _CharT, bool _Intl>
    class moneypunct_byname : public moneypunct<_CharT, _Intl>
    {
    public:
      typedef _CharT char_type;
      typedef basic_string<_CharT> string_type;

      static const bool intl = _Intl;

      explicit
      moneypunct_byname(const char* __s, size_t __refs = 0)
      : moneypunct<_CharT, _Intl>(__refs)
      {
 if (std::strcmp(__s, "C") != 0 && std::strcmp(__s, "POSIX") != 0)
   {
     __c_locale __tmp;
     this->_S_create_c_locale(__tmp, __s);
     this->_M_initialize_moneypunct(__tmp);
     this->_S_destroy_c_locale(__tmp);
   }
      }

    protected:
      virtual
      ~moneypunct_byname() { }
    };

  template<typename _CharT, bool _Intl>
    const bool moneypunct_byname<_CharT, _Intl>::intl;


# 4044 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
  template<typename _CharT, typename _InIter>
    class money_get : public locale::facet
    {
    public:



      typedef _CharT char_type;
      typedef _InIter iter_type;
      typedef basic_string<_CharT> string_type;



      static locale::id id;
# 4066 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      explicit
      money_get(size_t __refs = 0) : facet(__refs) { }
# 4096 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      iter_type
      get(iter_type __s, iter_type __end, bool __intl, ios_base& __io,
   ios_base::iostate& __err, long double& __units) const
      { return this->do_get(__s, __end, __intl, __io, __err, __units); }
# 4126 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      iter_type
      get(iter_type __s, iter_type __end, bool __intl, ios_base& __io,
   ios_base::iostate& __err, string_type& __digits) const
      { return this->do_get(__s, __end, __intl, __io, __err, __digits); }

    protected:

      virtual
      ~money_get() { }
# 4149 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual iter_type
      do_get(iter_type __s, iter_type __end, bool __intl, ios_base& __io,
      ios_base::iostate& __err, long double& __units) const;
# 4161 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual iter_type
      do_get(iter_type __s, iter_type __end, bool __intl, ios_base& __io,
      ios_base::iostate& __err, string_type& __digits) const;
# 4172 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      template<bool _Intl>
        iter_type
        _M_extract(iter_type __s, iter_type __end, ios_base& __io,
     ios_base::iostate& __err, string& __digits) const;
    };

  template<typename _CharT, typename _InIter>
    locale::id money_get<_CharT, _InIter>::id;
# 4193 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
  template<typename _CharT, typename _OutIter>
    class money_put : public locale::facet
    {
    public:


      typedef _CharT char_type;
      typedef _OutIter iter_type;
      typedef basic_string<_CharT> string_type;



      static locale::id id;
# 4214 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      explicit
      money_put(size_t __refs = 0) : facet(__refs) { }
# 4234 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      iter_type
      put(iter_type __s, bool __intl, ios_base& __io,
   char_type __fill, long double __units) const
      { return this->do_put(__s, __intl, __io, __fill, __units); }
# 4256 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      iter_type
      put(iter_type __s, bool __intl, ios_base& __io,
   char_type __fill, const string_type& __digits) const
      { return this->do_put(__s, __intl, __io, __fill, __digits); }

    protected:

      virtual
      ~money_put() { }
# 4290 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual iter_type
      do_put(iter_type __s, bool __intl, ios_base& __io, char_type __fill,
      long double __units) const;
# 4313 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual iter_type
      do_put(iter_type __s, bool __intl, ios_base& __io, char_type __fill,
      const string_type& __digits) const;
# 4324 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      template<bool _Intl>
        iter_type
        _M_insert(iter_type __s, ios_base& __io, char_type __fill,
    const string_type& __digits) const;
    };

  template<typename _CharT, typename _OutIter>
    locale::id money_put<_CharT, _OutIter>::id;






  struct messages_base
  {
    typedef int catalog;
  };
# 4363 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
  template<typename _CharT>
    class messages : public locale::facet, public messages_base
    {
    public:



      typedef _CharT char_type;
      typedef basic_string<_CharT> string_type;


    protected:


      __c_locale _M_c_locale_messages;
      const char* _M_name_messages;

    public:

      static locale::id id;
# 4391 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      explicit
      messages(size_t __refs = 0);
# 4405 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      explicit
      messages(__c_locale __cloc, const char* __s, size_t __refs = 0);
# 4418 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      catalog
      open(const basic_string<char>& __s, const locale& __loc) const
      { return this->do_open(__s, __loc); }
# 4436 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      catalog
      open(const basic_string<char>&, const locale&, const char*) const;
# 4454 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      string_type
      get(catalog __c, int __set, int __msgid, const string_type& __s) const
      { return this->do_get(__c, __set, __msgid, __s); }
# 4465 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      void
      close(catalog __c) const
      { return this->do_close(__c); }

    protected:

      virtual
      ~messages();
# 4485 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual catalog
      do_open(const basic_string<char>&, const locale&) const;
# 4504 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
      virtual string_type
      do_get(catalog, int, int, const string_type& __dfault) const;






      virtual void
      do_close(catalog) const;


      char*
      _M_convert_to_char(const string_type& __msg) const
      {

 return reinterpret_cast<char*>(const_cast<_CharT*>(__msg.c_str()));
      }


      string_type
      _M_convert_from_char(char*) const
      {
# 4561 "/usr/include/c++/4.2.1/bits/locale_facets.h" 3
 return string_type();
      }
     };

  template<typename _CharT>
    locale::id messages<_CharT>::id;


  template<>
    string
    messages<char>::do_get(catalog, int, int, const string&) const;


  template<>
    wstring
    messages<wchar_t>::do_get(catalog, int, int, const wstring&) const;



   template<typename _CharT>
    class messages_byname : public messages<_CharT>
    {
    public:
      typedef _CharT char_type;
      typedef basic_string<_CharT> string_type;

      explicit
      messages_byname(const char* __s, size_t __refs = 0);

    protected:
      virtual
      ~messages_byname()
      { }
    };

}


# 1 "/usr/include/c++/4.2.1/i686-apple-darwin10/x86_64/bits/messages_members.h" 1 3
# 41 "/usr/include/c++/4.2.1/i686-apple-darwin10/x86_64/bits/messages_members.h" 3
namespace std {


  template<typename _CharT>
     messages<_CharT>::messages(size_t __refs)
     : facet(__refs)
     { _M_c_locale_messages = _S_get_c_locale(); }

  template<typename _CharT>
     messages<_CharT>::messages(__c_locale, const char*, size_t __refs)
     : facet(__refs)
     { _M_c_locale_messages = _S_get_c_locale(); }

  template<typename _CharT>
    typename messages<_CharT>::catalog
    messages<_CharT>::open(const basic_string<char>& __s, const locale& __loc,
      const char*) const
    { return this->do_open(__s, __loc); }


  template<typename _CharT>
    messages<_CharT>::~messages()
    { _S_destroy_c_locale(_M_c_locale_messages); }

  template<typename _CharT>
    typename messages<_CharT>::catalog
    messages<_CharT>::do_open(const basic_string<char>&, const locale&) const
    { return 0; }

  template<typename _CharT>
    typename messages<_CharT>::string_type
    messages<_CharT>::do_get(catalog, int, int,
        const string_type& __dfault) const
    { return __dfault; }

  template<typename _CharT>
    void
    messages<_CharT>::do_close(catalog) const
    { }


   template<typename _CharT>
     messages_byname<_CharT>::messages_byname(const char* __s, size_t __refs)
     : messages<_CharT>(__refs)
     {
 if (std::strcmp(__s, "C") != 0 && std::strcmp(__s, "POSIX") != 0)
   {
     this->_S_destroy_c_locale(this->_M_c_locale_messages);
     this->_S_create_c_locale(this->_M_c_locale_messages, __s);
   }
     }

}
# 4600 "/usr/include/c++/4.2.1/bits/locale_facets.h" 2 3

namespace std {







  template<typename _CharT>
    inline bool
    isspace(_CharT __c, const locale& __loc)
    { return use_facet<ctype<_CharT> >(__loc).is(ctype_base::space, __c); }


  template<typename _CharT>
    inline bool
    isprint(_CharT __c, const locale& __loc)
    { return use_facet<ctype<_CharT> >(__loc).is(ctype_base::print, __c); }


  template<typename _CharT>
    inline bool
    iscntrl(_CharT __c, const locale& __loc)
    { return use_facet<ctype<_CharT> >(__loc).is(ctype_base::cntrl, __c); }


  template<typename _CharT>
    inline bool
    isupper(_CharT __c, const locale& __loc)
    { return use_facet<ctype<_CharT> >(__loc).is(ctype_base::upper, __c); }


  template<typename _CharT>
    inline bool
    islower(_CharT __c, const locale& __loc)
    { return use_facet<ctype<_CharT> >(__loc).is(ctype_base::lower, __c); }


  template<typename _CharT>
    inline bool
    isalpha(_CharT __c, const locale& __loc)
    { return use_facet<ctype<_CharT> >(__loc).is(ctype_base::alpha, __c); }


  template<typename _CharT>
    inline bool
    isdigit(_CharT __c, const locale& __loc)
    { return use_facet<ctype<_CharT> >(__loc).is(ctype_base::digit, __c); }


  template<typename _CharT>
    inline bool
    ispunct(_CharT __c, const locale& __loc)
    { return use_facet<ctype<_CharT> >(__loc).is(ctype_base::punct, __c); }


  template<typename _CharT>
    inline bool
    isxdigit(_CharT __c, const locale& __loc)
    { return use_facet<ctype<_CharT> >(__loc).is(ctype_base::xdigit, __c); }


  template<typename _CharT>
    inline bool
    isalnum(_CharT __c, const locale& __loc)
    { return use_facet<ctype<_CharT> >(__loc).is(ctype_base::alnum, __c); }


  template<typename _CharT>
    inline bool
    isgraph(_CharT __c, const locale& __loc)
    { return use_facet<ctype<_CharT> >(__loc).is(ctype_base::graph, __c); }


  template<typename _CharT>
    inline _CharT
    toupper(_CharT __c, const locale& __loc)
    { return use_facet<ctype<_CharT> >(__loc).toupper(__c); }


  template<typename _CharT>
    inline _CharT
    tolower(_CharT __c, const locale& __loc)
    { return use_facet<ctype<_CharT> >(__loc).tolower(__c); }

}
# 45 "/usr/include/c++/4.2.1/bits/basic_ios.h" 2 3

namespace std {
# 55 "/usr/include/c++/4.2.1/bits/basic_ios.h" 3
  template<typename _CharT, typename _Traits>
    class basic_ios : public ios_base
    {
    public:






      typedef _CharT char_type;
      typedef typename _Traits::int_type int_type;
      typedef typename _Traits::pos_type pos_type;
      typedef typename _Traits::off_type off_type;
      typedef _Traits traits_type;
# 78 "/usr/include/c++/4.2.1/bits/basic_ios.h" 3
      typedef ctype<_CharT> __ctype_type;
      typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> >
           __num_put_type;
      typedef num_get<_CharT, istreambuf_iterator<_CharT, _Traits> >
           __num_get_type;



    protected:
      basic_ostream<_CharT, _Traits>* _M_tie;
      mutable char_type _M_fill;
      mutable bool _M_fill_init;
      basic_streambuf<_CharT, _Traits>* _M_streambuf;


      const __ctype_type* _M_ctype;

      const __num_put_type* _M_num_put;

      const __num_get_type* _M_num_get;

    public:







      operator void*() const
      { return this->fail() ? 0 : const_cast<basic_ios*>(this); }

      bool
      operator!() const
      { return this->fail(); }
# 122 "/usr/include/c++/4.2.1/bits/basic_ios.h" 3
      iostate
      rdstate() const
      { return _M_streambuf_state; }
# 133 "/usr/include/c++/4.2.1/bits/basic_ios.h" 3
      void
      clear(iostate __state = goodbit);







      void
      setstate(iostate __state)
      { this->clear(this->rdstate() | __state); }




      void
      _M_setstate(iostate __state)
      {


 _M_streambuf_state |= __state;
 if (this->exceptions() & __state)
   throw;
      }







      bool
      good() const
      { return this->rdstate() == 0; }







      bool
      eof() const
      { return (this->rdstate() & eofbit) != 0; }
# 186 "/usr/include/c++/4.2.1/bits/basic_ios.h" 3
      bool
      fail() const
      { return (this->rdstate() & (badbit | failbit)) != 0; }







      bool
      bad() const
      { return (this->rdstate() & badbit) != 0; }
# 207 "/usr/include/c++/4.2.1/bits/basic_ios.h" 3
      iostate
      exceptions() const
      { return _M_exception; }
# 242 "/usr/include/c++/4.2.1/bits/basic_ios.h" 3
      void
      exceptions(iostate __except)
      {
        _M_exception = __except;
        this->clear(_M_streambuf_state);
      }







      explicit
      basic_ios(basic_streambuf<_CharT, _Traits>* __sb)
      : ios_base(), _M_tie(0), _M_fill(), _M_fill_init(false), _M_streambuf(0),
      _M_ctype(0), _M_num_put(0), _M_num_get(0)
      { this->init(__sb); }







      virtual
      ~basic_ios() { }
# 280 "/usr/include/c++/4.2.1/bits/basic_ios.h" 3
      basic_ostream<_CharT, _Traits>*
      tie() const
      { return _M_tie; }
# 292 "/usr/include/c++/4.2.1/bits/basic_ios.h" 3
      basic_ostream<_CharT, _Traits>*
      tie(basic_ostream<_CharT, _Traits>* __tiestr)
      {
        basic_ostream<_CharT, _Traits>* __old = _M_tie;
        _M_tie = __tiestr;
        return __old;
      }







      basic_streambuf<_CharT, _Traits>*
      rdbuf() const
      { return _M_streambuf; }
# 332 "/usr/include/c++/4.2.1/bits/basic_ios.h" 3
      basic_streambuf<_CharT, _Traits>*
      rdbuf(basic_streambuf<_CharT, _Traits>* __sb);
# 346 "/usr/include/c++/4.2.1/bits/basic_ios.h" 3
      basic_ios&
      copyfmt(const basic_ios& __rhs);







      char_type
      fill() const
      {
 if (!_M_fill_init)
   {
     _M_fill = this->widen(' ');
     _M_fill_init = true;
   }
 return _M_fill;
      }
# 375 "/usr/include/c++/4.2.1/bits/basic_ios.h" 3
      char_type
      fill(char_type __ch)
      {
 char_type __old = this->fill();
 _M_fill = __ch;
 return __old;
      }
# 395 "/usr/include/c++/4.2.1/bits/basic_ios.h" 3
      locale
      imbue(const locale& __loc);
# 415 "/usr/include/c++/4.2.1/bits/basic_ios.h" 3
      char
      narrow(char_type __c, char __dfault) const;
# 433 "/usr/include/c++/4.2.1/bits/basic_ios.h" 3
      char_type
      widen(char __c) const;

    protected:







      basic_ios()
      : ios_base(), _M_tie(0), _M_fill(char_type()), _M_fill_init(false),
      _M_streambuf(0), _M_ctype(0), _M_num_put(0), _M_num_get(0)
      { }







      void
      init(basic_streambuf<_CharT, _Traits>* __sb);

      void
      _M_cache_locale(const locale& __loc);
    };

}


# 1 "/usr/include/c++/4.2.1/bits/basic_ios.tcc" 1 3
# 39 "/usr/include/c++/4.2.1/bits/basic_ios.tcc" 3
       
# 40 "/usr/include/c++/4.2.1/bits/basic_ios.tcc" 3

namespace std {

  template<typename _CharT, typename _Traits>
    void
    basic_ios<_CharT, _Traits>::clear(iostate __state)
    {
      if (this->rdbuf())
 _M_streambuf_state = __state;
      else
   _M_streambuf_state = __state | badbit;
      if (this->exceptions() & this->rdstate())
 __throw_ios_failure(("basic_ios::clear"));
    }

  template<typename _CharT, typename _Traits>
    basic_streambuf<_CharT, _Traits>*
    basic_ios<_CharT, _Traits>::rdbuf(basic_streambuf<_CharT, _Traits>* __sb)
    {
      basic_streambuf<_CharT, _Traits>* __old = _M_streambuf;
      _M_streambuf = __sb;
      this->clear();
      return __old;
    }

  template<typename _CharT, typename _Traits>
    basic_ios<_CharT, _Traits>&
    basic_ios<_CharT, _Traits>::copyfmt(const basic_ios& __rhs)
    {


      if (this != &__rhs)
 {




   _Words* __words = (__rhs._M_word_size <= _S_local_word_size) ?
                      _M_local_word : new _Words[__rhs._M_word_size];


   _Callback_list* __cb = __rhs._M_callbacks;
   if (__cb)
     __cb->_M_add_reference();
   _M_call_callbacks(erase_event);
   if (_M_word != _M_local_word)
     {
       delete [] _M_word;
       _M_word = 0;
     }
   _M_dispose_callbacks();


   _M_callbacks = __cb;
   for (int __i = 0; __i < __rhs._M_word_size; ++__i)
     __words[__i] = __rhs._M_word[__i];
   _M_word = __words;
   _M_word_size = __rhs._M_word_size;

   this->flags(__rhs.flags());
   this->width(__rhs.width());
   this->precision(__rhs.precision());
   this->tie(__rhs.tie());
   this->fill(__rhs.fill());
   _M_ios_locale = __rhs.getloc();
   _M_cache_locale(_M_ios_locale);

   _M_call_callbacks(copyfmt_event);


   this->exceptions(__rhs.exceptions());
 }
      return *this;
    }

  template<typename _CharT, typename _Traits>
    char
    basic_ios<_CharT, _Traits>::narrow(char_type __c, char __dfault) const
    { return __check_facet(_M_ctype).narrow(__c, __dfault); }

  template<typename _CharT, typename _Traits>
    _CharT
    basic_ios<_CharT, _Traits>::widen(char __c) const
    { return __check_facet(_M_ctype).widen(__c); }


  template<typename _CharT, typename _Traits>
    locale
    basic_ios<_CharT, _Traits>::imbue(const locale& __loc)
    {
      locale __old(this->getloc());
      ios_base::imbue(__loc);
      _M_cache_locale(__loc);
      if (this->rdbuf() != 0)
 this->rdbuf()->pubimbue(__loc);
      return __old;
    }

  template<typename _CharT, typename _Traits>
    void
    basic_ios<_CharT, _Traits>::init(basic_streambuf<_CharT, _Traits>* __sb)
    {

      ios_base::_M_init();


      _M_cache_locale(_M_ios_locale);
# 160 "/usr/include/c++/4.2.1/bits/basic_ios.tcc" 3
      _M_fill = _CharT();
      _M_fill_init = false;

      _M_tie = 0;
      _M_exception = goodbit;
      _M_streambuf = __sb;
      _M_streambuf_state = __sb ? goodbit : badbit;
    }

  template<typename _CharT, typename _Traits>
    void
    basic_ios<_CharT, _Traits>::_M_cache_locale(const locale& __loc)
    {
      if (__builtin_expect(has_facet<__ctype_type>(__loc), true))
 _M_ctype = &use_facet<__ctype_type>(__loc);
      else
 _M_ctype = 0;

      if (__builtin_expect(has_facet<__num_put_type>(__loc), true))
 _M_num_put = &use_facet<__num_put_type>(__loc);
      else
 _M_num_put = 0;

      if (__builtin_expect(has_facet<__num_get_type>(__loc), true))
 _M_num_get = &use_facet<__num_get_type>(__loc);
      else
 _M_num_get = 0;
    }





  extern template class basic_ios<char>;


  extern template class basic_ios<wchar_t>;



}
# 466 "/usr/include/c++/4.2.1/bits/basic_ios.h" 2 3
# 51 "/usr/include/c++/4.2.1/ios" 2 3
# 46 "/usr/include/c++/4.2.1/ostream" 2 3


namespace std {
# 58 "/usr/include/c++/4.2.1/ostream" 3
  template<typename _CharT, typename _Traits>
    class basic_ostream : virtual public basic_ios<_CharT, _Traits>
    {
    public:

      typedef _CharT char_type;
      typedef typename _Traits::int_type int_type;
      typedef typename _Traits::pos_type pos_type;
      typedef typename _Traits::off_type off_type;
      typedef _Traits traits_type;


      typedef basic_streambuf<_CharT, _Traits> __streambuf_type;
      typedef basic_ios<_CharT, _Traits> __ios_type;
      typedef basic_ostream<_CharT, _Traits> __ostream_type;
      typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> >
             __num_put_type;
      typedef ctype<_CharT> __ctype_type;
# 85 "/usr/include/c++/4.2.1/ostream" 3
      explicit
      basic_ostream(__streambuf_type* __sb)
      { this->init(__sb); }






      virtual
      ~basic_ostream() { }


      class sentry;
      friend class sentry;
# 111 "/usr/include/c++/4.2.1/ostream" 3
      __ostream_type&
      operator<<(__ostream_type& (*__pf)(__ostream_type&))
      {



 return __pf(*this);
      }

      __ostream_type&
      operator<<(__ios_type& (*__pf)(__ios_type&))
      {



 __pf(*this);
 return *this;
      }

      __ostream_type&
      operator<<(ios_base& (*__pf) (ios_base&))
      {



 __pf(*this);
 return *this;
      }
# 168 "/usr/include/c++/4.2.1/ostream" 3
      __ostream_type&
      operator<<(long __n)
      { return _M_insert(__n); }

      __ostream_type&
      operator<<(unsigned long __n)
      { return _M_insert(__n); }

      __ostream_type&
      operator<<(bool __n)
      { return _M_insert(__n); }

      __ostream_type&
      operator<<(short __n);

      __ostream_type&
      operator<<(unsigned short __n)
      {


 return _M_insert(static_cast<unsigned long>(__n));
      }

      __ostream_type&
      operator<<(int __n);

      __ostream_type&
      operator<<(unsigned int __n)
      {


 return _M_insert(static_cast<unsigned long>(__n));
      }


      __ostream_type&
      operator<<(long long __n)
      { return _M_insert(__n); }

      __ostream_type&
      operator<<(unsigned long long __n)
      { return _M_insert(__n); }


      __ostream_type&
      operator<<(double __f)
      { return _M_insert(__f); }

      __ostream_type&
      operator<<(float __f)
      {


 return _M_insert(static_cast<double>(__f));
      }

      __ostream_type&
      operator<<(long double __f)
      { return _M_insert(__f); }

      __ostream_type&
      operator<<(const void* __p)
      { return _M_insert(__p); }
# 253 "/usr/include/c++/4.2.1/ostream" 3
      __ostream_type&
      operator<<(__streambuf_type* __sb);
# 286 "/usr/include/c++/4.2.1/ostream" 3
      __ostream_type&
      put(char_type __c);


      void
      _M_write(const char_type* __s, streamsize __n)
      {
 const streamsize __put = this->rdbuf()->sputn(__s, __n);
 if (__put != __n)
   this->setstate(ios_base::badbit);
      }
# 314 "/usr/include/c++/4.2.1/ostream" 3
      __ostream_type&
      write(const char_type* __s, streamsize __n);
# 327 "/usr/include/c++/4.2.1/ostream" 3
      __ostream_type&
      flush();
# 338 "/usr/include/c++/4.2.1/ostream" 3
      pos_type
      tellp();
# 349 "/usr/include/c++/4.2.1/ostream" 3
      __ostream_type&
      seekp(pos_type);
# 361 "/usr/include/c++/4.2.1/ostream" 3
       __ostream_type&
      seekp(off_type, ios_base::seekdir);

    protected:
      explicit
      basic_ostream() { }

      template<typename _ValueT>
        __ostream_type&
        _M_insert(_ValueT __v);
    };
# 383 "/usr/include/c++/4.2.1/ostream" 3
  template <typename _CharT, typename _Traits>
    class basic_ostream<_CharT, _Traits>::sentry
    {

      bool _M_ok;
      basic_ostream<_CharT, _Traits>& _M_os;

    public:
# 402 "/usr/include/c++/4.2.1/ostream" 3
      explicit
      sentry(basic_ostream<_CharT, _Traits>& __os);
# 412 "/usr/include/c++/4.2.1/ostream" 3
      ~sentry()
      {

 if (_M_os.flags() & ios_base::unitbuf && !uncaught_exception())
   {

     if (_M_os.rdbuf() && _M_os.rdbuf()->pubsync() == -1)
       _M_os.setstate(ios_base::badbit);
   }
      }
# 430 "/usr/include/c++/4.2.1/ostream" 3
      operator bool() const
      { return _M_ok; }
    };
# 451 "/usr/include/c++/4.2.1/ostream" 3
  template<typename _CharT, typename _Traits>
    inline basic_ostream<_CharT, _Traits>&
    operator<<(basic_ostream<_CharT, _Traits>& __out, _CharT __c)
    { return __ostream_insert(__out, &__c, 1); }

  template<typename _CharT, typename _Traits>
    inline basic_ostream<_CharT, _Traits>&
    operator<<(basic_ostream<_CharT, _Traits>& __out, char __c)
    { return (__out << __out.widen(__c)); }


  template <class _Traits>
    inline basic_ostream<char, _Traits>&
    operator<<(basic_ostream<char, _Traits>& __out, char __c)
    { return __ostream_insert(__out, &__c, 1); }


  template<class _Traits>
    inline basic_ostream<char, _Traits>&
    operator<<(basic_ostream<char, _Traits>& __out, signed char __c)
    { return (__out << static_cast<char>(__c)); }

  template<class _Traits>
    inline basic_ostream<char, _Traits>&
    operator<<(basic_ostream<char, _Traits>& __out, unsigned char __c)
    { return (__out << static_cast<char>(__c)); }
# 493 "/usr/include/c++/4.2.1/ostream" 3
  template<typename _CharT, typename _Traits>
    inline basic_ostream<_CharT, _Traits>&
    operator<<(basic_ostream<_CharT, _Traits>& __out, const _CharT* __s)
    {
      if (!__s)
 __out.setstate(ios_base::badbit);
      else
 __ostream_insert(__out, __s,
    static_cast<streamsize>(_Traits::length(__s)));
      return __out;
    }

  template<typename _CharT, typename _Traits>
    basic_ostream<_CharT, _Traits> &
    operator<<(basic_ostream<_CharT, _Traits>& __out, const char* __s);


  template<class _Traits>
    inline basic_ostream<char, _Traits>&
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    {
      if (!__s)
 __out.setstate(ios_base::badbit);
      else
 __ostream_insert(__out, __s,
    static_cast<streamsize>(_Traits::length(__s)));
      return __out;
    }


  template<class _Traits>
    inline basic_ostream<char, _Traits>&
    operator<<(basic_ostream<char, _Traits>& __out, const signed char* __s)
    { return (__out << reinterpret_cast<const char*>(__s)); }

  template<class _Traits>
    inline basic_ostream<char, _Traits> &
    operator<<(basic_ostream<char, _Traits>& __out, const unsigned char* __s)
    { return (__out << reinterpret_cast<const char*>(__s)); }
# 543 "/usr/include/c++/4.2.1/ostream" 3
  template<typename _CharT, typename _Traits>
    inline basic_ostream<_CharT, _Traits>&
    endl(basic_ostream<_CharT, _Traits>& __os)
    { return flush(__os.put(__os.widen('\n'))); }







  template<typename _CharT, typename _Traits>
    inline basic_ostream<_CharT, _Traits>&
    ends(basic_ostream<_CharT, _Traits>& __os)
    { return __os.put(_CharT()); }






  template<typename _CharT, typename _Traits>
    inline basic_ostream<_CharT, _Traits>&
    flush(basic_ostream<_CharT, _Traits>& __os)
    { return __os.flush(); }

}


# 1 "/usr/include/c++/4.2.1/bits/ostream.tcc" 1 3
# 44 "/usr/include/c++/4.2.1/bits/ostream.tcc" 3
       
# 45 "/usr/include/c++/4.2.1/bits/ostream.tcc" 3

# 1 "/usr/include/c++/4.2.1/locale" 1 3
# 41 "/usr/include/c++/4.2.1/locale" 3
       
# 42 "/usr/include/c++/4.2.1/locale" 3




# 1 "/usr/include/c++/4.2.1/bits/locale_facets.tcc" 1 3
# 39 "/usr/include/c++/4.2.1/bits/locale_facets.tcc" 3
       
# 40 "/usr/include/c++/4.2.1/bits/locale_facets.tcc" 3


# 1 "/usr/include/c++/4.2.1/typeinfo" 1 3
# 41 "/usr/include/c++/4.2.1/typeinfo" 3
#pragma GCC visibility push(default)

extern "C++" {

namespace __cxxabiv1
{
  class __class_type_info;
}
# 60 "/usr/include/c++/4.2.1/typeinfo" 3
namespace std
{






  class type_info
  {
  public:




    virtual ~type_info();



    const char* name() const
    { return __name; }
# 94 "/usr/include/c++/4.2.1/typeinfo" 3
    bool before(const type_info& __arg) const
    { return __name < __arg.__name; }

    bool operator==(const type_info& __arg) const
    { return __name == __arg.__name; }

    bool operator!=(const type_info& __arg) const
    { return !operator==(__arg); }





    virtual bool __is_pointer_p() const;


    virtual bool __is_function_p() const;







    virtual bool __do_catch(const type_info *__thr_type, void **__thr_obj,
       unsigned __outer) const;


    virtual bool __do_upcast(const __cxxabiv1::__class_type_info *__target,
        void **__obj_ptr) const;



  protected:
    const char *__name;

    explicit type_info(const char *__n): __name(__n) { }

  private:

    type_info& operator=(const type_info&);
    type_info(const type_info&);
  };






  class bad_cast : public exception
  {
  public:
    bad_cast() throw() { }



    virtual ~bad_cast() throw();


    virtual const char* what() const throw();
  };


  class bad_typeid : public exception
  {
  public:
    bad_typeid () throw() { }



    virtual ~bad_typeid() throw();


    virtual const char* what() const throw();
  };
}

#pragma GCC visibility pop

}
# 43 "/usr/include/c++/4.2.1/bits/locale_facets.tcc" 2 3



namespace std {

  template<typename _Facet>
    locale
    locale::combine(const locale& __other) const
    {
      _Impl* __tmp = new _Impl(*_M_impl, 1);
      try
 {
   __tmp->_M_replace_facet(__other._M_impl, &_Facet::id);
 }
      catch(...)
 {
   __tmp->_M_remove_reference();
   throw;
 }
      return locale(__tmp);
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    bool
    locale::operator()(const basic_string<_CharT, _Traits, _Alloc>& __s1,
                       const basic_string<_CharT, _Traits, _Alloc>& __s2) const
    {
      typedef std::collate<_CharT> __collate_type;
      const __collate_type& __collate = use_facet<__collate_type>(*this);
      return (__collate.compare(__s1.data(), __s1.data() + __s1.length(),
    __s2.data(), __s2.data() + __s2.length()) < 0);
    }
# 87 "/usr/include/c++/4.2.1/bits/locale_facets.tcc" 3
  template<typename _Facet>
    inline bool
    has_facet(const locale& __loc) throw()
    {
      const size_t __i = _Facet::id._M_id();
      const locale::facet** __facets = __loc._M_impl->_M_facets;
      return (__i < __loc._M_impl->_M_facets_size && __facets[__i]);
    }
# 109 "/usr/include/c++/4.2.1/bits/locale_facets.tcc" 3
  template<typename _Facet>
    inline const _Facet&
    use_facet(const locale& __loc)
    {
      const size_t __i = _Facet::id._M_id();
      const locale::facet** __facets = __loc._M_impl->_M_facets;
      if (!(__i < __loc._M_impl->_M_facets_size && __facets[__i]))
        __throw_bad_cast();
      return static_cast<const _Facet&>(*__facets[__i]);
    }



  template<typename _Facet>
    struct __use_cache
    {
      const _Facet*
      operator() (const locale& __loc) const;
    };


  template<typename _CharT>
    struct __use_cache<__numpunct_cache<_CharT> >
    {
      const __numpunct_cache<_CharT>*
      operator() (const locale& __loc) const
      {
 const size_t __i = numpunct<_CharT>::id._M_id();
 const locale::facet** __caches = __loc._M_impl->_M_caches;
 if (!__caches[__i])
   {
     __numpunct_cache<_CharT>* __tmp = __null;
     try
       {
  __tmp = new __numpunct_cache<_CharT>;
  __tmp->_M_cache(__loc);
       }
     catch(...)
       {
  delete __tmp;
  throw;
       }
     __loc._M_impl->_M_install_cache(__tmp, __i);
   }
 return static_cast<const __numpunct_cache<_CharT>*>(__caches[__i]);
      }
    };

  template<typename _CharT, bool _Intl>
    struct __use_cache<__moneypunct_cache<_CharT, _Intl> >
    {
      const __moneypunct_cache<_CharT, _Intl>*
      operator() (const locale& __loc) const
      {
 const size_t __i = moneypunct<_CharT, _Intl>::id._M_id();
 const locale::facet** __caches = __loc._M_impl->_M_caches;
 if (!__caches[__i])
   {
     __moneypunct_cache<_CharT, _Intl>* __tmp = __null;
     try
       {
  __tmp = new __moneypunct_cache<_CharT, _Intl>;
  __tmp->_M_cache(__loc);
       }
     catch(...)
       {
  delete __tmp;
  throw;
       }
     __loc._M_impl->_M_install_cache(__tmp, __i);
   }
 return static_cast<
   const __moneypunct_cache<_CharT, _Intl>*>(__caches[__i]);
      }
    };

  template<typename _CharT>
    void
    __numpunct_cache<_CharT>::_M_cache(const locale& __loc)
    {
      _M_allocated = true;

      const numpunct<_CharT>& __np = use_facet<numpunct<_CharT> >(__loc);

      _M_grouping_size = __np.grouping().size();
      char* __grouping = new char[_M_grouping_size];
      __np.grouping().copy(__grouping, _M_grouping_size);
      _M_grouping = __grouping;
      _M_use_grouping = (_M_grouping_size
    && static_cast<signed char>(__np.grouping()[0]) > 0);

      _M_truename_size = __np.truename().size();
      _CharT* __truename = new _CharT[_M_truename_size];
      __np.truename().copy(__truename, _M_truename_size);
      _M_truename = __truename;

      _M_falsename_size = __np.falsename().size();
      _CharT* __falsename = new _CharT[_M_falsename_size];
      __np.falsename().copy(__falsename, _M_falsename_size);
      _M_falsename = __falsename;

      _M_decimal_point = __np.decimal_point();
      _M_thousands_sep = __np.thousands_sep();

      const ctype<_CharT>& __ct = use_facet<ctype<_CharT> >(__loc);
      __ct.widen(__num_base::_S_atoms_out,
   __num_base::_S_atoms_out + __num_base::_S_oend, _M_atoms_out);
      __ct.widen(__num_base::_S_atoms_in,
   __num_base::_S_atoms_in + __num_base::_S_iend, _M_atoms_in);
    }

  template<typename _CharT, bool _Intl>
    void
    __moneypunct_cache<_CharT, _Intl>::_M_cache(const locale& __loc)
    {
      _M_allocated = true;

      const moneypunct<_CharT, _Intl>& __mp =
 use_facet<moneypunct<_CharT, _Intl> >(__loc);

      _M_grouping_size = __mp.grouping().size();
      char* __grouping = new char[_M_grouping_size];
      __mp.grouping().copy(__grouping, _M_grouping_size);
      _M_grouping = __grouping;
      _M_use_grouping = (_M_grouping_size
    && static_cast<signed char>(__mp.grouping()[0]) > 0);

      _M_decimal_point = __mp.decimal_point();
      _M_thousands_sep = __mp.thousands_sep();
      _M_frac_digits = __mp.frac_digits();

      _M_curr_symbol_size = __mp.curr_symbol().size();
      _CharT* __curr_symbol = new _CharT[_M_curr_symbol_size];
      __mp.curr_symbol().copy(__curr_symbol, _M_curr_symbol_size);
      _M_curr_symbol = __curr_symbol;

      _M_positive_sign_size = __mp.positive_sign().size();
      _CharT* __positive_sign = new _CharT[_M_positive_sign_size];
      __mp.positive_sign().copy(__positive_sign, _M_positive_sign_size);
      _M_positive_sign = __positive_sign;

      _M_negative_sign_size = __mp.negative_sign().size();
      _CharT* __negative_sign = new _CharT[_M_negative_sign_size];
      __mp.negative_sign().copy(__negative_sign, _M_negative_sign_size);
      _M_negative_sign = __negative_sign;

      _M_pos_format = __mp.pos_format();
      _M_neg_format = __mp.neg_format();

      const ctype<_CharT>& __ct = use_facet<ctype<_CharT> >(__loc);
      __ct.widen(money_base::_S_atoms,
   money_base::_S_atoms + money_base::_S_end, _M_atoms);
    }
# 272 "/usr/include/c++/4.2.1/bits/locale_facets.tcc" 3
  static bool
  __verify_grouping(const char* __grouping, size_t __grouping_size,
      const string& __grouping_tmp);



  template<typename _CharT, typename _InIter>
    _InIter
    num_get<_CharT, _InIter>::
    _M_extract_float(_InIter __beg, _InIter __end, ios_base& __io,
       ios_base::iostate& __err, string& __xtrc) const
    {
      typedef char_traits<_CharT> __traits_type;
      typedef __numpunct_cache<_CharT> __cache_type;
      __use_cache<__cache_type> __uc;
      const locale& __loc = __io._M_getloc();
      const __cache_type* __lc = __uc(__loc);
      const _CharT* __lit = __lc->_M_atoms_in;
      char_type __c = char_type();


      bool __testeof = __beg == __end;


      if (!__testeof)
 {
   __c = *__beg;
   const bool __plus = __c == __lit[__num_base::_S_iplus];
   if ((__plus || __c == __lit[__num_base::_S_iminus])
       && !(__lc->_M_use_grouping && __c == __lc->_M_thousands_sep)
       && !(__c == __lc->_M_decimal_point))
     {
       __xtrc += __plus ? '+' : '-';
       if (++__beg != __end)
  __c = *__beg;
       else
  __testeof = true;
     }
 }


      bool __found_mantissa = false;
      int __sep_pos = 0;
      while (!__testeof)
 {
   if (__lc->_M_use_grouping && __c == __lc->_M_thousands_sep
       || __c == __lc->_M_decimal_point)
     break;
   else if (__c == __lit[__num_base::_S_izero])
     {
       if (!__found_mantissa)
  {
    __xtrc += '0';
    __found_mantissa = true;
  }
       ++__sep_pos;

       if (++__beg != __end)
  __c = *__beg;
       else
  __testeof = true;
     }
   else
     break;
 }


      bool __found_dec = false;
      bool __found_sci = false;
      string __found_grouping;
      if (__lc->_M_use_grouping)
 __found_grouping.reserve(32);
      const char_type* __lit_zero = __lit + __num_base::_S_izero;

      if (!__lc->_M_allocated)

 while (!__testeof)
   {
     const int __digit = _M_find(__lit_zero, 10, __c);
     if (__digit != -1)
       {
  __xtrc += '0' + __digit;
  __found_mantissa = true;
       }
     else if (__c == __lc->_M_decimal_point
       && !__found_dec && !__found_sci)
       {
  __xtrc += '.';
  __found_dec = true;
       }
     else if ((__c == __lit[__num_base::_S_ie]
        || __c == __lit[__num_base::_S_iE])
       && !__found_sci && __found_mantissa)
       {

  __xtrc += 'e';
  __found_sci = true;


  if (++__beg != __end)
    {
      __c = *__beg;
      const bool __plus = __c == __lit[__num_base::_S_iplus];
      if (__plus || __c == __lit[__num_base::_S_iminus])
        __xtrc += __plus ? '+' : '-';
      else
        continue;
    }
  else
    {
      __testeof = true;
      break;
    }
       }
     else
       break;

     if (++__beg != __end)
       __c = *__beg;
     else
       __testeof = true;
   }
      else
 while (!__testeof)
   {


     if (__lc->_M_use_grouping && __c == __lc->_M_thousands_sep)
       {
  if (!__found_dec && !__found_sci)
    {


      if (__sep_pos)
        {
   __found_grouping += static_cast<char>(__sep_pos);
   __sep_pos = 0;
        }
      else
        {


   __xtrc.clear();
   break;
        }
    }
  else
    break;
       }
     else if (__c == __lc->_M_decimal_point)
       {
  if (!__found_dec && !__found_sci)
    {



      if (__found_grouping.size())
        __found_grouping += static_cast<char>(__sep_pos);
      __xtrc += '.';
      __found_dec = true;
    }
  else
    break;
       }
     else
       {
  const char_type* __q =
    __traits_type::find(__lit_zero, 10, __c);
  if (__q)
    {
      __xtrc += '0' + (__q - __lit_zero);
      __found_mantissa = true;
      ++__sep_pos;
    }
  else if ((__c == __lit[__num_base::_S_ie]
     || __c == __lit[__num_base::_S_iE])
    && !__found_sci && __found_mantissa)
    {

      if (__found_grouping.size() && !__found_dec)
        __found_grouping += static_cast<char>(__sep_pos);
      __xtrc += 'e';
      __found_sci = true;


      if (++__beg != __end)
        {
   __c = *__beg;
   const bool __plus = __c == __lit[__num_base::_S_iplus];
   if ((__plus || __c == __lit[__num_base::_S_iminus])
       && !(__lc->_M_use_grouping
     && __c == __lc->_M_thousands_sep)
       && !(__c == __lc->_M_decimal_point))
        __xtrc += __plus ? '+' : '-';
   else
     continue;
        }
      else
        {
   __testeof = true;
   break;
        }
    }
  else
    break;
       }

     if (++__beg != __end)
       __c = *__beg;
     else
       __testeof = true;
   }



      if (__found_grouping.size())
        {

   if (!__found_dec && !__found_sci)
     __found_grouping += static_cast<char>(__sep_pos);

          if (!std::__verify_grouping(__lc->_M_grouping,
          __lc->_M_grouping_size,
          __found_grouping))
     __err |= ios_base::failbit;
        }


      if (__testeof)
        __err |= ios_base::eofbit;
      return __beg;
    }





  template<typename _CharT, typename _InIter>
    template<typename _ValueT>
      _InIter
      num_get<_CharT, _InIter>::
      _M_extract_int(_InIter __beg, _InIter __end, ios_base& __io,
       ios_base::iostate& __err, _ValueT& __v) const
      {
        typedef char_traits<_CharT> __traits_type;
 using __gnu_cxx::__add_unsigned;
 typedef typename __add_unsigned<_ValueT>::__type __unsigned_type;
 typedef __numpunct_cache<_CharT> __cache_type;
 __use_cache<__cache_type> __uc;
 const locale& __loc = __io._M_getloc();
 const __cache_type* __lc = __uc(__loc);
 const _CharT* __lit = __lc->_M_atoms_in;
 char_type __c = char_type();


 const ios_base::fmtflags __basefield = __io.flags()
                                        & ios_base::basefield;
 const bool __oct = __basefield == ios_base::oct;
 int __base = __oct ? 8 : (__basefield == ios_base::hex ? 16 : 10);


 bool __testeof = __beg == __end;


 bool __negative = false;
 if (!__testeof)
   {
     __c = *__beg;
     if (numeric_limits<_ValueT>::is_signed)
       __negative = __c == __lit[__num_base::_S_iminus];
     if ((__negative || __c == __lit[__num_base::_S_iplus])
  && !(__lc->_M_use_grouping && __c == __lc->_M_thousands_sep)
  && !(__c == __lc->_M_decimal_point))
       {
  if (++__beg != __end)
    __c = *__beg;
  else
    __testeof = true;
       }
   }



 bool __found_zero = false;
 int __sep_pos = 0;
 while (!__testeof)
   {
     if (__lc->_M_use_grouping && __c == __lc->_M_thousands_sep
  || __c == __lc->_M_decimal_point)
       break;
     else if (__c == __lit[__num_base::_S_izero]
       && (!__found_zero || __base == 10))
       {
  __found_zero = true;
  ++__sep_pos;
  if (__basefield == 0)
    __base = 8;
  if (__base == 8)
    __sep_pos = 0;
       }
     else if (__found_zero
       && (__c == __lit[__num_base::_S_ix]
    || __c == __lit[__num_base::_S_iX]))
       {
  if (__basefield == 0)
    __base = 16;
  if (__base == 16)
    {
      __found_zero = false;
      __sep_pos = 0;
    }
  else
    break;
       }
     else
       break;

     if (++__beg != __end)
       {
  __c = *__beg;
  if (!__found_zero)
    break;
       }
     else
       __testeof = true;
   }



 const size_t __len = (__base == 16 ? __num_base::_S_iend
         - __num_base::_S_izero : __base);


 string __found_grouping;
 if (__lc->_M_use_grouping)
   __found_grouping.reserve(32);
 bool __testfail = false;
 const __unsigned_type __max = __negative ?
   -numeric_limits<_ValueT>::min() : numeric_limits<_ValueT>::max();
 const __unsigned_type __smax = __max / __base;
 __unsigned_type __result = 0;
 int __digit = 0;
 const char_type* __lit_zero = __lit + __num_base::_S_izero;

 if (!__lc->_M_allocated)

   while (!__testeof)
     {
       __digit = _M_find(__lit_zero, __len, __c);
       if (__digit == -1)
  break;

       if (__result > __smax)
  __testfail = true;
       else
  {
    __result *= __base;
    __testfail |= __result > __max - __digit;
    __result += __digit;
    ++__sep_pos;
  }

       if (++__beg != __end)
  __c = *__beg;
       else
  __testeof = true;
     }
 else
   while (!__testeof)
     {


       if (__lc->_M_use_grouping && __c == __lc->_M_thousands_sep)
  {


    if (__sep_pos)
      {
        __found_grouping += static_cast<char>(__sep_pos);
        __sep_pos = 0;
      }
    else
      {
        __testfail = true;
        break;
      }
  }
       else if (__c == __lc->_M_decimal_point)
  break;
       else
  {
    const char_type* __q =
      __traits_type::find(__lit_zero, __len, __c);
    if (!__q)
      break;

    __digit = __q - __lit_zero;
    if (__digit > 15)
      __digit -= 6;
    if (__result > __smax)
      __testfail = true;
    else
      {
        __result *= __base;
        __testfail |= __result > __max - __digit;
        __result += __digit;
        ++__sep_pos;
      }
  }

       if (++__beg != __end)
  __c = *__beg;
       else
  __testeof = true;
     }



 if (__found_grouping.size())
   {

     __found_grouping += static_cast<char>(__sep_pos);

     if (!std::__verify_grouping(__lc->_M_grouping,
     __lc->_M_grouping_size,
     __found_grouping))
       __err |= ios_base::failbit;
   }

 if (!__testfail && (__sep_pos || __found_zero
       || __found_grouping.size()))
   __v = __negative ? -__result : __result;
 else
   __err |= ios_base::failbit;

 if (__testeof)
   __err |= ios_base::eofbit;
 return __beg;
      }



  template<typename _CharT, typename _InIter>
    _InIter
    num_get<_CharT, _InIter>::
    do_get(iter_type __beg, iter_type __end, ios_base& __io,
           ios_base::iostate& __err, bool& __v) const
    {
      if (!(__io.flags() & ios_base::boolalpha))
        {



   long __l = -1;
          __beg = _M_extract_int(__beg, __end, __io, __err, __l);
   if (__l == 0 || __l == 1)
     __v = __l;
   else
            __err |= ios_base::failbit;
        }
      else
        {

   typedef __numpunct_cache<_CharT> __cache_type;
   __use_cache<__cache_type> __uc;
   const locale& __loc = __io._M_getloc();
   const __cache_type* __lc = __uc(__loc);

   bool __testf = true;
   bool __testt = true;
   size_t __n;
   bool __testeof = __beg == __end;
          for (__n = 0; !__testeof; ++__n)
            {
       const char_type __c = *__beg;

       if (__testf)
  if (__n < __lc->_M_falsename_size)
    __testf = __c == __lc->_M_falsename[__n];
  else
    break;

       if (__testt)
  if (__n < __lc->_M_truename_size)
    __testt = __c == __lc->_M_truename[__n];
  else
    break;

       if (!__testf && !__testt)
  break;

       if (++__beg == __end)
  __testeof = true;
            }
   if (__testf && __n == __lc->_M_falsename_size)
     __v = 0;
   else if (__testt && __n == __lc->_M_truename_size)
     __v = 1;
   else
     __err |= ios_base::failbit;

          if (__testeof)
            __err |= ios_base::eofbit;
        }
      return __beg;
    }

  template<typename _CharT, typename _InIter>
    _InIter
    num_get<_CharT, _InIter>::
    do_get(iter_type __beg, iter_type __end, ios_base& __io,
           ios_base::iostate& __err, long& __v) const
    { return _M_extract_int(__beg, __end, __io, __err, __v); }

  template<typename _CharT, typename _InIter>
    _InIter
    num_get<_CharT, _InIter>::
    do_get(iter_type __beg, iter_type __end, ios_base& __io,
           ios_base::iostate& __err, unsigned short& __v) const
    { return _M_extract_int(__beg, __end, __io, __err, __v); }

  template<typename _CharT, typename _InIter>
    _InIter
    num_get<_CharT, _InIter>::
    do_get(iter_type __beg, iter_type __end, ios_base& __io,
           ios_base::iostate& __err, unsigned int& __v) const
    { return _M_extract_int(__beg, __end, __io, __err, __v); }

  template<typename _CharT, typename _InIter>
    _InIter
    num_get<_CharT, _InIter>::
    do_get(iter_type __beg, iter_type __end, ios_base& __io,
           ios_base::iostate& __err, unsigned long& __v) const
    { return _M_extract_int(__beg, __end, __io, __err, __v); }


  template<typename _CharT, typename _InIter>
    _InIter
    num_get<_CharT, _InIter>::
    do_get(iter_type __beg, iter_type __end, ios_base& __io,
           ios_base::iostate& __err, long long& __v) const
    { return _M_extract_int(__beg, __end, __io, __err, __v); }

  template<typename _CharT, typename _InIter>
    _InIter
    num_get<_CharT, _InIter>::
    do_get(iter_type __beg, iter_type __end, ios_base& __io,
           ios_base::iostate& __err, unsigned long long& __v) const
    { return _M_extract_int(__beg, __end, __io, __err, __v); }


  template<typename _CharT, typename _InIter>
    _InIter
    num_get<_CharT, _InIter>::
    do_get(iter_type __beg, iter_type __end, ios_base& __io,
    ios_base::iostate& __err, float& __v) const
    {
      string __xtrc;
      __xtrc.reserve(32);
      __beg = _M_extract_float(__beg, __end, __io, __err, __xtrc);
      std::__convert_to_v(__xtrc.c_str(), __v, __err, _S_get_c_locale());
      return __beg;
    }

  template<typename _CharT, typename _InIter>
    _InIter
    num_get<_CharT, _InIter>::
    do_get(iter_type __beg, iter_type __end, ios_base& __io,
           ios_base::iostate& __err, double& __v) const
    {
      string __xtrc;
      __xtrc.reserve(32);
      __beg = _M_extract_float(__beg, __end, __io, __err, __xtrc);
      std::__convert_to_v(__xtrc.c_str(), __v, __err, _S_get_c_locale());
      return __beg;
    }
# 864 "/usr/include/c++/4.2.1/bits/locale_facets.tcc" 3
  template<typename _CharT, typename _InIter>
    _InIter
    num_get<_CharT, _InIter>::
    do_get(iter_type __beg, iter_type __end, ios_base& __io,
           ios_base::iostate& __err, long double& __v) const
    {
      string __xtrc;
      __xtrc.reserve(32);
      __beg = _M_extract_float(__beg, __end, __io, __err, __xtrc);
      std::__convert_to_v(__xtrc.c_str(), __v, __err, _S_get_c_locale());
      return __beg;
    }

  template<typename _CharT, typename _InIter>
    _InIter
    num_get<_CharT, _InIter>::
    do_get(iter_type __beg, iter_type __end, ios_base& __io,
           ios_base::iostate& __err, void*& __v) const
    {

      typedef ios_base::fmtflags fmtflags;
      const fmtflags __fmt = __io.flags();
      __io.flags(__fmt & ~ios_base::basefield | ios_base::hex);

      unsigned long __ul;
      __beg = _M_extract_int(__beg, __end, __io, __err, __ul);


      __io.flags(__fmt);

      if (!(__err & ios_base::failbit))
 __v = reinterpret_cast<void*>(__ul);
      return __beg;
    }



  template<typename _CharT, typename _OutIter>
    void
    num_put<_CharT, _OutIter>::
    _M_pad(_CharT __fill, streamsize __w, ios_base& __io,
    _CharT* __new, const _CharT* __cs, int& __len) const
    {


      __pad<_CharT, char_traits<_CharT> >::_S_pad(__io, __fill, __new, __cs,
        __w, __len, true);
      __len = static_cast<int>(__w);
    }



  template<typename _CharT, typename _ValueT>
    int
    __int_to_char(_CharT* __bufend, _ValueT __v, const _CharT* __lit,
    ios_base::fmtflags __flags, bool __dec)
    {
      _CharT* __buf = __bufend;
      if (__builtin_expect(__dec, true))
 {

   do
     {
       *--__buf = __lit[(__v % 10) + __num_base::_S_odigits];
       __v /= 10;
     }
   while (__v != 0);
 }
      else if ((__flags & ios_base::basefield) == ios_base::oct)
 {

   do
     {
       *--__buf = __lit[(__v & 0x7) + __num_base::_S_odigits];
       __v >>= 3;
     }
   while (__v != 0);
 }
      else
 {

   const bool __uppercase = __flags & ios_base::uppercase;
   const int __case_offset = __uppercase ? __num_base::_S_oudigits
                                         : __num_base::_S_odigits;
   do
     {
       *--__buf = __lit[(__v & 0xf) + __case_offset];
       __v >>= 4;
     }
   while (__v != 0);
 }
      return __bufend - __buf;
    }



  template<typename _CharT, typename _OutIter>
    void
    num_put<_CharT, _OutIter>::
    _M_group_int(const char* __grouping, size_t __grouping_size, _CharT __sep,
   ios_base&, _CharT* __new, _CharT* __cs, int& __len) const
    {
      _CharT* __p = std::__add_grouping(__new, __sep, __grouping,
     __grouping_size, __cs, __cs + __len);
      __len = __p - __new;
    }

  template<typename _CharT, typename _OutIter>
    template<typename _ValueT>
      _OutIter
      num_put<_CharT, _OutIter>::
      _M_insert_int(_OutIter __s, ios_base& __io, _CharT __fill,
      _ValueT __v) const
      {
 using __gnu_cxx::__add_unsigned;
 typedef typename __add_unsigned<_ValueT>::__type __unsigned_type;
 typedef __numpunct_cache<_CharT> __cache_type;
 __use_cache<__cache_type> __uc;
 const locale& __loc = __io._M_getloc();
 const __cache_type* __lc = __uc(__loc);
 const _CharT* __lit = __lc->_M_atoms_out;
 const ios_base::fmtflags __flags = __io.flags();


 const int __ilen = 5 * sizeof(_ValueT);
 _CharT* __cs = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT)
            * __ilen));



 const ios_base::fmtflags __basefield = __flags & ios_base::basefield;
 const bool __dec = (__basefield != ios_base::oct
       && __basefield != ios_base::hex);
 const __unsigned_type __u = (__v > 0 || !__dec) ? __v : -__v;
  int __len = __int_to_char(__cs + __ilen, __u, __lit, __flags, __dec);
 __cs += __ilen - __len;


 if (__lc->_M_use_grouping)
   {


     _CharT* __cs2 = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT)
          * (__len + 1)
          * 2));
     _M_group_int(__lc->_M_grouping, __lc->_M_grouping_size,
    __lc->_M_thousands_sep, __io, __cs2 + 2, __cs, __len);
     __cs = __cs2 + 2;
   }


 if (__builtin_expect(__dec, true))
   {

     if (__v > 0)
       {
  if (__flags & ios_base::showpos
      && numeric_limits<_ValueT>::is_signed)
    *--__cs = __lit[__num_base::_S_oplus], ++__len;
       }
     else if (__v)
       *--__cs = __lit[__num_base::_S_ominus], ++__len;
   }
 else if (__flags & ios_base::showbase && __v)
   {
     if (__basefield == ios_base::oct)
       *--__cs = __lit[__num_base::_S_odigits], ++__len;
     else
       {

  const bool __uppercase = __flags & ios_base::uppercase;
  *--__cs = __lit[__num_base::_S_ox + __uppercase];

  *--__cs = __lit[__num_base::_S_odigits];
  __len += 2;
       }
   }


 const streamsize __w = __io.width();
 if (__w > static_cast<streamsize>(__len))
   {
     _CharT* __cs3 = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT)
          * __w));
     _M_pad(__fill, __w, __io, __cs3, __cs, __len);
     __cs = __cs3;
   }
 __io.width(0);



 return std::__write(__s, __cs, __len);
      }

  template<typename _CharT, typename _OutIter>
    void
    num_put<_CharT, _OutIter>::
    _M_group_float(const char* __grouping, size_t __grouping_size,
     _CharT __sep, const _CharT* __p, _CharT* __new,
     _CharT* __cs, int& __len) const
    {



      const int __declen = __p ? __p - __cs : __len;
      _CharT* __p2 = std::__add_grouping(__new, __sep, __grouping,
      __grouping_size,
      __cs, __cs + __declen);


      int __newlen = __p2 - __new;
      if (__p)
 {
   char_traits<_CharT>::copy(__p2, __p, __len - __declen);
   __newlen += __len - __declen;
 }
      __len = __newlen;
    }
# 1093 "/usr/include/c++/4.2.1/bits/locale_facets.tcc" 3
  template<typename _CharT, typename _OutIter>
    template<typename _ValueT>
      _OutIter
      num_put<_CharT, _OutIter>::
      _M_insert_float(_OutIter __s, ios_base& __io, _CharT __fill, char __mod,
         _ValueT __v) const
      {
 typedef __numpunct_cache<_CharT> __cache_type;
 __use_cache<__cache_type> __uc;
 const locale& __loc = __io._M_getloc();
 const __cache_type* __lc = __uc(__loc);


 const streamsize __prec = __io.precision() < 0 ? 6 : __io.precision();

 const int __max_digits = numeric_limits<_ValueT>::digits10;


 int __len;

 char __fbuf[16];
 __num_base::_S_format_float(__io, __fbuf, __mod);




 int __cs_size = __max_digits * 3;
 char* __cs = static_cast<char*>(__builtin_alloca(__cs_size));
 __len = std::__convert_from_v(_S_get_c_locale(), __cs, __cs_size,
          __fbuf, __prec, __v);


 if (__len >= __cs_size)
   {
     __cs_size = __len + 1;
     __cs = static_cast<char*>(__builtin_alloca(__cs_size));
     __len = std::__convert_from_v(_S_get_c_locale(), __cs, __cs_size,
       __fbuf, __prec, __v);
   }
# 1152 "/usr/include/c++/4.2.1/bits/locale_facets.tcc" 3
 const ctype<_CharT>& __ctype = use_facet<ctype<_CharT> >(__loc);

 _CharT* __ws = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT)
            * __len));
 __ctype.widen(__cs, __cs + __len, __ws);


 _CharT* __wp = 0;
 const char* __p = char_traits<char>::find(__cs, __len, '.');
 if (__p)
   {
     __wp = __ws + (__p - __cs);
     *__wp = __lc->_M_decimal_point;
   }




 if (__lc->_M_use_grouping
     && (__wp || __len < 3 || (__cs[1] <= '9' && __cs[2] <= '9'
          && __cs[1] >= '0' && __cs[2] >= '0')))
   {


     _CharT* __ws2 = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT)
          * __len * 2));

     streamsize __off = 0;
     if (__cs[0] == '-' || __cs[0] == '+')
       {
  __off = 1;
  __ws2[0] = __ws[0];
  __len -= 1;
       }

     _M_group_float(__lc->_M_grouping, __lc->_M_grouping_size,
      __lc->_M_thousands_sep, __wp, __ws2 + __off,
      __ws + __off, __len);
     __len += __off;

     __ws = __ws2;
   }


 const streamsize __w = __io.width();
 if (__w > static_cast<streamsize>(__len))
   {
     _CharT* __ws3 = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT)
          * __w));
     _M_pad(__fill, __w, __io, __ws3, __ws, __len);
     __ws = __ws3;
   }
 __io.width(0);



 return std::__write(__s, __ws, __len);
      }

  template<typename _CharT, typename _OutIter>
    _OutIter
    num_put<_CharT, _OutIter>::
    do_put(iter_type __s, ios_base& __io, char_type __fill, bool __v) const
    {
      const ios_base::fmtflags __flags = __io.flags();
      if ((__flags & ios_base::boolalpha) == 0)
        {
          const long __l = __v;
          __s = _M_insert_int(__s, __io, __fill, __l);
        }
      else
        {
   typedef __numpunct_cache<_CharT> __cache_type;
   __use_cache<__cache_type> __uc;
   const locale& __loc = __io._M_getloc();
   const __cache_type* __lc = __uc(__loc);

   const _CharT* __name = __v ? __lc->_M_truename
                              : __lc->_M_falsename;
   int __len = __v ? __lc->_M_truename_size
                   : __lc->_M_falsename_size;

   const streamsize __w = __io.width();
   if (__w > static_cast<streamsize>(__len))
     {
       _CharT* __cs
  = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT)
       * __w));
       _M_pad(__fill, __w, __io, __cs, __name, __len);
       __name = __cs;
     }
   __io.width(0);
   __s = std::__write(__s, __name, __len);
 }
      return __s;
    }

  template<typename _CharT, typename _OutIter>
    _OutIter
    num_put<_CharT, _OutIter>::
    do_put(iter_type __s, ios_base& __io, char_type __fill, long __v) const
    { return _M_insert_int(__s, __io, __fill, __v); }

  template<typename _CharT, typename _OutIter>
    _OutIter
    num_put<_CharT, _OutIter>::
    do_put(iter_type __s, ios_base& __io, char_type __fill,
           unsigned long __v) const
    { return _M_insert_int(__s, __io, __fill, __v); }


  template<typename _CharT, typename _OutIter>
    _OutIter
    num_put<_CharT, _OutIter>::
    do_put(iter_type __s, ios_base& __io, char_type __fill, long long __v) const
    { return _M_insert_int(__s, __io, __fill, __v); }

  template<typename _CharT, typename _OutIter>
    _OutIter
    num_put<_CharT, _OutIter>::
    do_put(iter_type __s, ios_base& __io, char_type __fill,
           unsigned long long __v) const
    { return _M_insert_int(__s, __io, __fill, __v); }


  template<typename _CharT, typename _OutIter>
    _OutIter
    num_put<_CharT, _OutIter>::
    do_put(iter_type __s, ios_base& __io, char_type __fill, double __v) const
    { return _M_insert_float(__s, __io, __fill, char(), __v); }
# 1291 "/usr/include/c++/4.2.1/bits/locale_facets.tcc" 3
  template<typename _CharT, typename _OutIter>
    _OutIter
    num_put<_CharT, _OutIter>::
    do_put(iter_type __s, ios_base& __io, char_type __fill,
    long double __v) const
    { return _M_insert_float(__s, __io, __fill, 'L', __v); }

  template<typename _CharT, typename _OutIter>
    _OutIter
    num_put<_CharT, _OutIter>::
    do_put(iter_type __s, ios_base& __io, char_type __fill,
           const void* __v) const
    {
      const ios_base::fmtflags __flags = __io.flags();
      const ios_base::fmtflags __fmt = ~(ios_base::basefield
      | ios_base::uppercase
      | ios_base::internal);
      __io.flags(__flags & __fmt | (ios_base::hex | ios_base::showbase));

      __s = _M_insert_int(__s, __io, __fill,
     reinterpret_cast<unsigned long>(__v));
      __io.flags(__flags);
      return __s;
    }

  template<typename _CharT, typename _InIter>
    template<bool _Intl>
      _InIter
      money_get<_CharT, _InIter>::
      _M_extract(iter_type __beg, iter_type __end, ios_base& __io,
   ios_base::iostate& __err, string& __units) const
      {
 typedef char_traits<_CharT> __traits_type;
 typedef typename string_type::size_type size_type;
 typedef money_base::part part;
 typedef __moneypunct_cache<_CharT, _Intl> __cache_type;

 const locale& __loc = __io._M_getloc();
 const ctype<_CharT>& __ctype = use_facet<ctype<_CharT> >(__loc);

 __use_cache<__cache_type> __uc;
 const __cache_type* __lc = __uc(__loc);
 const char_type* __lit = __lc->_M_atoms;


 bool __negative = false;

 size_type __sign_size = 0;

 const bool __mandatory_sign = (__lc->_M_positive_sign_size
           && __lc->_M_negative_sign_size);

 string __grouping_tmp;
 if (__lc->_M_use_grouping)
   __grouping_tmp.reserve(32);

 int __last_pos = 0;

 int __n = 0;

 bool __testvalid = true;

 bool __testdecfound = false;


 string __res;
 __res.reserve(32);

 const char_type* __lit_zero = __lit + money_base::_S_zero;
 const money_base::pattern __p = __lc->_M_neg_format;
 for (int __i = 0; __i < 4 && __testvalid; ++__i)
   {
     const part __which = static_cast<part>(__p.field[__i]);
     switch (__which)
       {
       case money_base::symbol:




  if (__io.flags() & ios_base::showbase || __sign_size > 1
      || __i == 0
      || (__i == 1 && (__mandatory_sign
         || (static_cast<part>(__p.field[0])
      == money_base::sign)
         || (static_cast<part>(__p.field[2])
      == money_base::space)))
      || (__i == 2 && ((static_cast<part>(__p.field[3])
          == money_base::value)
         || __mandatory_sign
         && (static_cast<part>(__p.field[3])
      == money_base::sign))))
    {
      const size_type __len = __lc->_M_curr_symbol_size;
      size_type __j = 0;
      for (; __beg != __end && __j < __len
      && *__beg == __lc->_M_curr_symbol[__j];
    ++__beg, ++__j);
      if (__j != __len
   && (__j || __io.flags() & ios_base::showbase))
        __testvalid = false;
    }
  break;
       case money_base::sign:

  if (__lc->_M_positive_sign_size && __beg != __end
      && *__beg == __lc->_M_positive_sign[0])
    {
      __sign_size = __lc->_M_positive_sign_size;
      ++__beg;
    }
  else if (__lc->_M_negative_sign_size && __beg != __end
    && *__beg == __lc->_M_negative_sign[0])
    {
      __negative = true;
      __sign_size = __lc->_M_negative_sign_size;
      ++__beg;
    }
  else if (__lc->_M_positive_sign_size
    && !__lc->_M_negative_sign_size)


    __negative = true;
  else if (__mandatory_sign)
    __testvalid = false;
  break;
       case money_base::value:


  for (; __beg != __end; ++__beg)
    {
      const char_type __c = *__beg;
      const char_type* __q = __traits_type::find(__lit_zero,
              10, __c);
      if (__q != 0)
        {
   __res += money_base::_S_atoms[__q - __lit];
   ++__n;
        }
      else if (__c == __lc->_M_decimal_point
        && !__testdecfound)
        {
   __last_pos = __n;
   __n = 0;
   __testdecfound = true;
        }
      else if (__lc->_M_use_grouping
        && __c == __lc->_M_thousands_sep
        && !__testdecfound)
        {
   if (__n)
     {

       __grouping_tmp += static_cast<char>(__n);
       __n = 0;
     }
   else
     {
       __testvalid = false;
       break;
     }
        }
      else
        break;
    }
  if (__res.empty())
    __testvalid = false;
  break;
       case money_base::space:

  if (__beg != __end && __ctype.is(ctype_base::space, *__beg))
    ++__beg;
  else
    __testvalid = false;
       case money_base::none:

  if (__i != 3)
    for (; __beg != __end
    && __ctype.is(ctype_base::space, *__beg); ++__beg);
  break;
       }
   }


 if (__sign_size > 1 && __testvalid)
   {
     const char_type* __sign = __negative ? __lc->_M_negative_sign
                                          : __lc->_M_positive_sign;
     size_type __i = 1;
     for (; __beg != __end && __i < __sign_size
     && *__beg == __sign[__i]; ++__beg, ++__i);

     if (__i != __sign_size)
       __testvalid = false;
   }

 if (__testvalid)
   {

     if (__res.size() > 1)
       {
  const size_type __first = __res.find_first_not_of('0');
  const bool __only_zeros = __first == string::npos;
  if (__first)
    __res.erase(0, __only_zeros ? __res.size() - 1 : __first);
       }


     if (__negative && __res[0] != '0')
       __res.insert(__res.begin(), '-');


     if (__grouping_tmp.size())
       {

  __grouping_tmp += static_cast<char>(__testdecfound ? __last_pos
                         : __n);
  if (!std::__verify_grouping(__lc->_M_grouping,
         __lc->_M_grouping_size,
         __grouping_tmp))
    __err |= ios_base::failbit;
       }


     if (__testdecfound && __lc->_M_frac_digits > 0
  && __n != __lc->_M_frac_digits)
       __testvalid = false;
   }


 if (!__testvalid)
   __err |= ios_base::failbit;
 else
   __units.swap(__res);


 if (__beg == __end)
   __err |= ios_base::eofbit;
 return __beg;
      }
# 1547 "/usr/include/c++/4.2.1/bits/locale_facets.tcc" 3
  template<typename _CharT, typename _InIter>
    _InIter
    money_get<_CharT, _InIter>::
    do_get(iter_type __beg, iter_type __end, bool __intl, ios_base& __io,
    ios_base::iostate& __err, long double& __units) const
    {
      string __str;
      __beg = __intl ? _M_extract<true>(__beg, __end, __io, __err, __str)
              : _M_extract<false>(__beg, __end, __io, __err, __str);
      std::__convert_to_v(__str.c_str(), __units, __err, _S_get_c_locale());
      return __beg;
    }

  template<typename _CharT, typename _InIter>
    _InIter
    money_get<_CharT, _InIter>::
    do_get(iter_type __beg, iter_type __end, bool __intl, ios_base& __io,
    ios_base::iostate& __err, string_type& __digits) const
    {
      typedef typename string::size_type size_type;

      const locale& __loc = __io._M_getloc();
      const ctype<_CharT>& __ctype = use_facet<ctype<_CharT> >(__loc);

      string __str;
      __beg = __intl ? _M_extract<true>(__beg, __end, __io, __err, __str)
              : _M_extract<false>(__beg, __end, __io, __err, __str);
      const size_type __len = __str.size();
      if (__len)
 {
   __digits.resize(__len);
   __ctype.widen(__str.data(), __str.data() + __len, &__digits[0]);
 }
      return __beg;
    }

  template<typename _CharT, typename _OutIter>
    template<bool _Intl>
      _OutIter
      money_put<_CharT, _OutIter>::
      _M_insert(iter_type __s, ios_base& __io, char_type __fill,
  const string_type& __digits) const
      {
 typedef typename string_type::size_type size_type;
 typedef money_base::part part;
 typedef __moneypunct_cache<_CharT, _Intl> __cache_type;

 const locale& __loc = __io._M_getloc();
 const ctype<_CharT>& __ctype = use_facet<ctype<_CharT> >(__loc);

 __use_cache<__cache_type> __uc;
 const __cache_type* __lc = __uc(__loc);
 const char_type* __lit = __lc->_M_atoms;



 const char_type* __beg = __digits.data();

 money_base::pattern __p;
 const char_type* __sign;
 size_type __sign_size;
 if (!(*__beg == __lit[money_base::_S_minus]))
   {
     __p = __lc->_M_pos_format;
     __sign = __lc->_M_positive_sign;
     __sign_size = __lc->_M_positive_sign_size;
   }
 else
   {
     __p = __lc->_M_neg_format;
     __sign = __lc->_M_negative_sign;
     __sign_size = __lc->_M_negative_sign_size;
     if (__digits.size())
       ++__beg;
   }


 size_type __len = __ctype.scan_not(ctype_base::digit, __beg,
        __beg + __digits.size()) - __beg;
 if (__len)
   {



     string_type __value;
     __value.reserve(2 * __len);



     long __paddec = __len - __lc->_M_frac_digits;
     if (__paddec > 0)
         {
  if (__lc->_M_frac_digits < 0)
    __paddec = __len;
    if (__lc->_M_grouping_size)
      {
      __value.assign(2 * __paddec, char_type());
       _CharT* __vend =
        std::__add_grouping(&__value[0], __lc->_M_thousands_sep,
       __lc->_M_grouping,
       __lc->_M_grouping_size,
       __beg, __beg + __paddec);
      __value.erase(__vend - &__value[0]);
      }
    else
    __value.assign(__beg, __paddec);
       }


     if (__lc->_M_frac_digits > 0)
       {
  __value += __lc->_M_decimal_point;
  if (__paddec >= 0)
    __value.append(__beg + __paddec, __lc->_M_frac_digits);
  else
    {

      __value.append(-__paddec, __lit[money_base::_S_zero]);
      __value.append(__beg, __len);
    }
         }


     const ios_base::fmtflags __f = __io.flags()
                                    & ios_base::adjustfield;
     __len = __value.size() + __sign_size;
     __len += ((__io.flags() & ios_base::showbase)
        ? __lc->_M_curr_symbol_size : 0);

     string_type __res;
     __res.reserve(2 * __len);

     const size_type __width = static_cast<size_type>(__io.width());
     const bool __testipad = (__f == ios_base::internal
         && __len < __width);

     for (int __i = 0; __i < 4; ++__i)
       {
  const part __which = static_cast<part>(__p.field[__i]);
  switch (__which)
    {
    case money_base::symbol:
      if (__io.flags() & ios_base::showbase)
        __res.append(__lc->_M_curr_symbol,
       __lc->_M_curr_symbol_size);
      break;
    case money_base::sign:



      if (__sign_size)
        __res += __sign[0];
      break;
    case money_base::value:
      __res += __value;
      break;
    case money_base::space:



      if (__testipad)
        __res.append(__width - __len, __fill);
      else
        __res += __fill;
      break;
    case money_base::none:
      if (__testipad)
        __res.append(__width - __len, __fill);
      break;
    }
       }


     if (__sign_size > 1)
       __res.append(__sign + 1, __sign_size - 1);


     __len = __res.size();
     if (__width > __len)
       {
  if (__f == ios_base::left)

    __res.append(__width - __len, __fill);
  else

    __res.insert(0, __width - __len, __fill);
  __len = __width;
       }


     __s = std::__write(__s, __res.data(), __len);
   }
 __io.width(0);
 return __s;
      }
# 1752 "/usr/include/c++/4.2.1/bits/locale_facets.tcc" 3
  template<typename _CharT, typename _OutIter>
    _OutIter
    money_put<_CharT, _OutIter>::
    do_put(iter_type __s, bool __intl, ios_base& __io, char_type __fill,
    long double __units) const
    {
      const locale __loc = __io.getloc();
      const ctype<_CharT>& __ctype = use_facet<ctype<_CharT> >(__loc);


      int __cs_size = 64;
      char* __cs = static_cast<char*>(__builtin_alloca(__cs_size));


      int __len = std::__convert_from_v(_S_get_c_locale(), __cs, __cs_size,
     "%.*Lf", 0, __units);

      if (__len >= __cs_size)
 {
   __cs_size = __len + 1;
   __cs = static_cast<char*>(__builtin_alloca(__cs_size));
   __len = std::__convert_from_v(_S_get_c_locale(), __cs, __cs_size,
     "%.*Lf", 0, __units);
 }







      string_type __digits(__len, char_type());
      __ctype.widen(__cs, __cs + __len, &__digits[0]);
      return __intl ? _M_insert<true>(__s, __io, __fill, __digits)
             : _M_insert<false>(__s, __io, __fill, __digits);
    }

  template<typename _CharT, typename _OutIter>
    _OutIter
    money_put<_CharT, _OutIter>::
    do_put(iter_type __s, bool __intl, ios_base& __io, char_type __fill,
    const string_type& __digits) const
    { return __intl ? _M_insert<true>(__s, __io, __fill, __digits)
             : _M_insert<false>(__s, __io, __fill, __digits); }






  template<typename _CharT, typename _InIter>
    time_base::dateorder
    time_get<_CharT, _InIter>::do_date_order() const
    { return time_base::no_order; }



  template<typename _CharT, typename _InIter>
    _InIter
    time_get<_CharT, _InIter>::
    _M_extract_via_format(iter_type __beg, iter_type __end, ios_base& __io,
     ios_base::iostate& __err, tm* __tm,
     const _CharT* __format) const
    {
      const locale& __loc = __io._M_getloc();
      const __timepunct<_CharT>& __tp = use_facet<__timepunct<_CharT> >(__loc);
      const ctype<_CharT>& __ctype = use_facet<ctype<_CharT> >(__loc);
      const size_t __len = char_traits<_CharT>::length(__format);

      ios_base::iostate __tmperr = ios_base::goodbit;
      for (size_t __i = 0; __beg != __end && __i < __len && !__tmperr; ++__i)
 {
   if (__ctype.narrow(__format[__i], 0) == '%')
     {

       char __c = __ctype.narrow(__format[++__i], 0);
       int __mem = 0;
       if (__c == 'E' || __c == 'O')
  __c = __ctype.narrow(__format[++__i], 0);
       switch (__c)
  {
    const char* __cs;
    _CharT __wcs[10];
  case 'a':

    const char_type* __days1[7];
    __tp._M_days_abbreviated(__days1);
    __beg = _M_extract_name(__beg, __end, __tm->tm_wday, __days1,
       7, __io, __tmperr);
    break;
  case 'A':

    const char_type* __days2[7];
    __tp._M_days(__days2);
    __beg = _M_extract_name(__beg, __end, __tm->tm_wday, __days2,
       7, __io, __tmperr);
    break;
  case 'h':
  case 'b':

    const char_type* __months1[12];
    __tp._M_months_abbreviated(__months1);
    __beg = _M_extract_name(__beg, __end, __tm->tm_mon,
       __months1, 12, __io, __tmperr);
    break;
  case 'B':

    const char_type* __months2[12];
    __tp._M_months(__months2);
    __beg = _M_extract_name(__beg, __end, __tm->tm_mon,
       __months2, 12, __io, __tmperr);
    break;
  case 'c':

    const char_type* __dt[2];
    __tp._M_date_time_formats(__dt);
    __beg = _M_extract_via_format(__beg, __end, __io, __tmperr,
      __tm, __dt[0]);
    break;
  case 'd':

    __beg = _M_extract_num(__beg, __end, __tm->tm_mday, 1, 31, 2,
      __io, __tmperr);
    break;
  case 'e':


    if (__ctype.is(ctype_base::space, *__beg))
      __beg = _M_extract_num(++__beg, __end, __tm->tm_mday, 1, 9,
        1, __io, __tmperr);
    else
      __beg = _M_extract_num(__beg, __end, __tm->tm_mday, 10, 31,
        2, __io, __tmperr);
    break;
  case 'D':

    __cs = "%m/%d/%y";
    __ctype.widen(__cs, __cs + 9, __wcs);
    __beg = _M_extract_via_format(__beg, __end, __io, __tmperr,
      __tm, __wcs);
    break;
  case 'H':

    __beg = _M_extract_num(__beg, __end, __tm->tm_hour, 0, 23, 2,
      __io, __tmperr);
    break;
  case 'I':

    __beg = _M_extract_num(__beg, __end, __tm->tm_hour, 1, 12, 2,
      __io, __tmperr);
    break;
  case 'm':

    __beg = _M_extract_num(__beg, __end, __mem, 1, 12, 2,
      __io, __tmperr);
    if (!__tmperr)
      __tm->tm_mon = __mem - 1;
    break;
  case 'M':

    __beg = _M_extract_num(__beg, __end, __tm->tm_min, 0, 59, 2,
      __io, __tmperr);
    break;
  case 'n':
    if (__ctype.narrow(*__beg, 0) == '\n')
      ++__beg;
    else
      __tmperr |= ios_base::failbit;
    break;
  case 'R':

    __cs = "%H:%M";
    __ctype.widen(__cs, __cs + 6, __wcs);
    __beg = _M_extract_via_format(__beg, __end, __io, __tmperr,
      __tm, __wcs);
    break;
  case 'S':



    __beg = _M_extract_num(__beg, __end, __tm->tm_sec, 0, 60, 2,



      __io, __tmperr);
    break;
  case 't':
    if (__ctype.narrow(*__beg, 0) == '\t')
      ++__beg;
    else
      __tmperr |= ios_base::failbit;
    break;
  case 'T':

    __cs = "%H:%M:%S";
    __ctype.widen(__cs, __cs + 9, __wcs);
    __beg = _M_extract_via_format(__beg, __end, __io, __tmperr,
      __tm, __wcs);
    break;
  case 'x':

    const char_type* __dates[2];
    __tp._M_date_formats(__dates);
    __beg = _M_extract_via_format(__beg, __end, __io, __tmperr,
      __tm, __dates[0]);
    break;
  case 'X':

    const char_type* __times[2];
    __tp._M_time_formats(__times);
    __beg = _M_extract_via_format(__beg, __end, __io, __tmperr,
      __tm, __times[0]);
    break;
  case 'y':
  case 'C':

    __beg = _M_extract_num(__beg, __end, __tm->tm_year, 0, 99, 2,
      __io, __tmperr);
    break;
  case 'Y':

    __beg = _M_extract_num(__beg, __end, __mem, 0, 9999, 4,
      __io, __tmperr);
    if (!__tmperr)
      __tm->tm_year = __mem - 1900;
    break;
  case 'Z':

    if (__ctype.is(ctype_base::upper, *__beg))
      {
        int __tmp;
        __beg = _M_extract_name(__beg, __end, __tmp,
           __timepunct_cache<_CharT>::_S_timezones,
           14, __io, __tmperr);


        if (__beg != __end && !__tmperr && __tmp == 0
     && (*__beg == __ctype.widen('-')
         || *__beg == __ctype.widen('+')))
   {
     __beg = _M_extract_num(__beg, __end, __tmp, 0, 23, 2,
       __io, __tmperr);
     __beg = _M_extract_num(__beg, __end, __tmp, 0, 59, 2,
       __io, __tmperr);
   }
      }
    else
      __tmperr |= ios_base::failbit;
    break;
  default:

    __tmperr |= ios_base::failbit;
  }
     }
   else
     {

       if (__format[__i] == *__beg)
  ++__beg;
       else
  __tmperr |= ios_base::failbit;
     }
 }

      if (__tmperr)
 __err |= ios_base::failbit;

      return __beg;
    }

  template<typename _CharT, typename _InIter>
    _InIter
    time_get<_CharT, _InIter>::
    _M_extract_num(iter_type __beg, iter_type __end, int& __member,
     int __min, int __max, size_t __len,
     ios_base& __io, ios_base::iostate& __err) const
    {
      const locale& __loc = __io._M_getloc();
      const ctype<_CharT>& __ctype = use_facet<ctype<_CharT> >(__loc);


      int __mult = __len == 2 ? 10 : (__len == 4 ? 1000 : 1);

      ++__min;
      size_t __i = 0;
      int __value = 0;
      for (; __beg != __end && __i < __len; ++__beg, ++__i)
 {
   const char __c = __ctype.narrow(*__beg, '*');
   if (__c >= '0' && __c <= '9')
     {
       __value = __value * 10 + (__c - '0');
       const int __valuec = __value * __mult;
       if (__valuec > __max || __valuec + __mult < __min)
  break;
       __mult /= 10;
     }
   else
     break;
 }
      if (__i == __len)
 __member = __value;
      else
 __err |= ios_base::failbit;

      return __beg;
    }



  template<typename _CharT, typename _InIter>
    _InIter
    time_get<_CharT, _InIter>::
    _M_extract_name(iter_type __beg, iter_type __end, int& __member,
      const _CharT** __names, size_t __indexlen,
      ios_base& __io, ios_base::iostate& __err) const
    {
      typedef char_traits<_CharT> __traits_type;
      const locale& __loc = __io._M_getloc();
      const ctype<_CharT>& __ctype = use_facet<ctype<_CharT> >(__loc);

      int* __matches = static_cast<int*>(__builtin_alloca(sizeof(int)
         * __indexlen));
      size_t __nmatches = 0;
      size_t __pos = 0;
      bool __testvalid = true;
      const char_type* __name;





      if (__beg != __end)
 {
   const char_type __c = *__beg;
   for (size_t __i1 = 0; __i1 < __indexlen; ++__i1)
     if (__c == __names[__i1][0]
  || __c == __ctype.toupper(__names[__i1][0]))
       __matches[__nmatches++] = __i1;
 }

      while (__nmatches > 1)
 {

   size_t __minlen = __traits_type::length(__names[__matches[0]]);
   for (size_t __i2 = 1; __i2 < __nmatches; ++__i2)
     __minlen = std::min(__minlen,
         __traits_type::length(__names[__matches[__i2]]));
   ++__beg, ++__pos;
   if (__pos < __minlen && __beg != __end)
     for (size_t __i3 = 0; __i3 < __nmatches;)
       {
  __name = __names[__matches[__i3]];
  if (!(__name[__pos] == *__beg))
    __matches[__i3] = __matches[--__nmatches];
  else
    ++__i3;
       }
   else
     break;
 }

      if (__nmatches == 1)
 {

   ++__beg, ++__pos;
   __name = __names[__matches[0]];
   const size_t __len = __traits_type::length(__name);
   while (__pos < __len && __beg != __end && __name[__pos] == *__beg)
     ++__beg, ++__pos;

   if (__len == __pos)
     __member = __matches[0];
   else
     __testvalid = false;
 }
      else
 __testvalid = false;
      if (!__testvalid)
 __err |= ios_base::failbit;

      return __beg;
    }

  template<typename _CharT, typename _InIter>
    _InIter
    time_get<_CharT, _InIter>::
    do_get_time(iter_type __beg, iter_type __end, ios_base& __io,
  ios_base::iostate& __err, tm* __tm) const
    {
      const locale& __loc = __io._M_getloc();
      const __timepunct<_CharT>& __tp = use_facet<__timepunct<_CharT> >(__loc);
      const char_type* __times[2];
      __tp._M_time_formats(__times);
      __beg = _M_extract_via_format(__beg, __end, __io, __err,
        __tm, __times[0]);
      if (__beg == __end)
 __err |= ios_base::eofbit;
      return __beg;
    }

  template<typename _CharT, typename _InIter>
    _InIter
    time_get<_CharT, _InIter>::
    do_get_date(iter_type __beg, iter_type __end, ios_base& __io,
  ios_base::iostate& __err, tm* __tm) const
    {
      const locale& __loc = __io._M_getloc();
      const __timepunct<_CharT>& __tp = use_facet<__timepunct<_CharT> >(__loc);
      const char_type* __dates[2];
      __tp._M_date_formats(__dates);
      __beg = _M_extract_via_format(__beg, __end, __io, __err,
        __tm, __dates[0]);
      if (__beg == __end)
 __err |= ios_base::eofbit;
      return __beg;
    }

  template<typename _CharT, typename _InIter>
    _InIter
    time_get<_CharT, _InIter>::
    do_get_weekday(iter_type __beg, iter_type __end, ios_base& __io,
     ios_base::iostate& __err, tm* __tm) const
    {
      typedef char_traits<_CharT> __traits_type;
      const locale& __loc = __io._M_getloc();
      const __timepunct<_CharT>& __tp = use_facet<__timepunct<_CharT> >(__loc);
      const ctype<_CharT>& __ctype = use_facet<ctype<_CharT> >(__loc);
      const char_type* __days[7];
      __tp._M_days_abbreviated(__days);
      int __tmpwday;
      ios_base::iostate __tmperr = ios_base::goodbit;
      __beg = _M_extract_name(__beg, __end, __tmpwday, __days, 7,
         __io, __tmperr);







      if (!__tmperr && __beg != __end)
 {
   size_t __pos = __traits_type::length(__days[__tmpwday]);
   __tp._M_days(__days);
   const char_type* __name = __days[__tmpwday];
   if (__name[__pos] == *__beg)
     {

       const size_t __len = __traits_type::length(__name);
       while (__pos < __len && __beg != __end
       && __name[__pos] == *__beg)
  ++__beg, ++__pos;
       if (__len != __pos)
  __tmperr |= ios_base::failbit;
     }
 }
      if (!__tmperr)
 __tm->tm_wday = __tmpwday;
      else
 __err |= ios_base::failbit;

      if (__beg == __end)
 __err |= ios_base::eofbit;
      return __beg;
     }

  template<typename _CharT, typename _InIter>
    _InIter
    time_get<_CharT, _InIter>::
    do_get_monthname(iter_type __beg, iter_type __end,
                     ios_base& __io, ios_base::iostate& __err, tm* __tm) const
    {
      typedef char_traits<_CharT> __traits_type;
      const locale& __loc = __io._M_getloc();
      const __timepunct<_CharT>& __tp = use_facet<__timepunct<_CharT> >(__loc);
      const ctype<_CharT>& __ctype = use_facet<ctype<_CharT> >(__loc);
      const char_type* __months[12];
      __tp._M_months_abbreviated(__months);
      int __tmpmon;
      ios_base::iostate __tmperr = ios_base::goodbit;
      __beg = _M_extract_name(__beg, __end, __tmpmon, __months, 12,
         __io, __tmperr);







      if (!__tmperr && __beg != __end)
 {
   size_t __pos = __traits_type::length(__months[__tmpmon]);
   __tp._M_months(__months);
   const char_type* __name = __months[__tmpmon];
   if (__name[__pos] == *__beg)
     {

       const size_t __len = __traits_type::length(__name);
       while (__pos < __len && __beg != __end
       && __name[__pos] == *__beg)
  ++__beg, ++__pos;
       if (__len != __pos)
  __tmperr |= ios_base::failbit;
     }
 }
      if (!__tmperr)
 __tm->tm_mon = __tmpmon;
      else
 __err |= ios_base::failbit;

      if (__beg == __end)
 __err |= ios_base::eofbit;
      return __beg;
    }

  template<typename _CharT, typename _InIter>
    _InIter
    time_get<_CharT, _InIter>::
    do_get_year(iter_type __beg, iter_type __end, ios_base& __io,
  ios_base::iostate& __err, tm* __tm) const
    {
      const locale& __loc = __io._M_getloc();
      const ctype<_CharT>& __ctype = use_facet<ctype<_CharT> >(__loc);

      size_t __i = 0;
      int __value = 0;
      for (; __beg != __end && __i < 4; ++__beg, ++__i)
 {
   const char __c = __ctype.narrow(*__beg, '*');
   if (__c >= '0' && __c <= '9')
     __value = __value * 10 + (__c - '0');
   else
     break;
 }
      if (__i == 2 || __i == 4)
 __tm->tm_year = __i == 2 ? __value : __value - 1900;
      else
 __err |= ios_base::failbit;

      if (__beg == __end)
 __err |= ios_base::eofbit;
      return __beg;
    }

  template<typename _CharT, typename _OutIter>
    _OutIter
    time_put<_CharT, _OutIter>::
    put(iter_type __s, ios_base& __io, char_type __fill, const tm* __tm,
 const _CharT* __beg, const _CharT* __end) const
    {
      const locale& __loc = __io._M_getloc();
      ctype<_CharT> const& __ctype = use_facet<ctype<_CharT> >(__loc);
      for (; __beg != __end; ++__beg)
 if (__ctype.narrow(*__beg, 0) != '%')
   {
     *__s = *__beg;
     ++__s;
   }
 else if (++__beg != __end)
   {
     char __format;
     char __mod = 0;
     const char __c = __ctype.narrow(*__beg, 0);
     if (__c != 'E' && __c != 'O')
       __format = __c;
     else if (++__beg != __end)
       {
  __mod = __c;
  __format = __ctype.narrow(*__beg, 0);
       }
     else
       break;
     __s = this->do_put(__s, __io, __fill, __tm, __format, __mod);
   }
 else
   break;
      return __s;
    }

  template<typename _CharT, typename _OutIter>
    _OutIter
    time_put<_CharT, _OutIter>::
    do_put(iter_type __s, ios_base& __io, char_type, const tm* __tm,
    char __format, char __mod) const
    {
      const locale& __loc = __io._M_getloc();
      ctype<_CharT> const& __ctype = use_facet<ctype<_CharT> >(__loc);
      __timepunct<_CharT> const& __tp = use_facet<__timepunct<_CharT> >(__loc);



      const size_t __maxlen = 128;
      char_type* __res =
       static_cast<char_type*>(__builtin_alloca(sizeof(char_type) * __maxlen));






      char_type __fmt[4];
      __fmt[0] = __ctype.widen('%');
      if (!__mod)
 {
   __fmt[1] = __format;
   __fmt[2] = char_type();
 }
      else
 {
   __fmt[1] = __mod;
   __fmt[2] = __format;
   __fmt[3] = char_type();
 }

      __tp._M_put(__res, __maxlen, __fmt, __tm);


      return std::__write(__s, __res, char_traits<char_type>::length(__res));
    }


  template<typename _CharT>
    int
    collate<_CharT>::_M_compare(const _CharT*, const _CharT*) const
    { return 0; }


  template<typename _CharT>
    size_t
    collate<_CharT>::_M_transform(_CharT*, const _CharT*, size_t) const
    { return 0; }

  template<typename _CharT>
    int
    collate<_CharT>::
    do_compare(const _CharT* __lo1, const _CharT* __hi1,
        const _CharT* __lo2, const _CharT* __hi2) const
    {


      const string_type __one(__lo1, __hi1);
      const string_type __two(__lo2, __hi2);

      const _CharT* __p = __one.c_str();
      const _CharT* __pend = __one.data() + __one.length();
      const _CharT* __q = __two.c_str();
      const _CharT* __qend = __two.data() + __two.length();




      for (;;)
 {
   const int __res = _M_compare(__p, __q);
   if (__res)
     return __res;

   __p += char_traits<_CharT>::length(__p);
   __q += char_traits<_CharT>::length(__q);
   if (__p == __pend && __q == __qend)
     return 0;
   else if (__p == __pend)
     return -1;
   else if (__q == __qend)
     return 1;

   __p++;
   __q++;
 }
    }

  template<typename _CharT>
    typename collate<_CharT>::string_type
    collate<_CharT>::
    do_transform(const _CharT* __lo, const _CharT* __hi) const
    {
      string_type __ret;


      const string_type __str(__lo, __hi);

      const _CharT* __p = __str.c_str();
      const _CharT* __pend = __str.data() + __str.length();

      size_t __len = (__hi - __lo) * 2;

      _CharT* __c = new _CharT[__len];

      try
 {



   for (;;)
     {

       size_t __res = _M_transform(__c, __p, __len);


       if (__res >= __len)
  {
    __len = __res + 1;
    delete [] __c, __c = 0;
    __c = new _CharT[__len];
    __res = _M_transform(__c, __p, __len);
  }

       __ret.append(__c, __res);
       __p += char_traits<_CharT>::length(__p);
       if (__p == __pend)
  break;

       __p++;
       __ret.push_back(_CharT());
     }
 }
      catch(...)
 {
   delete [] __c;
   throw;
 }

      delete [] __c;

      return __ret;
    }

  template<typename _CharT>
    long
    collate<_CharT>::
    do_hash(const _CharT* __lo, const _CharT* __hi) const
    {
      unsigned long __val = 0;
      for (; __lo < __hi; ++__lo)
 __val = *__lo + ((__val << 7) |
         (__val >> (numeric_limits<unsigned long>::digits - 7)));
      return static_cast<long>(__val);
    }
# 2503 "/usr/include/c++/4.2.1/bits/locale_facets.tcc" 3
  template<typename _CharT, typename _Traits>
    void
    __pad<_CharT, _Traits>::_S_pad(ios_base& __io, _CharT __fill,
       _CharT* __news, const _CharT* __olds,
       const streamsize __newlen,
       const streamsize __oldlen, const bool __num)
    {
      const size_t __plen = static_cast<size_t>(__newlen - __oldlen);
      const ios_base::fmtflags __adjust = __io.flags() & ios_base::adjustfield;


      if (__adjust == ios_base::left)
 {
   _Traits::copy(__news, const_cast<_CharT*>(__olds), __oldlen);
   _Traits::assign(__news + __oldlen, __plen, __fill);
   return;
 }

      size_t __mod = 0;
      if (__adjust == ios_base::internal && __num)
 {



          const locale& __loc = __io._M_getloc();
   const ctype<_CharT>& __ctype = use_facet<ctype<_CharT> >(__loc);

   const bool __testsign = (__ctype.widen('-') == __olds[0]
       || __ctype.widen('+') == __olds[0]);
   const bool __testhex = (__ctype.widen('0') == __olds[0]
      && __oldlen > 1
      && (__ctype.widen('x') == __olds[1]
          || __ctype.widen('X') == __olds[1]));
   if (__testhex)
     {
       __news[0] = __olds[0];
       __news[1] = __olds[1];
       __mod = 2;
       __news += 2;
     }
   else if (__testsign)
     {
       __news[0] = __olds[0];
       __mod = 1;
       ++__news;
     }

 }
      _Traits::assign(__news, __plen, __fill);
      _Traits::copy(__news + __plen, const_cast<_CharT*>(__olds + __mod),
      __oldlen - __mod);
    }

  bool
  __verify_grouping(const char* __grouping, size_t __grouping_size,
      const string& __grouping_tmp)
  {
    const size_t __n = __grouping_tmp.size() - 1;
    const size_t __min = std::min(__n, size_t(__grouping_size - 1));
    size_t __i = __n;
    bool __test = true;




    for (size_t __j = 0; __j < __min && __test; --__i, ++__j)
      __test = __grouping_tmp[__i] == __grouping[__j];
    for (; __i && __test; --__i)
      __test = __grouping_tmp[__i] == __grouping[__min];



    if (static_cast<signed char>(__grouping[__min]) > 0)
      __test &= __grouping_tmp[0] <= __grouping[__min];
    return __test;
  }

  template<typename _CharT>
    _CharT*
    __add_grouping(_CharT* __s, _CharT __sep,
     const char* __gbeg, size_t __gsize,
     const _CharT* __first, const _CharT* __last)
    {
      size_t __idx = 0;
      size_t __ctr = 0;

      while (__last - __first > __gbeg[__idx]
      && static_cast<signed char>(__gbeg[__idx]) > 0)
 {
   __last -= __gbeg[__idx];
   __idx < __gsize - 1 ? ++__idx : ++__ctr;
 }

      while (__first != __last)
 *__s++ = *__first++;

      while (__ctr--)
 {
   *__s++ = __sep;
   for (char __i = __gbeg[__idx]; __i > 0; --__i)
     *__s++ = *__first++;
 }

      while (__idx--)
 {
   *__s++ = __sep;
   for (char __i = __gbeg[__idx]; __i > 0; --__i)
     *__s++ = *__first++;
 }

      return __s;
    }





  extern template class moneypunct<char, false>;
  extern template class moneypunct<char, true>;
  extern template class moneypunct_byname<char, false>;
  extern template class moneypunct_byname<char, true>;
  extern template class money_get<char>;
  extern template class money_put<char>;
  extern template class numpunct<char>;
  extern template class numpunct_byname<char>;
  extern template class num_get<char>;
  extern template class num_put<char>;
  extern template class __timepunct<char>;
  extern template class time_put<char>;
  extern template class time_put_byname<char>;
  extern template class time_get<char>;
  extern template class time_get_byname<char>;
  extern template class messages<char>;
  extern template class messages_byname<char>;
  extern template class ctype_byname<char>;
  extern template class codecvt_byname<char, char, mbstate_t>;
  extern template class collate<char>;
  extern template class collate_byname<char>;

  extern template
    const codecvt<char, char, mbstate_t>&
    use_facet<codecvt<char, char, mbstate_t> >(const locale&);

  extern template
    const collate<char>&
    use_facet<collate<char> >(const locale&);

  extern template
    const numpunct<char>&
    use_facet<numpunct<char> >(const locale&);

  extern template
    const num_put<char>&
    use_facet<num_put<char> >(const locale&);

  extern template
    const num_get<char>&
    use_facet<num_get<char> >(const locale&);

  extern template
    const moneypunct<char, true>&
    use_facet<moneypunct<char, true> >(const locale&);

  extern template
    const moneypunct<char, false>&
    use_facet<moneypunct<char, false> >(const locale&);

  extern template
    const money_put<char>&
    use_facet<money_put<char> >(const locale&);

  extern template
    const money_get<char>&
    use_facet<money_get<char> >(const locale&);

  extern template
    const __timepunct<char>&
    use_facet<__timepunct<char> >(const locale&);

  extern template
    const time_put<char>&
    use_facet<time_put<char> >(const locale&);

  extern template
    const time_get<char>&
    use_facet<time_get<char> >(const locale&);

  extern template
    const messages<char>&
    use_facet<messages<char> >(const locale&);

  extern template
    bool
    has_facet<ctype<char> >(const locale&);

  extern template
    bool
    has_facet<codecvt<char, char, mbstate_t> >(const locale&);

  extern template
    bool
    has_facet<collate<char> >(const locale&);

  extern template
    bool
    has_facet<numpunct<char> >(const locale&);

  extern template
    bool
    has_facet<num_put<char> >(const locale&);

  extern template
    bool
    has_facet<num_get<char> >(const locale&);

  extern template
    bool
    has_facet<moneypunct<char> >(const locale&);

  extern template
    bool
    has_facet<money_put<char> >(const locale&);

  extern template
    bool
    has_facet<money_get<char> >(const locale&);

  extern template
    bool
    has_facet<__timepunct<char> >(const locale&);

  extern template
    bool
    has_facet<time_put<char> >(const locale&);

  extern template
    bool
    has_facet<time_get<char> >(const locale&);

  extern template
    bool
    has_facet<messages<char> >(const locale&);


  extern template class moneypunct<wchar_t, false>;
  extern template class moneypunct<wchar_t, true>;
  extern template class moneypunct_byname<wchar_t, false>;
  extern template class moneypunct_byname<wchar_t, true>;
  extern template class money_get<wchar_t>;
  extern template class money_put<wchar_t>;
  extern template class numpunct<wchar_t>;
  extern template class numpunct_byname<wchar_t>;
  extern template class num_get<wchar_t>;
  extern template class num_put<wchar_t>;
  extern template class __timepunct<wchar_t>;
  extern template class time_put<wchar_t>;
  extern template class time_put_byname<wchar_t>;
  extern template class time_get<wchar_t>;
  extern template class time_get_byname<wchar_t>;
  extern template class messages<wchar_t>;
  extern template class messages_byname<wchar_t>;
  extern template class ctype_byname<wchar_t>;
  extern template class codecvt_byname<wchar_t, char, mbstate_t>;
  extern template class collate<wchar_t>;
  extern template class collate_byname<wchar_t>;

  extern template
    const codecvt<wchar_t, char, mbstate_t>&
    use_facet<codecvt<wchar_t, char, mbstate_t> >(locale const&);

  extern template
    const collate<wchar_t>&
    use_facet<collate<wchar_t> >(const locale&);

  extern template
    const numpunct<wchar_t>&
    use_facet<numpunct<wchar_t> >(const locale&);

  extern template
    const num_put<wchar_t>&
    use_facet<num_put<wchar_t> >(const locale&);

  extern template
    const num_get<wchar_t>&
    use_facet<num_get<wchar_t> >(const locale&);

  extern template
    const moneypunct<wchar_t, true>&
    use_facet<moneypunct<wchar_t, true> >(const locale&);

  extern template
    const moneypunct<wchar_t, false>&
    use_facet<moneypunct<wchar_t, false> >(const locale&);

  extern template
    const money_put<wchar_t>&
    use_facet<money_put<wchar_t> >(const locale&);

  extern template
    const money_get<wchar_t>&
    use_facet<money_get<wchar_t> >(const locale&);

  extern template
    const __timepunct<wchar_t>&
    use_facet<__timepunct<wchar_t> >(const locale&);

  extern template
    const time_put<wchar_t>&
    use_facet<time_put<wchar_t> >(const locale&);

  extern template
    const time_get<wchar_t>&
    use_facet<time_get<wchar_t> >(const locale&);

  extern template
    const messages<wchar_t>&
    use_facet<messages<wchar_t> >(const locale&);

 extern template
    bool
    has_facet<ctype<wchar_t> >(const locale&);

  extern template
    bool
    has_facet<codecvt<wchar_t, char, mbstate_t> >(const locale&);

  extern template
    bool
    has_facet<collate<wchar_t> >(const locale&);

  extern template
    bool
    has_facet<numpunct<wchar_t> >(const locale&);

  extern template
    bool
    has_facet<num_put<wchar_t> >(const locale&);

  extern template
    bool
    has_facet<num_get<wchar_t> >(const locale&);

  extern template
    bool
    has_facet<moneypunct<wchar_t> >(const locale&);

  extern template
    bool
    has_facet<money_put<wchar_t> >(const locale&);

  extern template
    bool
    has_facet<money_get<wchar_t> >(const locale&);

  extern template
    bool
    has_facet<__timepunct<wchar_t> >(const locale&);

  extern template
    bool
    has_facet<time_put<wchar_t> >(const locale&);

  extern template
    bool
    has_facet<time_get<wchar_t> >(const locale&);

  extern template
    bool
    has_facet<messages<wchar_t> >(const locale&);



}
# 47 "/usr/include/c++/4.2.1/locale" 2 3
# 47 "/usr/include/c++/4.2.1/bits/ostream.tcc" 2 3

namespace std {

  template<typename _CharT, typename _Traits>
    basic_ostream<_CharT, _Traits>::sentry::
    sentry(basic_ostream<_CharT, _Traits>& __os)
    : _M_ok(false), _M_os(__os)
    {

      if (__os.tie() && __os.good())
 __os.tie()->flush();

      if (__os.good())
 _M_ok = true;
      else
 __os.setstate(ios_base::failbit);
    }

  template<typename _CharT, typename _Traits>
    template<typename _ValueT>
      basic_ostream<_CharT, _Traits>&
      basic_ostream<_CharT, _Traits>::
      _M_insert(_ValueT __v)
      {
 sentry __cerb(*this);
 if (__cerb)
   {
     ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
     try
       {
  const __num_put_type& __np = __check_facet(this->_M_num_put);
  if (__np.put(*this, *this, this->fill(), __v).failed())
    __err |= ios_base::badbit;
       }
     catch(...)
       { this->_M_setstate(ios_base::badbit); }
     if (__err)
       this->setstate(__err);
   }
 return *this;
      }

  template<typename _CharT, typename _Traits>
    basic_ostream<_CharT, _Traits>&
    basic_ostream<_CharT, _Traits>::
    operator<<(short __n)
    {


      const ios_base::fmtflags __fmt = this->flags() & ios_base::basefield;
      if (__fmt == ios_base::oct || __fmt == ios_base::hex)
 return _M_insert(static_cast<long>(static_cast<unsigned short>(__n)));
      else
 return _M_insert(static_cast<long>(__n));
    }

  template<typename _CharT, typename _Traits>
    basic_ostream<_CharT, _Traits>&
    basic_ostream<_CharT, _Traits>::
    operator<<(int __n)
    {


      const ios_base::fmtflags __fmt = this->flags() & ios_base::basefield;
      if (__fmt == ios_base::oct || __fmt == ios_base::hex)
 return _M_insert(static_cast<long>(static_cast<unsigned int>(__n)));
      else
 return _M_insert(static_cast<long>(__n));
    }

  template<typename _CharT, typename _Traits>
    basic_ostream<_CharT, _Traits>&
    basic_ostream<_CharT, _Traits>::
    operator<<(__streambuf_type* __sbin)
    {
      ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
      sentry __cerb(*this);
      if (__cerb && __sbin)
 {
   try
     {
       if (!__copy_streambufs(__sbin, this->rdbuf()))
  __err |= ios_base::failbit;
     }
   catch(...)
     { this->_M_setstate(ios_base::failbit); }
 }
      else if (!__sbin)
 __err |= ios_base::badbit;
      if (__err)
 this->setstate(__err);
      return *this;
    }

  template<typename _CharT, typename _Traits>
    basic_ostream<_CharT, _Traits>&
    basic_ostream<_CharT, _Traits>::
    put(char_type __c)
    {






      sentry __cerb(*this);
      if (__cerb)
 {
   ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
   try
     {
       const int_type __put = this->rdbuf()->sputc(__c);
       if (traits_type::eq_int_type(__put, traits_type::eof()))
  __err |= ios_base::badbit;
     }
   catch (...)
     { this->_M_setstate(ios_base::badbit); }
   if (__err)
     this->setstate(__err);
 }
      return *this;
    }

  template<typename _CharT, typename _Traits>
    basic_ostream<_CharT, _Traits>&
    basic_ostream<_CharT, _Traits>::
    write(const _CharT* __s, streamsize __n)
    {







      sentry __cerb(*this);
      if (__cerb)
 {
   try
     { _M_write(__s, __n); }
   catch (...)
     { this->_M_setstate(ios_base::badbit); }
 }
      return *this;
    }

  template<typename _CharT, typename _Traits>
    basic_ostream<_CharT, _Traits>&
    basic_ostream<_CharT, _Traits>::
    flush()
    {



      ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
      try
 {
   if (this->rdbuf() && this->rdbuf()->pubsync() == -1)
     __err |= ios_base::badbit;
 }
      catch(...)
 { this->_M_setstate(ios_base::badbit); }
      if (__err)
 this->setstate(__err);
      return *this;
    }

  template<typename _CharT, typename _Traits>
    typename basic_ostream<_CharT, _Traits>::pos_type
    basic_ostream<_CharT, _Traits>::
    tellp()
    {
      pos_type __ret = pos_type(-1);
      try
 {
   if (!this->fail())
     __ret = this->rdbuf()->pubseekoff(0, ios_base::cur, ios_base::out);
 }
      catch(...)
 { this->_M_setstate(ios_base::badbit); }
      return __ret;
    }

  template<typename _CharT, typename _Traits>
    basic_ostream<_CharT, _Traits>&
    basic_ostream<_CharT, _Traits>::
    seekp(pos_type __pos)
    {
      ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
      try
 {
   if (!this->fail())
     {


       const pos_type __p = this->rdbuf()->pubseekpos(__pos,
            ios_base::out);


       if (__p == pos_type(off_type(-1)))
  __err |= ios_base::failbit;
     }
 }
      catch(...)
 { this->_M_setstate(ios_base::badbit); }
      if (__err)
 this->setstate(__err);
      return *this;
    }

  template<typename _CharT, typename _Traits>
    basic_ostream<_CharT, _Traits>&
    basic_ostream<_CharT, _Traits>::
    seekp(off_type __off, ios_base::seekdir __dir)
    {
      ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
      try
 {
   if (!this->fail())
     {


       const pos_type __p = this->rdbuf()->pubseekoff(__off, __dir,
            ios_base::out);


       if (__p == pos_type(off_type(-1)))
  __err |= ios_base::failbit;
     }
 }
      catch(...)
 { this->_M_setstate(ios_base::badbit); }
      if (__err)
 this->setstate(__err);
      return *this;
    }

  template<typename _CharT, typename _Traits>
    basic_ostream<_CharT, _Traits>&
    operator<<(basic_ostream<_CharT, _Traits>& __out, const char* __s)
    {
      if (!__s)
 __out.setstate(ios_base::badbit);
      else
 {


   const size_t __clen = char_traits<char>::length(__s);
   _CharT* __ws = 0;
   try
     {
       __ws = new _CharT[__clen];
       for (size_t __i = 0; __i < __clen; ++__i)
  __ws[__i] = __out.widen(__s[__i]);
     }
   catch(...)
     {
       delete [] __ws;
       __out._M_setstate(ios_base::badbit);
       return __out;
     }

   try
     {
       __ostream_insert(__out, __ws, __clen);
       delete [] __ws;
     }
   catch(...)
     {
       delete [] __ws;
       throw;
     }
 }
      return __out;
    }





  extern template class basic_ostream<char>;
  extern template ostream& endl(ostream&);
  extern template ostream& ends(ostream&);
  extern template ostream& flush(ostream&);
  extern template ostream& operator<<(ostream&, char);
  extern template ostream& operator<<(ostream&, unsigned char);
  extern template ostream& operator<<(ostream&, signed char);
  extern template ostream& operator<<(ostream&, const char*);
  extern template ostream& operator<<(ostream&, const unsigned char*);
  extern template ostream& operator<<(ostream&, const signed char*);

  extern template ostream& ostream::_M_insert(long);
  extern template ostream& ostream::_M_insert(unsigned long);
  extern template ostream& ostream::_M_insert(bool);

  extern template ostream& ostream::_M_insert(long long);
  extern template ostream& ostream::_M_insert(unsigned long long);

  extern template ostream& ostream::_M_insert(double);
  extern template ostream& ostream::_M_insert(long double);
  extern template ostream& ostream::_M_insert(const void*);


  extern template class basic_ostream<wchar_t>;
  extern template wostream& endl(wostream&);
  extern template wostream& ends(wostream&);
  extern template wostream& flush(wostream&);
  extern template wostream& operator<<(wostream&, wchar_t);
  extern template wostream& operator<<(wostream&, char);
  extern template wostream& operator<<(wostream&, const wchar_t*);
  extern template wostream& operator<<(wostream&, const char*);

  extern template wostream& wostream::_M_insert(long);
  extern template wostream& wostream::_M_insert(unsigned long);
  extern template wostream& wostream::_M_insert(bool);

  extern template wostream& wostream::_M_insert(long long);
  extern template wostream& wostream::_M_insert(unsigned long long);

  extern template wostream& wostream::_M_insert(double);
  extern template wostream& wostream::_M_insert(long double);
  extern template wostream& wostream::_M_insert(const void*);



}
# 573 "/usr/include/c++/4.2.1/ostream" 2 3
# 46 "/usr/include/c++/4.2.1/iostream" 2 3
# 1 "/usr/include/c++/4.2.1/istream" 1 3
# 42 "/usr/include/c++/4.2.1/istream" 3
       
# 43 "/usr/include/c++/4.2.1/istream" 3




namespace std {
# 57 "/usr/include/c++/4.2.1/istream" 3
  template<typename _CharT, typename _Traits>
    class basic_istream : virtual public basic_ios<_CharT, _Traits>
    {
    public:

      typedef _CharT char_type;
      typedef typename _Traits::int_type int_type;
      typedef typename _Traits::pos_type pos_type;
      typedef typename _Traits::off_type off_type;
      typedef _Traits traits_type;


      typedef basic_streambuf<_CharT, _Traits> __streambuf_type;
      typedef basic_ios<_CharT, _Traits> __ios_type;
      typedef basic_istream<_CharT, _Traits> __istream_type;
      typedef num_get<_CharT, istreambuf_iterator<_CharT, _Traits> >
        __num_get_type;
      typedef ctype<_CharT> __ctype_type;

      template<typename _CharT2, typename _Traits2>
        friend basic_istream<_CharT2, _Traits2>&
        operator>>(basic_istream<_CharT2, _Traits2>&, _CharT2&);

      template<typename _CharT2, typename _Traits2>
        friend basic_istream<_CharT2, _Traits2>&
        operator>>(basic_istream<_CharT2, _Traits2>&, _CharT2*);

    protected:







      streamsize _M_gcount;

    public:
# 103 "/usr/include/c++/4.2.1/istream" 3
      explicit
      basic_istream(__streambuf_type* __sb): _M_gcount(streamsize(0))
      { this->init(__sb); }






      virtual
      ~basic_istream()
      { _M_gcount = streamsize(0); }


      class sentry;
      friend class sentry;
# 130 "/usr/include/c++/4.2.1/istream" 3
      __istream_type&
      operator>>(__istream_type& (*__pf)(__istream_type&))
      { return __pf(*this); }

      __istream_type&
      operator>>(__ios_type& (*__pf)(__ios_type&))
      {
 __pf(*this);
 return *this;
      }

      __istream_type&
      operator>>(ios_base& (*__pf)(ios_base&))
      {
 __pf(*this);
 return *this;
      }
# 177 "/usr/include/c++/4.2.1/istream" 3
      __istream_type&
      operator>>(bool& __n)
      { return _M_extract(__n); }

      __istream_type&
      operator>>(short& __n);

      __istream_type&
      operator>>(unsigned short& __n)
      { return _M_extract(__n); }

      __istream_type&
      operator>>(int& __n);

      __istream_type&
      operator>>(unsigned int& __n)
      { return _M_extract(__n); }

      __istream_type&
      operator>>(long& __n)
      { return _M_extract(__n); }

      __istream_type&
      operator>>(unsigned long& __n)
      { return _M_extract(__n); }


      __istream_type&
      operator>>(long long& __n)
      { return _M_extract(__n); }

      __istream_type&
      operator>>(unsigned long long& __n)
      { return _M_extract(__n); }


      __istream_type&
      operator>>(float& __f)
      { return _M_extract(__f); }

      __istream_type&
      operator>>(double& __f)
      { return _M_extract(__f); }

      __istream_type&
      operator>>(long double& __f)
      { return _M_extract(__f); }

      __istream_type&
      operator>>(void*& __p)
      { return _M_extract(__p); }
# 249 "/usr/include/c++/4.2.1/istream" 3
      __istream_type&
      operator>>(__streambuf_type* __sb);
# 259 "/usr/include/c++/4.2.1/istream" 3
      streamsize
      gcount() const
      { return _M_gcount; }
# 291 "/usr/include/c++/4.2.1/istream" 3
      int_type
      get();
# 305 "/usr/include/c++/4.2.1/istream" 3
      __istream_type&
      get(char_type& __c);
# 332 "/usr/include/c++/4.2.1/istream" 3
      __istream_type&
      get(char_type* __s, streamsize __n, char_type __delim);
# 343 "/usr/include/c++/4.2.1/istream" 3
      __istream_type&
      get(char_type* __s, streamsize __n)
      { return this->get(__s, __n, this->widen('\n')); }
# 366 "/usr/include/c++/4.2.1/istream" 3
      __istream_type&
      get(__streambuf_type& __sb, char_type __delim);
# 376 "/usr/include/c++/4.2.1/istream" 3
      __istream_type&
      get(__streambuf_type& __sb)
      { return this->get(__sb, this->widen('\n')); }
# 405 "/usr/include/c++/4.2.1/istream" 3
      __istream_type&
      getline(char_type* __s, streamsize __n, char_type __delim);
# 416 "/usr/include/c++/4.2.1/istream" 3
      __istream_type&
      getline(char_type* __s, streamsize __n)
      { return this->getline(__s, __n, this->widen('\n')); }
# 440 "/usr/include/c++/4.2.1/istream" 3
      __istream_type&
      ignore();

      __istream_type&
      ignore(streamsize __n);

      __istream_type&
      ignore(streamsize __n, int_type __delim);
# 457 "/usr/include/c++/4.2.1/istream" 3
      int_type
      peek();
# 475 "/usr/include/c++/4.2.1/istream" 3
      __istream_type&
      read(char_type* __s, streamsize __n);
# 494 "/usr/include/c++/4.2.1/istream" 3
      streamsize
      readsome(char_type* __s, streamsize __n);
# 510 "/usr/include/c++/4.2.1/istream" 3
      __istream_type&
      putback(char_type __c);
# 525 "/usr/include/c++/4.2.1/istream" 3
      __istream_type&
      unget();
# 543 "/usr/include/c++/4.2.1/istream" 3
      int
      sync();
# 557 "/usr/include/c++/4.2.1/istream" 3
      pos_type
      tellg();
# 572 "/usr/include/c++/4.2.1/istream" 3
      __istream_type&
      seekg(pos_type);
# 588 "/usr/include/c++/4.2.1/istream" 3
      __istream_type&
      seekg(off_type, ios_base::seekdir);


    protected:
      explicit
      basic_istream(): _M_gcount(streamsize(0)) { }

      template<typename _ValueT>
        __istream_type&
        _M_extract(_ValueT& __v);
    };


  template<>
    basic_istream<char>&
    basic_istream<char>::
    getline(char_type* __s, streamsize __n, char_type __delim);

  template<>
    basic_istream<char>&
    basic_istream<char>::
    ignore(streamsize __n);

  template<>
    basic_istream<char>&
    basic_istream<char>::
    ignore(streamsize __n, int_type __delim);


  template<>
    basic_istream<wchar_t>&
    basic_istream<wchar_t>::
    getline(char_type* __s, streamsize __n, char_type __delim);

  template<>
    basic_istream<wchar_t>&
    basic_istream<wchar_t>::
    ignore(streamsize __n);

  template<>
    basic_istream<wchar_t>&
    basic_istream<wchar_t>::
    ignore(streamsize __n, int_type __delim);
# 645 "/usr/include/c++/4.2.1/istream" 3
  template<typename _CharT, typename _Traits>
    class basic_istream<_CharT, _Traits>::sentry
    {
    public:

      typedef _Traits traits_type;
      typedef basic_streambuf<_CharT, _Traits> __streambuf_type;
      typedef basic_istream<_CharT, _Traits> __istream_type;
      typedef typename __istream_type::__ctype_type __ctype_type;
      typedef typename _Traits::int_type __int_type;
# 677 "/usr/include/c++/4.2.1/istream" 3
      explicit
      sentry(basic_istream<_CharT, _Traits>& __is, bool __noskipws = false);
# 687 "/usr/include/c++/4.2.1/istream" 3
      operator bool() const
      { return _M_ok; }

    private:
      bool _M_ok;
    };
# 707 "/usr/include/c++/4.2.1/istream" 3
  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    operator>>(basic_istream<_CharT, _Traits>& __in, _CharT& __c);

  template<class _Traits>
    inline basic_istream<char, _Traits>&
    operator>>(basic_istream<char, _Traits>& __in, unsigned char& __c)
    { return (__in >> reinterpret_cast<char&>(__c)); }

  template<class _Traits>
    inline basic_istream<char, _Traits>&
    operator>>(basic_istream<char, _Traits>& __in, signed char& __c)
    { return (__in >> reinterpret_cast<char&>(__c)); }
# 748 "/usr/include/c++/4.2.1/istream" 3
  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    operator>>(basic_istream<_CharT, _Traits>& __in, _CharT* __s);


  template<>
    basic_istream<char>&
    operator>>(basic_istream<char>& __in, char* __s);

  template<class _Traits>
    inline basic_istream<char, _Traits>&
    operator>>(basic_istream<char, _Traits>& __in, unsigned char* __s)
    { return (__in >> reinterpret_cast<char*>(__s)); }

  template<class _Traits>
    inline basic_istream<char, _Traits>&
    operator>>(basic_istream<char, _Traits>& __in, signed char* __s)
    { return (__in >> reinterpret_cast<char*>(__s)); }
# 775 "/usr/include/c++/4.2.1/istream" 3
  template<typename _CharT, typename _Traits>
    class basic_iostream
    : public basic_istream<_CharT, _Traits>,
      public basic_ostream<_CharT, _Traits>
    {
    public:



      typedef _CharT char_type;
      typedef typename _Traits::int_type int_type;
      typedef typename _Traits::pos_type pos_type;
      typedef typename _Traits::off_type off_type;
      typedef _Traits traits_type;


      typedef basic_istream<_CharT, _Traits> __istream_type;
      typedef basic_ostream<_CharT, _Traits> __ostream_type;







      explicit
      basic_iostream(basic_streambuf<_CharT, _Traits>* __sb)
      : __istream_type(), __ostream_type()
      { this->init(__sb); }




      virtual
      ~basic_iostream() { }

    protected:
      explicit
      basic_iostream() : __istream_type(), __ostream_type()
      { }
    };
# 838 "/usr/include/c++/4.2.1/istream" 3
  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    ws(basic_istream<_CharT, _Traits>& __is);

}


# 1 "/usr/include/c++/4.2.1/bits/istream.tcc" 1 3
# 44 "/usr/include/c++/4.2.1/bits/istream.tcc" 3
       
# 45 "/usr/include/c++/4.2.1/bits/istream.tcc" 3




namespace std {

  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>::sentry::
    sentry(basic_istream<_CharT, _Traits>& __in, bool __noskip) : _M_ok(false)
    {
      ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
      if (__in.good())
 {
   if (__in.tie())
     __in.tie()->flush();
   if (!__noskip && (__in.flags() & ios_base::skipws))
     {
       const __int_type __eof = traits_type::eof();
       __streambuf_type* __sb = __in.rdbuf();
       __int_type __c = __sb->sgetc();

       const __ctype_type& __ct = __check_facet(__in._M_ctype);
       while (!traits_type::eq_int_type(__c, __eof)
       && __ct.is(ctype_base::space,
    traits_type::to_char_type(__c)))
  __c = __sb->snextc();




       if (traits_type::eq_int_type(__c, __eof))
  __err |= ios_base::eofbit;
     }
 }

      if (__in.good() && __err == ios_base::goodbit)
 _M_ok = true;
      else
 {
   __err |= ios_base::failbit;
   __in.setstate(__err);
 }
    }

  template<typename _CharT, typename _Traits>
    template<typename _ValueT>
      basic_istream<_CharT, _Traits>&
      basic_istream<_CharT, _Traits>::
      _M_extract(_ValueT& __v)
      {
 sentry __cerb(*this, false);
 if (__cerb)
   {
     ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
     try
       {
  const __num_get_type& __ng = __check_facet(this->_M_num_get);
  __ng.get(*this, 0, *this, __err, __v);
       }
     catch(...)
       { this->_M_setstate(ios_base::badbit); }
     if (__err)
       this->setstate(__err);
   }
 return *this;
      }

  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    basic_istream<_CharT, _Traits>::
    operator>>(short& __n)
    {


      long __l;
      _M_extract(__l);
      if (!this->fail())
 {
   if (numeric_limits<short>::min() <= __l
       && __l <= numeric_limits<short>::max())
     __n = __l;
   else
     this->setstate(ios_base::failbit);
 }
      return *this;
    }

  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    basic_istream<_CharT, _Traits>::
    operator>>(int& __n)
    {


      long __l;
      _M_extract(__l);
      if (!this->fail())
 {
   if (numeric_limits<int>::min() <= __l
       && __l <= numeric_limits<int>::max())
     __n = __l;
   else
     this->setstate(ios_base::failbit);
 }
      return *this;
    }

  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    basic_istream<_CharT, _Traits>::
    operator>>(__streambuf_type* __sbout)
    {
      ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
      sentry __cerb(*this, false);
      if (__cerb && __sbout)
 {
   try
     {
       bool __ineof;
       if (!__copy_streambufs_eof(this->rdbuf(), __sbout, __ineof))
  __err |= ios_base::failbit;
       if (__ineof)
  __err |= ios_base::eofbit;
     }
   catch(...)
     { this->_M_setstate(ios_base::failbit); }
 }
      else if (!__sbout)
 __err |= ios_base::failbit;
      if (__err)
 this->setstate(__err);
      return *this;
    }

  template<typename _CharT, typename _Traits>
    typename basic_istream<_CharT, _Traits>::int_type
    basic_istream<_CharT, _Traits>::
    get(void)
    {
      const int_type __eof = traits_type::eof();
      int_type __c = __eof;
      _M_gcount = 0;
      ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
      sentry __cerb(*this, true);
      if (__cerb)
 {
   try
     {
       __c = this->rdbuf()->sbumpc();

       if (!traits_type::eq_int_type(__c, __eof))
  _M_gcount = 1;
       else
  __err |= ios_base::eofbit;
     }
   catch(...)
     { this->_M_setstate(ios_base::badbit); }
 }
      if (!_M_gcount)
 __err |= ios_base::failbit;
      if (__err)
 this->setstate(__err);
      return __c;
    }

  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    basic_istream<_CharT, _Traits>::
    get(char_type& __c)
    {
      _M_gcount = 0;
      ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
      sentry __cerb(*this, true);
      if (__cerb)
 {
   try
     {
       const int_type __cb = this->rdbuf()->sbumpc();

       if (!traits_type::eq_int_type(__cb, traits_type::eof()))
  {
    _M_gcount = 1;
    __c = traits_type::to_char_type(__cb);
  }
       else
  __err |= ios_base::eofbit;
     }
   catch(...)
     { this->_M_setstate(ios_base::badbit); }
 }
      if (!_M_gcount)
 __err |= ios_base::failbit;
      if (__err)
 this->setstate(__err);
      return *this;
    }

  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    basic_istream<_CharT, _Traits>::
    get(char_type* __s, streamsize __n, char_type __delim)
    {
      _M_gcount = 0;
      ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
      sentry __cerb(*this, true);
      if (__cerb)
 {
   try
     {
       const int_type __idelim = traits_type::to_int_type(__delim);
       const int_type __eof = traits_type::eof();
       __streambuf_type* __sb = this->rdbuf();
       int_type __c = __sb->sgetc();

       while (_M_gcount + 1 < __n
       && !traits_type::eq_int_type(__c, __eof)
       && !traits_type::eq_int_type(__c, __idelim))
  {
    *__s++ = traits_type::to_char_type(__c);
    ++_M_gcount;
    __c = __sb->snextc();
  }
       if (traits_type::eq_int_type(__c, __eof))
  __err |= ios_base::eofbit;
     }
   catch(...)
     { this->_M_setstate(ios_base::badbit); }
 }


      if (__n > 0)
 *__s = char_type();
      if (!_M_gcount)
 __err |= ios_base::failbit;
      if (__err)
 this->setstate(__err);
      return *this;
    }

  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    basic_istream<_CharT, _Traits>::
    get(__streambuf_type& __sb, char_type __delim)
    {
      _M_gcount = 0;
      ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
      sentry __cerb(*this, true);
      if (__cerb)
 {
   try
     {
       const int_type __idelim = traits_type::to_int_type(__delim);
       const int_type __eof = traits_type::eof();
       __streambuf_type* __this_sb = this->rdbuf();
       int_type __c = __this_sb->sgetc();
       char_type __c2 = traits_type::to_char_type(__c);

       while (!traits_type::eq_int_type(__c, __eof)
       && !traits_type::eq_int_type(__c, __idelim)
       && !traits_type::eq_int_type(__sb.sputc(__c2), __eof))
  {
    ++_M_gcount;
    __c = __this_sb->snextc();
    __c2 = traits_type::to_char_type(__c);
  }
       if (traits_type::eq_int_type(__c, __eof))
  __err |= ios_base::eofbit;
     }
   catch(...)
     { this->_M_setstate(ios_base::badbit); }
 }
      if (!_M_gcount)
 __err |= ios_base::failbit;
      if (__err)
 this->setstate(__err);
      return *this;
    }

  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    basic_istream<_CharT, _Traits>::
    getline(char_type* __s, streamsize __n, char_type __delim)
    {
      _M_gcount = 0;
      ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
      sentry __cerb(*this, true);
      if (__cerb)
        {
          try
            {
              const int_type __idelim = traits_type::to_int_type(__delim);
              const int_type __eof = traits_type::eof();
              __streambuf_type* __sb = this->rdbuf();
              int_type __c = __sb->sgetc();

              while (_M_gcount + 1 < __n
                     && !traits_type::eq_int_type(__c, __eof)
                     && !traits_type::eq_int_type(__c, __idelim))
                {
                  *__s++ = traits_type::to_char_type(__c);
                  __c = __sb->snextc();
                  ++_M_gcount;
                }
              if (traits_type::eq_int_type(__c, __eof))
                __err |= ios_base::eofbit;
              else
                {
                  if (traits_type::eq_int_type(__c, __idelim))
                    {
                      __sb->sbumpc();
                      ++_M_gcount;
                    }
                  else
                    __err |= ios_base::failbit;
                }
            }
          catch(...)
            { this->_M_setstate(ios_base::badbit); }
        }


      if (__n > 0)
 *__s = char_type();
      if (!_M_gcount)
        __err |= ios_base::failbit;
      if (__err)
        this->setstate(__err);
      return *this;
    }




  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    basic_istream<_CharT, _Traits>::
    ignore(void)
    {
      _M_gcount = 0;
      sentry __cerb(*this, true);
      if (__cerb)
 {
   ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
   try
     {
       const int_type __eof = traits_type::eof();
       __streambuf_type* __sb = this->rdbuf();

       if (traits_type::eq_int_type(__sb->sbumpc(), __eof))
  __err |= ios_base::eofbit;
       else
  _M_gcount = 1;
     }
   catch(...)
     { this->_M_setstate(ios_base::badbit); }
   if (__err)
     this->setstate(__err);
 }
      return *this;
    }

  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    basic_istream<_CharT, _Traits>::
    ignore(streamsize __n)
    {
      _M_gcount = 0;
      sentry __cerb(*this, true);
      if (__cerb && __n > 0)
        {
          ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
          try
            {
              const int_type __eof = traits_type::eof();
              __streambuf_type* __sb = this->rdbuf();
              int_type __c = __sb->sgetc();
# 429 "/usr/include/c++/4.2.1/bits/istream.tcc" 3
       bool __large_ignore = false;
       while (true)
  {
    while (_M_gcount < __n
    && !traits_type::eq_int_type(__c, __eof))
      {
        ++_M_gcount;
        __c = __sb->snextc();
      }
    if (__n == numeric_limits<streamsize>::max()
        && !traits_type::eq_int_type(__c, __eof))
      {
        _M_gcount = numeric_limits<streamsize>::min();
        __large_ignore = true;
      }
    else
      break;
  }

       if (__large_ignore)
  _M_gcount = numeric_limits<streamsize>::max();

       if (traits_type::eq_int_type(__c, __eof))
                __err |= ios_base::eofbit;
            }
          catch(...)
            { this->_M_setstate(ios_base::badbit); }
          if (__err)
            this->setstate(__err);
        }
      return *this;
    }

  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    basic_istream<_CharT, _Traits>::
    ignore(streamsize __n, int_type __delim)
    {
      _M_gcount = 0;
      sentry __cerb(*this, true);
      if (__cerb && __n > 0)
        {
          ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
          try
            {
              const int_type __eof = traits_type::eof();
              __streambuf_type* __sb = this->rdbuf();
              int_type __c = __sb->sgetc();


       bool __large_ignore = false;
       while (true)
  {
    while (_M_gcount < __n
    && !traits_type::eq_int_type(__c, __eof)
    && !traits_type::eq_int_type(__c, __delim))
      {
        ++_M_gcount;
        __c = __sb->snextc();
      }
    if (__n == numeric_limits<streamsize>::max()
        && !traits_type::eq_int_type(__c, __eof)
        && !traits_type::eq_int_type(__c, __delim))
      {
        _M_gcount = numeric_limits<streamsize>::min();
        __large_ignore = true;
      }
    else
      break;
  }

       if (__large_ignore)
  _M_gcount = numeric_limits<streamsize>::max();

              if (traits_type::eq_int_type(__c, __eof))
                __err |= ios_base::eofbit;
       else if (traits_type::eq_int_type(__c, __delim))
  {
    if (_M_gcount < numeric_limits<streamsize>::max())
      ++_M_gcount;
    __sb->sbumpc();
  }
            }
          catch(...)
            { this->_M_setstate(ios_base::badbit); }
          if (__err)
            this->setstate(__err);
        }
      return *this;
    }

  template<typename _CharT, typename _Traits>
    typename basic_istream<_CharT, _Traits>::int_type
    basic_istream<_CharT, _Traits>::
    peek(void)
    {
      int_type __c = traits_type::eof();
      _M_gcount = 0;
      sentry __cerb(*this, true);
      if (__cerb)
 {
   ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
   try
     {
       __c = this->rdbuf()->sgetc();
       if (traits_type::eq_int_type(__c, traits_type::eof()))
  __err |= ios_base::eofbit;
     }
   catch(...)
     { this->_M_setstate(ios_base::badbit); }
   if (__err)
     this->setstate(__err);
 }
      return __c;
    }

  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    basic_istream<_CharT, _Traits>::
    read(char_type* __s, streamsize __n)
    {
      _M_gcount = 0;
      sentry __cerb(*this, true);
      if (__cerb)
 {
   ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
   try
     {
       _M_gcount = this->rdbuf()->sgetn(__s, __n);
       if (_M_gcount != __n)
  __err |= (ios_base::eofbit | ios_base::failbit);
     }
   catch(...)
     { this->_M_setstate(ios_base::badbit); }
   if (__err)
     this->setstate(__err);
 }
      return *this;
    }

  template<typename _CharT, typename _Traits>
    streamsize
    basic_istream<_CharT, _Traits>::
    readsome(char_type* __s, streamsize __n)
    {
      _M_gcount = 0;
      sentry __cerb(*this, true);
      if (__cerb)
 {
   ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
   try
     {

       const streamsize __num = this->rdbuf()->in_avail();
       if (__num > 0)
  _M_gcount = this->rdbuf()->sgetn(__s, std::min(__num, __n));
       else if (__num == -1)
  __err |= ios_base::eofbit;
     }
   catch(...)
     { this->_M_setstate(ios_base::badbit); }
   if (__err)
     this->setstate(__err);
 }
      return _M_gcount;
    }

  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    basic_istream<_CharT, _Traits>::
    putback(char_type __c)
    {


      _M_gcount = 0;
      sentry __cerb(*this, true);
      if (__cerb)
 {
   ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
   try
     {
       const int_type __eof = traits_type::eof();
       __streambuf_type* __sb = this->rdbuf();
       if (!__sb
    || traits_type::eq_int_type(__sb->sputbackc(__c), __eof))
  __err |= ios_base::badbit;
     }
   catch(...)
     { this->_M_setstate(ios_base::badbit); }
   if (__err)
     this->setstate(__err);
 }
      return *this;
    }

  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    basic_istream<_CharT, _Traits>::
    unget(void)
    {


      _M_gcount = 0;
      sentry __cerb(*this, true);
      if (__cerb)
 {
   ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
   try
     {
       const int_type __eof = traits_type::eof();
       __streambuf_type* __sb = this->rdbuf();
       if (!__sb
    || traits_type::eq_int_type(__sb->sungetc(), __eof))
  __err |= ios_base::badbit;
     }
   catch(...)
     { this->_M_setstate(ios_base::badbit); }
   if (__err)
     this->setstate(__err);
 }
      return *this;
    }

  template<typename _CharT, typename _Traits>
    int
    basic_istream<_CharT, _Traits>::
    sync(void)
    {


      int __ret = -1;
      sentry __cerb(*this, true);
      if (__cerb)
 {
   ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
   try
     {
       __streambuf_type* __sb = this->rdbuf();
       if (__sb)
  {
    if (__sb->pubsync() == -1)
      __err |= ios_base::badbit;
    else
      __ret = 0;
  }
     }
   catch(...)
     { this->_M_setstate(ios_base::badbit); }
   if (__err)
     this->setstate(__err);
 }
      return __ret;
    }

  template<typename _CharT, typename _Traits>
    typename basic_istream<_CharT, _Traits>::pos_type
    basic_istream<_CharT, _Traits>::
    tellg(void)
    {


      pos_type __ret = pos_type(-1);
      try
 {
   if (!this->fail())
     __ret = this->rdbuf()->pubseekoff(0, ios_base::cur,
           ios_base::in);
 }
      catch(...)
 { this->_M_setstate(ios_base::badbit); }
      return __ret;
    }

  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    basic_istream<_CharT, _Traits>::
    seekg(pos_type __pos)
    {


      ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
      try
 {
   if (!this->fail())
     {

       const pos_type __p = this->rdbuf()->pubseekpos(__pos,
            ios_base::in);


       if (__p == pos_type(off_type(-1)))
  __err |= ios_base::failbit;
     }
 }
      catch(...)
 { this->_M_setstate(ios_base::badbit); }
      if (__err)
 this->setstate(__err);
      return *this;
    }

  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    basic_istream<_CharT, _Traits>::
    seekg(off_type __off, ios_base::seekdir __dir)
    {


      ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
      try
 {
   if (!this->fail())
     {

       const pos_type __p = this->rdbuf()->pubseekoff(__off, __dir,
            ios_base::in);


       if (__p == pos_type(off_type(-1)))
  __err |= ios_base::failbit;
     }
 }
      catch(...)
 { this->_M_setstate(ios_base::badbit); }
      if (__err)
 this->setstate(__err);
      return *this;
    }


  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    operator>>(basic_istream<_CharT, _Traits>& __in, _CharT& __c)
    {
      typedef basic_istream<_CharT, _Traits> __istream_type;
      typedef typename __istream_type::int_type __int_type;

      typename __istream_type::sentry __cerb(__in, false);
      if (__cerb)
 {
   ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
   try
     {
       const __int_type __cb = __in.rdbuf()->sbumpc();
       if (!_Traits::eq_int_type(__cb, _Traits::eof()))
  __c = _Traits::to_char_type(__cb);
       else
  __err |= (ios_base::eofbit | ios_base::failbit);
     }
   catch(...)
     { __in._M_setstate(ios_base::badbit); }
   if (__err)
     __in.setstate(__err);
 }
      return __in;
    }

  template<typename _CharT, typename _Traits>
    basic_istream<_CharT, _Traits>&
    operator>>(basic_istream<_CharT, _Traits>& __in, _CharT* __s)
    {
      typedef basic_istream<_CharT, _Traits> __istream_type;
      typedef typename __istream_type::__streambuf_type __streambuf_type;
      typedef typename _Traits::int_type int_type;
      typedef _CharT char_type;
      typedef ctype<_CharT> __ctype_type;

      streamsize __extracted = 0;
      ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
      typename __istream_type::sentry __cerb(__in, false);
      if (__cerb)
 {
   try
     {

       streamsize __num = __in.width();
       if (__num <= 0)
  __num = numeric_limits<streamsize>::max();

       const __ctype_type& __ct = use_facet<__ctype_type>(__in.getloc());

       const int_type __eof = _Traits::eof();
       __streambuf_type* __sb = __in.rdbuf();
       int_type __c = __sb->sgetc();

       while (__extracted < __num - 1
       && !_Traits::eq_int_type(__c, __eof)
       && !__ct.is(ctype_base::space,
     _Traits::to_char_type(__c)))
  {
    *__s++ = _Traits::to_char_type(__c);
    ++__extracted;
    __c = __sb->snextc();
  }
       if (_Traits::eq_int_type(__c, __eof))
  __err |= ios_base::eofbit;



       *__s = char_type();
       __in.width(0);
     }
   catch(...)
     { __in._M_setstate(ios_base::badbit); }
 }
      if (!__extracted)
 __err |= ios_base::failbit;
      if (__err)
 __in.setstate(__err);
      return __in;
    }


  template<typename _CharT, typename _Traits>
    basic_istream<_CharT,_Traits>&
    ws(basic_istream<_CharT,_Traits>& __in)
    {
      typedef basic_istream<_CharT, _Traits> __istream_type;
      typedef typename __istream_type::__streambuf_type __streambuf_type;
      typedef typename __istream_type::__ctype_type __ctype_type;
      typedef typename __istream_type::int_type __int_type;

      const __ctype_type& __ct = use_facet<__ctype_type>(__in.getloc());
      const __int_type __eof = _Traits::eof();
      __streambuf_type* __sb = __in.rdbuf();
      __int_type __c = __sb->sgetc();

      while (!_Traits::eq_int_type(__c, __eof)
      && __ct.is(ctype_base::space, _Traits::to_char_type(__c)))
 __c = __sb->snextc();

       if (_Traits::eq_int_type(__c, __eof))
  __in.setstate(ios_base::eofbit);
      return __in;
    }


  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_istream<_CharT, _Traits>&
    operator>>(basic_istream<_CharT, _Traits>& __in,
        basic_string<_CharT, _Traits, _Alloc>& __str)
    {
      typedef basic_istream<_CharT, _Traits> __istream_type;
      typedef typename __istream_type::int_type __int_type;
      typedef typename __istream_type::__streambuf_type __streambuf_type;
      typedef typename __istream_type::__ctype_type __ctype_type;
      typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
      typedef typename __string_type::size_type __size_type;

      __size_type __extracted = 0;
      ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
      typename __istream_type::sentry __cerb(__in, false);
      if (__cerb)
 {
   try
     {

       __str.erase();
       _CharT __buf[128];
       __size_type __len = 0;
       const streamsize __w = __in.width();
       const __size_type __n = __w > 0 ? static_cast<__size_type>(__w)
                                : __str.max_size();
       const __ctype_type& __ct = use_facet<__ctype_type>(__in.getloc());
       const __int_type __eof = _Traits::eof();
       __streambuf_type* __sb = __in.rdbuf();
       __int_type __c = __sb->sgetc();

       while (__extracted < __n
       && !_Traits::eq_int_type(__c, __eof)
       && !__ct.is(ctype_base::space, _Traits::to_char_type(__c)))
  {
    if (__len == sizeof(__buf) / sizeof(_CharT))
      {
        __str.append(__buf, sizeof(__buf) / sizeof(_CharT));
        __len = 0;
      }
    __buf[__len++] = _Traits::to_char_type(__c);
    ++__extracted;
    __c = __sb->snextc();
  }
       __str.append(__buf, __len);

       if (_Traits::eq_int_type(__c, __eof))
  __err |= ios_base::eofbit;
       __in.width(0);
     }
   catch(...)
     {



       __in._M_setstate(ios_base::badbit);
     }
 }

      if (!__extracted)
 __err |= ios_base::failbit;
      if (__err)
 __in.setstate(__err);
      return __in;
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_istream<_CharT, _Traits>&
    getline(basic_istream<_CharT, _Traits>& __in,
     basic_string<_CharT, _Traits, _Alloc>& __str, _CharT __delim)
    {
      typedef basic_istream<_CharT, _Traits> __istream_type;
      typedef typename __istream_type::int_type __int_type;
      typedef typename __istream_type::__streambuf_type __streambuf_type;
      typedef typename __istream_type::__ctype_type __ctype_type;
      typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
      typedef typename __string_type::size_type __size_type;

      __size_type __extracted = 0;
      const __size_type __n = __str.max_size();
      ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);
      typename __istream_type::sentry __cerb(__in, true);
      if (__cerb)
 {
   try
     {
       __str.erase();
       const __int_type __idelim = _Traits::to_int_type(__delim);
       const __int_type __eof = _Traits::eof();
       __streambuf_type* __sb = __in.rdbuf();
       __int_type __c = __sb->sgetc();

       while (__extracted < __n
       && !_Traits::eq_int_type(__c, __eof)
       && !_Traits::eq_int_type(__c, __idelim))
  {
    __str += _Traits::to_char_type(__c);
    ++__extracted;
    __c = __sb->snextc();
  }

       if (_Traits::eq_int_type(__c, __eof))
  __err |= ios_base::eofbit;
       else if (_Traits::eq_int_type(__c, __idelim))
  {
    ++__extracted;
    __sb->sbumpc();
  }
       else
  __err |= ios_base::failbit;
     }
   catch(...)
     {



       __in._M_setstate(ios_base::badbit);
     }
 }
      if (!__extracted)
 __err |= ios_base::failbit;
      if (__err)
 __in.setstate(__err);
      return __in;
    }





  extern template class basic_istream<char>;
  extern template istream& ws(istream&);
  extern template istream& operator>>(istream&, char&);
  extern template istream& operator>>(istream&, char*);
  extern template istream& operator>>(istream&, unsigned char&);
  extern template istream& operator>>(istream&, signed char&);
  extern template istream& operator>>(istream&, unsigned char*);
  extern template istream& operator>>(istream&, signed char*);

  extern template istream& istream::_M_extract(unsigned short&);
  extern template istream& istream::_M_extract(unsigned int&);
  extern template istream& istream::_M_extract(long&);
  extern template istream& istream::_M_extract(unsigned long&);
  extern template istream& istream::_M_extract(bool&);

  extern template istream& istream::_M_extract(long long&);
  extern template istream& istream::_M_extract(unsigned long long&);

  extern template istream& istream::_M_extract(float&);
  extern template istream& istream::_M_extract(double&);
  extern template istream& istream::_M_extract(long double&);
  extern template istream& istream::_M_extract(void*&);

  extern template class basic_iostream<char>;


  extern template class basic_istream<wchar_t>;
  extern template wistream& ws(wistream&);
  extern template wistream& operator>>(wistream&, wchar_t&);
  extern template wistream& operator>>(wistream&, wchar_t*);

  extern template wistream& wistream::_M_extract(unsigned short&);
  extern template wistream& wistream::_M_extract(unsigned int&);
  extern template wistream& wistream::_M_extract(long&);
  extern template wistream& wistream::_M_extract(unsigned long&);
  extern template wistream& wistream::_M_extract(bool&);

  extern template wistream& wistream::_M_extract(long long&);
  extern template wistream& wistream::_M_extract(unsigned long long&);

  extern template wistream& wistream::_M_extract(float&);
  extern template wistream& wistream::_M_extract(double&);
  extern template wistream& wistream::_M_extract(long double&);
  extern template wistream& wistream::_M_extract(void*&);

  extern template class basic_iostream<wchar_t>;



}
# 846 "/usr/include/c++/4.2.1/istream" 2 3
# 47 "/usr/include/c++/4.2.1/iostream" 2 3

namespace std {
# 63 "/usr/include/c++/4.2.1/iostream" 3
  extern istream cin;
  extern ostream cout;
  extern ostream cerr;
  extern ostream clog;


  extern wistream wcin;
  extern wostream wcout;
  extern wostream wcerr;
  extern wostream wclog;




  static ios_base::Init __ioinit;

}
# 52 "/Applications/Autodesk/maya2011/devkit/include/maya/MIOStream.h" 2

 using std::cout;
 using std::cin;
 using std::cerr;
 using std::clog;

 using std::endl;
 using std::flush;
 using std::ws;

 using std::streampos;

 using std::iostream;
 using std::ostream;
 using std::istream;
 using std::ios;
# 51 "/Applications/Autodesk/maya2011/devkit/include/maya/MStatus.h" 2
# 59 "/Applications/Autodesk/maya2011/devkit/include/maya/MStatus.h"
class MString;
# 72 "/Applications/Autodesk/maya2011/devkit/include/maya/MStatus.h"
class MStatus
{
public:


 enum MStatusCode
 {

  kSuccess = 0,

  kFailure,

  kInsufficientMemory,

  kInvalidParameter,

  kLicenseFailure,

  kUnknownParameter,

  kNotImplemented,

  kNotFound,

  kEndOfFile
 };

      MStatus();
      MStatus( MStatusCode );
      MStatus( const MStatus& );

 MStatus& operator=( const MStatus& rhs);
 bool operator==( const MStatus& rhs ) const;
 bool operator==( const MStatusCode rhs ) const;
 bool operator!=( const MStatus& rhs ) const;
 bool operator!=( const MStatusCode rhs ) const;
 bool error() const;
 void clear();
 MStatusCode statusCode() const;
 MString errorString() const;
public:
 void perror( const char * ) const;
public:
 void perror( const MString& ) const;

 void set( bool status,
        unsigned char statusCode,
        unsigned char internalStatusCode);

 void setSuccess();

public:


 operator bool() const
 {
  return fStatus;
 }


 friend std::ostream& operator<<( std::ostream&, MStatus&);

 friend inline bool operator==( const MStatus::MStatusCode code,
               const MStatus& status )
 {
  return ( status.fStatusCode == code );
 }


 friend inline bool operator!=( const MStatus::MStatusCode code,
               const MStatus& status )
 {
  return ( status.fStatusCode != code );
 }

public:

protected:


private:
 unsigned char fStatusCode;
 unsigned char fInternalStatusCode;
 bool fStatus;
};






typedef MStatus MS;
# 227 "/Applications/Autodesk/maya2011/devkit/include/maya/MStatus.h"
inline MStatus::MStatus()
: fStatusCode( kSuccess ),
  fInternalStatusCode( 0xff ),
  fStatus( true )
{
}







inline MStatus::MStatus( const MStatus& status )
: fStatusCode(status.fStatusCode),
 fInternalStatusCode(status.fInternalStatusCode),
 fStatus(status.fStatus)
{
}
# 255 "/Applications/Autodesk/maya2011/devkit/include/maya/MStatus.h"
inline MStatus& MStatus::operator=( const MStatus& rhs )
{
 fStatusCode = rhs.fStatusCode;
 fInternalStatusCode = rhs.fInternalStatusCode;
 fStatus = rhs.fStatus;
 return *this;
}
# 272 "/Applications/Autodesk/maya2011/devkit/include/maya/MStatus.h"
inline bool MStatus::operator==( const MStatus& rhs ) const
{
 return ( fStatusCode == rhs.fStatusCode );
}
# 286 "/Applications/Autodesk/maya2011/devkit/include/maya/MStatus.h"
inline bool MStatus::operator==( const MStatus::MStatusCode rhs ) const
{
 return ( fStatusCode == rhs );
}
# 300 "/Applications/Autodesk/maya2011/devkit/include/maya/MStatus.h"
inline bool MStatus::operator!=( const MStatus& rhs ) const
{
 return ( fStatusCode != rhs.fStatusCode );
}
# 314 "/Applications/Autodesk/maya2011/devkit/include/maya/MStatus.h"
inline bool MStatus::operator!=( const MStatus::MStatusCode rhs ) const
{
 return ( fStatusCode != rhs );
}
# 326 "/Applications/Autodesk/maya2011/devkit/include/maya/MStatus.h"
inline bool MStatus::error() const
{
 return !fStatus;
}
# 338 "/Applications/Autodesk/maya2011/devkit/include/maya/MStatus.h"
inline MStatus::MStatusCode MStatus::statusCode() const
{
 return ( MStatus::MStatusCode ) fStatusCode;
}
# 351 "/Applications/Autodesk/maya2011/devkit/include/maya/MStatus.h"
inline void MStatus::set(
 bool status,
 unsigned char statusCode,
 unsigned char internalStatusCode)
{
 fStatus = status;
 fStatusCode = statusCode;
 fInternalStatusCode = internalStatusCode;
}





inline void MStatus::setSuccess()
{
 fStatus = true;
 fStatusCode = MStatus::kSuccess;
 fInternalStatusCode = 0xff;
}





inline void MStatus::clear()
{
 fStatusCode = kSuccess;
 fInternalStatusCode = 0xff;
 fStatus = true;
}
# 49 "/Applications/Autodesk/maya2011/devkit/include/maya/MPxLocatorNode.h" 2

# 1 "/Applications/Autodesk/maya2011/devkit/include/maya/MObject.h" 1
# 94 "/Applications/Autodesk/maya2011/devkit/include/maya/MObject.h"
# 1 "/Applications/Autodesk/maya2011/devkit/include/maya/MFn.h" 1
# 87 "/Applications/Autodesk/maya2011/devkit/include/maya/MFn.h"
class MFn
{
public:
 MFn();


 enum Type
 {
  kInvalid = 0,
  kBase,
  kNamedObject,
  kModel,
  kDependencyNode,
  kAddDoubleLinear,
  kAffect,
  kAnimCurve,
  kAnimCurveTimeToAngular,
  kAnimCurveTimeToDistance,
  kAnimCurveTimeToTime,
  kAnimCurveTimeToUnitless,
  kAnimCurveUnitlessToAngular,
  kAnimCurveUnitlessToDistance,
  kAnimCurveUnitlessToTime,
  kAnimCurveUnitlessToUnitless,
  kResultCurve,
  kResultCurveTimeToAngular,
  kResultCurveTimeToDistance,
  kResultCurveTimeToTime,
  kResultCurveTimeToUnitless,
  kAngleBetween,
  kAudio,
  kBackground,
  kColorBackground,
  kFileBackground,
  kRampBackground,
  kBlend,
  kBlendTwoAttr,
  kBlendWeighted,
  kBlendDevice,
  kBlendColors,
  kBump,
  kBump3d,
  kCameraView,
  kChainToSpline,
  kChoice,
  kCondition,
  kContrast,
  kClampColor,
  kCreate,
  kAlignCurve,
  kAlignSurface,
  kAttachCurve,
  kAttachSurface,
  kAvgCurves,
  kAvgSurfacePoints,
  kAvgNurbsSurfacePoints,
  kBevel,
  kBirailSrf,
  kDPbirailSrf,
  kMPbirailSrf,
  kSPbirailSrf,
  kBoundary,
  kCircle,
  kCloseCurve,
  kClosestPointOnSurface,
  kCloseSurface,
  kCurveFromSurface,
  kCurveFromSurfaceBnd,
  kCurveFromSurfaceCoS,
  kCurveFromSurfaceIso,
  kCurveInfo,
  kDetachCurve,
  kDetachSurface,
  kExtendCurve,
  kExtendSurface,
  kExtrude,
  kFFblendSrf,
  kFFfilletSrf,
  kFilletCurve,
  kFitBspline,
  kFlow,
  kHardenPointCurve,
  kIllustratorCurve,
  kInsertKnotCrv,
  kInsertKnotSrf,
  kIntersectSurface,
  kNurbsTesselate,
  kNurbsPlane,
  kNurbsCube,
  kOffsetCos,
  kOffsetCurve,
  kPlanarTrimSrf,
  kPointOnCurveInfo,
  kPointOnSurfaceInfo,
  kPrimitive,
  kProjectCurve,
  kProjectTangent,
  kRBFsurface,
  kRebuildCurve,
  kRebuildSurface,
  kReverseCurve,
  kReverseSurface,
  kRevolve,
  kRevolvedPrimitive,
  kCone,
  kRenderCone,
  kCylinder,
  kSphere,
  kSkin,
  kStitchSrf,
  kSubCurve,
  kSurfaceInfo,
  kTextCurves,
  kTrim,
  kUntrim,
  kDagNode,
  kProxy,
  kUnderWorld,
  kTransform,
  kAimConstraint,
  kLookAt,
  kGeometryConstraint,
  kGeometryVarGroup,
  kAnyGeometryVarGroup,
  kCurveVarGroup,
  kMeshVarGroup,
  kSurfaceVarGroup,
  kIkEffector,
  kIkHandle,
  kJoint,
  kManipulator3D,
  kArrowManip,
  kAxesActionManip,
  kBallProjectionManip,
  kCircleManip,
  kScreenAlignedCircleManip,
  kCircleSweepManip,
  kConcentricProjectionManip,
  kCubicProjectionManip,
  kCylindricalProjectionManip,
  kDiscManip,
  kFreePointManip,
  kCenterManip,
  kLimitManip,
  kEnableManip,
  kFreePointTriadManip,
  kPropMoveTriadManip,
  kTowPointManip,
  kPolyCreateToolManip,
  kPolySplitToolManip,
  kGeometryOnLineManip,
  kCameraPlaneManip,
  kToggleOnLineManip,
  kStateManip,
  kIsoparmManip,
  kLineManip,
  kManipContainer,
  kAverageCurveManip,
  kBarnDoorManip,
  kBevelManip,
  kBlendManip,
  kButtonManip,
  kCameraManip,
  kCoiManip,
  kCpManip,
  kCreateCVManip,
  kCreateEPManip,
  kCurveEdManip,
  kCurveSegmentManip,
  kDirectionManip,
  kDofManip,
  kDropoffManip,
  kExtendCurveDistanceManip,
  kExtrudeManip,
  kIkSplineManip,
  kIkRPManip,
  kJointClusterManip,
  kLightManip,
  kMotionPathManip,
  kOffsetCosManip,
  kOffsetCurveManip,
  kProjectionManip,
  kPolyProjectionManip,
  kProjectionUVManip,
  kProjectionMultiManip,
  kProjectTangentManip,
  kPropModManip,
  kQuadPtOnLineManip,
  kRbfSrfManip,
  kReverseCurveManip,
  kReverseCrvManip,
  kReverseSurfaceManip,
  kRevolveManip,
  kRevolvedPrimitiveManip,
  kSpotManip,
  kSpotCylinderManip,
  kTriplanarProjectionManip,
  kTrsManip,
  kDblTrsManip,
  kPivotManip2D,
  kManip2DContainer,
  kPolyMoveUVManip,
  kPolyMappingManip,
  kPolyModifierManip,
  kPolyMoveVertexManip,
  kPolyVertexNormalManip,
  kTexSmudgeUVManip,
  kTexLatticeDeformManip,
  kTexLattice,
  kTexSmoothManip,
  kTrsTransManip,
  kTrsInsertManip,
  kTrsXformManip,
  kManipulator2D,
  kTranslateManip2D,
  kPlanarProjectionManip,
  kPointOnCurveManip,
  kTowPointOnCurveManip,
  kMarkerManip,
  kPointOnLineManip,
  kPointOnSurfaceManip,
  kTranslateUVManip,
  kRotateBoxManip,
  kRotateManip,
  kHandleRotateManip,
  kRotateLimitsManip,
  kScaleLimitsManip,
  kScaleManip,
  kScalingBoxManip,
  kScriptManip,
  kSphericalProjectionManip,
  kTextureManip3D,
  kToggleManip,
  kTranslateBoxManip,
  kTranslateLimitsManip,
  kTranslateManip,
  kTrimManip,
  kJointTranslateManip,
  kManipulator,
  kCirclePointManip,
  kDimensionManip,
  kFixedLineManip,
  kLightProjectionGeometry,
  kLineArrowManip,
  kPointManip,
  kTriadManip,
  kNormalConstraint,
  kOrientConstraint,
  kPointConstraint,
  kParentConstraint,
  kPoleVectorConstraint,
  kScaleConstraint,
  kTangentConstraint,
  kUnknownTransform,
  kWorld,
  kShape,
  kBaseLattice,
  kCamera,
  kCluster,
  kSoftMod,
  kCollision,
  kDummy,
  kEmitter,
  kField,
  kAir,
  kDrag,
  kGravity,
  kNewton,
  kRadial,
  kTurbulence,
  kUniform,
  kVortex,
  kGeometric,
  kCurve,
  kNurbsCurve,
  kNurbsCurveGeom,
  kDimension,
  kAngle,
  kAnnotation,
  kDistance,
  kArcLength,
  kRadius,
  kParamDimension,
  kDirectedDisc,
  kRenderRect,
  kEnvFogShape,
  kLattice,
  kLatticeGeom,
  kLocator,
  kDropoffLocator,
  kMarker,
  kOrientationMarker,
  kPositionMarker,
  kOrientationLocator,
  kTrimLocator,
  kPlane,
  kSketchPlane,
  kGroundPlane,
  kOrthoGrid,
  kSprite,
  kSurface,
  kNurbsSurface,
  kNurbsSurfaceGeom,
  kMesh,
  kMeshGeom,
  kRenderSphere,
  kFlexor,
  kClusterFlexor,
  kGuideLine,
  kLight,
  kAmbientLight,
  kNonAmbientLight,
  kAreaLight,
  kLinearLight,
  kNonExtendedLight,
  kDirectionalLight,
  kPointLight,
  kSpotLight,
  kParticle,
  kPolyToolFeedbackShape,
  kRigidConstraint,
  kRigid,
  kSpring,
  kUnknownDag,
  kDefaultLightList,
  kDeleteComponent,
  kDispatchCompute,
  kShadingEngine,
  kDisplacementShader,
  kDistanceBetween,
  kDOF,
  kDummyConnectable,
  kDynamicsController,
  kGeoConnectable,
  kExpression,
  kExtract,
  kFilter,
  kFilterClosestSample,
  kFilterEuler,
  kFilterSimplify,
  kGammaCorrect,
  kGeometryFilt,
  kBendLattice,
  kBlendShape,
  kBulgeLattice,
  kFFD,
  kFfdDualBase,
  kRigidDeform,
  kSculpt,
  kTweak,
  kWeightGeometryFilt,
  kClusterFilter,
  kSoftModFilter,
  kJointCluster,
  kWire,
  kGroupId,
  kGroupParts,
  kGuide,
  kHsvToRgb,
  kHyperGraphInfo,
  kHyperLayout,
  kHyperView,
  kIkSolver,
  kMCsolver,
  kPASolver,
  kSCsolver,
  kRPsolver,
  kSplineSolver,
  kIkSystem,
  kImagePlane,
  kLambert,
  kReflect,
  kBlinn,
  kPhong,
  kPhongExplorer,
  kLayeredShader,
  kLightInfo,
  kLeastSquares,
  kLightFogMaterial,
  kEnvFogMaterial,
  kLightList,
  kLightSource,
  kLuminance,
  kMakeGroup,
  kMaterial,
  kDiffuseMaterial,
  kLambertMaterial,
  kBlinnMaterial,
  kPhongMaterial,
  kLightSourceMaterial,
  kMaterialInfo,
  kMatrixAdd,
  kMatrixHold,
  kMatrixMult,
  kMatrixPass,
  kMatrixWtAdd,
  kMidModifier,
  kMidModifierWithMatrix,
  kPolyBevel,
  kPolyTweak,
  kPolyAppend,
  kPolyChipOff,
  kPolyCloseBorder,
  kPolyCollapseEdge,
  kPolyCollapseF,
  kPolyCylProj,
  kPolyDelEdge,
  kPolyDelFacet,
  kPolyDelVertex,
  kPolyExtrudeFacet,
  kPolyMapCut,
  kPolyMapDel,
  kPolyMapSew,
  kPolyMergeEdge,
  kPolyMergeFacet,
  kPolyMoveEdge,
  kPolyMoveFacet,
  kPolyMoveFacetUV,
  kPolyMoveUV,
  kPolyMoveVertex,
  kPolyMoveVertexUV,
  kPolyNormal,
  kPolyPlanProj,
  kPolyProj,
  kPolyQuad,
  kPolySmooth,
  kPolySoftEdge,
  kPolySphProj,
  kPolySplit,
  kPolySubdEdge,
  kPolySubdFacet,
  kPolyTriangulate,
  kPolyCreator,
  kPolyPrimitive,
  kPolyCone,
  kPolyCube,
  kPolyCylinder,
  kPolyMesh,
  kPolySphere,
  kPolyTorus,
  kPolyCreateFacet,
  kPolyUnite,
  kMotionPath,
  kMultilisterLight,
  kMultiplyDivide,
  kOldGeometryConstraint,
  kOpticalFX,
  kParticleAgeMapper,
  kParticleCloud,
  kParticleColorMapper,
  kParticleIncandecenceMapper,
  kParticleTransparencyMapper,
  kPartition,
  kPlace2dTexture,
  kPlace3dTexture,
  kPluginDependNode,
  kPluginLocatorNode,
  kPlusMinusAverage,
  kPointMatrixMult,
  kPolySeparate,
  kPostProcessList,
  kProjection,
  kRecord,
  kRenderUtilityList,
  kReverse,
  kRgbToHsv,
  kRigidSolver,
  kSet,
  kTextureBakeSet,
  kVertexBakeSet,
  kSetRange,
  kShaderGlow,
  kShaderList,
  kShadingMap,
  kSamplerInfo,
  kShapeFragment,
  kSimpleVolumeShader,
  kSl60,
  kSnapshot,
  kStoryBoard,
  kSummaryObject,
  kSuper,
  kControl,
  kSurfaceLuminance,
  kSurfaceShader,
  kTextureList,
  kTextureEnv,
  kEnvBall,
  kEnvCube,
  kEnvChrome,
  kEnvSky,
  kEnvSphere,
  kTexture2d,
  kBulge,
  kChecker,
  kCloth,
  kFileTexture,
  kFractal,
  kGrid,
  kMountain,
  kRamp,
  kStencil,
  kWater,
  kTexture3d,
  kBrownian,
  kCloud,
  kCrater,
  kGranite,
  kLeather,
  kMarble,
  kRock,
  kSnow,
  kSolidFractal,
  kStucco,
  kTxSl,
  kWood,
  kTime,
  kTimeToUnitConversion,
  kRenderSetup,
  kRenderGlobals,
  kRenderGlobalsList,
  kRenderQuality,
  kResolution,
  kHardwareRenderGlobals,
  kArrayMapper,
  kUnitConversion,
  kUnitToTimeConversion,
  kUseBackground,
  kUnknown,
  kVectorProduct,
  kVolumeShader,
  kComponent,
  kCurveCVComponent,
  kCurveEPComponent,
  kCurveKnotComponent,
  kCurveParamComponent,
  kIsoparmComponent,
  kPivotComponent,
  kSurfaceCVComponent,
  kSurfaceEPComponent,
  kSurfaceKnotComponent,
  kEdgeComponent,
  kLatticeComponent,
  kSurfaceRangeComponent,
  kDecayRegionCapComponent,
  kDecayRegionComponent,
  kMeshComponent,
  kMeshEdgeComponent,
  kMeshPolygonComponent,
  kMeshFrEdgeComponent,
  kMeshVertComponent,
  kMeshFaceVertComponent,
  kOrientationComponent,
  kSubVertexComponent,
  kMultiSubVertexComponent,
  kSetGroupComponent,
  kDynParticleSetComponent,
  kSelectionItem,
  kDagSelectionItem,
  kNonDagSelectionItem,
  kItemList,
  kAttribute,
  kNumericAttribute,
  kDoubleAngleAttribute,
  kFloatAngleAttribute,
  kDoubleLinearAttribute,
  kFloatLinearAttribute,
  kTimeAttribute,
  kEnumAttribute,
  kUnitAttribute,
  kTypedAttribute,
  kCompoundAttribute,
  kGenericAttribute,
  kLightDataAttribute,
  kMatrixAttribute,
  kFloatMatrixAttribute,
  kMessageAttribute,
  kPlugin,
  kData,
  kComponentListData,
  kDoubleArrayData,
  kIntArrayData,
  kLatticeData,
  kMatrixData,
  kMeshData,
  kNurbsSurfaceData,
  kNurbsCurveData,
  kNumericData,
  kData2Double,
  kData2Float,
  kData2Int,
  kData2Short,
  kData3Double,
  kData3Float,
  kData3Int,
  kData3Short,
  kPluginData,
  kPointArrayData,
  kSphereData,
  kStringData,
  kStringArrayData,
  kVectorArrayData,
  kSelectionList,
  kTransformGeometry,
  kCommEdgePtManip,
  kCommEdgeOperManip,
  kCommEdgeSegmentManip,
  kCommCornerManip,
  kCommCornerOperManip,
  kPluginDeformerNode,
  kTorus,
  kPolyBoolOp,
  kSingleShadingSwitch,
  kDoubleShadingSwitch,
  kTripleShadingSwitch,
  kNurbsSquare,
  kAnisotropy,
  kNonLinear,
  kDeformFunc,
  kDeformBend,
  kDeformTwist,
  kDeformSquash,
  kDeformFlare,
  kDeformSine,
  kDeformWave,
  kDeformBendManip,
  kDeformTwistManip,
  kDeformSquashManip,
  kDeformFlareManip,
  kDeformSineManip,
  kDeformWaveManip,
  kSoftModManip,
  kDistanceManip,
  kScript,
  kCurveFromMeshEdge,
  kCurveCurveIntersect,
  kNurbsCircular3PtArc,
  kNurbsCircular2PtArc,
  kOffsetSurface,
  kRoundConstantRadius,
  kRoundRadiusManip,
  kRoundRadiusCrvManip,
  kRoundConstantRadiusManip,
  kThreePointArcManip,
  kTwoPointArcManip,
  kTextButtonManip,
  kOffsetSurfaceManip,
  kImageData,
  kImageLoad,
  kImageSave,
  kImageNetSrc,
  kImageNetDest,
  kImageRender,
  kImageAdd,
  kImageDiff,
  kImageMultiply,
  kImageOver,
  kImageUnder,
  kImageColorCorrect,
  kImageBlur,
  kImageFilter,
  kImageDepth,
  kImageDisplay,
  kImageView,
  kImageMotionBlur,
        kViewColorManager,
  kMatrixFloatData,
  kSkinShader,
  kComponentManip,
  kSelectionListData,
  kObjectFilter,
  kObjectMultiFilter,
  kObjectNameFilter,
  kObjectTypeFilter,
  kObjectAttrFilter,
  kObjectRenderFilter,
  kObjectScriptFilter,
  kSelectionListOperator,
  kSubdiv,
  kPolyToSubdiv,
  kSkinClusterFilter,
  kCharacter,
  kCharacterOffset,
  kDagPose,
  kStitchAsNurbsShell,
        kExplodeNurbsShell,
        kNurbsBoolean,
        kStitchSrfManip,
  kForceUpdateManip,
        kPluginManipContainer,
  kPolySewEdge,
  kPolyMergeVert,
  kPolySmoothFacet,
  kSmoothCurve,
  kGlobalStitch,
  kSubdivCVComponent,
  kSubdivEdgeComponent,
  kSubdivFaceComponent,
  kUVManip2D,
  kTranslateUVManip2D,
  kRotateUVManip2D,
  kScaleUVManip2D,
  kPolyTweakUV,
  kMoveUVShellManip2D,
  kPluginShape,
  kGeometryData,
  kSingleIndexedComponent,
  kDoubleIndexedComponent,
  kTripleIndexedComponent,
        kExtendSurfaceDistanceManip,
  kSquareSrf,
  kSquareSrfManip,
  kSubdivToPoly,
        kDynBase,
        kDynEmitterManip,
        kDynFieldsManip,
        kDynBaseFieldManip,
        kDynAirManip,
        kDynNewtonManip,
        kDynTurbulenceManip,
        kDynSpreadManip,
        kDynAttenuationManip,
        kDynArrayAttrsData,
        kPluginFieldNode,
        kPluginEmitterNode,
        kPluginSpringNode,
  kDisplayLayer,
  kDisplayLayerManager,
        kPolyColorPerVertex,
  kCreateColorSet,
  kDeleteColorSet,
  kCopyColorSet,
  kBlendColorSet,
  kPolyColorMod,
  kPolyColorDel,
  kCharacterMappingData,
  kDynSweptGeometryData,
  kWrapFilter,
  kMeshVtxFaceComponent,
  kBinaryData,
  kAttribute2Double,
  kAttribute2Float,
  kAttribute2Short,
  kAttribute2Int,
  kAttribute3Double,
  kAttribute3Float,
  kAttribute3Short,
  kAttribute3Int,
  kReference,
  kBlindData,
  kBlindDataTemplate,
  kPolyBlindData,
  kPolyNormalPerVertex,
  kNurbsToSubdiv,
  kPluginIkSolver,
  kInstancer,
  kMoveVertexManip,
  kStroke,
  kBrush,
  kStrokeGlobals,
  kPluginGeometryData,
  kLightLink,
  kDynGlobals,
  kPolyReduce,
  kLodThresholds,
  kChooser,
  kLodGroup,
  kMultDoubleLinear,
  kFourByFourMatrix,
  kTowPointOnSurfaceManip,
  kSurfaceEdManip,
  kSurfaceFaceComponent,
  kClipScheduler,
  kClipLibrary,
  kSubSurface,
  kSmoothTangentSrf,
  kRenderPass,
  kRenderPassSet,
  kRenderLayer,
  kRenderLayerManager,
  kPassContributionMap,
  kPrecompExport,
  kPolyFlipEdge,
  kPolyExtrudeEdge,
  kAnimBlend,
  kAnimBlendInOut,
  kPolyAppendVertex,
  kUvChooser,
  kSubdivCompId,
  kVolumeAxis,
  kDeleteUVSet,
  kSubdHierBlind,
  kSubdBlindData,
  kCharacterMap,
  kLayeredTexture,
  kSubdivCollapse,
  kParticleSamplerInfo,
  kCopyUVSet,
  kCreateUVSet,
  kClip,
  kPolySplitVert,
  kSubdivData,
  kSubdivGeom,
  kUInt64ArrayData,
  kPolySplitEdge,
  kSubdivReverseFaces,
  kMeshMapComponent,
  kSectionManip,
  kXsectionSubdivEdit,
  kSubdivToNurbs,
  kEditCurve,
  kEditCurveManip,
  kCrossSectionManager,
  kCreateSectionManip,
  kCrossSectionEditManip,
  kDropOffFunction,
  kSubdBoolean,
  kSubdModifyEdge,
  kModifyEdgeCrvManip,
  kModifyEdgeManip,
  kScalePointManip,
  kTransformBoxManip,
  kSymmetryLocator,
  kSymmetryMapVector,
  kSymmetryMapCurve,
  kCurveFromSubdivEdge,
  kCreateBPManip,
  kModifyEdgeBaseManip,
  kSubdExtrudeFace,
  kSubdivSurfaceVarGroup,
  kSfRevolveManip,
  kCurveFromSubdivFace,



  kUnused1,
  kUnused2,
  kUnused3,
  kUnused4,
  kUnused5,
  kUnused6,



  kPolyTransfer,
  kPolyAverageVertex,
  kPolyAutoProj,
  kPolyLayoutUV,
  kPolyMapSewMove,
  kSubdModifier,
  kSubdMoveVertex,
  kSubdMoveEdge,
  kSubdMoveFace,
  kSubdDelFace,
  kSnapshotShape,
  kSubdivMapComponent,
  kJiggleDeformer,
  kGlobalCacheControls,
  kDiskCache,
  kSubdCloseBorder,
  kSubdMergeVert,
  kBoxData,
  kBox,
  kRenderBox,
  kSubdSplitFace,
  kVolumeFog,
  kSubdTweakUV,
  kSubdMapCut,
  kSubdLayoutUV,
  kSubdMapSewMove,
  kOcean,
  kVolumeNoise,
  kSubdAutoProj,
  kSubdSubdivideFace,
  kNoise,
  kAttribute4Double,
  kData4Double,
  kSubdPlanProj,
  kSubdTweak,
  kSubdProjectionManip,
  kSubdMappingManip,
  kHardwareReflectionMap,
  kPolyNormalizeUV,
  kPolyFlipUV,
  kHwShaderNode,
  kPluginHardwareShader,
  kPluginHwShaderNode,
  kSubdAddTopology,
  kSubdCleanTopology,
  kImplicitCone,
  kImplicitSphere,
  kRampShader,
  kVolumeLight,
  kOceanShader,
  kBevelPlus,
  kStyleCurve,
  kPolyCut,
  kPolyPoke,
  kPolyWedgeFace,
  kPolyCutManipContainer,
  kPolyCutManip,
  kPolyPokeManip,
  kFluidTexture3D,
  kFluidTexture2D,
  kPolyMergeUV,
  kPolyStraightenUVBorder,
  kAlignManip,
  kPluginTransformNode,
  kFluid,
  kFluidGeom,
  kFluidData,



  kSmear,
  kStringShadingSwitch,
  kStudioClearCoat,

  kFluidEmitter,
  kHeightField,
  kGeoConnector,
  kSnapshotPath,
  kPluginObjectSet,
  kQuadShadingSwitch,
  kPolyExtrudeVertex,
  kPairBlend,
  kTextManip,
  kViewManip,
  kXformManip,
  kMute,
  kConstraint,
  kTrimWithBoundaries,
  kCurveFromMeshCoM,
  kFollicle,
  kHairSystem,
  kRemapValue,
  kRemapColor,
  kRemapHsv,
  kHairConstraint,
  kTimeFunction,
  kMentalRayTexture,
  kObjectBinFilter,
  kPolySmoothProxy,
  kPfxGeometry,
  kPfxHair,
  kHairTubeShader,
  kPsdFileTexture,
  kKeyframeDelta,
  kKeyframeDeltaMove,
  kKeyframeDeltaScale,
  kKeyframeDeltaAddRemove,
  kKeyframeDeltaBlockAddRemove,
  kKeyframeDeltaInfType,
  kKeyframeDeltaTangent,
  kKeyframeDeltaWeighted,
  kKeyframeDeltaBreakdown,

  kPolyMirror,
  kPolyCreaseEdge,
  kHikEffector,
  kHikSolver,
  kHikHandle,
  kProxyManager,
  kPolyAutoProjManip,
  kPolyPrism,
  kPolyPyramid,
  kPolySplitRing,
  kPfxToon,
  kToonLineAttributes,
  kPolyDuplicateEdge,



  kFacade,
  kMaterialFacade,
  kEnvFacade,
  kAISEnvFacade,
  kLineModifier,
  kPolyArrow,
  kPolyPrimitiveMisc,
  kPolyPlatonicSolid,
  kPolyPipe,

  kHikFloorContactMarker,

  kHikGroundPlane,
  kPolyComponentData,
  kPolyHelix,
  kCacheFile,
  kHistorySwitch,
  kClosestPointOnMesh,
  kTransferAttributes,
  kDynamicConstraint,
  kNComponent,
  kPolyBridgeEdge,
  kCacheableNode,
  kNucleus,
  kNBase,
  kCacheBase,
  kCacheBlend,
  kCacheTrack,
  kKeyframeRegionManip,
  kCurveNormalizerAngle,
  kCurveNormalizerLinear,
  kHyperLayoutDG,
  kPluginImagePlaneNode,
  kNCloth,
  kNParticle,
  kNRigid,
  kPluginParticleAttributeMapperNode,
  kCameraSet,
  kPluginCameraSet,
  kContainer,
  kFloatVectorArrayData,
  kNObjectData,
  kNObject,
  kPluginConstraintNode,
  kAsset,
  kPolyEdgeToCurve,
  kAnimLayer,
  kBlendNodeBase,
  kBlendNodeBoolean,
  kBlendNodeDouble,
  kBlendNodeDoubleAngle,
  kBlendNodeDoubleLinear,
  kBlendNodeEnum,
  kBlendNodeFloat,
  kBlendNodeFloatAngle,
  kBlendNodeFloatLinear,
  kBlendNodeInt16,
  kBlendNodeInt32,
  kBlendNodeAdditiveScale,
  kBlendNodeAdditiveRotation,
  kPluginManipulatorNode,
  kNIdData,
  kNId,
  kFloatArrayData,
  kMembrane,
  kMergeVertsToolManip,
  kUint64SingleIndexedComponent,
  kPolyToolFeedbackManip,
  kPolySelectEditFeedbackManip,
  kWriteToFrameBuffer,
  kWriteToColorBuffer,
  kWriteToVectorBuffer,
  kWriteToDepthBuffer,
  kWriteToLabelBuffer,
  kStereoCameraMaster,
  kSequenceManager,
  kSequencer,
  kShot,
  kCreateBezierManip,
  kBezierCurve,
  kBezierCurveData,
  kNurbsCurveToBezier,
  kBezierCurveToNurbs,
  kPolySpinEdge,
  kPolyHoleFace,
  kPointOnPolyConstraint,
  kPolyConnectComponents,
  kSkinBinding,
  kVolumeBindManip,
  kVertexWeightSet,
  kNearestPointOnCurve,
  kColorProfile,
  kAdskMaterial,
  kContainerBase,
  kDagContainer,
  kPolyUVRectangle,


  kLast,



  kAttribute2Long = kAttribute2Int,
  kAttribute3Long = kAttribute3Int,
  kData2Long = kData2Int,
  kData3Long = kData3Int
 };

 MFn::Type nodeType;

protected:


private:


};
# 95 "/Applications/Autodesk/maya2011/devkit/include/maya/MObject.h" 2






class MPtrBase;
class MObjectHandle;
# 154 "/Applications/Autodesk/maya2011/devkit/include/maya/MObject.h"
class MObject
{
public:


 MObject();
 MObject( const MObject &other );
 ~MObject();
 bool hasFn( MFn::Type fs ) const;
 bool isNull() const;

    MFn::Type apiType() const;
 const char * apiTypeStr() const;

 bool operator == (const MObject &) const;
 bool operator != (const MObject &) const;
 MObject & operator = (const MObject &);


 static MObject kNullObj;

protected:


private:
 bool isFlagSet( short ) const;
 void setFlag( short, bool );
 short allFlags() const;

 friend class MObjectHandle;

 MPtrBase * ptr;
 unsigned short flags;
};
# 51 "/Applications/Autodesk/maya2011/devkit/include/maya/MPxLocatorNode.h" 2
# 1 "/Applications/Autodesk/maya2011/devkit/include/maya/MPxNode.h" 1
# 51 "/Applications/Autodesk/maya2011/devkit/include/maya/MPxNode.h"
# 1 "/Applications/Autodesk/maya2011/devkit/include/maya/MTypeId.h" 1
# 96 "/Applications/Autodesk/maya2011/devkit/include/maya/MTypeId.h"
class MTypeId
{
public:
    MTypeId();
    ~MTypeId();

    MTypeId( unsigned int id );
    MTypeId( unsigned int prefix, unsigned int id );

    MTypeId( const MTypeId& src );
 MTypeId& operator=( const MTypeId& rhs );
 bool operator==( const MTypeId& rhs ) const;
 bool operator!=( const MTypeId& rhs ) const;
 unsigned int id( MStatus * ReturnStatus = __null ) const;

protected:


private:
 union {
  unsigned int fId;
  unsigned char fTag[4];
 };

 static const char* className();
};
# 52 "/Applications/Autodesk/maya2011/devkit/include/maya/MPxNode.h" 2
# 1 "/Applications/Autodesk/maya2011/devkit/include/maya/MDataHandle.h" 1
# 50 "/Applications/Autodesk/maya2011/devkit/include/maya/MDataHandle.h"
# 1 "/Applications/Autodesk/maya2011/devkit/include/maya/MFnNumericData.h" 1
# 47 "/Applications/Autodesk/maya2011/devkit/include/maya/MFnNumericData.h"
# 1 "/Applications/Autodesk/maya2011/devkit/include/maya/MFnData.h" 1
# 47 "/Applications/Autodesk/maya2011/devkit/include/maya/MFnData.h"
# 1 "/Applications/Autodesk/maya2011/devkit/include/maya/MFnBase.h" 1
# 54 "/Applications/Autodesk/maya2011/devkit/include/maya/MFnBase.h"
class MObject;
class MPtrBase;
# 112 "/Applications/Autodesk/maya2011/devkit/include/maya/MFnBase.h"
class MFnBase
{
public:
  virtual ~MFnBase();
 virtual MFn::Type type() const;
 bool hasObj( MFn::Type ) const;
 bool hasObj( const MObject & ) const;
 MObject object( MStatus* ReturnStatus = __null ) const;
  virtual MStatus setObject( MObject & object );

public:


  virtual MStatus setObject( const MObject & object );

public:

protected:
 MFnBase();
 virtual const char* className() const;
 void setPtr( MPtrBase* );
 void setPtr( const MPtrBase* );
 void setPtrNull();
 virtual bool objectChanged( MFn::Type, MStatus * );
  MPtrBase* f_ptr;
  const MPtrBase* f_constptr;
# 148 "/Applications/Autodesk/maya2011/devkit/include/maya/MFnBase.h"
 bool fIsReferenceCounted;

private:
 MFnBase & operator=( const MFnBase & );
 MFnBase * operator& () const;
};
# 48 "/Applications/Autodesk/maya2011/devkit/include/maya/MFnData.h" 2
# 73 "/Applications/Autodesk/maya2011/devkit/include/maya/MFnData.h"
class MFnData : public MFnBase
{
 public: virtual MFn::Type type() const; virtual ~MFnData(); protected: virtual const char* className() const; private: MFnData & operator=( const MFnData & ); MFnData * operator& () const;; public: MFnData( MObject & object, MStatus * ReturnStatus = __null );

public:
 MFnData();


 enum Type {

  kInvalid,

  kNumeric,

  kPlugin,

  kPluginGeometry,

  kString,

  kMatrix,

  kStringArray,

  kDoubleArray,

  kIntArray,

  kPointArray,

  kVectorArray,

  kComponentList,

  kMesh,

  kLattice,

  kNurbsCurve,

  kNurbsSurface,

  kSphere,

  kDynArrayAttrs,




         kDynSweptGeometry,

  kSubdSurface,

  kNObject,

  kNId,



  kLast
 };

public:

 MFnData( const MObject & object, MStatus * ReturnStatus = __null );

public:
};
# 48 "/Applications/Autodesk/maya2011/devkit/include/maya/MFnNumericData.h" 2
# 68 "/Applications/Autodesk/maya2011/devkit/include/maya/MFnNumericData.h"
class MFnNumericData : public MFnData
{
 public: virtual MFn::Type type() const; virtual ~MFnNumericData(); protected: virtual const char* className() const; private: MFnNumericData & operator=( const MFnNumericData & ); MFnNumericData * operator& () const;; public: MFnNumericData() {}; MFnNumericData( MObject & object, MStatus * ReturnStatus = __null );

public:


 enum Type {
  kInvalid,
  kBoolean,
  kByte,
  kChar,
  kShort,
  k2Short,
  k3Short,
  kLong,
  kInt = kLong,
  k2Long,
  k2Int = k2Long,
  k3Long,
  k3Int = k3Long,
  kFloat,
  k2Float,
  k3Float,
  kDouble,
  k2Double,
  k3Double,
  k4Double,
        kAddr,




  kLast
    };

 MObject create( Type dataType, MStatus* ReturnStatus = __null );

 Type numericType( MStatus* ReturnStatus = __null );

public:

 MStatus getData( short& val1, short& val2 );

 MStatus getData( int& val1, int& val2 );

 MStatus getData( float& val1, float& val2 );

 MStatus getData( double& val1, double& val2 );

 MStatus getData( short& val1, short& val2, short& val3 );

 MStatus getData( int& val1, int& val2, int& val3 );

 MStatus getData( float& val1, float& val2, float& val3 );

 MStatus getData( double& val1, double& val2, double& val3 );

 MStatus getData( double& val1, double& val2, double& val3, double& val4 );


 MStatus setData( short val1, short val2 );

 MStatus setData( int val1, int val2 );

 MStatus setData( float val1, float val2 );

 MStatus setData( double val1, double val2 );

 MStatus setData( short val1, short val2, short val3 );

 MStatus setData( int val1, int val2, int val3 );

 MStatus setData( float val1, float val2, float val3 );

 MStatus setData( double val1, double val2, double val3 );

 MStatus setData( double val1, double val2, double val3, double val4 );


  MFnNumericData( const MObject & object, MStatus * ReturnStatus = __null );

public:

 MStatus getData2Short( short& val1, short& val2 );
 MStatus getData2Int( int& val1, int& val2 );
 MStatus getData2Float( float& val1, float& val2 );
 MStatus getData2Double( double& val1, double& val2 );
 MStatus getData3Short( short& val1, short& val2, short& val3 );
 MStatus getData3Int( int& val1, int& val2, int& val3 );
 MStatus getData3Float( float& val1, float& val2, float& val3 );
 MStatus getData3Double( double& val1, double& val2, double& val3 );
 MStatus getData4Double( double& val1, double& val2, double& val3, double& val4 );

 MStatus setData2Short( short val1, short val2 );
 MStatus setData2Int( int val1, int val2 );
 MStatus setData2Float( float val1, float val2 );
 MStatus setData2Double( double val1, double val2 );
 MStatus setData3Short( short val1, short val2, short val3 );
 MStatus setData3Int( int val1, int val2, int val3 );
 MStatus setData3Float( float val1, float val2, float val3 );
 MStatus setData3Double( double val1, double val2, double val3 );
 MStatus setData4Double( double val1, double val2, double val3, double val4 );


protected:


private:

};
# 51 "/Applications/Autodesk/maya2011/devkit/include/maya/MDataHandle.h" 2







class MTime;
class MAngle;
class MDistance;
class MVector;
class MFloatVector;
class MMatrix;
class MFloatMatrix;
class MPlug;
class MPxData;
class MString;
class MUintArray;
# 106 "/Applications/Autodesk/maya2011/devkit/include/maya/MDataHandle.h"
class MDataHandle {

public:
 MDataHandle();
 bool isNumeric() const;
 bool isGeneric( bool& isNumeric, bool& isNull ) const;
    MFnNumericData::Type numericType() const;
    MFnData::Type type() const;
    MTypeId typeId() const;
 MStatus acceptedTypeIds( MUintArray &) const;

 MObject data();
 MStatus copy( const MDataHandle& src );

 void setClean();

 bool& asBool() const;
 char& asChar() const;
 unsigned char& asUChar() const;
 short& asShort() const;

 int& asLong() const;
 int& asInt() const;
    void*& asAddr() const;
 float& asFloat() const;
 double& asDouble() const;
    MDistance asDistance() const;
    MAngle asAngle() const;
    MTime asTime() const;

 short2& asShort2() const;

 long2& asLong2() const;
 int2& asInt2() const;
 float2& asFloat2() const;
 double2& asDouble2()const;
 short3& asShort3() const;

 long3& asLong3() const;
 int3& asInt3() const;
 float3& asFloat3() const;
 double3& asDouble3() const;
 MVector& asVector() const;
 MFloatVector& asFloatVector() const;
    MMatrix& asMatrix() const;
    MFloatMatrix& asFloatMatrix() const;
 MString& asString() const;

    MObject asNurbsCurve() const;
    MObject asNurbsSurface() const;
    MObject asMesh() const;
    MObject asSubdSurface() const;
    MObject asNurbsCurveTransformed() const;
    MObject asNurbsSurfaceTransformed() const;
    MObject asMeshTransformed() const;
    MObject asSubdSurfaceTransformed() const;
    const MMatrix & geometryTransformMatrix() const;
 MPxData * asPluginData() const;

public:

    void set( bool );

    void set( char );

    void set( short );

    void set( int );

    void set( float );

    void set( double );

    void set( const MMatrix& );

    void set( const MFloatMatrix& );

    void set( const MVector& );

 void set( const MFloatVector& );

    void set( const MDistance& );

    void set( const MAngle& );

    void set( const MTime& );

 void set( short, short );

 void set( int, int );

 void set( float, float );

 void set( double, double );

 void set( short, short, short );

 void set( int, int, int );

 void set( float, float, float );

 void set( double, double, double );

 void set( const MString &);

 MStatus set( const MObject &data );

 MStatus set( MPxData * data );

public:

    void setBool( bool );
    void setChar( char );
    void setShort( short );
    void setInt( int );
    void setFloat( float );
    void setDouble( double );
    void setMMatrix( const MMatrix& );
    void setMFloatMatrix( const MFloatMatrix& );
    void setMVector( const MVector& );
 void setMFloatVector( const MFloatVector& );
    void setMDistance( const MDistance& );
    void setMAngle( const MAngle& );
    void setMTime( const MTime& );
 void set2Short( short, short );
 void set2Int( int, int );
 void set2Float( float, float );
 void set2Double( double, double );
 void set3Short( short, short, short );
 void set3Int( int, int, int );
 void set3Float( float, float, float );
 void set3Double( double, double, double );
 void setString( const MString &);

 MStatus setMObject( const MObject &data );
 MStatus setMPxData( MPxData * data );

 bool asGenericBool() const;
 unsigned char asGenericChar() const;
 double asGenericDouble() const;
 float asGenericFloat() const;
 short asGenericShort() const;
 int asGenericInt() const;

 void setGenericBool( bool value, bool force );
 void setGenericChar( unsigned char value, bool force );
 void setGenericDouble( double value, bool force );
 void setGenericFloat( float value, bool force );
 void setGenericShort( short value, bool force );
 void setGenericInt( int value, bool force );

    MDataHandle child( const MPlug & plug );
    MDataHandle child( const MObject & attribute );

 MDataHandle& operator=( const MDataHandle& other );
    MDataHandle( const MDataHandle & );

protected:


private:
 friend class MDataBlock;
 friend class MArrayDataBuilder;
 friend class MArrayDataHandle;
 friend class MItGeometry;
 const char* className() const;
 MDataHandle( void* );


 char f_data[32];
# 289 "/Applications/Autodesk/maya2011/devkit/include/maya/MDataHandle.h"
};

inline MDataHandle::MDataHandle( const MDataHandle &other )
{
 memcpy( this, &other, sizeof(MDataHandle) );
}

inline MDataHandle& MDataHandle::operator=( const MDataHandle& other )
{
 memcpy( this, &other, sizeof(MDataHandle) );
 return *this;
}
# 53 "/Applications/Autodesk/maya2011/devkit/include/maya/MPxNode.h" 2
# 1 "/Applications/Autodesk/maya2011/devkit/include/maya/MDataBlock.h" 1
# 50 "/Applications/Autodesk/maya2011/devkit/include/maya/MDataBlock.h"
# 1 "/Applications/Autodesk/maya2011/devkit/include/maya/MArrayDataHandle.h" 1
# 47 "/Applications/Autodesk/maya2011/devkit/include/maya/MArrayDataHandle.h"
class MArrayDataBuilder;





# 1 "/Applications/Autodesk/maya2011/devkit/include/maya/MArrayDataBuilder.h" 1
# 50 "/Applications/Autodesk/maya2011/devkit/include/maya/MArrayDataBuilder.h"
# 1 "/Applications/Autodesk/maya2011/devkit/include/maya/MArrayDataHandle.h" 1
# 51 "/Applications/Autodesk/maya2011/devkit/include/maya/MArrayDataBuilder.h" 2




class MDataBlock;
class MArrayDataHandle;
# 68 "/Applications/Autodesk/maya2011/devkit/include/maya/MArrayDataBuilder.h"
class MArrayDataBuilder
{

public:

 MArrayDataBuilder ( const MObject & attribute, unsigned int numElements,
      MStatus * ReturnStatus = __null );

 MArrayDataBuilder ( MDataBlock *, const MObject &attribute, unsigned int,
      MStatus * ReturnStatus = __null );

 MDataHandle addLast(MStatus * ReturnStatus = __null);
 MDataHandle addElement( unsigned int index,
         MStatus * ReturnStatus = __null );
 MArrayDataHandle addLastArray(MStatus * ReturnStatus = __null );
 MArrayDataHandle addElementArray( unsigned int index,
           MStatus * ReturnStatus = __null );
 MStatus removeElement( unsigned int index );
 unsigned int elementCount( MStatus * ReturnStatus = __null ) const;
 MStatus growArray( unsigned int amount );
 MStatus setGrowSize( unsigned int size );

    MArrayDataBuilder( const MArrayDataBuilder &other );
 MArrayDataBuilder& operator=( const MArrayDataBuilder& other );
    ~MArrayDataBuilder();

protected:


private:
 void constructClass(MDataBlock *, const MObject &attribute, unsigned int,
      MStatus * ReturnStatus = __null );
 const char* className() const;
 friend class MArrayDataHandle;
 MArrayDataBuilder();
 MArrayDataBuilder( void* );

 char data[48];



 bool fIsNull;
};
# 54 "/Applications/Autodesk/maya2011/devkit/include/maya/MArrayDataHandle.h" 2
# 74 "/Applications/Autodesk/maya2011/devkit/include/maya/MArrayDataHandle.h"
class MArrayDataHandle {

public:
 MArrayDataHandle( const MDataHandle & in, MStatus * ReturnStatus = __null );

 MDataHandle inputValue(MStatus *ReturnStatus = __null);
 MDataHandle outputValue(MStatus *ReturnStatus = __null);
 MArrayDataHandle inputArrayValue( MStatus * ReturnStatus = __null );
 MArrayDataHandle outputArrayValue( MStatus * ReturnStatus = __null );
    MStatus next();
 unsigned int elementCount(MStatus *ReturnStatus = __null);
 unsigned int elementIndex(MStatus *ReturnStatus = __null);
    MStatus jumpToElement( unsigned int index );
    MStatus jumpToArrayElement( unsigned int position );
    MStatus setClean();
    MStatus setAllClean();
 MArrayDataBuilder builder(MStatus *ReturnStatus = __null);
 MStatus set( MArrayDataBuilder &builder );

    MArrayDataHandle( const MArrayDataHandle &other );
 MArrayDataHandle& operator=( const MArrayDataHandle& other );

protected:


private:
 const char* className() const;
 friend class MDataBlock;
 friend class MArrayDataBuilder;
 MArrayDataHandle( void* );
 MArrayDataHandle();

 char data[40];



 bool fIsNull;
};

inline MArrayDataHandle::MArrayDataHandle( const MArrayDataHandle &other )
{
 memcpy( this, &other, sizeof(MArrayDataHandle) );
}

inline MArrayDataHandle& MArrayDataHandle::operator=(
           const MArrayDataHandle &other )
{
 memcpy( this, &other, sizeof(MArrayDataHandle) );
 return *this;
}
# 51 "/Applications/Autodesk/maya2011/devkit/include/maya/MDataBlock.h" 2




class MObject;
class MPlug;
class MDGContext;
# 73 "/Applications/Autodesk/maya2011/devkit/include/maya/MDataBlock.h"
class MDataBlock
{

public:

 virtual ~MDataBlock ();
 MDataHandle inputValue ( const MPlug & plug,
                MStatus * ReturnStatus = __null );
 MDataHandle inputValue ( const MObject & attribute,
                MStatus * ReturnStatus = __null );
 MDataHandle outputValue ( const MPlug & plug,
                MStatus * ReturnStatus = __null );
 MDataHandle outputValue ( const MObject & attribute,
                MStatus * ReturnStatus = __null );
 MArrayDataHandle inputArrayValue ( const MPlug & plug,
                MStatus * ReturnStatus = __null );
 MArrayDataHandle inputArrayValue ( const MObject & attribute,
                MStatus * ReturnStatus = __null );
 MArrayDataHandle outputArrayValue ( const MPlug & plug,
          MStatus * ReturnStatus = __null );
 MArrayDataHandle outputArrayValue ( const MObject & attribute,
          MStatus * ReturnStatus = __null );
 MStatus setClean ( const MPlug & plug );
 MStatus setClean ( const MObject & attribute );

 bool isClean ( const MPlug & plug );
 bool isClean ( const MObject & attribute,
         MStatus* ReturnStatus=__null );

 MDGContext context ( MStatus * ReturnStatus = __null );
 MStatus setContext ( const MDGContext & ctx );

protected:


private:
 const char* className() const;

 friend class MArrayDataBuilder;

 friend class MPxNode;
 friend class MPlug;
 MDataBlock( void * ptr );
 void * data;
};
# 54 "/Applications/Autodesk/maya2011/devkit/include/maya/MPxNode.h" 2
# 1 "/Applications/Autodesk/maya2011/devkit/include/maya/MPlug.h" 1
# 49 "/Applications/Autodesk/maya2011/devkit/include/maya/MPlug.h"
# 1 "/Applications/Autodesk/maya2011/devkit/include/maya/MDGContext.h" 1
# 53 "/Applications/Autodesk/maya2011/devkit/include/maya/MDGContext.h"
class MObject;
class MTime;
# 74 "/Applications/Autodesk/maya2011/devkit/include/maya/MDGContext.h"
class MDGContext
{
public:


 MDGContext( );


 MDGContext( const MTime & when );

 MDGContext( const MDGContext& in );

 ~MDGContext();





 bool isNormal( MStatus * ReturnStatus = __null ) const;

 MStatus getTime( MTime & ) const;

 MDGContext& operator =( const MDGContext& other );



 static MDGContext fsNormal;


protected:


private:
 const void * data;
 bool fOwn;
 friend class MPlug;
 friend class MDataBlock;
 const char* className() const;
 MDGContext( const void* );
 MDGContext( const void*, bool own );
};
# 50 "/Applications/Autodesk/maya2011/devkit/include/maya/MPlug.h" 2

# 1 "/Applications/Autodesk/maya2011/devkit/include/maya/MIntArray.h" 1
# 61 "/Applications/Autodesk/maya2011/devkit/include/maya/MIntArray.h"
class MIntArray
{

public:
     MIntArray();
     MIntArray( const MIntArray& other );
     MIntArray( const int src[], unsigned int count );
     MIntArray( unsigned int initialSize,
          int initialValue = 0 );
     ~MIntArray();
  MIntArray & operator=( const MIntArray & other );
 MStatus set( int element, unsigned int index );
 MStatus setLength( unsigned int length );
  unsigned int length() const;
  MStatus remove( unsigned int index );
  MStatus insert( int element, unsigned int index );
  MStatus append( int element );
  MStatus copy( const MIntArray& source );
  MStatus clear();
 MStatus get( int[] ) const;
 void setSizeIncrement ( unsigned int newIncrement );
 unsigned int sizeIncrement () const;

public:


  int& operator[]( unsigned int index );

 int operator[]( unsigned int index ) const;


 friend std::ostream &operator<<(std::ostream &os,
              const MIntArray &array);

public:






protected:


private:
 MIntArray( void* );
 void* arr;
 const int* debugPeekValue;
 bool own;
 static const char* className();
 void syncDebugPeekValue();
};
# 52 "/Applications/Autodesk/maya2011/devkit/include/maya/MPlug.h" 2




class MString;
class MStringArray;
class MPlugArray;
class MTime;
class MPxData;
class MAngle;
class MDistance;
class MDataHandle;
class MDataBlock;
# 185 "/Applications/Autodesk/maya2011/devkit/include/maya/MPlug.h"
class MPlug
{
public:
 MPlug();
 MPlug( const MPlug& in );
 MPlug( const MObject & node, const MObject & attribute );
 ~MPlug();

 MStatus setAttribute (MObject &attribute);
 MObject attribute( MStatus* ReturnStatus = __null ) const;
 MObject node( MStatus* ReturnStatus = __null ) const;
 MString name( MStatus* ReturnStatus = __null ) const;
 MString partialName(
     bool includeNodeName = false,
     bool includeNonMandatoryIndices = false,
     bool includeInstancedIndices = false,
     bool useAlias = false,
     bool useFullAttributePath = false,
     bool useLongNames = false,
     MStatus* ReturnStatus = __null
    ) const;


 enum MValueSelector {
  kAll,
  kNonDefault,
  kChanged,
  kLastAttrSelector
 };

 MStatus getSetAttrCmds(
     MStringArray& cmds,
     MValueSelector valueSelector = kAll,
     bool useLongNames = false
    );

 bool isNetworked( MStatus* ReturnStatus = __null ) const;
 bool isArray( MStatus* ReturnStatus = __null ) const;
 bool isElement( MStatus* ReturnStatus = __null) const;
 bool isCompound( MStatus* ReturnStatus = __null ) const;
 bool isChild( MStatus* ReturnStatus = __null ) const;
 bool isProcedural( MStatus* ReturnStatus = __null ) const;
 unsigned int logicalIndex( MStatus* ReturnStatus = __null ) const;
 MStatus selectAncestorLogicalIndex( unsigned int index,
           const MObject &attribute =
           MObject::kNullObj);

 unsigned int getExistingArrayAttributeIndices( MIntArray& indices,
              MStatus* ReturnStatus = __null);

 unsigned int numElements( MStatus* ReturnStatus = __null ) const;
 unsigned int evaluateNumElements( MStatus* ReturnStatus = __null );
 unsigned int numChildren( MStatus* ReturnStatus = __null ) const;
 unsigned int numConnectedElements( MStatus* ReturnStatus = __null ) const;
 unsigned int numConnectedChildren( MStatus* ReturnStatus = __null ) const;
 MPlug child( MObject& attr, MStatus* ReturnStatus = __null ) const;
 MPlug child( unsigned int index, MStatus* ReturnStatus = __null ) const;
 MPlug parent( MStatus* ReturnStatus = __null ) const;
 MPlug array( MStatus* ReturnStatus = __null ) const;
 MPlug elementByLogicalIndex( unsigned int logicalIndex,
            MStatus* ReturnStatus = __null)
                const;
 MPlug elementByPhysicalIndex( unsigned int physicalIndex,
          MStatus* ReturnStatus = __null)
                const;
 MPlug connectionByPhysicalIndex( unsigned int physicalIndex,
          MStatus* ReturnStatus = __null)
                const;
 bool connectedTo( MPlugArray & array, bool asDst, bool asSrc,
        MStatus* ReturnStatus = __null ) const;
 bool isConnected( MStatus* ReturnStatus = __null ) const;

 bool isKeyable( MStatus* ReturnStatus = __null ) const;
 MStatus setKeyable( bool keyable );
 bool isLocked( MStatus* ReturnStatus = __null ) const;
 MStatus setLocked( bool locked );
 bool isChannelBoxFlagSet( MStatus* ReturnStatus = __null ) const;
 MStatus setChannelBox( bool channelBox );
 bool isCachingFlagSet( MStatus* ReturnStatus = __null ) const;
 MStatus setCaching( bool caching );
 bool isNull( MStatus* ReturnStatus = __null ) const;
 MString info( MStatus* ReturnStatus = __null ) const;
 bool isFromReferencedFile( MStatus* ReturnStatus = __null ) const;
 bool isDynamic( MStatus* ReturnStatus = __null ) const;
 bool isIgnoredWhenRendering( MStatus* ReturnStatus = __null ) const;


 enum FreeToChangeState {
  kFreeToChange = 0,
  kNotFreeToChange,
  kChildrenNotFreeToChange
 };
 MPlug::FreeToChangeState isFreeToChange(bool checkParents = true,
            bool checkChildren = true,
            MStatus* ReturnStatus = __null ) const;
 MDataHandle constructHandle(MDataBlock&) const;
 void destructHandle(MDataHandle&) const;

public:



 MStatus getValue( MObject &val, MDGContext& ctx=MDGContext::fsNormal )
    const;

 MStatus getValue( double&, MDGContext& ctx=MDGContext::fsNormal ) const;

 MStatus getValue( float&, MDGContext& ctx=MDGContext::fsNormal ) const;

 MStatus getValue( int&, MDGContext& ctx=MDGContext::fsNormal ) const;

 MStatus getValue( short&, MDGContext& ctx=MDGContext::fsNormal ) const;

 MStatus getValue( bool&, MDGContext& ctx=MDGContext::fsNormal ) const;

 MStatus getValue( MDistance&,
        MDGContext& ctx=MDGContext::fsNormal ) const;

 MStatus getValue( MAngle&,
        MDGContext& ctx=MDGContext::fsNormal ) const;

 MStatus getValue( MTime&, MDGContext& ctx=MDGContext::fsNormal ) const;

 MStatus getValue( char&, MDGContext& ctx=MDGContext::fsNormal ) const;

 MStatus getValue( MString&,
        MDGContext& ctx=MDGContext::fsNormal ) const;

 MStatus setValue( MObject & val );

 MStatus setValue( MPxData * data );

 MStatus setValue( MDataHandle & handle );

 MStatus setValue( double );

 MStatus setValue( float );

 MStatus setValue( int );

 MStatus setValue( short );

 MStatus setValue( bool );

 MStatus setValue( MDistance& );

 MStatus setValue( MAngle& );

 MStatus setValue( MTime& );

 MStatus setValue( char );

 MStatus setValue( const MString& );


 MStatus setValue( const char* );
public:




 MObject asMObject ( MDGContext& ctx=MDGContext::fsNormal,
         MStatus * ReturnStatus = __null ) const;
 double asDouble ( MDGContext& ctx=MDGContext::fsNormal,
         MStatus * ReturnStatus = __null ) const;
 float asFloat ( MDGContext& ctx=MDGContext::fsNormal,
         MStatus * ReturnStatus = __null ) const;
 int asInt ( MDGContext& ctx=MDGContext::fsNormal,
         MStatus * ReturnStatus = __null ) const;
 short asShort ( MDGContext& ctx=MDGContext::fsNormal,
          MStatus * ReturnStatus = __null ) const;
 bool asBool ( MDGContext& ctx=MDGContext::fsNormal,
          MStatus * ReturnStatus = __null ) const;
 MDistance asMDistance ( MDGContext& ctx=MDGContext::fsNormal,
          MStatus * ReturnStatus = __null ) const;
 MAngle asMAngle ( MDGContext& ctx=MDGContext::fsNormal,
          MStatus * ReturnStatus = __null ) const;
 MTime asMTime ( MDGContext& ctx=MDGContext::fsNormal,
          MStatus * ReturnStatus = __null ) const;
 char asChar ( MDGContext& ctx=MDGContext::fsNormal,
          MStatus * ReturnStatus = __null ) const;
 MString asString ( MDGContext& ctx=MDGContext::fsNormal,
          MStatus * ReturnStatus = __null ) const;

 MStatus setMObject( MObject & val );
 MStatus setMPxData( MPxData * data );
 MStatus setMDataHandle( MDataHandle & handle );
 MStatus setDouble( double );
 MStatus setFloat( float );
 MStatus setInt( int );
 MStatus setShort( short );
 MStatus setBool( bool );
 MStatus setMDistance( MDistance& );
 MStatus setMAngle( MAngle& );
 MStatus setMTime( MTime& );
 MStatus setChar( char );
 MStatus setString( const MString& );



 MPlug& operator =( const MPlug& other );
 MPlug operator[] ( unsigned int physicalIndex ) const;
 bool operator ==( const MPlug &other ) const;
 bool operator ==( const MObject &other ) const;
 bool operator !=( const MPlug &other ) const;
 bool operator !=( const MObject &other ) const;
 MStatus setNumElements( unsigned int );

public:


 MPlug operator[] ( MObject& attr ) const;


 operator MObject() const;


 bool operator!() const;

public:

 bool isSource( MStatus* ReturnStatus = __null ) const;

 bool isDestination( MStatus* ReturnStatus = __null ) const;

protected:


private:
 const char* className() const;

 MPlug( const void*, bool );
 const void* fPlug;
 bool ownPlug;
};
# 55 "/Applications/Autodesk/maya2011/devkit/include/maya/MPxNode.h" 2
# 1 "/Applications/Autodesk/maya2011/devkit/include/maya/MString.h" 1
# 53 "/Applications/Autodesk/maya2011/devkit/include/maya/MString.h"
class MStringArray;
# 82 "/Applications/Autodesk/maya2011/devkit/include/maya/MString.h"
class MString
{

public:
    MString();
    MString( const char* charString );
    MString( const wchar_t* charString );
                MString( const char* charString, int charLength );
    MString( const wchar_t* charString, int wcharLength );
    MString( const MString& other );
          ~MString();
 MString& operator += ( const MString& other );
 MString& operator += ( const char * other );
 MString& operator += ( double other );
 MString& operator += ( int other );
 MString& operator += ( unsigned int other );
 MString& operator += ( float other );
 MString& operator = ( const MString& other );
 MString& operator = ( const char * other );
 MString& operator = ( double value );
 bool operator == ( const MString& other ) const;
 bool operator == ( const char * other ) const;
 bool operator != ( const MString& other ) const;
 bool operator != ( const char * other ) const;
 MString operator + (const MString& other ) const;
 MString operator + (const char * other ) const;
 MString operator + ( double value ) const;
 MStatus set( const char * charString );
 MStatus setUTF8( const char *utf8String );
 MStatus setWChar( const wchar_t * wcharString );
    MStatus set( const char * charString, int charLength );
 MStatus setWChar( const wchar_t * wcharString, int wcharLength );
 MStatus set( double value );
 MStatus set( double value, int precision );
 const char* asChar() const;
 const char* asChar(int &charLength) const;
 const char* asUTF8() const;
 const char* asUTF8(int &utf8Length) const;
 const wchar_t* asWChar() const;
 const wchar_t* asWChar(int &numChars) const;
 unsigned int length() const;
 unsigned int numChars() const;
 void clear();
 int index(char) const;
 int indexW(char) const;
 int indexW(wchar_t) const;
 int indexW(const MString &) const;
 int rindex(char) const;
 int rindexW(char) const;
 int rindexW(wchar_t) const;
 int rindexW(const MString &) const;

 MStatus split(char, MStringArray&) const;
 MStatus split(wchar_t, MStringArray&) const;
 MString substring(int start, int end) const;
 MString substringW(int start, int end) const;
 MString& toUpperCase();
 MString& toLowerCase();
 bool isShort() const;
 short asShort() const;
 bool isInt() const;
 int asInt() const;
 bool isUnsigned() const;
 unsigned int asUnsigned() const;
 bool isFloat() const;
 float asFloat() const;
 bool isDouble() const;
 double asDouble() const;
 MString expandEnvironmentVariablesAndTilde( MStatus * ReturnStatus = __null ) const;
 MString expandFilePath( MStatus * ReturnStatus = __null ) const;
 MStatus format(const MString &fmt, const MStringArray& args);
 MStatus format(const MString &fmt,
        const MString& arg1=MString::argUnused,
        const MString& arg2=MString::argUnused,
        const MString& arg3=MString::argUnused,
        const MString& arg4=MString::argUnused,
        const MString& arg5=MString::argUnused,
        const MString& arg6=MString::argUnused,
        const MString& arg7=MString::argUnused,
        const MString& arg8=MString::argUnused,
        const MString& arg9=MString::argUnused,
        const MString& arg10=MString::argUnused);

public:


 friend std::ostream& operator<<(std::ostream&, const MString& );

 friend MString operator+(const char *, const MString& );

public:

protected:


private:
 struct {
  const char *stringValue;
  void *impl;
 } api_data;

 static const MString argUnused;
};
# 56 "/Applications/Autodesk/maya2011/devkit/include/maya/MPxNode.h" 2





class MPlugArray;
# 97 "/Applications/Autodesk/maya2011/devkit/include/maya/MPxNode.h"
class MPxNode
{
public:


 enum Type {
        kDependNode,
  kLocatorNode,
  kDeformerNode,
  kManipContainer,
  kSurfaceShape,
  kFieldNode,
  kEmitterNode,
  kSpringNode,
  kIkSolverNode,
  kHardwareShader,
  kHwShaderNode,
  kTransformNode,
  kObjectSet,
  kFluidEmitterNode,
  kImagePlaneNode,
  kParticleAttributeMapperNode,
  kCameraSetNode,
  kConstraintNode,
  kManipulatorNode,
  kLast
    };

 MPxNode();
 virtual ~MPxNode();
 virtual void postConstructor();
 virtual MStatus compute( const MPlug& plug,
          MDataBlock& dataBlock );

 virtual bool getInternalValueInContext( const MPlug& plug,
             MDataHandle& dataHandle,
             MDGContext& ctx);
    virtual bool setInternalValueInContext( const MPlug& plug,
             const MDataHandle& dataHandle,
             MDGContext& ctx);

 virtual bool getInternalValue( const MPlug& plug,
             MDataHandle& dataHandle);
    virtual bool setInternalValue( const MPlug& plug,
             const MDataHandle& dataHandle);
    virtual int internalArrayCount( const MPlug& plug,
               const MDGContext& ctx) const;

    virtual void copyInternalData( MPxNode* );

 virtual MStatus legalConnection( const MPlug& plug,
            const MPlug& otherPlug,
            bool asSrc,
            bool& isLegal ) const;
 virtual MStatus legalDisconnection( const MPlug& plug,
            const MPlug& otherPlug,
            bool asSrc,
            bool& isLegal ) const;
 virtual MStatus setDependentsDirty( const MPlug& plug, MPlugArray& plugArray);

 virtual MStatus connectionMade( const MPlug& plug,
            const MPlug& otherPlug,
            bool asSrc );
 virtual MStatus connectionBroken( const MPlug& plug,
            const MPlug& otherPlug,
            bool asSrc );
 virtual bool isPassiveOutput( const MPlug& plug ) const;
 virtual MStatus shouldSave( const MPlug& plug, bool& isSaving );
 virtual MPlug passThroughToOne( const MPlug& plug ) const;
 virtual bool passThroughToMany( const MPlug& plug,
              MPlugArray& plugArray ) const;

 MTypeId typeId() const;
 MString typeName() const;
 MString name() const;
 virtual Type type() const;
 virtual bool isAbstractClass () const;
 MObject thisMObject() const;

 static MStatus addAttribute( const MObject & attr );
 static MStatus inheritAttributesFrom(
           const MString & parentClassName );
 static MStatus attributeAffects( const MObject & whenChanges,
             const MObject & isAffected );

 MStatus setExistWithoutInConnections( bool flag );
 bool existWithoutInConnections(
        MStatus* ReturnStatus = __null ) const;
 MStatus setExistWithoutOutConnections( bool flag );
 bool existWithoutOutConnections(
        MStatus* ReturnStatus = __null ) const;


 MDataBlock _forceCache( MDGContext& ctx=MDGContext::fsNormal )
  { return forceCache(ctx); }
 void _setMPSafe ( bool flag )
  { setMPSafe(flag); }
 void _setDoNotWrite( bool flag )
  { setDoNotWrite(flag); }
 bool _doNotWrite()
  { return doNotWrite(); }



 static MObject message;

 static MObject isHistoricallyInteresting;

 static MObject caching;

 static MObject state;

protected:

 MDataBlock forceCache( MDGContext& ctx=MDGContext::fsNormal );


 void setMPSafe ( bool flag );

 MStatus setDoNotWrite ( bool flag );
 bool doNotWrite( MStatus *ReturnStatus = __null ) const;

 void* instance;

private:
 static void initialSetup();
 static const char* className();
 static void* initClass;
};
# 52 "/Applications/Autodesk/maya2011/devkit/include/maya/MPxLocatorNode.h" 2
# 1 "/Applications/Autodesk/maya2011/devkit/include/maya/M3dView.h" 1
# 49 "/Applications/Autodesk/maya2011/devkit/include/maya/M3dView.h"
# 1 "/Applications/Autodesk/maya2011/devkit/include/maya/MColor.h" 1
# 63 "/Applications/Autodesk/maya2011/devkit/include/maya/MColor.h"
class MColor
{
public:

 enum MColorType {
  kRGB,
  kHSV,
  kCMY,
  kCMYK
 };


     MColor();

     MColor( const MColor& src);

     MColor( float rr, float gg, float bb=0.0, float aa=1.0 );

     MColor( const float d[3] );

     MColor( float alpha );

     MColor( MColorType colorModel,
       unsigned char c1, unsigned char c2, unsigned char c3,
       unsigned char alpha=255U );

     MColor( MColorType colorModel,
       unsigned short c1, unsigned short c2, unsigned short c3,
       unsigned short alpha=65535U );

     MColor( MColorType colorModel, float c1, float c2, float c3,
       float alpha=1.0 );

     MColor( MColorType colorModel, double c1, double c2, double c3,
       double alpha=1.0 );


     ~MColor();


  MColor& operator= ( const MColor& src );


  float operator()( unsigned int i ) const;


 float operator[]( unsigned int i )const;


  MColor& operator*=( float scalar );

  MColor operator*( float scalar ) const;

 MColor& operator*=( const MColor& other );

  MColor operator*( const MColor& other ) const;


  MColor& operator/=( float scalar );

  MColor operator/( float scalar ) const;


 MColor& operator+=( const MColor& other );

  MColor operator+( const MColor& other) const;


  MColor operator-() const;


  MColor operator-( const MColor& other ) const;


  bool operator==( const MColor& other ) const;

  bool operator!=( const MColor& other ) const;


 bool get( float d[3] ) const;

 bool get( MColorType colorModel, float&, float&, float& ) const;

 bool get( MColorType colorModel, float&, float&, float&, float& alpha ) const;

 bool set( MColorType colorModel, float, float, float, float alpha = 1.0);

public:


  float& operator()( unsigned int i );


  float& operator[]( unsigned int i );


  friend MColor operator*( float scalar, const MColor& other);

 friend std::ostream& operator<<(std::ostream& os, const MColor& c);

public:

 float r;
 float g;
 float b;
 float a;
};
# 178 "/Applications/Autodesk/maya2011/devkit/include/maya/MColor.h"
inline MColor::MColor()
  : r(0.0)
 , g(0.0)
 , b(0.0)
 , a(1.0)
{
}







inline MColor::MColor(const MColor& src)
  : r(src.r)
 , g(src.g)
 , b(src.b)
 , a(src.a)
{
}
# 209 "/Applications/Autodesk/maya2011/devkit/include/maya/MColor.h"
inline MColor::MColor(float rr, float gg, float bb, float aa )
  : r(rr)
 , g(gg)
 , b(bb)
 , a(aa)
{
}
# 225 "/Applications/Autodesk/maya2011/devkit/include/maya/MColor.h"
inline MColor::MColor( const float d[3] )
  : r(d[0])
 , g(d[1])
 , b(d[2])
 , a(1.0)
{
}







inline MColor::MColor(float alpha )
  : r(0.0)
 , g(0.0)
 , b(0.0)
 , a(alpha)
{
}
# 255 "/Applications/Autodesk/maya2011/devkit/include/maya/MColor.h"
inline MColor& MColor::operator= (const MColor& src)
{
 r = src.r;
 g = src.g;
 b = src.b;
 a = src.a;
 return (*this);
}
# 276 "/Applications/Autodesk/maya2011/devkit/include/maya/MColor.h"
inline float& MColor::operator()( unsigned int i )
{
 if( i== 0 ) return r;
 else if( i== 1 ) return g;
 else if( i== 2 ) return b;
 else return a;
}
# 296 "/Applications/Autodesk/maya2011/devkit/include/maya/MColor.h"
inline float MColor::operator()( unsigned int i ) const
{
 if( i== 0 ) return r;
 else if( i== 1 ) return g;
 else if( i== 2 ) return b;
 else return a;
}
# 316 "/Applications/Autodesk/maya2011/devkit/include/maya/MColor.h"
inline float& MColor::operator[]( unsigned int i )
{
 if( i== 0 ) return r;
 else if( i== 1 ) return g;
 else if( i== 2 ) return b;
 else return a;
}
# 336 "/Applications/Autodesk/maya2011/devkit/include/maya/MColor.h"
inline float MColor::operator[]( unsigned int i ) const
{
 if( i== 0 ) return r;
 else if( i== 1 ) return g;
 else if( i== 2 ) return b;
 else return a;
}
# 354 "/Applications/Autodesk/maya2011/devkit/include/maya/MColor.h"
inline bool MColor::get( float d[3] ) const
{
 d[0] = r;
 d[1] = g;
 d[2] = b;
 return true;
}
# 50 "/Applications/Autodesk/maya2011/devkit/include/maya/M3dView.h" 2
# 1 "/Applications/Autodesk/maya2011/devkit/include/maya/MNativeWindowHdl.h" 1
# 62 "/Applications/Autodesk/maya2011/devkit/include/maya/MNativeWindowHdl.h"
 class NSView;
 typedef NSView* MNativeWindowHdl;
# 51 "/Applications/Autodesk/maya2011/devkit/include/maya/M3dView.h" 2




 class NSOpenGLContext;

 typedef NSOpenGLContext* MGLContext;
# 90 "/Applications/Autodesk/maya2011/devkit/include/maya/M3dView.h"
class MString;
class MDagPath;
class MPoint;
class MVector;
class MMatrix;
class MPxGlBuffer;
class MImage;
class QWidget;
# 131 "/Applications/Autodesk/maya2011/devkit/include/maya/M3dView.h"
class M3dView {

public:


    enum DisplayStyle {
        kBoundingBox,
        kFlatShaded,
        kGouraudShaded,
        kWireFrame,
        kPoints
    };


    enum DisplayStatus {
        kActive,
        kLive,
        kDormant,
        kInvisible,
        kHilite,
        kTemplate,
        kActiveTemplate,
        kActiveComponent,
  kLead,
  kIntermediateObject,
  kActiveAffected,
        kNoStatus
    };


    enum ColorTable {
        kActiveColors = kActive,
        kDormantColors = kDormant,
        kTemplateColor = kTemplate,
        kBackgroundColor
    };


    enum TextPosition {
        kLeft,
        kCenter,
        kRight
    };





 enum DisplayObjects {
  kDisplayEverything = ~0,
  kDisplayNurbsCurves = 1 << 0,
  kDisplayNurbsSurfaces = 1 << 1,
  kDisplayMeshes = 1 << 2,
  kDisplayPlanes = 1 << 3,
  kDisplayLights = 1 << 4,
  kDisplayCameras = 1 << 5,
  kDisplayJoints = 1 << 6,
  kDisplayIkHandles = 1 << 7,
  kDisplayDeformers = 1 << 8,
  kDisplayDynamics = 1 << 9,
  kDisplayLocators = 1 << 10,
  kDisplayDimensions = 1 << 11,
  kDisplaySelectHandles = 1 << 12,
  kDisplayPivots = 1 << 13,
  kDisplayTextures = 1 << 14,
  kDisplayGrid = 1 << 15,
  kDisplayCVs = 1 << 16,
  kDisplayHulls = 1 << 17,
  kDisplayStrokes = 1 << 18,
  kDisplaySubdivSurfaces = 1 << 19,
  kDisplayFluids = 1 << 20,
  kDisplayFollicles = 1 << 21,
  kDisplayHairSystems = 1 << 22,
  kDisplayImagePlane = 1 << 23,
  kDisplayNCloths = 1 << 24,
  kDisplayNRigids = 1 << 25,
  kDisplayDynamicConstraints = 1 << 26,
  kDisplayManipulators = 1 << 27,
  kDisplayNParticles = 1 << 28
 };


 enum LightingMode {
  kLightAll,
  kLightSelected,
  kLightActive,
  kLightDefault
 };


 enum RendererName {

  kDefaultQualityRenderer,

  kHighQualityRenderer,

  kExternalRenderer
 };


 enum DepthBufferFormat
 {
  kDepth_8 = 0,
  kDepth_Float
 };


 enum LineStipplePattern
 {
  kStippleNone,
  kStippleDashed
 };

    M3dView();
    virtual ~M3dView();


    static M3dView active3dView( MStatus * ReturnStatus = __null );
 static unsigned int numberOf3dViews();
 static MStatus get3dView( const unsigned int index,
                       M3dView & view );







 MGLContext display ( MStatus * ReturnStatus = __null );







 static MNativeWindowHdl applicationShell( MStatus * ReturnStatus = __null );
 void getScreenPosition( int &x, int &y, MStatus *ReturnStatus = __null ) const;
 QWidget* widget( MStatus * ReturnStatus = __null ) const;
 MNativeWindowHdl window( MStatus * ReturnStatus = __null );
    int portWidth( MStatus * ReturnStatus = __null );
    int portHeight( MStatus * ReturnStatus = __null );


    MStatus pushViewport (unsigned int x, unsigned int y, unsigned int width, unsigned int height);
    MStatus popViewport ();
    MStatus viewport (unsigned int &x, unsigned int &y, unsigned int &width, unsigned int &height) const;



    MStatus beginGL();
    MStatus endGL();



    void beginSelect (GLuint *buffer = __null, GLsizei size = 0);
    GLint endSelect ();
    bool selectMode () const;
 bool textureMode () const;
    void loadName (GLuint name);
    void pushName (GLuint name);
    void popName ();
    void initNames ();


 MStatus beginXorDrawing(bool drawOrthographic = true,
        bool disableDepthTesting = true,
        float lineWidth = 1.0f,
        LineStipplePattern stipplePattern = kStippleNone,
        const MColor& lineColor = MColor(1, 1, 1));
 MStatus endXorDrawing();



    MStatus beginOverlayDrawing();
    MStatus endOverlayDrawing();
    MStatus clearOverlayPlane();



    MStatus setDrawColor( unsigned int index,
         ColorTable table = kActiveColors );
    MStatus setDrawColor( const MColor & color );

    unsigned int numDormantColors( MStatus * ReturnStatus = __null );
    unsigned int numActiveColors( MStatus * ReturnStatus = __null );
    unsigned int numUserDefinedColors( MStatus * ReturnStatus = __null );

    MStatus setUserDefinedColor( unsigned int index, const MColor & color );
    unsigned int userDefinedColorIndex( unsigned int index,
                                       MStatus * ReturnStatus = __null );

    MColor templateColor( MStatus * ReturnStatus = __null );
    MColor backgroundColor( MStatus * ReturnStatus = __null );

    MColor colorAtIndex( unsigned int index, ColorTable table = kActiveColors,
                              MStatus * ReturnStatus = __null );
 MStatus getColorIndexAndTable( unsigned int glindex, unsigned int &index,
            ColorTable &table ) const;
 MStatus colorMask(bool &r, bool &g, bool &b, bool &a);
 MStatus setColorMask(bool r, bool g, bool b, bool a);




    MStatus drawText( const MString & text, const MPoint position,
                          TextPosition textPosition = kLeft );



    MStatus getCamera( MDagPath & camera );
    MStatus setCamera( MDagPath & camera );

    MStatus refresh( bool all = false, bool force = false );
    MStatus refresh( bool all, bool force, bool offscreen );
    MStatus refresh( MPxGlBuffer &buffer );
    MStatus refresh( MPxGlBuffer &buffer, bool offscreen );
    MStatus refresh( MPxGlBuffer &buffer, bool offscreen, const MMatrix& projectionMatrix );


 MStatus getLightCount( unsigned int &count, bool visible = true );
 MStatus getLightingMode(LightingMode &mode );
 MStatus getLightPath( unsigned int lightNumber, MDagPath &light );
 MStatus isLightVisible( unsigned int lightNumber, bool &visible );
 MStatus getLightIndex( unsigned int lightNumber, unsigned int &lightIndex );



    MStatus viewToWorld( short x_pos, short y_pos,
                             MPoint & worldPt, MVector & worldVector ) const;
    MStatus viewToWorld( short x_pos, short y_pos,
                             MPoint & nearClipPt, MPoint & farClipPt ) const;
    MStatus viewToObjectSpace( short x_pos, short y_pos,
                                   const MMatrix & localMatrixInverse,
                                   MPoint & oPt, MVector & oVector ) const;
    bool worldToView( const MPoint& worldPt,
                             short& x_pos, short& y_pos,
                             MStatus * ReturnStatus = __null ) const;
 MStatus projectionMatrix( MMatrix& projectionMatrix ) const;

 MStatus modelViewMatrix( MMatrix& modelViewMatrix ) const;



 MString viewSelectedPrefix(MStatus *ReturnStatus) const;
 MStatus setViewSelectedPrefix( const MString &prefix);



 bool showViewSelectedChildren(MStatus *ReturnStatus) const;
 MStatus setShowViewSelectedChildren(bool);



 static MStatus getM3dViewFromModelPanel(const MString &modelPaneName,
            M3dView &view);



 static MStatus getM3dViewFromModelEditor(const MString &modelPaneName,
             M3dView &view);



    DisplayStyle displayStyle( MStatus * ReturnStatus = __null ) const;
    bool isShadeActiveOnly( MStatus * ReturnStatus = __null ) const;
    MStatus setDisplayStyle ( DisplayStyle style, bool activeOnly = false);




 MStatus setObjectDisplay( unsigned int displayMask );
 unsigned int objectDisplay( MStatus *ReturnStatus = __null );

 RendererName getRendererName(MStatus *ReturnStatus ) const;
 MString rendererString( MStatus * ReturnStatus = __null ) const;
 bool wireframeOnlyInShadedMode(MStatus *ReturnStatus ) const;


 MStatus readColorBuffer( MImage &image, bool readRGBA = false );
 MStatus writeColorBuffer( const MImage &image, signed short x = 0, signed short y = 0) const;
 MStatus readDepthMap(unsigned short x, unsigned short y,
        unsigned int width, unsigned int height,
        unsigned char* bufferPtr,
        DepthBufferFormat depthMapPrecision);
 MStatus readBufferTo2dTexture(unsigned short x, unsigned short y,
        unsigned int width, unsigned int height);


 bool usingMipmappedTextures() const;


 bool usingDefaultMaterial() const;


 MStatus updateViewingParameters() ;
 bool multipleDrawEnabled() const;
 void setMultipleDrawEnable( bool enable );
 unsigned multipleDrawPassCount();
 void setMultipleDrawPassCount( unsigned count );


 MStatus beginProjMatrixOverride( MMatrix& projectionMatrix );
 MStatus endProjMatrixOverride();

public:

 MStatus getRendererString( MString &stringName ) const;

public:

protected:


private:
    static const char* className();
    M3dView( const void * );
    const void * fPtr;
 void *fXorDrawPtr;
};
# 53 "/Applications/Autodesk/maya2011/devkit/include/maya/MPxLocatorNode.h" 2
# 1 "/Applications/Autodesk/maya2011/devkit/include/maya/MBoundingBox.h" 1
# 48 "/Applications/Autodesk/maya2011/devkit/include/maya/MBoundingBox.h"
# 1 "/Applications/Autodesk/maya2011/devkit/include/maya/MPoint.h" 1
# 49 "/Applications/Autodesk/maya2011/devkit/include/maya/MPoint.h"
# 1 "/Applications/Autodesk/maya2011/devkit/include/maya/MVector.h" 1
# 48 "/Applications/Autodesk/maya2011/devkit/include/maya/MVector.h"
# 1 "/Applications/Autodesk/maya2011/devkit/include/maya/MTransformationMatrix.h" 1
# 53 "/Applications/Autodesk/maya2011/devkit/include/maya/MTransformationMatrix.h"
class MMatrix;
class MVector;
class MPoint;
class MQuaternion;
class MEulerRotation;
# 161 "/Applications/Autodesk/maya2011/devkit/include/maya/MTransformationMatrix.h"
class MTransformationMatrix
{
public:

 enum RotationOrder {
  kInvalid,
  kXYZ,
  kYZX,
  kZXY,
  kXZY,
  kYXZ,
  kZYX,
  kLast
 };
 ~MTransformationMatrix();
 MTransformationMatrix();
 MTransformationMatrix( const MTransformationMatrix& src );
 MTransformationMatrix( const MMatrix& src );
 MTransformationMatrix& operator= ( const MTransformationMatrix &src );
 MTransformationMatrix& operator= ( const MMatrix &src );
 MMatrix asMatrix() const;
  MMatrix asMatrix(double percent) const;
  MMatrix asMatrixInverse() const;
 MMatrix asScaleMatrix() const;
  MMatrix asRotateMatrix() const;
  MStatus getScale( double scale[3], MSpace::Space space) const;
  MStatus setScale( const double scale[3], MSpace::Space space);
  MStatus addScale( const double scale[3], MSpace::Space space);
 MQuaternion rotation() const;
 MTransformationMatrix &rotateTo( const MQuaternion &q );
 MTransformationMatrix &rotateBy( const MQuaternion &q,
          MSpace::Space space,
          MStatus *ReturnStatus = __null);
 MEulerRotation eulerRotation() const;
 MTransformationMatrix &rotateTo( const MEulerRotation &e );
 MTransformationMatrix &rotateBy( const MEulerRotation &e,
          MSpace::Space space,
          MStatus *ReturnStatus = __null);
  MStatus getRotationQuaternion( double &x, double &y, double &z,
            double &w ) const;
  MStatus setRotationQuaternion( double x, double y, double z,
            double w );
  MStatus addRotationQuaternion( double x, double y, double z,
            double w, MSpace::Space );
  MStatus getRotation( double[3],
        RotationOrder& order ) const;
  MStatus setRotation( const double rotation[3],
        RotationOrder order );
 MStatus addRotation( const double rotation[3],
        RotationOrder order, MSpace::Space );
 RotationOrder rotationOrder( MStatus* ReturnStatus = __null ) const;
 MStatus reorderRotation( const RotationOrder& order );
 MStatus setToRotationAxis( const MVector &axis, double rotation );
 MQuaternion rotationOrientation() const;
 MTransformationMatrix &setRotationOrientation( const MQuaternion &q );
 MVector getTranslation( MSpace::Space, MStatus* ReturnStatus=__null ) const;
  MStatus setTranslation( const MVector& vector, MSpace::Space );
 MStatus addTranslation( const MVector& vector, MSpace::Space );
 MStatus setShear( const double shear[3], MSpace::Space space);
 MStatus getShear( double shear[3], MSpace::Space space) const;
 MStatus addShear( const double shear[3], MSpace::Space space);
 MPoint scalePivot( MSpace::Space, MStatus* ReturnStatus = __null ) const;
 MStatus setScalePivot( const MPoint&, MSpace::Space, bool balance );
 MVector scalePivotTranslation(MSpace::Space,
           MStatus* ReturnStatus=__null )const;
 MStatus setScalePivotTranslation( const MVector& vector,
            MSpace::Space );
 MPoint rotatePivot( MSpace::Space, MStatus* ReturnStatus=__null ) const;
 MStatus setRotatePivot( const MPoint& point,
        MSpace::Space, bool balance );
 MVector rotatePivotTranslation( MSpace::Space space,
     MStatus* ReturnStatus=__null ) const;
 MStatus setRotatePivotTranslation( const MVector& vector,
             MSpace::Space space );
  bool isEquivalent ( const MTransformationMatrix &other,
     double tolerance = 1.0e-10 ) const;
  bool operator == (const MTransformationMatrix & other ) const;
 bool operator != ( const MTransformationMatrix & other ) const;


  MStatus getRotation( double[3],
        RotationOrder& order, MSpace::Space ) const;

  MStatus setRotation( const double rotation[3],
        RotationOrder order, MSpace::Space );

  MStatus getRotationQuaternion( double &x, double &y, double &z,
            double &w, MSpace::Space ) const;

  MStatus setRotationQuaternion( double x, double y, double z,
            double w, MSpace::Space );

 MVector translation( MSpace::Space, MStatus* ReturnStatus=__null ) const;


 static const MTransformationMatrix identity;


protected:


private:
 const void* data;
 const char* className() const;
 MTransformationMatrix( const void* );
};
# 49 "/Applications/Autodesk/maya2011/devkit/include/maya/MVector.h" 2





class MMatrix;
class MFloatPoint;
class MFloatVector;
class MPoint;
class MQuaternion;
class MEulerRotation;
# 76 "/Applications/Autodesk/maya2011/devkit/include/maya/MVector.h"
class MVector
{
public:

 enum Axis {
  kXaxis,
  kYaxis,
  kZaxis,
  kWaxis
 };

     MVector();
     MVector( const MVector&);
     MVector( const MFloatPoint&);
     MVector( const MFloatVector&);
     MVector( const MPoint&);
     MVector( double xx, double yy, double zz = 0.0);
     MVector( const double d[3] );
     ~MVector();
  MVector& operator= ( const MVector& src );
  double operator()( unsigned int i ) const;
 double operator[]( unsigned int i )const;
  MVector operator^( const MVector& right) const;
  double operator*( const MVector& right ) const;
  MVector& operator/=( double scalar );
  MVector operator/( double scalar ) const;
  MVector& operator*=( double scalar );
  MVector operator*( double scalar ) const;
  MVector operator+( const MVector& other) const;
 MVector& operator+=( const MVector& other );
  MVector operator-() const;
 MVector& operator-=( const MVector& other );
  MVector operator-( const MVector& other ) const;
  MVector operator*( const MMatrix&) const;
  MVector& operator*=( const MMatrix&);
  bool operator!=( const MVector& other ) const;
  bool operator==( const MVector& other ) const;
 MVector rotateBy( double x, double y, double z, double w) const;
 MVector rotateBy( const double rotXYZ[3],
         MTransformationMatrix::RotationOrder order )
                              const;
 MVector rotateBy( MVector::Axis axis, const double angle ) const;
 MVector rotateBy( const MQuaternion & ) const;
 MVector rotateBy( const MEulerRotation & ) const;
 MQuaternion rotateTo( const MVector & ) const;
 MStatus get( double[3] ) const;
  double length() const;
  MVector normal() const;
 MStatus normalize();
  double angle( const MVector& other ) const;
 bool isEquivalent( const MVector& other,
      double tolerance = 1.0e-10 ) const;
  bool isParallel( const MVector& other,
      double tolerance = 1.0e-10 ) const;
 MVector transformAsNormal( const MMatrix & matrix ) const;

public:


  double& operator()( unsigned int i );


  double& operator[]( unsigned int i );


  friend MVector operator*( const MMatrix&, const MVector&);

  friend MVector operator*( int, const MVector&);

  friend MVector operator*( short, const MVector&);

  friend MVector operator*( unsigned int, const MVector&);

  friend MVector operator*( unsigned short, const MVector&);

  friend MVector operator*( float, const MVector&);

  friend MVector operator*( double, const MVector&);


 friend std::ostream& operator<<(std::ostream& os, const MVector& v);

public:


 static const MVector zero;

 static const MVector one;

 static const MVector xAxis;

 static const MVector yAxis;

 static const MVector zAxis;

 static const MVector xNegAxis;

 static const MVector yNegAxis;

 static const MVector zNegAxis;

 double x;

 double y;

 double z;

protected:


private:

};
# 202 "/Applications/Autodesk/maya2011/devkit/include/maya/MVector.h"
inline MVector::MVector()
  : x(0.0)
 , y(0.0)
 , z(0.0)
{
}







inline MVector::MVector(const MVector& src)
  : x(src.x)
 , y(src.y)
 , z(src.z)
{
}
# 230 "/Applications/Autodesk/maya2011/devkit/include/maya/MVector.h"
inline MVector::MVector(double xx, double yy, double zz)
  : x(xx)
 , y(yy)
 , z(zz)
{
}







inline MVector::MVector( const double d[3] )
  : x(d[0])
 , y(d[1])
 , z(d[2])
{
}




inline MVector::~MVector()
{
}






inline MVector& MVector::operator= (const MVector& src)
{
 x=src.x;
 y=src.y;
 z=src.z;
 return (*this);
}
# 278 "/Applications/Autodesk/maya2011/devkit/include/maya/MVector.h"
inline double& MVector::operator()( unsigned int i )
{
 if( i== 0 ) return x;
 else if( i== 1 ) return y;
 else return z;
}
# 293 "/Applications/Autodesk/maya2011/devkit/include/maya/MVector.h"
inline double MVector::operator()( unsigned int i ) const
{
 if( i== 0 ) return x;
 else if( i== 1 ) return y;
 else return z;
}
# 308 "/Applications/Autodesk/maya2011/devkit/include/maya/MVector.h"
inline double& MVector::operator[]( unsigned int i )
{
 if( i== 0 ) return x;
 else if( i== 1 ) return y;
 else return z;
}
# 323 "/Applications/Autodesk/maya2011/devkit/include/maya/MVector.h"
inline double MVector::operator[]( unsigned int i ) const
{
 if( i== 0 ) return x;
 else if( i== 1 ) return y;
 else return z;
}






inline MVector MVector::operator^ (const MVector& right) const
{
 return MVector(y*right.z - z*right.y,
       z*right.x - x*right.z,
       x*right.y - y*right.x);
}






inline double MVector::operator* (const MVector& right) const
{
 return (x*right.x + y*right.y + z*right.z);
}






inline MVector& MVector::operator*= (double scalar)
{
 x *= scalar;
 y *= scalar;
 z *= scalar;
 return *this;
}






inline MVector MVector::operator* ( double scalar ) const
{
 MVector tmp(*this);
 tmp *= scalar;
 return tmp;
}






inline MVector& MVector::operator/= (double scalar)
{
 x /= scalar;
 y /= scalar;
 z /= scalar;
 return *this;
}






inline MVector MVector::operator/ ( double scalar ) const
{
 MVector tmp(*this);
 tmp /= scalar;
 return tmp;
}






inline MVector MVector::operator- (const MVector& other) const
{
 return MVector(x-other.x, y-other.y, z-other.z);
}






inline MVector MVector::operator+ (const MVector& other) const
{
 return MVector(x+other.x, y+other.y, z+other.z);
}






inline MVector& MVector::operator+= (const MVector& other)
{
 x += other.x;
 y += other.y;
 z += other.z;
 return *this;
}





inline MVector MVector::operator- () const
{
 return MVector(-x,-y,-z);
}






inline MVector& MVector::operator-= (const MVector& other)
{
 x -= other.x;
 y -= other.y;
 z -= other.z;
 return *this;
}







inline MStatus MVector::normalize()
{
 double lensq = x*x + y*y + z*z;
 if(lensq>1e-20) {
  double factor = 1.0 / sqrt(lensq);
  x *= factor;
  y *= factor;
  z *= factor;
 }
 return MStatus::kSuccess;
}




inline MVector MVector::normal() const
{
 MVector tmp(*this);
 tmp.normalize();
 return tmp;
}




inline double MVector::length() const
{
 return sqrt(x*x+y*y+z*z);
}
# 503 "/Applications/Autodesk/maya2011/devkit/include/maya/MVector.h"
inline bool MVector::isEquivalent(const MVector& other, double tol) const
{
 MVector diff = *this - other;
 return (diff.x*diff.x + diff.y*diff.y + diff.z*diff.z) < tol*tol;
}
# 518 "/Applications/Autodesk/maya2011/devkit/include/maya/MVector.h"
inline bool MVector::operator== (const MVector& other) const
{
 return (x == other.x && y == other.y && z == other.z);
}
# 532 "/Applications/Autodesk/maya2011/devkit/include/maya/MVector.h"
inline bool MVector::operator!= (const MVector& other) const
{
 return !(*this == other);
}
# 546 "/Applications/Autodesk/maya2011/devkit/include/maya/MVector.h"
inline MStatus MVector::get( double dest[3] ) const
{
 if(dest != __null)
 {
  dest[0] = x;
  dest[1] = y;
  dest[2] = z;
  return MStatus::kSuccess;
 }
 return MStatus::kFailure;
}
# 570 "/Applications/Autodesk/maya2011/devkit/include/maya/MVector.h"
inline MVector operator * (double scalar, const MVector& other)
{
 return MVector(scalar*other.x, scalar*other.y, scalar*other.z);
}
# 585 "/Applications/Autodesk/maya2011/devkit/include/maya/MVector.h"
inline MVector operator * (float scalar, const MVector& other)
{
 return double(scalar) * other;
}
# 600 "/Applications/Autodesk/maya2011/devkit/include/maya/MVector.h"
inline MVector operator * (unsigned short scalar, const MVector& other)
{
 return double(scalar) * other;
}
# 615 "/Applications/Autodesk/maya2011/devkit/include/maya/MVector.h"
inline MVector operator * (unsigned int scalar, const MVector& other)
{
 return double(scalar) * other;
}
# 630 "/Applications/Autodesk/maya2011/devkit/include/maya/MVector.h"
inline MVector operator * (short scalar, const MVector& other)
{
 return double(scalar) * other;
}
# 645 "/Applications/Autodesk/maya2011/devkit/include/maya/MVector.h"
inline MVector operator * (int scalar, const MVector& other)
{
 return double(scalar) * other;
}
# 50 "/Applications/Autodesk/maya2011/devkit/include/maya/MPoint.h" 2




class MMatrix;
class MVector;
class MFloatPoint;
class MFloatVector;
# 75 "/Applications/Autodesk/maya2011/devkit/include/maya/MPoint.h"
class MPoint
{
public:
     MPoint();
     MPoint( const MPoint & srcpt );
     MPoint( const MFloatPoint & srcpt );
     MPoint( const MVector & src );
     MPoint( const MFloatVector & src );
     MPoint( double xx, double yy,
       double zz = 0.0, double ww = 1.0 );
     MPoint( const double d[4] );
     MPoint( const float d[4] );
     ~MPoint();
 MStatus get( double[4] ) const;
 MStatus get( float[4] ) const;
 double operator[](unsigned int i) const;
 double operator()(unsigned int i) const;
 MPoint & operator=( const MPoint & src );
 MVector operator-( const MPoint & other ) const;
 MPoint operator+( const MVector & other ) const;
 MPoint operator-( const MVector & other ) const;
 MPoint & operator+=( const MVector & vector );
 MPoint & operator-=( const MVector & vector );
 MPoint operator*(const double scale) const;
 MPoint operator/(const double scale) const;
 MPoint operator*(const MMatrix &) const;
 MPoint & operator*=(const MMatrix &);
 bool operator==( const MPoint & other ) const;
 bool operator!=( const MPoint & other ) const;
 MPoint & cartesianize();
 MPoint & rationalize();
 MPoint & homogenize();
 double distanceTo( const MPoint & other ) const;
 bool isEquivalent( const MPoint & other,
          double tolerance = 1.0e-10) const;

public:


 double & operator[](unsigned int i);


 double & operator()(unsigned int i);


 friend MPoint operator*(const MMatrix &, const MPoint &);

 friend std::ostream& operator<<(std::ostream& os, const MPoint& p);

public:

 static const MPoint origin;
public:

 double x;

 double y;

 double z;

 double w;

protected:


private:

 static const char* className();
};




inline MPoint::MPoint()
  : x(0.0)
 , y(0.0)
 , z(0.0)
 , w(1.0)
{
}







inline MPoint::MPoint(const MPoint& srcpt)
  : x(srcpt.x)
 , y(srcpt.y)
 , z(srcpt.z)
 , w(srcpt.w)
{
}







inline MPoint::MPoint(const double d[4] )
  : x(d[0])
 , y(d[1])
 , z(d[2])
 , w(d[3])
{
}







inline MPoint::MPoint(const float d[4] )
  : x(d[0])
 , y(d[1])
 , z(d[2])
 , w(d[3])
{
}
# 206 "/Applications/Autodesk/maya2011/devkit/include/maya/MPoint.h"
inline MPoint::MPoint(double xx, double yy, double zz, double ww)
  : x(xx)
 , y(yy)
 , z(zz)
 , w(ww)
{
}




inline MPoint::~MPoint()
{
}
# 229 "/Applications/Autodesk/maya2011/devkit/include/maya/MPoint.h"
inline MPoint& MPoint::operator=(const MPoint& src)
{
 x = src.x;
 y = src.y;
 z = src.z;
 w = src.w;
 return *this;
}
# 251 "/Applications/Autodesk/maya2011/devkit/include/maya/MPoint.h"
inline double& MPoint::operator() (unsigned int i)
{
 switch( i )
 {
  case 1: return y;
  case 2: return z;
  case 3: return w;
 }
 return x;
}
# 279 "/Applications/Autodesk/maya2011/devkit/include/maya/MPoint.h"
inline double MPoint::operator() (unsigned int i) const
{
 switch( i )
 {
  default:
  case 0: return x;
  case 1: return y;
  case 2: return z;
  case 3: return w;
 }
}
# 304 "/Applications/Autodesk/maya2011/devkit/include/maya/MPoint.h"
inline double& MPoint::operator[]( unsigned int i )
{
 switch( i )
 {
  default:
  case 0: return x;
  case 1: return y;
  case 2: return z;
  case 3: return w;
 }
}
# 333 "/Applications/Autodesk/maya2011/devkit/include/maya/MPoint.h"
inline double MPoint::operator[]( unsigned int i ) const
{
 switch( i )
 {
  default:
  case 0: return x;
  case 1: return y;
  case 2: return z;
  case 3: return w;
 }
}
# 354 "/Applications/Autodesk/maya2011/devkit/include/maya/MPoint.h"
inline MStatus MPoint::get( float dest[4] ) const
{
 if( dest != __null )
 {
  dest[0] = (float) x;
  dest[1] = (float) y;
  dest[2] = (float) z;
  dest[3] = (float) w;
  return MStatus::kSuccess;
 }
 return MStatus::kFailure;
}
# 376 "/Applications/Autodesk/maya2011/devkit/include/maya/MPoint.h"
inline MStatus MPoint::get( double dest[4] ) const
{
 if( dest != __null )
 {
  dest[0] = x;
  dest[1] = y;
  dest[2] = z;
  dest[3] = w;
  return MStatus::kSuccess;
 }
 return MStatus::kFailure;
}
# 399 "/Applications/Autodesk/maya2011/devkit/include/maya/MPoint.h"
inline MPoint& MPoint::operator+= (const MVector& vector )
{
 x += vector.x;
 y += vector.y;
 z += vector.z;
 return *this;
}
# 417 "/Applications/Autodesk/maya2011/devkit/include/maya/MPoint.h"
inline MPoint& MPoint::operator-= (const MVector& vector )
{
 x -= vector.x;
 y -= vector.y;
 z -= vector.z;
 return *this;
}
# 435 "/Applications/Autodesk/maya2011/devkit/include/maya/MPoint.h"
inline MPoint MPoint::operator+ (const MVector& other) const
{
 if(w==1.0) {
  return MPoint(x+other.x, y+other.y, z+other.z);
 } else {
  MPoint p1(*this); p1.cartesianize();
  return MPoint(p1.x+other.x, p1.y+other.y, p1.z+other.z);
 }
}
# 455 "/Applications/Autodesk/maya2011/devkit/include/maya/MPoint.h"
inline MPoint MPoint::operator- (const MVector& other) const
{
 if(w==1.0) {
  return MPoint(x-other.x, y-other.y, z-other.z);
 } else {
  MPoint p1(*this); p1.cartesianize();
  return MPoint(p1.x-other.x, p1.y-other.y, p1.z-other.z);
 }
}
# 474 "/Applications/Autodesk/maya2011/devkit/include/maya/MPoint.h"
inline MVector MPoint::operator- (const MPoint& other) const
{
 if(w==1.0 && other.w==1.0) {
  return MVector(x-other.x, y-other.y, z-other.z);
 } else {
  MPoint p1(*this); p1.cartesianize();
  MPoint p2(other); p2.cartesianize();
  return MVector(p1.x-p2.x, p1.y-p2.y, p1.z-p2.z);
 }
}
# 496 "/Applications/Autodesk/maya2011/devkit/include/maya/MPoint.h"
inline MPoint MPoint::operator* (const double scale) const
{
 return MPoint( x*scale, y*scale, z*scale, w );
}
# 512 "/Applications/Autodesk/maya2011/devkit/include/maya/MPoint.h"
inline MPoint MPoint::operator/ (const double scale) const
{
 return MPoint( x/scale, y/scale, z/scale, w );
}
# 526 "/Applications/Autodesk/maya2011/devkit/include/maya/MPoint.h"
inline bool MPoint::operator== (const MPoint& other) const
{
 return (x == other.x && y == other.y && z == other.z);
}
# 540 "/Applications/Autodesk/maya2011/devkit/include/maya/MPoint.h"
inline bool MPoint::operator!= (const MPoint& other) const
{
 return !(*this == other);
}
# 556 "/Applications/Autodesk/maya2011/devkit/include/maya/MPoint.h"
inline bool MPoint::isEquivalent(const MPoint& other, double tol) const
{
 MPoint diff = *this - other;
 return (diff.x*diff.x + diff.y*diff.y + diff.z*diff.z) < tol*tol;
}
# 571 "/Applications/Autodesk/maya2011/devkit/include/maya/MPoint.h"
inline double MPoint::distanceTo(const MPoint& other) const
{
 MVector diff = *this - other;
 return diff.length();
}
# 49 "/Applications/Autodesk/maya2011/devkit/include/maya/MBoundingBox.h" 2
# 59 "/Applications/Autodesk/maya2011/devkit/include/maya/MBoundingBox.h"
class MMatrix;
# 72 "/Applications/Autodesk/maya2011/devkit/include/maya/MBoundingBox.h"
class MBoundingBox
{
public:
    MBoundingBox();
 MBoundingBox( const MBoundingBox & src );
 MBoundingBox( const MPoint &corner1, const MPoint &corner2 );

 ~MBoundingBox();

 void clear();

    void transformUsing ( const MMatrix &matrix );
 void expand( const MPoint & point );
 void expand( const MBoundingBox & box );

 bool contains( const MPoint & point ) const;
 bool intersects (const MBoundingBox & box, double tol = 0.0 ) const;
 double width() const;
 double height() const;
 double depth() const;
 MPoint center() const;
 MPoint min() const;
 MPoint max() const;

 MBoundingBox & operator=( const MBoundingBox & other );


protected:


private:
 double data[6];
};
# 54 "/Applications/Autodesk/maya2011/devkit/include/maya/MPxLocatorNode.h" 2





class MDagPath;
# 78 "/Applications/Autodesk/maya2011/devkit/include/maya/MPxLocatorNode.h"
class MPxLocatorNode : public MPxNode
{
public:
 MPxLocatorNode();
 virtual ~MPxLocatorNode();
 virtual MPxNode::Type type() const;



 virtual void draw( M3dView & view, const MDagPath & path,
           M3dView::DisplayStyle style, M3dView:: DisplayStatus );
 virtual bool isBounded() const;
 virtual MBoundingBox boundingBox() const;




 unsigned int color( M3dView::DisplayStatus displayStatus );

 MColor colorRGB( M3dView::DisplayStatus displayStatus );

 virtual bool excludeAsLocator() const;

 virtual bool isTransparent() const;

 virtual bool drawLast() const;




 static MObject underWorldObject;

 static MObject localPosition;

  static MObject localPositionX;

  static MObject localPositionY;

  static MObject localPositionZ;

 static MObject worldPosition;

     static MObject worldPositionX;

     static MObject worldPositionY;

     static MObject worldPositionZ;

 static MObject localScale;

  static MObject localScaleX;

  static MObject localScaleY;

  static MObject localScaleZ;

 static MObject nodeBoundingBox;

     static MObject nodeBoundingBoxMin;

         static MObject nodeBoundingBoxMinX;

         static MObject nodeBoundingBoxMinY;

         static MObject nodeBoundingBoxMinZ;

     static MObject nodeBoundingBoxMax;

         static MObject nodeBoundingBoxMaxX;

         static MObject nodeBoundingBoxMaxY;

         static MObject nodeBoundingBoxMaxZ;

     static MObject nodeBoundingBoxSize;

         static MObject nodeBoundingBoxSizeX;

         static MObject nodeBoundingBoxSizeY;

         static MObject nodeBoundingBoxSizeZ;

 static MObject center;

     static MObject boundingBoxCenterX;

     static MObject boundingBoxCenterY;

     static MObject boundingBoxCenterZ;

 static MObject matrix;

 static MObject inverseMatrix;

 static MObject worldMatrix;

 static MObject worldInverseMatrix;

 static MObject parentMatrix;

 static MObject parentInverseMatrix;

 static MObject visibility;

 static MObject intermediateObject;

 static MObject isTemplated;

 static MObject instObjGroups;

     static MObject objectGroups;

         static MObject objectGrpCompList;

         static MObject objectGroupId;

         static MObject objectGroupColor;

 static MObject useObjectColor;

 static MObject objectColor;

protected:


private:
 static void initialSetup();
 static const char* className();

};
# 15 "/Users/ristopuukko/Documents/maya_developement/drawOgl/drawOgl/drawOgl.h" 2
# 1 "/Applications/Autodesk/maya2011/devkit/include/maya/MFnNumericAttribute.h" 1
# 47 "/Applications/Autodesk/maya2011/devkit/include/maya/MFnNumericAttribute.h"
# 1 "/Applications/Autodesk/maya2011/devkit/include/maya/MFnAttribute.h" 1
# 53 "/Applications/Autodesk/maya2011/devkit/include/maya/MFnAttribute.h"
class MTypeId;
class MString;
# 93 "/Applications/Autodesk/maya2011/devkit/include/maya/MFnAttribute.h"
class MFnAttribute : public MFnBase
{
 public: virtual MFn::Type type() const; virtual ~MFnAttribute(); protected: virtual const char* className() const; private: MFnAttribute & operator=( const MFnAttribute & ); MFnAttribute * operator& () const;; public: MFnAttribute() {}; MFnAttribute( MObject & object, MStatus * ReturnStatus = __null );

public:


 enum DisconnectBehavior {
  kDelete,
  kReset,
  kNothing
 };

 bool isReadable( MStatus* ReturnStatus=__null ) const;
 bool isWritable( MStatus* ReturnStatus=__null ) const;
 bool isConnectable( MStatus* ReturnStatus=__null ) const;
 bool isStorable( MStatus* ReturnStatus=__null ) const;
 bool isCached( MStatus* ReturnStatus=__null ) const;
 bool isArray( MStatus* ReturnStatus=__null ) const;
 bool indexMatters( MStatus* ReturnStatus=__null ) const;
 bool isKeyable( MStatus* ReturnStatus=__null ) const;
 bool isChannelBoxFlagSet( MStatus* ReturnStatus=__null ) const;
 bool isHidden( MStatus* ReturnStatus=__null ) const;
 bool isUsedAsColor( MStatus* ReturnStatus=__null ) const;
 bool isIndeterminant( MStatus* ReturnStatus=__null ) const;
 bool isRenderSource( MStatus* ReturnStatus=__null ) const;
 bool isDynamic( MStatus* ReturnStatus=__null ) const;
 bool isWorldSpace( MStatus* ReturnStatus=__null ) const;
 bool isAffectsWorldSpace( MStatus* ReturnStatus=__null ) const;

 DisconnectBehavior disconnectBehavior( MStatus* ReturnStatus=__null ) const;
 bool usesArrayDataBuilder( MStatus* ReturnStatus=__null ) const;
 bool internal( MStatus* ReturnStatus=__null ) const;

 MStatus setReadable( bool state );
 MStatus setWritable( bool state );
 MStatus setConnectable( bool state );
 MStatus setStorable( bool state );
 MStatus setCached( bool state );
 MStatus setArray( bool state );
 MStatus setIndexMatters( bool state );
 MStatus setKeyable( bool state );
 MStatus setChannelBox( bool state );
 MStatus setHidden( bool state );
 MStatus setUsedAsColor( bool state );
 MStatus setIndeterminant( bool state );
 MStatus setRenderSource( bool state );
 MStatus setWorldSpace( bool state );
 MStatus setAffectsWorldSpace( bool state );

 MStatus setDisconnectBehavior( DisconnectBehavior behavior );
 MStatus setUsesArrayDataBuilder( bool state );
 MStatus setInternal( bool state );
 bool accepts( MFnData::Type type, MStatus* ReturnStatus=__null ) const;
 bool accepts( const MTypeId& id, MStatus* ReturnStatus=__null ) const;
 MObject parent(MStatus* ReturnStatus=__null) const;
 MStatus setParent( const MObject & parent );
    MString name( MStatus* ReturnStatus=__null ) const;
    MString shortName( MStatus* ReturnStatus=__null ) const;
 MString getAddAttrCmd(
     bool useLongName = false,
     MStatus* status=__null
    ) const;

public:


  MFnAttribute( const MObject & object, MStatus * ReturnStatus = __null );

public:


 bool isUsedAsFilename( MStatus* ReturnStatus=__null ) const;

 MStatus setUsedAsFilename( bool state );

protected:
 void * ca[4];
 void setPtr( MPtrBase* );

private:
 virtual bool objectChanged( MFn::Type, MStatus * );
};
# 48 "/Applications/Autodesk/maya2011/devkit/include/maya/MFnNumericAttribute.h" 2






class MString;
# 77 "/Applications/Autodesk/maya2011/devkit/include/maya/MFnNumericAttribute.h"
class MFnNumericAttribute : public MFnAttribute
{
 public: virtual MFn::Type type() const; virtual ~MFnNumericAttribute(); protected: virtual const char* className() const; private: MFnNumericAttribute & operator=( const MFnNumericAttribute & ); MFnNumericAttribute * operator& () const;; public: MFnNumericAttribute() {}; MFnNumericAttribute( MObject & object, MStatus * ReturnStatus = __null );

public:
 MObject create( const MString& fullName,
      const MString& briefName,
      MFnNumericData::Type unitType,
      double defaultValue =0,
      MStatus* ReturnStatus = __null );
 MObject createColor( const MString& fullName,
        const MString& briefName,
        MStatus* ReturnStatus = __null );
 MObject createPoint( const MString& fullName,
        const MString& briefName,
        MStatus* ReturnStatus = __null );
 MObject createAddr( const MString& fullName,
       const MString& briefName,
                            void* defaultValue = __null,
       MStatus* ReturnStatus = __null );
 MObject create( const MString& fullName,
      const MString& briefName,
      const MObject & child1,
      const MObject & child2,
      const MObject & child3 = MObject::kNullObj,
      MStatus* ReturnStatus = __null );
 MFnNumericData::Type unitType( MStatus* ReturnStatus = __null ) const;
 MObject child( unsigned int index, MStatus* ReturnStatus = __null ) const;
 bool hasMin( MStatus* ReturnStatus = __null) const;
 bool hasMax( MStatus* ReturnStatus = __null) const;
 bool hasSoftMin( MStatus* ReturnStatus = __null) const;
 bool hasSoftMax( MStatus* ReturnStatus = __null) const;
 MStatus getMin( double& min1 ) const;
 MStatus getMin( double& min1, double& min2 ) const;
 MStatus getMin( double& min1, double& min2, double& min3 ) const;
 MStatus getMax( double& max1 ) const;
 MStatus getMax( double& max1, double& max2 ) const;
 MStatus getMax( double& max1, double& max2, double& max3 ) const;
 MStatus getSoftMin( double& min1 ) const;
 MStatus getSoftMax( double& max1 ) const;
 MStatus setMin( double min1 );
 MStatus setMin( double min1, double min2 );
 MStatus setMin( double min1, double min2, double min3 );
 MStatus setMax( double max1 );
 MStatus setMax( double max1, double max2 );
 MStatus setMax( double max1, double max2, double max3 );
 MStatus setSoftMin( double min1 );
 MStatus setSoftMax( double max1 );
 MStatus getDefault( bool & def1 );
 MStatus getDefault( char & def1 );
 MStatus getDefault( int & def1 );
 MStatus getDefault( int & def1, int & def2 );
 MStatus getDefault( int & def1, int & def2, int & def3 );
 MStatus getDefault( float & def1 );
 MStatus getDefault( float & def1, float & def2 );
 MStatus getDefault( float & def1, float & def2, float & def3 );
 MStatus getDefault( double & def1 );
 MStatus getDefault( double & def1, double & def2 );
 MStatus getDefault( double & def1, double & def2, double & def3 );
 MStatus getDefault( double & def1, double & def2, double & def3, double & def4 );
 MStatus getDefault( void*& def1 );
 MStatus setDefault( bool def1 );
 MStatus setDefault( char def1 );
 MStatus setDefault( int def1 );
 MStatus setDefault( int def1, int def2 );
 MStatus setDefault( int def1, int def2, int def3 );
 MStatus setDefault( float def1 );
 MStatus setDefault( float def1, float def2 );
 MStatus setDefault( float def1, float def2, float def3 );
 MStatus setDefault( double def1 );
 MStatus setDefault( double def1, double def2 );
 MStatus setDefault( double def1, double def2, double def3 );
 MStatus setDefault( double def1, double def2, double def3, double def4 );
 MStatus setDefault( void* def1 );

public:

  MFnNumericAttribute( const MObject & object, MStatus * ReturnStatus = __null );

public:

protected:


private:

 virtual bool objectChanged( MFn::Type, MStatus * );

 MObject internalCreate( const MString& fullName,
      const MString& briefName,
      MFnNumericData::Type unitType,
        const char** childSuffixes,
      double defaultValue,
      MStatus* ReturnStatus);
};
# 16 "/Users/ristopuukko/Documents/maya_developement/drawOgl/drawOgl/drawOgl.h" 2
# 1 "/Applications/Autodesk/maya2011/devkit/include/maya/MFnStringData.h" 1
# 52 "/Applications/Autodesk/maya2011/devkit/include/maya/MFnStringData.h"
class MString;
class MStringArray;
# 71 "/Applications/Autodesk/maya2011/devkit/include/maya/MFnStringData.h"
class MFnStringData : public MFnData
{
 public: virtual MFn::Type type() const; virtual ~MFnStringData(); protected: virtual const char* className() const; private: MFnStringData & operator=( const MFnStringData & ); MFnStringData * operator& () const;; public: MFnStringData() {}; MFnStringData( MObject & object, MStatus * ReturnStatus = __null );

public:
 MString string( MStatus* ReturnStatus = __null ) const;
 MStatus set( const MString& newString );
 MObject create( const MString& str, MStatus* ReturnStatus = __null );
 MObject create( MStatus* ReturnStatus = __null );

public:

  MFnStringData( const MObject & object, MStatus * ReturnStatus = __null );

public:

protected:


private:

};
# 17 "/Users/ristopuukko/Documents/maya_developement/drawOgl/drawOgl/drawOgl.h" 2




# 1 "/Applications/Autodesk/maya2011/devkit/include/maya/MDistance.h" 1
# 60 "/Applications/Autodesk/maya2011/devkit/include/maya/MDistance.h"
class MDistance
{
public:

 enum Unit
 {
  kInvalid,

  kInches,

  kFeet,

  kYards,

  kMiles,

  kMillimeters,

  kCentimeters,

  kKilometers,

  kMeters,
  kLast
 };
     MDistance();
     MDistance( double value, Unit unitSystem = kCentimeters );
     MDistance( const MDistance& src );
     ~MDistance();
 MDistance& operator=( const MDistance& src );
 Unit unit() const;
 double value() const;
 MStatus setUnit( Unit newUnit );
 MStatus setValue( double newValue );

public:
 double as( Unit newUnit, MStatus *ReturnStatus = __null ) const;
public:

 double asUnits( Unit newUnit, MStatus *ReturnStatus = __null ) const;
 double asInches() const;
 double asFeet() const;
 double asYards() const;
 double asMiles() const;
 double asMillimeters() const;
 double asCentimeters() const;
 double asKilometers() const;
 double asMeters() const;
 static Unit uiUnit();
 static MStatus setUIUnit( Unit newUnit );
 static Unit internalUnit();
 static double internalToUI( double internalValue );
 static double uiToInternal( double uiValue );




 static MStatus setInternalUnit( Unit internalUnit );

protected:
 double val;
 Unit valUnit;

private:

 static const char* className();

};
# 22 "/Users/ristopuukko/Documents/maya_developement/drawOgl/drawOgl/drawOgl.h" 2


class drawOgl : public MPxLocatorNode
{
public:
 drawOgl() {


 }
 virtual ~drawOgl() {}


 virtual MStatus compute( const MPlug& plug, MDataBlock& data );

 virtual void draw( M3dView & view, const MDagPath & path,
         M3dView::DisplayStyle style,
         M3dView::DisplayStatus status );

 virtual bool isBounded() const;
 virtual MBoundingBox boundingBox() const;
 virtual bool isTransparent() const;
 virtual bool drawLast() const;




 static void* creator() {
  return new drawOgl();
 }


 static MStatus initialize();

public:




 static MObject size;
 static MObject output;
# 70 "/Users/ristopuukko/Documents/maya_developement/drawOgl/drawOgl/drawOgl.h"
 static MTypeId id;
protected:
protected:






 void DrawCircleXY(const float r,const int divs);
 void DrawCircleXZ(const float r,const int divs);
 void DrawCircleYZ(const float r,const int divs);
 void DrawSphere(const float r);
};
# 12 "/Users/ristopuukko/Documents/maya_developement/drawOgl/drawOgl/oglRoutines.cpp" 2


void drawOgl::DrawSphere(const float r) {
 DrawCircleXY(r,30);
 DrawCircleXZ(r,30);
 DrawCircleYZ(r,30);
}
# 268 "/Users/ristopuukko/Documents/maya_developement/drawOgl/drawOgl/oglRoutines.cpp"
void drawOgl::DrawCircleXY(const float r,const int divs) {
 glBegin(0x0002);
 for(int i=0;i!=divs;++i)
 {
  float angle = (i*360.0f/divs) * 3.1415926535898f/180.0f;
  float ca = cos(angle);
  float sa = sin(angle);
  glVertex3f(ca*r,sa*r,0.0f);
 }
 glEnd();
}
void drawOgl::DrawCircleXZ(const float r,const int divs) {
 glBegin(0x0002);
 for(int i=0;i!=divs;++i)
 {
  float angle = (i*360.0f/divs) * 3.1415926535898f/180.0f;
  float ca = cos(angle);
  float sa = sin(angle);
  glVertex3f(ca*r,0.0f,sa*r);
 }
 glEnd();
}
void drawOgl::DrawCircleYZ(const float r,const int divs) {
 glBegin(0x0002);
 for(int i=0;i!=divs;++i)
 {
  float angle = (i*360.0f/divs) * (3.1415926535898f/180.0f);
  float ca = cos(angle);
  float sa = sin(angle);
  glVertex3f(0.0f,ca*r,sa*r);
 }
 glEnd();
}
